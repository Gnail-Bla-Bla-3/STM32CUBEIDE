
Custom PWM Library.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009de0  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000fc  08009f70  08009f70  0000af70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a06c  0800a06c  0000c1ac  2**0
                  CONTENTS
  4 .ARM          00000008  0800a06c  0800a06c  0000b06c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800a074  0800a074  0000c1ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a074  0800a074  0000b074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800a078  0800a078  0000b078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001ac  20000000  0800a07c  0000c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000c1ac  2**0
                  CONTENTS
 10 .bss          00005448  200001b0  200001b0  0000c1b0  2**3
                  ALLOC
 11 ._user_heap_stack 00000600  200055f8  200055f8  0000c1b0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000c1ac  2**0
                  CONTENTS, READONLY
 13 .debug_info   00020202  00000000  00000000  0000c1dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00004050  00000000  00000000  0002c3de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001bc0  00000000  00000000  00030430  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000015ca  00000000  00000000  00031ff0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024143  00000000  00000000  000335ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001fe57  00000000  00000000  000576fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000ddc88  00000000  00000000  00077554  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  001551dc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000079e0  00000000  00000000  00155220  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007c  00000000  00000000  0015cc00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001b0 	.word	0x200001b0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08009f58 	.word	0x08009f58

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001b4 	.word	0x200001b4
 80001cc:	08009f58 	.word	0x08009f58

080001d0 <__aeabi_uldivmod>:
 80001d0:	b953      	cbnz	r3, 80001e8 <__aeabi_uldivmod+0x18>
 80001d2:	b94a      	cbnz	r2, 80001e8 <__aeabi_uldivmod+0x18>
 80001d4:	2900      	cmp	r1, #0
 80001d6:	bf08      	it	eq
 80001d8:	2800      	cmpeq	r0, #0
 80001da:	bf1c      	itt	ne
 80001dc:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 80001e0:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 80001e4:	f000 b96a 	b.w	80004bc <__aeabi_idiv0>
 80001e8:	f1ad 0c08 	sub.w	ip, sp, #8
 80001ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f0:	f000 f806 	bl	8000200 <__udivmoddi4>
 80001f4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001fc:	b004      	add	sp, #16
 80001fe:	4770      	bx	lr

08000200 <__udivmoddi4>:
 8000200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000204:	9d08      	ldr	r5, [sp, #32]
 8000206:	460c      	mov	r4, r1
 8000208:	2b00      	cmp	r3, #0
 800020a:	d14e      	bne.n	80002aa <__udivmoddi4+0xaa>
 800020c:	4694      	mov	ip, r2
 800020e:	458c      	cmp	ip, r1
 8000210:	4686      	mov	lr, r0
 8000212:	fab2 f282 	clz	r2, r2
 8000216:	d962      	bls.n	80002de <__udivmoddi4+0xde>
 8000218:	b14a      	cbz	r2, 800022e <__udivmoddi4+0x2e>
 800021a:	f1c2 0320 	rsb	r3, r2, #32
 800021e:	4091      	lsls	r1, r2
 8000220:	fa20 f303 	lsr.w	r3, r0, r3
 8000224:	fa0c fc02 	lsl.w	ip, ip, r2
 8000228:	4319      	orrs	r1, r3
 800022a:	fa00 fe02 	lsl.w	lr, r0, r2
 800022e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000232:	fa1f f68c 	uxth.w	r6, ip
 8000236:	fbb1 f4f7 	udiv	r4, r1, r7
 800023a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800023e:	fb07 1114 	mls	r1, r7, r4, r1
 8000242:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000246:	fb04 f106 	mul.w	r1, r4, r6
 800024a:	4299      	cmp	r1, r3
 800024c:	d90a      	bls.n	8000264 <__udivmoddi4+0x64>
 800024e:	eb1c 0303 	adds.w	r3, ip, r3
 8000252:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8000256:	f080 8112 	bcs.w	800047e <__udivmoddi4+0x27e>
 800025a:	4299      	cmp	r1, r3
 800025c:	f240 810f 	bls.w	800047e <__udivmoddi4+0x27e>
 8000260:	3c02      	subs	r4, #2
 8000262:	4463      	add	r3, ip
 8000264:	1a59      	subs	r1, r3, r1
 8000266:	fa1f f38e 	uxth.w	r3, lr
 800026a:	fbb1 f0f7 	udiv	r0, r1, r7
 800026e:	fb07 1110 	mls	r1, r7, r0, r1
 8000272:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000276:	fb00 f606 	mul.w	r6, r0, r6
 800027a:	429e      	cmp	r6, r3
 800027c:	d90a      	bls.n	8000294 <__udivmoddi4+0x94>
 800027e:	eb1c 0303 	adds.w	r3, ip, r3
 8000282:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8000286:	f080 80fc 	bcs.w	8000482 <__udivmoddi4+0x282>
 800028a:	429e      	cmp	r6, r3
 800028c:	f240 80f9 	bls.w	8000482 <__udivmoddi4+0x282>
 8000290:	4463      	add	r3, ip
 8000292:	3802      	subs	r0, #2
 8000294:	1b9b      	subs	r3, r3, r6
 8000296:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800029a:	2100      	movs	r1, #0
 800029c:	b11d      	cbz	r5, 80002a6 <__udivmoddi4+0xa6>
 800029e:	40d3      	lsrs	r3, r2
 80002a0:	2200      	movs	r2, #0
 80002a2:	e9c5 3200 	strd	r3, r2, [r5]
 80002a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002aa:	428b      	cmp	r3, r1
 80002ac:	d905      	bls.n	80002ba <__udivmoddi4+0xba>
 80002ae:	b10d      	cbz	r5, 80002b4 <__udivmoddi4+0xb4>
 80002b0:	e9c5 0100 	strd	r0, r1, [r5]
 80002b4:	2100      	movs	r1, #0
 80002b6:	4608      	mov	r0, r1
 80002b8:	e7f5      	b.n	80002a6 <__udivmoddi4+0xa6>
 80002ba:	fab3 f183 	clz	r1, r3
 80002be:	2900      	cmp	r1, #0
 80002c0:	d146      	bne.n	8000350 <__udivmoddi4+0x150>
 80002c2:	42a3      	cmp	r3, r4
 80002c4:	d302      	bcc.n	80002cc <__udivmoddi4+0xcc>
 80002c6:	4290      	cmp	r0, r2
 80002c8:	f0c0 80f0 	bcc.w	80004ac <__udivmoddi4+0x2ac>
 80002cc:	1a86      	subs	r6, r0, r2
 80002ce:	eb64 0303 	sbc.w	r3, r4, r3
 80002d2:	2001      	movs	r0, #1
 80002d4:	2d00      	cmp	r5, #0
 80002d6:	d0e6      	beq.n	80002a6 <__udivmoddi4+0xa6>
 80002d8:	e9c5 6300 	strd	r6, r3, [r5]
 80002dc:	e7e3      	b.n	80002a6 <__udivmoddi4+0xa6>
 80002de:	2a00      	cmp	r2, #0
 80002e0:	f040 8090 	bne.w	8000404 <__udivmoddi4+0x204>
 80002e4:	eba1 040c 	sub.w	r4, r1, ip
 80002e8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002ec:	fa1f f78c 	uxth.w	r7, ip
 80002f0:	2101      	movs	r1, #1
 80002f2:	fbb4 f6f8 	udiv	r6, r4, r8
 80002f6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fa:	fb08 4416 	mls	r4, r8, r6, r4
 80002fe:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000302:	fb07 f006 	mul.w	r0, r7, r6
 8000306:	4298      	cmp	r0, r3
 8000308:	d908      	bls.n	800031c <__udivmoddi4+0x11c>
 800030a:	eb1c 0303 	adds.w	r3, ip, r3
 800030e:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 8000312:	d202      	bcs.n	800031a <__udivmoddi4+0x11a>
 8000314:	4298      	cmp	r0, r3
 8000316:	f200 80cd 	bhi.w	80004b4 <__udivmoddi4+0x2b4>
 800031a:	4626      	mov	r6, r4
 800031c:	1a1c      	subs	r4, r3, r0
 800031e:	fa1f f38e 	uxth.w	r3, lr
 8000322:	fbb4 f0f8 	udiv	r0, r4, r8
 8000326:	fb08 4410 	mls	r4, r8, r0, r4
 800032a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800032e:	fb00 f707 	mul.w	r7, r0, r7
 8000332:	429f      	cmp	r7, r3
 8000334:	d908      	bls.n	8000348 <__udivmoddi4+0x148>
 8000336:	eb1c 0303 	adds.w	r3, ip, r3
 800033a:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 800033e:	d202      	bcs.n	8000346 <__udivmoddi4+0x146>
 8000340:	429f      	cmp	r7, r3
 8000342:	f200 80b0 	bhi.w	80004a6 <__udivmoddi4+0x2a6>
 8000346:	4620      	mov	r0, r4
 8000348:	1bdb      	subs	r3, r3, r7
 800034a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800034e:	e7a5      	b.n	800029c <__udivmoddi4+0x9c>
 8000350:	f1c1 0620 	rsb	r6, r1, #32
 8000354:	408b      	lsls	r3, r1
 8000356:	fa22 f706 	lsr.w	r7, r2, r6
 800035a:	431f      	orrs	r7, r3
 800035c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000360:	fa04 f301 	lsl.w	r3, r4, r1
 8000364:	ea43 030c 	orr.w	r3, r3, ip
 8000368:	40f4      	lsrs	r4, r6
 800036a:	fa00 f801 	lsl.w	r8, r0, r1
 800036e:	0c38      	lsrs	r0, r7, #16
 8000370:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000374:	fbb4 fef0 	udiv	lr, r4, r0
 8000378:	fa1f fc87 	uxth.w	ip, r7
 800037c:	fb00 441e 	mls	r4, r0, lr, r4
 8000380:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000384:	fb0e f90c 	mul.w	r9, lr, ip
 8000388:	45a1      	cmp	r9, r4
 800038a:	fa02 f201 	lsl.w	r2, r2, r1
 800038e:	d90a      	bls.n	80003a6 <__udivmoddi4+0x1a6>
 8000390:	193c      	adds	r4, r7, r4
 8000392:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 8000396:	f080 8084 	bcs.w	80004a2 <__udivmoddi4+0x2a2>
 800039a:	45a1      	cmp	r9, r4
 800039c:	f240 8081 	bls.w	80004a2 <__udivmoddi4+0x2a2>
 80003a0:	f1ae 0e02 	sub.w	lr, lr, #2
 80003a4:	443c      	add	r4, r7
 80003a6:	eba4 0409 	sub.w	r4, r4, r9
 80003aa:	fa1f f983 	uxth.w	r9, r3
 80003ae:	fbb4 f3f0 	udiv	r3, r4, r0
 80003b2:	fb00 4413 	mls	r4, r0, r3, r4
 80003b6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ba:	fb03 fc0c 	mul.w	ip, r3, ip
 80003be:	45a4      	cmp	ip, r4
 80003c0:	d907      	bls.n	80003d2 <__udivmoddi4+0x1d2>
 80003c2:	193c      	adds	r4, r7, r4
 80003c4:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 80003c8:	d267      	bcs.n	800049a <__udivmoddi4+0x29a>
 80003ca:	45a4      	cmp	ip, r4
 80003cc:	d965      	bls.n	800049a <__udivmoddi4+0x29a>
 80003ce:	3b02      	subs	r3, #2
 80003d0:	443c      	add	r4, r7
 80003d2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80003d6:	fba0 9302 	umull	r9, r3, r0, r2
 80003da:	eba4 040c 	sub.w	r4, r4, ip
 80003de:	429c      	cmp	r4, r3
 80003e0:	46ce      	mov	lr, r9
 80003e2:	469c      	mov	ip, r3
 80003e4:	d351      	bcc.n	800048a <__udivmoddi4+0x28a>
 80003e6:	d04e      	beq.n	8000486 <__udivmoddi4+0x286>
 80003e8:	b155      	cbz	r5, 8000400 <__udivmoddi4+0x200>
 80003ea:	ebb8 030e 	subs.w	r3, r8, lr
 80003ee:	eb64 040c 	sbc.w	r4, r4, ip
 80003f2:	fa04 f606 	lsl.w	r6, r4, r6
 80003f6:	40cb      	lsrs	r3, r1
 80003f8:	431e      	orrs	r6, r3
 80003fa:	40cc      	lsrs	r4, r1
 80003fc:	e9c5 6400 	strd	r6, r4, [r5]
 8000400:	2100      	movs	r1, #0
 8000402:	e750      	b.n	80002a6 <__udivmoddi4+0xa6>
 8000404:	f1c2 0320 	rsb	r3, r2, #32
 8000408:	fa20 f103 	lsr.w	r1, r0, r3
 800040c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000410:	fa24 f303 	lsr.w	r3, r4, r3
 8000414:	4094      	lsls	r4, r2
 8000416:	430c      	orrs	r4, r1
 8000418:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800041c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000420:	fa1f f78c 	uxth.w	r7, ip
 8000424:	fbb3 f0f8 	udiv	r0, r3, r8
 8000428:	fb08 3110 	mls	r1, r8, r0, r3
 800042c:	0c23      	lsrs	r3, r4, #16
 800042e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000432:	fb00 f107 	mul.w	r1, r0, r7
 8000436:	4299      	cmp	r1, r3
 8000438:	d908      	bls.n	800044c <__udivmoddi4+0x24c>
 800043a:	eb1c 0303 	adds.w	r3, ip, r3
 800043e:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000442:	d22c      	bcs.n	800049e <__udivmoddi4+0x29e>
 8000444:	4299      	cmp	r1, r3
 8000446:	d92a      	bls.n	800049e <__udivmoddi4+0x29e>
 8000448:	3802      	subs	r0, #2
 800044a:	4463      	add	r3, ip
 800044c:	1a5b      	subs	r3, r3, r1
 800044e:	b2a4      	uxth	r4, r4
 8000450:	fbb3 f1f8 	udiv	r1, r3, r8
 8000454:	fb08 3311 	mls	r3, r8, r1, r3
 8000458:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800045c:	fb01 f307 	mul.w	r3, r1, r7
 8000460:	42a3      	cmp	r3, r4
 8000462:	d908      	bls.n	8000476 <__udivmoddi4+0x276>
 8000464:	eb1c 0404 	adds.w	r4, ip, r4
 8000468:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 800046c:	d213      	bcs.n	8000496 <__udivmoddi4+0x296>
 800046e:	42a3      	cmp	r3, r4
 8000470:	d911      	bls.n	8000496 <__udivmoddi4+0x296>
 8000472:	3902      	subs	r1, #2
 8000474:	4464      	add	r4, ip
 8000476:	1ae4      	subs	r4, r4, r3
 8000478:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800047c:	e739      	b.n	80002f2 <__udivmoddi4+0xf2>
 800047e:	4604      	mov	r4, r0
 8000480:	e6f0      	b.n	8000264 <__udivmoddi4+0x64>
 8000482:	4608      	mov	r0, r1
 8000484:	e706      	b.n	8000294 <__udivmoddi4+0x94>
 8000486:	45c8      	cmp	r8, r9
 8000488:	d2ae      	bcs.n	80003e8 <__udivmoddi4+0x1e8>
 800048a:	ebb9 0e02 	subs.w	lr, r9, r2
 800048e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000492:	3801      	subs	r0, #1
 8000494:	e7a8      	b.n	80003e8 <__udivmoddi4+0x1e8>
 8000496:	4631      	mov	r1, r6
 8000498:	e7ed      	b.n	8000476 <__udivmoddi4+0x276>
 800049a:	4603      	mov	r3, r0
 800049c:	e799      	b.n	80003d2 <__udivmoddi4+0x1d2>
 800049e:	4630      	mov	r0, r6
 80004a0:	e7d4      	b.n	800044c <__udivmoddi4+0x24c>
 80004a2:	46d6      	mov	lr, sl
 80004a4:	e77f      	b.n	80003a6 <__udivmoddi4+0x1a6>
 80004a6:	4463      	add	r3, ip
 80004a8:	3802      	subs	r0, #2
 80004aa:	e74d      	b.n	8000348 <__udivmoddi4+0x148>
 80004ac:	4606      	mov	r6, r0
 80004ae:	4623      	mov	r3, r4
 80004b0:	4608      	mov	r0, r1
 80004b2:	e70f      	b.n	80002d4 <__udivmoddi4+0xd4>
 80004b4:	3e02      	subs	r6, #2
 80004b6:	4463      	add	r3, ip
 80004b8:	e730      	b.n	800031c <__udivmoddi4+0x11c>
 80004ba:	bf00      	nop

080004bc <__aeabi_idiv0>:
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop

080004c0 <usart_Init>:
referee_warning_t referee_warning;
dart_info_t dart_info;

uint8_t mainHeaderOffset = 5;

void usart_Init(void) {
 80004c0:	b580      	push	{r7, lr}
 80004c2:	af00      	add	r7, sp, #0
	HAL_UARTEx_ReceiveToIdle_DMA(&huart1, RxBuff_1, 256);
 80004c4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80004c8:	4905      	ldr	r1, [pc, #20]	@ (80004e0 <usart_Init+0x20>)
 80004ca:	4806      	ldr	r0, [pc, #24]	@ (80004e4 <usart_Init+0x24>)
 80004cc:	f005 fd8c 	bl	8005fe8 <HAL_UARTEx_ReceiveToIdle_DMA>
	HAL_UARTEx_ReceiveToIdle_DMA(&huart6, RxBuff_2, 256);
 80004d0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80004d4:	4904      	ldr	r1, [pc, #16]	@ (80004e8 <usart_Init+0x28>)
 80004d6:	4805      	ldr	r0, [pc, #20]	@ (80004ec <usart_Init+0x2c>)
 80004d8:	f005 fd86 	bl	8005fe8 <HAL_UARTEx_ReceiveToIdle_DMA>
}
 80004dc:	bf00      	nop
 80004de:	bd80      	pop	{r7, pc}
 80004e0:	200001cc 	.word	0x200001cc
 80004e4:	20000784 	.word	0x20000784
 80004e8:	200002cc 	.word	0x200002cc
 80004ec:	20000814 	.word	0x20000814

080004f0 <HAL_UARTEx_RxEventCallback>:
    len = vsprintf((char *)tx_buf, fmt, ap);           //return length of string
    va_end(ap);
    HAL_UART_Transmit_DMA(&huart1, tx_buf, len);
}

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 80004f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80004f4:	b09f      	sub	sp, #124	@ 0x7c
 80004f6:	af00      	add	r7, sp, #0
 80004f8:	66f8      	str	r0, [r7, #108]	@ 0x6c
 80004fa:	460b      	mov	r3, r1
 80004fc:	f8a7 306a 	strh.w	r3, [r7, #106]	@ 0x6a
	if (huart == &huart6) {
 8000500:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8000502:	4b81      	ldr	r3, [pc, #516]	@ (8000708 <HAL_UARTEx_RxEventCallback+0x218>)
 8000504:	429a      	cmp	r2, r3
 8000506:	f040 81c9 	bne.w	800089c <HAL_UARTEx_RxEventCallback+0x3ac>
		HAL_UARTEx_ReceiveToIdle_DMA(&huart6, RxBuff_2, 256);
 800050a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800050e:	497f      	ldr	r1, [pc, #508]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000510:	487d      	ldr	r0, [pc, #500]	@ (8000708 <HAL_UARTEx_RxEventCallback+0x218>)
 8000512:	f005 fd69 	bl	8005fe8 <HAL_UARTEx_ReceiveToIdle_DMA>
		uint16_t RxBuff16 = ((uint16_t) RxBuff_2[5] << 8) | RxBuff_2[6];
 8000516:	4b7d      	ldr	r3, [pc, #500]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000518:	795b      	ldrb	r3, [r3, #5]
 800051a:	021b      	lsls	r3, r3, #8
 800051c:	b21a      	sxth	r2, r3
 800051e:	4b7b      	ldr	r3, [pc, #492]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000520:	799b      	ldrb	r3, [r3, #6]
 8000522:	b21b      	sxth	r3, r3
 8000524:	4313      	orrs	r3, r2
 8000526:	b21b      	sxth	r3, r3
 8000528:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
		//usart_printf("callback triggered at %d | %d | %d | %d || %d \r\n", RxBuff_2[0], RxBuff_2[1], RxBuff_2[2], RxBuff_2[3], RxBuff16);
		switch (RxBuff16) {
 800052c:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8000530:	f240 2302 	movw	r3, #514	@ 0x202
 8000534:	429a      	cmp	r2, r3
 8000536:	f000 8153 	beq.w	80007e0 <HAL_UARTEx_RxEventCallback+0x2f0>
 800053a:	f240 2302 	movw	r3, #514	@ 0x202
 800053e:	429a      	cmp	r2, r3
 8000540:	f300 81ab 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000544:	f240 2301 	movw	r3, #513	@ 0x201
 8000548:	429a      	cmp	r2, r3
 800054a:	f000 80e7 	beq.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 800054e:	f240 2301 	movw	r3, #513	@ 0x201
 8000552:	429a      	cmp	r2, r3
 8000554:	f300 81a1 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000558:	f5b2 7f83 	cmp.w	r2, #262	@ 0x106
 800055c:	f280 819d 	bge.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000560:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8000564:	f280 80da 	bge.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 8000568:	f5b2 7f81 	cmp.w	r2, #258	@ 0x102
 800056c:	f300 8195 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000570:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8000574:	f300 80d2 	bgt.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 8000578:	2a03      	cmp	r2, #3
 800057a:	f000 80cf 	beq.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 800057e:	2a03      	cmp	r2, #3
 8000580:	f300 818b 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000584:	2a01      	cmp	r2, #1
 8000586:	d003      	beq.n	8000590 <HAL_UARTEx_RxEventCallback+0xa0>
 8000588:	2a02      	cmp	r2, #2
 800058a:	f000 80c3 	beq.w	8000714 <HAL_UARTEx_RxEventCallback+0x224>
		    case MINIMAP_DATA_HEADER: {}
		    case CUSTOM_INFO_HEADER: {}

		    default: {
		    	//usart_printf("no match \r\n");
		        break;
 800058e:	e184      	b.n	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
		    	game_status.game_type = RxBuff_2[7];
 8000590:	4b5e      	ldr	r3, [pc, #376]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000592:	79db      	ldrb	r3, [r3, #7]
 8000594:	4a5e      	ldr	r2, [pc, #376]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 8000596:	7013      	strb	r3, [r2, #0]
		    	game_status.game_progress = RxBuff_2[8];
 8000598:	4b5c      	ldr	r3, [pc, #368]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 800059a:	7a1b      	ldrb	r3, [r3, #8]
 800059c:	4a5c      	ldr	r2, [pc, #368]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 800059e:	7053      	strb	r3, [r2, #1]
		    	game_status.stage_remain_time = ((uint16_t) RxBuff_2[9] << 8) | RxBuff_2[10];
 80005a0:	4b5a      	ldr	r3, [pc, #360]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005a2:	7a5b      	ldrb	r3, [r3, #9]
 80005a4:	021b      	lsls	r3, r3, #8
 80005a6:	b21a      	sxth	r2, r3
 80005a8:	4b58      	ldr	r3, [pc, #352]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005aa:	7a9b      	ldrb	r3, [r3, #10]
 80005ac:	b21b      	sxth	r3, r3
 80005ae:	4313      	orrs	r3, r2
 80005b0:	b21b      	sxth	r3, r3
 80005b2:	b29b      	uxth	r3, r3
 80005b4:	4a56      	ldr	r2, [pc, #344]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 80005b6:	8053      	strh	r3, [r2, #2]
		    		((uint64_t) RxBuff_2[11] << 56) |
 80005b8:	4b54      	ldr	r3, [pc, #336]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005ba:	7adb      	ldrb	r3, [r3, #11]
 80005bc:	b2db      	uxtb	r3, r3
 80005be:	2200      	movs	r2, #0
 80005c0:	663b      	str	r3, [r7, #96]	@ 0x60
 80005c2:	667a      	str	r2, [r7, #100]	@ 0x64
 80005c4:	f04f 0000 	mov.w	r0, #0
 80005c8:	f04f 0100 	mov.w	r1, #0
 80005cc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80005ce:	0619      	lsls	r1, r3, #24
 80005d0:	2000      	movs	r0, #0
		    		((uint64_t) RxBuff_2[12] << 48) |
 80005d2:	4b4e      	ldr	r3, [pc, #312]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005d4:	7b1b      	ldrb	r3, [r3, #12]
 80005d6:	b2db      	uxtb	r3, r3
 80005d8:	2200      	movs	r2, #0
 80005da:	65bb      	str	r3, [r7, #88]	@ 0x58
 80005dc:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80005de:	f04f 0200 	mov.w	r2, #0
 80005e2:	f04f 0300 	mov.w	r3, #0
 80005e6:	6dbe      	ldr	r6, [r7, #88]	@ 0x58
 80005e8:	0433      	lsls	r3, r6, #16
 80005ea:	2200      	movs	r2, #0
		    		((uint64_t) RxBuff_2[11] << 56) |
 80005ec:	ea40 0402 	orr.w	r4, r0, r2
 80005f0:	ea41 0503 	orr.w	r5, r1, r3
		    		((uint64_t) RxBuff_2[13] << 40) |
 80005f4:	4b45      	ldr	r3, [pc, #276]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005f6:	7b5b      	ldrb	r3, [r3, #13]
 80005f8:	b2db      	uxtb	r3, r3
 80005fa:	2200      	movs	r2, #0
 80005fc:	653b      	str	r3, [r7, #80]	@ 0x50
 80005fe:	657a      	str	r2, [r7, #84]	@ 0x54
 8000600:	f04f 0200 	mov.w	r2, #0
 8000604:	f04f 0300 	mov.w	r3, #0
 8000608:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800060a:	020b      	lsls	r3, r1, #8
 800060c:	2200      	movs	r2, #0
		    		((uint64_t) RxBuff_2[12] << 48) |
 800060e:	ea44 0802 	orr.w	r8, r4, r2
 8000612:	ea45 0903 	orr.w	r9, r5, r3
		    		((uint64_t) RxBuff_2[14] << 32) |
 8000616:	4b3d      	ldr	r3, [pc, #244]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000618:	7b9b      	ldrb	r3, [r3, #14]
 800061a:	b2db      	uxtb	r3, r3
 800061c:	2200      	movs	r2, #0
 800061e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8000620:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8000622:	f04f 0200 	mov.w	r2, #0
 8000626:	f04f 0300 	mov.w	r3, #0
 800062a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800062c:	000b      	movs	r3, r1
 800062e:	2200      	movs	r2, #0
		    		((uint64_t) RxBuff_2[13] << 40) |
 8000630:	ea48 0102 	orr.w	r1, r8, r2
 8000634:	6439      	str	r1, [r7, #64]	@ 0x40
 8000636:	ea49 0303 	orr.w	r3, r9, r3
 800063a:	647b      	str	r3, [r7, #68]	@ 0x44
		    		((uint64_t) RxBuff_2[15] << 24) |
 800063c:	4b33      	ldr	r3, [pc, #204]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 800063e:	7bdb      	ldrb	r3, [r3, #15]
 8000640:	b2db      	uxtb	r3, r3
 8000642:	2200      	movs	r2, #0
 8000644:	63bb      	str	r3, [r7, #56]	@ 0x38
 8000646:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8000648:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 800064c:	460b      	mov	r3, r1
 800064e:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 8000652:	460b      	mov	r3, r1
 8000654:	ea4f 6a03 	mov.w	sl, r3, lsl #24
		    		((uint64_t) RxBuff_2[14] << 32) |
 8000658:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 800065c:	460b      	mov	r3, r1
 800065e:	ea43 030a 	orr.w	r3, r3, sl
 8000662:	633b      	str	r3, [r7, #48]	@ 0x30
 8000664:	4613      	mov	r3, r2
 8000666:	ea43 030b 	orr.w	r3, r3, fp
 800066a:	637b      	str	r3, [r7, #52]	@ 0x34
		    		((uint64_t) RxBuff_2[16] << 16) |
 800066c:	4b27      	ldr	r3, [pc, #156]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 800066e:	7c1b      	ldrb	r3, [r3, #16]
 8000670:	b2db      	uxtb	r3, r3
 8000672:	2200      	movs	r2, #0
 8000674:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000676:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8000678:	f04f 0200 	mov.w	r2, #0
 800067c:	f04f 0300 	mov.w	r3, #0
 8000680:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	@ 0x28
 8000684:	4629      	mov	r1, r5
 8000686:	040b      	lsls	r3, r1, #16
 8000688:	4621      	mov	r1, r4
 800068a:	ea43 4311 	orr.w	r3, r3, r1, lsr #16
 800068e:	4621      	mov	r1, r4
 8000690:	040a      	lsls	r2, r1, #16
		    		((uint64_t) RxBuff_2[15] << 24) |
 8000692:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8000696:	4621      	mov	r1, r4
 8000698:	4311      	orrs	r1, r2
 800069a:	6239      	str	r1, [r7, #32]
 800069c:	4629      	mov	r1, r5
 800069e:	4319      	orrs	r1, r3
 80006a0:	6279      	str	r1, [r7, #36]	@ 0x24
		    		((uint64_t) RxBuff_2[17] << 8) | RxBuff_2[18];
 80006a2:	4b1a      	ldr	r3, [pc, #104]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80006a4:	7c5b      	ldrb	r3, [r3, #17]
 80006a6:	b2db      	uxtb	r3, r3
 80006a8:	2200      	movs	r2, #0
 80006aa:	61bb      	str	r3, [r7, #24]
 80006ac:	61fa      	str	r2, [r7, #28]
 80006ae:	f04f 0200 	mov.w	r2, #0
 80006b2:	f04f 0300 	mov.w	r3, #0
 80006b6:	e9d7 4506 	ldrd	r4, r5, [r7, #24]
 80006ba:	4629      	mov	r1, r5
 80006bc:	020b      	lsls	r3, r1, #8
 80006be:	4621      	mov	r1, r4
 80006c0:	ea43 6311 	orr.w	r3, r3, r1, lsr #24
 80006c4:	4621      	mov	r1, r4
 80006c6:	020a      	lsls	r2, r1, #8
		    		((uint64_t) RxBuff_2[16] << 16) |
 80006c8:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80006cc:	4621      	mov	r1, r4
 80006ce:	4311      	orrs	r1, r2
 80006d0:	6139      	str	r1, [r7, #16]
 80006d2:	4629      	mov	r1, r5
 80006d4:	4319      	orrs	r1, r3
 80006d6:	6179      	str	r1, [r7, #20]
		    		((uint64_t) RxBuff_2[17] << 8) | RxBuff_2[18];
 80006d8:	4b0c      	ldr	r3, [pc, #48]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80006da:	7c9b      	ldrb	r3, [r3, #18]
 80006dc:	b2db      	uxtb	r3, r3
 80006de:	2200      	movs	r2, #0
 80006e0:	60bb      	str	r3, [r7, #8]
 80006e2:	60fa      	str	r2, [r7, #12]
 80006e4:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80006e8:	4623      	mov	r3, r4
 80006ea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80006ee:	4602      	mov	r2, r0
 80006f0:	4313      	orrs	r3, r2
 80006f2:	603b      	str	r3, [r7, #0]
 80006f4:	462b      	mov	r3, r5
 80006f6:	460a      	mov	r2, r1
 80006f8:	4313      	orrs	r3, r2
 80006fa:	607b      	str	r3, [r7, #4]
		    	game_status.SyncTimeStamp =
 80006fc:	4b04      	ldr	r3, [pc, #16]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 80006fe:	e9d7 1200 	ldrd	r1, r2, [r7]
 8000702:	e9c3 1202 	strd	r1, r2, [r3, #8]
		    	break;
 8000706:	e0c9      	b.n	800089c <HAL_UARTEx_RxEventCallback+0x3ac>
 8000708:	20000814 	.word	0x20000814
 800070c:	200002cc 	.word	0x200002cc
 8000710:	200003d0 	.word	0x200003d0
		    	game_status.game_type = RxBuff_2[7];
 8000714:	4b64      	ldr	r3, [pc, #400]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000716:	79da      	ldrb	r2, [r3, #7]
 8000718:	4b64      	ldr	r3, [pc, #400]	@ (80008ac <HAL_UARTEx_RxEventCallback+0x3bc>)
 800071a:	701a      	strb	r2, [r3, #0]
		    	robot_status.robot_id = RxBuff_2[7];
 800071c:	4b62      	ldr	r3, [pc, #392]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800071e:	79da      	ldrb	r2, [r3, #7]
 8000720:	4b63      	ldr	r3, [pc, #396]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 8000722:	701a      	strb	r2, [r3, #0]
		    	robot_status.robot_level = RxBuff_2[8];
 8000724:	4b60      	ldr	r3, [pc, #384]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000726:	7a1a      	ldrb	r2, [r3, #8]
 8000728:	4b61      	ldr	r3, [pc, #388]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 800072a:	705a      	strb	r2, [r3, #1]
		    	robot_status.current_HP = ((uint16_t) RxBuff_2[9] << 8) | RxBuff_2[10];
 800072c:	4b5e      	ldr	r3, [pc, #376]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800072e:	7a5b      	ldrb	r3, [r3, #9]
 8000730:	021b      	lsls	r3, r3, #8
 8000732:	b21a      	sxth	r2, r3
 8000734:	4b5c      	ldr	r3, [pc, #368]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000736:	7a9b      	ldrb	r3, [r3, #10]
 8000738:	b21b      	sxth	r3, r3
 800073a:	4313      	orrs	r3, r2
 800073c:	b21b      	sxth	r3, r3
 800073e:	b29a      	uxth	r2, r3
 8000740:	4b5b      	ldr	r3, [pc, #364]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 8000742:	805a      	strh	r2, [r3, #2]
		    	robot_status.maximum_HP = ((uint16_t) RxBuff_2[11] << 8) | RxBuff_2[12];
 8000744:	4b58      	ldr	r3, [pc, #352]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000746:	7adb      	ldrb	r3, [r3, #11]
 8000748:	021b      	lsls	r3, r3, #8
 800074a:	b21a      	sxth	r2, r3
 800074c:	4b56      	ldr	r3, [pc, #344]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800074e:	7b1b      	ldrb	r3, [r3, #12]
 8000750:	b21b      	sxth	r3, r3
 8000752:	4313      	orrs	r3, r2
 8000754:	b21b      	sxth	r3, r3
 8000756:	b29a      	uxth	r2, r3
 8000758:	4b55      	ldr	r3, [pc, #340]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 800075a:	809a      	strh	r2, [r3, #4]
		    	robot_status.shooter_barrel_cooling_value = ((uint16_t) RxBuff_2[13] << 8) | RxBuff_2[14];
 800075c:	4b52      	ldr	r3, [pc, #328]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800075e:	7b5b      	ldrb	r3, [r3, #13]
 8000760:	021b      	lsls	r3, r3, #8
 8000762:	b21a      	sxth	r2, r3
 8000764:	4b50      	ldr	r3, [pc, #320]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000766:	7b9b      	ldrb	r3, [r3, #14]
 8000768:	b21b      	sxth	r3, r3
 800076a:	4313      	orrs	r3, r2
 800076c:	b21b      	sxth	r3, r3
 800076e:	b29a      	uxth	r2, r3
 8000770:	4b4f      	ldr	r3, [pc, #316]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 8000772:	80da      	strh	r2, [r3, #6]
		    	robot_status.shooter_barrel_heat_limit = ((uint16_t) RxBuff_2[15] << 8) | RxBuff_2[16];
 8000774:	4b4c      	ldr	r3, [pc, #304]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000776:	7bdb      	ldrb	r3, [r3, #15]
 8000778:	021b      	lsls	r3, r3, #8
 800077a:	b21a      	sxth	r2, r3
 800077c:	4b4a      	ldr	r3, [pc, #296]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800077e:	7c1b      	ldrb	r3, [r3, #16]
 8000780:	b21b      	sxth	r3, r3
 8000782:	4313      	orrs	r3, r2
 8000784:	b21b      	sxth	r3, r3
 8000786:	b29a      	uxth	r2, r3
 8000788:	4b49      	ldr	r3, [pc, #292]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 800078a:	811a      	strh	r2, [r3, #8]
		    	robot_status.chassis_power_limit = ((uint16_t) RxBuff_2[17] << 8) | RxBuff_2[18];
 800078c:	4b46      	ldr	r3, [pc, #280]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800078e:	7c5b      	ldrb	r3, [r3, #17]
 8000790:	021b      	lsls	r3, r3, #8
 8000792:	b21a      	sxth	r2, r3
 8000794:	4b44      	ldr	r3, [pc, #272]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000796:	7c9b      	ldrb	r3, [r3, #18]
 8000798:	b21b      	sxth	r3, r3
 800079a:	4313      	orrs	r3, r2
 800079c:	b21b      	sxth	r3, r3
 800079e:	b29a      	uxth	r2, r3
 80007a0:	4b43      	ldr	r3, [pc, #268]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007a2:	815a      	strh	r2, [r3, #10]
		    	robot_status.power_management_gimbal_output = RxBuff_2[19];
 80007a4:	4b40      	ldr	r3, [pc, #256]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007a6:	7cdb      	ldrb	r3, [r3, #19]
 80007a8:	f003 0301 	and.w	r3, r3, #1
 80007ac:	b2d9      	uxtb	r1, r3
 80007ae:	4a40      	ldr	r2, [pc, #256]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007b0:	7b13      	ldrb	r3, [r2, #12]
 80007b2:	f361 0300 	bfi	r3, r1, #0, #1
 80007b6:	7313      	strb	r3, [r2, #12]
		    	robot_status.power_management_chassis_output = RxBuff_2[20];
 80007b8:	4b3b      	ldr	r3, [pc, #236]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007ba:	7d1b      	ldrb	r3, [r3, #20]
 80007bc:	f003 0301 	and.w	r3, r3, #1
 80007c0:	b2d9      	uxtb	r1, r3
 80007c2:	4a3b      	ldr	r2, [pc, #236]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007c4:	7b13      	ldrb	r3, [r2, #12]
 80007c6:	f361 0341 	bfi	r3, r1, #1, #1
 80007ca:	7313      	strb	r3, [r2, #12]
		    	robot_status.power_management_shooter_output = RxBuff_2[21];
 80007cc:	4b36      	ldr	r3, [pc, #216]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007ce:	7d5b      	ldrb	r3, [r3, #21]
 80007d0:	f003 0301 	and.w	r3, r3, #1
 80007d4:	b2d9      	uxtb	r1, r3
 80007d6:	4a36      	ldr	r2, [pc, #216]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007d8:	7b13      	ldrb	r3, [r2, #12]
 80007da:	f361 0382 	bfi	r3, r1, #2, #1
 80007de:	7313      	strb	r3, [r2, #12]
		    	power_heat_data.chassis_voltage = ((uint16_t) RxBuff_2[8] << 8) | RxBuff_2[7];
 80007e0:	4b31      	ldr	r3, [pc, #196]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007e2:	7a1b      	ldrb	r3, [r3, #8]
 80007e4:	021b      	lsls	r3, r3, #8
 80007e6:	b21a      	sxth	r2, r3
 80007e8:	4b2f      	ldr	r3, [pc, #188]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007ea:	79db      	ldrb	r3, [r3, #7]
 80007ec:	b21b      	sxth	r3, r3
 80007ee:	4313      	orrs	r3, r2
 80007f0:	b21b      	sxth	r3, r3
 80007f2:	b29a      	uxth	r2, r3
 80007f4:	4b2f      	ldr	r3, [pc, #188]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 80007f6:	801a      	strh	r2, [r3, #0]
		    	power_heat_data.chassis_current = ((uint16_t) RxBuff_2[10] << 8) | RxBuff_2[9];
 80007f8:	4b2b      	ldr	r3, [pc, #172]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007fa:	7a9b      	ldrb	r3, [r3, #10]
 80007fc:	021b      	lsls	r3, r3, #8
 80007fe:	b21a      	sxth	r2, r3
 8000800:	4b29      	ldr	r3, [pc, #164]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000802:	7a5b      	ldrb	r3, [r3, #9]
 8000804:	b21b      	sxth	r3, r3
 8000806:	4313      	orrs	r3, r2
 8000808:	b21b      	sxth	r3, r3
 800080a:	b29a      	uxth	r2, r3
 800080c:	4b29      	ldr	r3, [pc, #164]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 800080e:	805a      	strh	r2, [r3, #2]
		    	power_heat_data.chassis_power = ((uint32_t) RxBuff_2[14] << 24) | ((uint32_t) RxBuff_2[13] << 16) | ((uint32_t) RxBuff_2[12] << 8) | RxBuff_2[11];
 8000810:	4b25      	ldr	r3, [pc, #148]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000812:	7b9b      	ldrb	r3, [r3, #14]
 8000814:	061a      	lsls	r2, r3, #24
 8000816:	4b24      	ldr	r3, [pc, #144]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000818:	7b5b      	ldrb	r3, [r3, #13]
 800081a:	041b      	lsls	r3, r3, #16
 800081c:	431a      	orrs	r2, r3
 800081e:	4b22      	ldr	r3, [pc, #136]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000820:	7b1b      	ldrb	r3, [r3, #12]
 8000822:	021b      	lsls	r3, r3, #8
 8000824:	4313      	orrs	r3, r2
 8000826:	4a20      	ldr	r2, [pc, #128]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000828:	7ad2      	ldrb	r2, [r2, #11]
 800082a:	4313      	orrs	r3, r2
 800082c:	ee07 3a90 	vmov	s15, r3
 8000830:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000834:	4b1f      	ldr	r3, [pc, #124]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000836:	edc3 7a01 	vstr	s15, [r3, #4]
		    	power_heat_data.buffer_energy = ((uint16_t) RxBuff_2[15] << 8) | RxBuff_2[16];
 800083a:	4b1b      	ldr	r3, [pc, #108]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800083c:	7bdb      	ldrb	r3, [r3, #15]
 800083e:	021b      	lsls	r3, r3, #8
 8000840:	b21a      	sxth	r2, r3
 8000842:	4b19      	ldr	r3, [pc, #100]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000844:	7c1b      	ldrb	r3, [r3, #16]
 8000846:	b21b      	sxth	r3, r3
 8000848:	4313      	orrs	r3, r2
 800084a:	b21b      	sxth	r3, r3
 800084c:	b29a      	uxth	r2, r3
 800084e:	4b19      	ldr	r3, [pc, #100]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000850:	811a      	strh	r2, [r3, #8]
		    	power_heat_data.shooter_17mm_1_barrel_heat = ((uint16_t) RxBuff_2[18] << 8) | RxBuff_2[17];
 8000852:	4b15      	ldr	r3, [pc, #84]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000854:	7c9b      	ldrb	r3, [r3, #18]
 8000856:	021b      	lsls	r3, r3, #8
 8000858:	b21a      	sxth	r2, r3
 800085a:	4b13      	ldr	r3, [pc, #76]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800085c:	7c5b      	ldrb	r3, [r3, #17]
 800085e:	b21b      	sxth	r3, r3
 8000860:	4313      	orrs	r3, r2
 8000862:	b21b      	sxth	r3, r3
 8000864:	b29a      	uxth	r2, r3
 8000866:	4b13      	ldr	r3, [pc, #76]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000868:	815a      	strh	r2, [r3, #10]
		    	power_heat_data.shooter_17mm_2_barrel_heat = ((uint16_t) RxBuff_2[20] << 8) | RxBuff_2[19];
 800086a:	4b0f      	ldr	r3, [pc, #60]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800086c:	7d1b      	ldrb	r3, [r3, #20]
 800086e:	021b      	lsls	r3, r3, #8
 8000870:	b21a      	sxth	r2, r3
 8000872:	4b0d      	ldr	r3, [pc, #52]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000874:	7cdb      	ldrb	r3, [r3, #19]
 8000876:	b21b      	sxth	r3, r3
 8000878:	4313      	orrs	r3, r2
 800087a:	b21b      	sxth	r3, r3
 800087c:	b29a      	uxth	r2, r3
 800087e:	4b0d      	ldr	r3, [pc, #52]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000880:	819a      	strh	r2, [r3, #12]
		    	power_heat_data.shooter_42mm_barrel_heat = ((uint16_t) RxBuff_2[22] << 8) | RxBuff_2[21];
 8000882:	4b09      	ldr	r3, [pc, #36]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000884:	7d9b      	ldrb	r3, [r3, #22]
 8000886:	021b      	lsls	r3, r3, #8
 8000888:	b21a      	sxth	r2, r3
 800088a:	4b07      	ldr	r3, [pc, #28]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800088c:	7d5b      	ldrb	r3, [r3, #21]
 800088e:	b21b      	sxth	r3, r3
 8000890:	4313      	orrs	r3, r2
 8000892:	b21b      	sxth	r3, r3
 8000894:	b29a      	uxth	r2, r3
 8000896:	4b07      	ldr	r3, [pc, #28]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000898:	81da      	strh	r2, [r3, #14]
		        break;
 800089a:	bf00      	nop
		    }
		}
	}
}
 800089c:	bf00      	nop
 800089e:	377c      	adds	r7, #124	@ 0x7c
 80008a0:	46bd      	mov	sp, r7
 80008a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008a6:	bf00      	nop
 80008a8:	200002cc 	.word	0x200002cc
 80008ac:	200003d0 	.word	0x200003d0
 80008b0:	200003f0 	.word	0x200003f0
 80008b4:	200003e0 	.word	0x200003e0

080008b8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008b8:	b580      	push	{r7, lr}
 80008ba:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008bc:	f002 fa98 	bl	8002df0 <HAL_Init>

  /* USER CODE BEGIN Init */
  usart_Init();
 80008c0:	f7ff fdfe 	bl	80004c0 <usart_Init>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008c4:	f000 f85a 	bl	800097c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008c8:	f000 fcf2 	bl	80012b0 <MX_GPIO_Init>
  MX_DMA_Init();
 80008cc:	f000 fc8a 	bl	80011e4 <MX_DMA_Init>
  MX_CAN1_Init();
 80008d0:	f000 f8c0 	bl	8000a54 <MX_CAN1_Init>
  MX_CAN2_Init();
 80008d4:	f000 f8f4 	bl	8000ac0 <MX_CAN2_Init>
  MX_SPI1_Init();
 80008d8:	f000 f956 	bl	8000b88 <MX_SPI1_Init>
  MX_TIM4_Init();
 80008dc:	f000 fa32 	bl	8000d44 <MX_TIM4_Init>
  MX_USART1_UART_Init();
 80008e0:	f000 fc00 	bl	80010e4 <MX_USART1_UART_Init>
  MX_USART6_UART_Init();
 80008e4:	f000 fc54 	bl	8001190 <MX_USART6_UART_Init>
  MX_TIM1_Init();
 80008e8:	f000 f984 	bl	8000bf4 <MX_TIM1_Init>
  MX_TIM8_Init();
 80008ec:	f000 fb10 	bl	8000f10 <MX_TIM8_Init>
  MX_USART3_UART_Init();
 80008f0:	f000 fc22 	bl	8001138 <MX_USART3_UART_Init>
  MX_TIM10_Init();
 80008f4:	f000 fba8 	bl	8001048 <MX_TIM10_Init>
  MX_I2C3_Init();
 80008f8:	f000 f918 	bl	8000b2c <MX_I2C3_Init>
  MX_TIM5_Init();
 80008fc:	f000 fa98 	bl	8000e30 <MX_TIM5_Init>
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8000900:	f006 fc90 	bl	8007224 <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(TaskMain, NULL, &defaultTask_attributes);
 8000904:	4a11      	ldr	r2, [pc, #68]	@ (800094c <main+0x94>)
 8000906:	2100      	movs	r1, #0
 8000908:	4811      	ldr	r0, [pc, #68]	@ (8000950 <main+0x98>)
 800090a:	f006 fcd5 	bl	80072b8 <osThreadNew>
 800090e:	4603      	mov	r3, r0
 8000910:	4a10      	ldr	r2, [pc, #64]	@ (8000954 <main+0x9c>)
 8000912:	6013      	str	r3, [r2, #0]

  /* creation of chassisTask */
  chassisTaskHandle = osThreadNew(TaskChassis, NULL, &chassisTask_attributes);
 8000914:	4a10      	ldr	r2, [pc, #64]	@ (8000958 <main+0xa0>)
 8000916:	2100      	movs	r1, #0
 8000918:	4810      	ldr	r0, [pc, #64]	@ (800095c <main+0xa4>)
 800091a:	f006 fccd 	bl	80072b8 <osThreadNew>
 800091e:	4603      	mov	r3, r0
 8000920:	4a0f      	ldr	r2, [pc, #60]	@ (8000960 <main+0xa8>)
 8000922:	6013      	str	r3, [r2, #0]

  /* creation of IMUtempPIDtask */
  IMUtempPIDtaskHandle = osThreadNew(imu_temp_control_task, NULL, &IMUtempPIDtask_attributes);
 8000924:	4a0f      	ldr	r2, [pc, #60]	@ (8000964 <main+0xac>)
 8000926:	2100      	movs	r1, #0
 8000928:	480f      	ldr	r0, [pc, #60]	@ (8000968 <main+0xb0>)
 800092a:	f006 fcc5 	bl	80072b8 <osThreadNew>
 800092e:	4603      	mov	r3, r0
 8000930:	4a0e      	ldr	r2, [pc, #56]	@ (800096c <main+0xb4>)
 8000932:	6013      	str	r3, [r2, #0]

  /* creation of turretTask */
  turretTaskHandle = osThreadNew(TaskTurret, NULL, &turretTask_attributes);
 8000934:	4a0e      	ldr	r2, [pc, #56]	@ (8000970 <main+0xb8>)
 8000936:	2100      	movs	r1, #0
 8000938:	480e      	ldr	r0, [pc, #56]	@ (8000974 <main+0xbc>)
 800093a:	f006 fcbd 	bl	80072b8 <osThreadNew>
 800093e:	4603      	mov	r3, r0
 8000940:	4a0d      	ldr	r2, [pc, #52]	@ (8000978 <main+0xc0>)
 8000942:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 8000944:	f006 fc92 	bl	800726c <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000948:	bf00      	nop
 800094a:	e7fd      	b.n	8000948 <main+0x90>
 800094c:	08009fbc 	.word	0x08009fbc
 8000950:	080014bd 	.word	0x080014bd
 8000954:	20000a3c 	.word	0x20000a3c
 8000958:	08009fe0 	.word	0x08009fe0
 800095c:	080014cd 	.word	0x080014cd
 8000960:	20000a40 	.word	0x20000a40
 8000964:	0800a004 	.word	0x0800a004
 8000968:	080017dd 	.word	0x080017dd
 800096c:	20000a44 	.word	0x20000a44
 8000970:	0800a028 	.word	0x0800a028
 8000974:	080017ed 	.word	0x080017ed
 8000978:	20000a48 	.word	0x20000a48

0800097c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	b094      	sub	sp, #80	@ 0x50
 8000980:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000982:	f107 0320 	add.w	r3, r7, #32
 8000986:	2230      	movs	r2, #48	@ 0x30
 8000988:	2100      	movs	r1, #0
 800098a:	4618      	mov	r0, r3
 800098c:	f009 f9fc 	bl	8009d88 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000990:	f107 030c 	add.w	r3, r7, #12
 8000994:	2200      	movs	r2, #0
 8000996:	601a      	str	r2, [r3, #0]
 8000998:	605a      	str	r2, [r3, #4]
 800099a:	609a      	str	r2, [r3, #8]
 800099c:	60da      	str	r2, [r3, #12]
 800099e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80009a0:	2300      	movs	r3, #0
 80009a2:	60bb      	str	r3, [r7, #8]
 80009a4:	4b29      	ldr	r3, [pc, #164]	@ (8000a4c <SystemClock_Config+0xd0>)
 80009a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80009a8:	4a28      	ldr	r2, [pc, #160]	@ (8000a4c <SystemClock_Config+0xd0>)
 80009aa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80009ae:	6413      	str	r3, [r2, #64]	@ 0x40
 80009b0:	4b26      	ldr	r3, [pc, #152]	@ (8000a4c <SystemClock_Config+0xd0>)
 80009b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80009b4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80009b8:	60bb      	str	r3, [r7, #8]
 80009ba:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80009bc:	2300      	movs	r3, #0
 80009be:	607b      	str	r3, [r7, #4]
 80009c0:	4b23      	ldr	r3, [pc, #140]	@ (8000a50 <SystemClock_Config+0xd4>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	4a22      	ldr	r2, [pc, #136]	@ (8000a50 <SystemClock_Config+0xd4>)
 80009c6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80009ca:	6013      	str	r3, [r2, #0]
 80009cc:	4b20      	ldr	r3, [pc, #128]	@ (8000a50 <SystemClock_Config+0xd4>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80009d4:	607b      	str	r3, [r7, #4]
 80009d6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80009d8:	2301      	movs	r3, #1
 80009da:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80009dc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80009e0:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80009e2:	2302      	movs	r3, #2
 80009e4:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80009e6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80009ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 6;
 80009ec:	2306      	movs	r3, #6
 80009ee:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 80009f0:	23a8      	movs	r3, #168	@ 0xa8
 80009f2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80009f4:	2302      	movs	r3, #2
 80009f6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80009f8:	2304      	movs	r3, #4
 80009fa:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80009fc:	f107 0320 	add.w	r3, r7, #32
 8000a00:	4618      	mov	r0, r3
 8000a02:	f003 fde5 	bl	80045d0 <HAL_RCC_OscConfig>
 8000a06:	4603      	mov	r3, r0
 8000a08:	2b00      	cmp	r3, #0
 8000a0a:	d001      	beq.n	8000a10 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000a0c:	f000 fef6 	bl	80017fc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a10:	230f      	movs	r3, #15
 8000a12:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a14:	2302      	movs	r3, #2
 8000a16:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a18:	2300      	movs	r3, #0
 8000a1a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000a1c:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000a20:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a22:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a26:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a28:	f107 030c 	add.w	r3, r7, #12
 8000a2c:	2105      	movs	r1, #5
 8000a2e:	4618      	mov	r0, r3
 8000a30:	f004 f846 	bl	8004ac0 <HAL_RCC_ClockConfig>
 8000a34:	4603      	mov	r3, r0
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d001      	beq.n	8000a3e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000a3a:	f000 fedf 	bl	80017fc <Error_Handler>
  }

  /** Enables the Clock Security System
  */
  HAL_RCC_EnableCSS();
 8000a3e:	f004 f925 	bl	8004c8c <HAL_RCC_EnableCSS>
}
 8000a42:	bf00      	nop
 8000a44:	3750      	adds	r7, #80	@ 0x50
 8000a46:	46bd      	mov	sp, r7
 8000a48:	bd80      	pop	{r7, pc}
 8000a4a:	bf00      	nop
 8000a4c:	40023800 	.word	0x40023800
 8000a50:	40007000 	.word	0x40007000

08000a54 <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 8000a54:	b580      	push	{r7, lr}
 8000a56:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8000a58:	4b17      	ldr	r3, [pc, #92]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a5a:	4a18      	ldr	r2, [pc, #96]	@ (8000abc <MX_CAN1_Init+0x68>)
 8000a5c:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 3;
 8000a5e:	4b16      	ldr	r3, [pc, #88]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a60:	2203      	movs	r2, #3
 8000a62:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8000a64:	4b14      	ldr	r3, [pc, #80]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a66:	2200      	movs	r2, #0
 8000a68:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000a6a:	4b13      	ldr	r3, [pc, #76]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a6c:	2200      	movs	r2, #0
 8000a6e:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_10TQ;
 8000a70:	4b11      	ldr	r3, [pc, #68]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a72:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8000a76:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 8000a78:	4b0f      	ldr	r3, [pc, #60]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a7a:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000a7e:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8000a80:	4b0d      	ldr	r3, [pc, #52]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a82:	2200      	movs	r2, #0
 8000a84:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8000a86:	4b0c      	ldr	r3, [pc, #48]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a88:	2200      	movs	r2, #0
 8000a8a:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8000a8c:	4b0a      	ldr	r3, [pc, #40]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8000a92:	4b09      	ldr	r3, [pc, #36]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a94:	2200      	movs	r2, #0
 8000a96:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 8000a98:	4b07      	ldr	r3, [pc, #28]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8000a9e:	4b06      	ldr	r3, [pc, #24]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8000aa4:	4804      	ldr	r0, [pc, #16]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000aa6:	f002 fa15 	bl	8002ed4 <HAL_CAN_Init>
 8000aaa:	4603      	mov	r3, r0
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	d001      	beq.n	8000ab4 <MX_CAN1_Init+0x60>
  {
    Error_Handler();
 8000ab0:	f000 fea4 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 8000ab4:	bf00      	nop
 8000ab6:	bd80      	pop	{r7, pc}
 8000ab8:	20000400 	.word	0x20000400
 8000abc:	40006400 	.word	0x40006400

08000ac0 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 8000ac4:	4b17      	ldr	r3, [pc, #92]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ac6:	4a18      	ldr	r2, [pc, #96]	@ (8000b28 <MX_CAN2_Init+0x68>)
 8000ac8:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 3;
 8000aca:	4b16      	ldr	r3, [pc, #88]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000acc:	2203      	movs	r2, #3
 8000ace:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 8000ad0:	4b14      	ldr	r3, [pc, #80]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000ad6:	4b13      	ldr	r3, [pc, #76]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ad8:	2200      	movs	r2, #0
 8000ada:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_10TQ;
 8000adc:	4b11      	ldr	r3, [pc, #68]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ade:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8000ae2:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 8000ae4:	4b0f      	ldr	r3, [pc, #60]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ae6:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000aea:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8000aec:	4b0d      	ldr	r3, [pc, #52]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000aee:	2200      	movs	r2, #0
 8000af0:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 8000af2:	4b0c      	ldr	r3, [pc, #48]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000af4:	2200      	movs	r2, #0
 8000af6:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 8000af8:	4b0a      	ldr	r3, [pc, #40]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000afa:	2200      	movs	r2, #0
 8000afc:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 8000afe:	4b09      	ldr	r3, [pc, #36]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b00:	2200      	movs	r2, #0
 8000b02:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8000b04:	4b07      	ldr	r3, [pc, #28]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b06:	2200      	movs	r2, #0
 8000b08:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 8000b0a:	4b06      	ldr	r3, [pc, #24]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 8000b10:	4804      	ldr	r0, [pc, #16]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b12:	f002 f9df 	bl	8002ed4 <HAL_CAN_Init>
 8000b16:	4603      	mov	r3, r0
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	d001      	beq.n	8000b20 <MX_CAN2_Init+0x60>
  {
    Error_Handler();
 8000b1c:	f000 fe6e 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN CAN2_Init 2 */

  /* USER CODE END CAN2_Init 2 */

}
 8000b20:	bf00      	nop
 8000b22:	bd80      	pop	{r7, pc}
 8000b24:	20000428 	.word	0x20000428
 8000b28:	40006800 	.word	0x40006800

08000b2c <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000b30:	4b12      	ldr	r3, [pc, #72]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b32:	4a13      	ldr	r2, [pc, #76]	@ (8000b80 <MX_I2C3_Init+0x54>)
 8000b34:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 400000;
 8000b36:	4b11      	ldr	r3, [pc, #68]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b38:	4a12      	ldr	r2, [pc, #72]	@ (8000b84 <MX_I2C3_Init+0x58>)
 8000b3a:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000b3c:	4b0f      	ldr	r3, [pc, #60]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8000b42:	4b0e      	ldr	r3, [pc, #56]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b48:	4b0c      	ldr	r3, [pc, #48]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b4a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000b4e:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b50:	4b0a      	ldr	r3, [pc, #40]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b52:	2200      	movs	r2, #0
 8000b54:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 8000b56:	4b09      	ldr	r3, [pc, #36]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b58:	2200      	movs	r2, #0
 8000b5a:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b5c:	4b07      	ldr	r3, [pc, #28]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b5e:	2200      	movs	r2, #0
 8000b60:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b62:	4b06      	ldr	r3, [pc, #24]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b64:	2200      	movs	r2, #0
 8000b66:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b68:	4804      	ldr	r0, [pc, #16]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b6a:	f003 fbed 	bl	8004348 <HAL_I2C_Init>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d001      	beq.n	8000b78 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8000b74:	f000 fe42 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000b78:	bf00      	nop
 8000b7a:	bd80      	pop	{r7, pc}
 8000b7c:	20000450 	.word	0x20000450
 8000b80:	40005c00 	.word	0x40005c00
 8000b84:	00061a80 	.word	0x00061a80

08000b88 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000b88:	b580      	push	{r7, lr}
 8000b8a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000b8c:	4b17      	ldr	r3, [pc, #92]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000b8e:	4a18      	ldr	r2, [pc, #96]	@ (8000bf0 <MX_SPI1_Init+0x68>)
 8000b90:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000b92:	4b16      	ldr	r3, [pc, #88]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000b94:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000b98:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000b9a:	4b14      	ldr	r3, [pc, #80]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000ba0:	4b12      	ldr	r3, [pc, #72]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8000ba6:	4b11      	ldr	r3, [pc, #68]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000ba8:	2202      	movs	r2, #2
 8000baa:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8000bac:	4b0f      	ldr	r3, [pc, #60]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bae:	2201      	movs	r2, #1
 8000bb0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000bb2:	4b0e      	ldr	r3, [pc, #56]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bb4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000bb8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 8000bba:	4b0c      	ldr	r3, [pc, #48]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bbc:	2238      	movs	r2, #56	@ 0x38
 8000bbe:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000bc0:	4b0a      	ldr	r3, [pc, #40]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000bc6:	4b09      	ldr	r3, [pc, #36]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bc8:	2200      	movs	r2, #0
 8000bca:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000bcc:	4b07      	ldr	r3, [pc, #28]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bce:	2200      	movs	r2, #0
 8000bd0:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000bd2:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bd4:	220a      	movs	r2, #10
 8000bd6:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000bd8:	4804      	ldr	r0, [pc, #16]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bda:	f004 f978 	bl	8004ece <HAL_SPI_Init>
 8000bde:	4603      	mov	r3, r0
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d001      	beq.n	8000be8 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000be4:	f000 fe0a 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000be8:	bf00      	nop
 8000bea:	bd80      	pop	{r7, pc}
 8000bec:	200004a4 	.word	0x200004a4
 8000bf0:	40013000 	.word	0x40013000

08000bf4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000bf4:	b580      	push	{r7, lr}
 8000bf6:	b092      	sub	sp, #72	@ 0x48
 8000bf8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bfa:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000bfe:	2200      	movs	r2, #0
 8000c00:	601a      	str	r2, [r3, #0]
 8000c02:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000c04:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c08:	2200      	movs	r2, #0
 8000c0a:	601a      	str	r2, [r3, #0]
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	609a      	str	r2, [r3, #8]
 8000c10:	60da      	str	r2, [r3, #12]
 8000c12:	611a      	str	r2, [r3, #16]
 8000c14:	615a      	str	r2, [r3, #20]
 8000c16:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000c18:	1d3b      	adds	r3, r7, #4
 8000c1a:	2220      	movs	r2, #32
 8000c1c:	2100      	movs	r1, #0
 8000c1e:	4618      	mov	r0, r3
 8000c20:	f009 f8b2 	bl	8009d88 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000c24:	4b45      	ldr	r3, [pc, #276]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c26:	4a46      	ldr	r2, [pc, #280]	@ (8000d40 <MX_TIM1_Init+0x14c>)
 8000c28:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 335;
 8000c2a:	4b44      	ldr	r3, [pc, #272]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c2c:	f240 124f 	movw	r2, #335	@ 0x14f
 8000c30:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c32:	4b42      	ldr	r3, [pc, #264]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 999;
 8000c38:	4b40      	ldr	r3, [pc, #256]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000c3e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c40:	4b3e      	ldr	r3, [pc, #248]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c42:	2200      	movs	r2, #0
 8000c44:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000c46:	4b3d      	ldr	r3, [pc, #244]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c4c:	4b3b      	ldr	r3, [pc, #236]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c4e:	2200      	movs	r2, #0
 8000c50:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8000c52:	483a      	ldr	r0, [pc, #232]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c54:	f004 fa7c 	bl	8005150 <HAL_TIM_PWM_Init>
 8000c58:	4603      	mov	r3, r0
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d001      	beq.n	8000c62 <MX_TIM1_Init+0x6e>
  {
    Error_Handler();
 8000c5e:	f000 fdcd 	bl	80017fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c62:	2300      	movs	r3, #0
 8000c64:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c66:	2300      	movs	r3, #0
 8000c68:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000c6a:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000c6e:	4619      	mov	r1, r3
 8000c70:	4832      	ldr	r0, [pc, #200]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c72:	f005 f89b 	bl	8005dac <HAL_TIMEx_MasterConfigSynchronization>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d001      	beq.n	8000c80 <MX_TIM1_Init+0x8c>
  {
    Error_Handler();
 8000c7c:	f000 fdbe 	bl	80017fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000c80:	2360      	movs	r3, #96	@ 0x60
 8000c82:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 8000c84:	2300      	movs	r3, #0
 8000c86:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000c88:	2300      	movs	r3, #0
 8000c8a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000c90:	2300      	movs	r3, #0
 8000c92:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000c94:	2300      	movs	r3, #0
 8000c96:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000c98:	2300      	movs	r3, #0
 8000c9a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000c9c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	4619      	mov	r1, r3
 8000ca4:	4825      	ldr	r0, [pc, #148]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000ca6:	f004 fbdb 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000caa:	4603      	mov	r3, r0
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d001      	beq.n	8000cb4 <MX_TIM1_Init+0xc0>
  {
    Error_Handler();
 8000cb0:	f000 fda4 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000cb4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000cb8:	2204      	movs	r2, #4
 8000cba:	4619      	mov	r1, r3
 8000cbc:	481f      	ldr	r0, [pc, #124]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000cbe:	f004 fbcf 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000cc2:	4603      	mov	r3, r0
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d001      	beq.n	8000ccc <MX_TIM1_Init+0xd8>
  {
    Error_Handler();
 8000cc8:	f000 fd98 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000ccc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000cd0:	2208      	movs	r2, #8
 8000cd2:	4619      	mov	r1, r3
 8000cd4:	4819      	ldr	r0, [pc, #100]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000cd6:	f004 fbc3 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000cda:	4603      	mov	r3, r0
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d001      	beq.n	8000ce4 <MX_TIM1_Init+0xf0>
  {
    Error_Handler();
 8000ce0:	f000 fd8c 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000ce4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000ce8:	220c      	movs	r2, #12
 8000cea:	4619      	mov	r1, r3
 8000cec:	4813      	ldr	r0, [pc, #76]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000cee:	f004 fbb7 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d001      	beq.n	8000cfc <MX_TIM1_Init+0x108>
  {
    Error_Handler();
 8000cf8:	f000 fd80 	bl	80017fc <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000d00:	2300      	movs	r3, #0
 8000d02:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8000d04:	2300      	movs	r3, #0
 8000d06:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8000d08:	2300      	movs	r3, #0
 8000d0a:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000d10:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000d14:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000d16:	2300      	movs	r3, #0
 8000d18:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000d1a:	1d3b      	adds	r3, r7, #4
 8000d1c:	4619      	mov	r1, r3
 8000d1e:	4807      	ldr	r0, [pc, #28]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000d20:	f005 f8c0 	bl	8005ea4 <HAL_TIMEx_ConfigBreakDeadTime>
 8000d24:	4603      	mov	r3, r0
 8000d26:	2b00      	cmp	r3, #0
 8000d28:	d001      	beq.n	8000d2e <MX_TIM1_Init+0x13a>
  {
    Error_Handler();
 8000d2a:	f000 fd67 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8000d2e:	4803      	ldr	r0, [pc, #12]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000d30:	f001 fc82 	bl	8002638 <HAL_TIM_MspPostInit>

}
 8000d34:	bf00      	nop
 8000d36:	3748      	adds	r7, #72	@ 0x48
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	bd80      	pop	{r7, pc}
 8000d3c:	200004fc 	.word	0x200004fc
 8000d40:	40010000 	.word	0x40010000

08000d44 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b08e      	sub	sp, #56	@ 0x38
 8000d48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000d4a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000d4e:	2200      	movs	r2, #0
 8000d50:	601a      	str	r2, [r3, #0]
 8000d52:	605a      	str	r2, [r3, #4]
 8000d54:	609a      	str	r2, [r3, #8]
 8000d56:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000d58:	f107 0320 	add.w	r3, r7, #32
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	601a      	str	r2, [r3, #0]
 8000d60:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000d62:	1d3b      	adds	r3, r7, #4
 8000d64:	2200      	movs	r2, #0
 8000d66:	601a      	str	r2, [r3, #0]
 8000d68:	605a      	str	r2, [r3, #4]
 8000d6a:	609a      	str	r2, [r3, #8]
 8000d6c:	60da      	str	r2, [r3, #12]
 8000d6e:	611a      	str	r2, [r3, #16]
 8000d70:	615a      	str	r2, [r3, #20]
 8000d72:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000d74:	4b2c      	ldr	r3, [pc, #176]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d76:	4a2d      	ldr	r2, [pc, #180]	@ (8000e2c <MX_TIM4_Init+0xe8>)
 8000d78:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 83;
 8000d7a:	4b2b      	ldr	r3, [pc, #172]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d7c:	2253      	movs	r2, #83	@ 0x53
 8000d7e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000d80:	4b29      	ldr	r3, [pc, #164]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d82:	2200      	movs	r2, #0
 8000d84:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 249;
 8000d86:	4b28      	ldr	r3, [pc, #160]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d88:	22f9      	movs	r2, #249	@ 0xf9
 8000d8a:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d8c:	4b26      	ldr	r3, [pc, #152]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d8e:	2200      	movs	r2, #0
 8000d90:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000d92:	4b25      	ldr	r3, [pc, #148]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d94:	2280      	movs	r2, #128	@ 0x80
 8000d96:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8000d98:	4823      	ldr	r0, [pc, #140]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d9a:	f004 f921 	bl	8004fe0 <HAL_TIM_Base_Init>
 8000d9e:	4603      	mov	r3, r0
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d001      	beq.n	8000da8 <MX_TIM4_Init+0x64>
  {
    Error_Handler();
 8000da4:	f000 fd2a 	bl	80017fc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000da8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000dac:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8000dae:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000db2:	4619      	mov	r1, r3
 8000db4:	481c      	ldr	r0, [pc, #112]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000db6:	f004 fc15 	bl	80055e4 <HAL_TIM_ConfigClockSource>
 8000dba:	4603      	mov	r3, r0
 8000dbc:	2b00      	cmp	r3, #0
 8000dbe:	d001      	beq.n	8000dc4 <MX_TIM4_Init+0x80>
  {
    Error_Handler();
 8000dc0:	f000 fd1c 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8000dc4:	4818      	ldr	r0, [pc, #96]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000dc6:	f004 f9c3 	bl	8005150 <HAL_TIM_PWM_Init>
 8000dca:	4603      	mov	r3, r0
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	d001      	beq.n	8000dd4 <MX_TIM4_Init+0x90>
  {
    Error_Handler();
 8000dd0:	f000 fd14 	bl	80017fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000dd8:	2300      	movs	r3, #0
 8000dda:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000ddc:	f107 0320 	add.w	r3, r7, #32
 8000de0:	4619      	mov	r1, r3
 8000de2:	4811      	ldr	r0, [pc, #68]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000de4:	f004 ffe2 	bl	8005dac <HAL_TIMEx_MasterConfigSynchronization>
 8000de8:	4603      	mov	r3, r0
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	d001      	beq.n	8000df2 <MX_TIM4_Init+0xae>
  {
    Error_Handler();
 8000dee:	f000 fd05 	bl	80017fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000df2:	2360      	movs	r3, #96	@ 0x60
 8000df4:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 10499;
 8000df6:	f642 1303 	movw	r3, #10499	@ 0x2903
 8000dfa:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000e00:	2300      	movs	r3, #0
 8000e02:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000e04:	1d3b      	adds	r3, r7, #4
 8000e06:	2208      	movs	r2, #8
 8000e08:	4619      	mov	r1, r3
 8000e0a:	4807      	ldr	r0, [pc, #28]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000e0c:	f004 fb28 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000e10:	4603      	mov	r3, r0
 8000e12:	2b00      	cmp	r3, #0
 8000e14:	d001      	beq.n	8000e1a <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 8000e16:	f000 fcf1 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8000e1a:	4803      	ldr	r0, [pc, #12]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000e1c:	f001 fc0c 	bl	8002638 <HAL_TIM_MspPostInit>

}
 8000e20:	bf00      	nop
 8000e22:	3738      	adds	r7, #56	@ 0x38
 8000e24:	46bd      	mov	sp, r7
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	20000544 	.word	0x20000544
 8000e2c:	40000800 	.word	0x40000800

08000e30 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8000e30:	b580      	push	{r7, lr}
 8000e32:	b08a      	sub	sp, #40	@ 0x28
 8000e34:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000e36:	f107 0320 	add.w	r3, r7, #32
 8000e3a:	2200      	movs	r2, #0
 8000e3c:	601a      	str	r2, [r3, #0]
 8000e3e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000e40:	1d3b      	adds	r3, r7, #4
 8000e42:	2200      	movs	r2, #0
 8000e44:	601a      	str	r2, [r3, #0]
 8000e46:	605a      	str	r2, [r3, #4]
 8000e48:	609a      	str	r2, [r3, #8]
 8000e4a:	60da      	str	r2, [r3, #12]
 8000e4c:	611a      	str	r2, [r3, #16]
 8000e4e:	615a      	str	r2, [r3, #20]
 8000e50:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8000e52:	4b2d      	ldr	r3, [pc, #180]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e54:	4a2d      	ldr	r2, [pc, #180]	@ (8000f0c <MX_TIM5_Init+0xdc>)
 8000e56:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 83;
 8000e58:	4b2b      	ldr	r3, [pc, #172]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e5a:	2253      	movs	r2, #83	@ 0x53
 8000e5c:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000e5e:	4b2a      	ldr	r3, [pc, #168]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e60:	2200      	movs	r2, #0
 8000e62:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 1999;
 8000e64:	4b28      	ldr	r3, [pc, #160]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e66:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8000e6a:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000e6c:	4b26      	ldr	r3, [pc, #152]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e6e:	2200      	movs	r2, #0
 8000e70:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000e72:	4b25      	ldr	r3, [pc, #148]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e74:	2200      	movs	r2, #0
 8000e76:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8000e78:	4823      	ldr	r0, [pc, #140]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e7a:	f004 f969 	bl	8005150 <HAL_TIM_PWM_Init>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d001      	beq.n	8000e88 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8000e84:	f000 fcba 	bl	80017fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000e88:	2300      	movs	r3, #0
 8000e8a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8000e90:	f107 0320 	add.w	r3, r7, #32
 8000e94:	4619      	mov	r1, r3
 8000e96:	481c      	ldr	r0, [pc, #112]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e98:	f004 ff88 	bl	8005dac <HAL_TIMEx_MasterConfigSynchronization>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	2b00      	cmp	r3, #0
 8000ea0:	d001      	beq.n	8000ea6 <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 8000ea2:	f000 fcab 	bl	80017fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000ea6:	2360      	movs	r3, #96	@ 0x60
 8000ea8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000eaa:	2300      	movs	r3, #0
 8000eac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000eae:	2300      	movs	r3, #0
 8000eb0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000eb6:	1d3b      	adds	r3, r7, #4
 8000eb8:	2200      	movs	r2, #0
 8000eba:	4619      	mov	r1, r3
 8000ebc:	4812      	ldr	r0, [pc, #72]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000ebe:	f004 facf 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000ec2:	4603      	mov	r3, r0
 8000ec4:	2b00      	cmp	r3, #0
 8000ec6:	d001      	beq.n	8000ecc <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 8000ec8:	f000 fc98 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000ecc:	1d3b      	adds	r3, r7, #4
 8000ece:	2204      	movs	r2, #4
 8000ed0:	4619      	mov	r1, r3
 8000ed2:	480d      	ldr	r0, [pc, #52]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000ed4:	f004 fac4 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000ed8:	4603      	mov	r3, r0
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d001      	beq.n	8000ee2 <MX_TIM5_Init+0xb2>
  {
    Error_Handler();
 8000ede:	f000 fc8d 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000ee2:	1d3b      	adds	r3, r7, #4
 8000ee4:	2208      	movs	r2, #8
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	4807      	ldr	r0, [pc, #28]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000eea:	f004 fab9 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000eee:	4603      	mov	r3, r0
 8000ef0:	2b00      	cmp	r3, #0
 8000ef2:	d001      	beq.n	8000ef8 <MX_TIM5_Init+0xc8>
  {
    Error_Handler();
 8000ef4:	f000 fc82 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8000ef8:	4803      	ldr	r0, [pc, #12]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000efa:	f001 fb9d 	bl	8002638 <HAL_TIM_MspPostInit>

}
 8000efe:	bf00      	nop
 8000f00:	3728      	adds	r7, #40	@ 0x28
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}
 8000f06:	bf00      	nop
 8000f08:	2000058c 	.word	0x2000058c
 8000f0c:	40000c00 	.word	0x40000c00

08000f10 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8000f10:	b580      	push	{r7, lr}
 8000f12:	b092      	sub	sp, #72	@ 0x48
 8000f14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f16:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000f1a:	2200      	movs	r2, #0
 8000f1c:	601a      	str	r2, [r3, #0]
 8000f1e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000f20:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f24:	2200      	movs	r2, #0
 8000f26:	601a      	str	r2, [r3, #0]
 8000f28:	605a      	str	r2, [r3, #4]
 8000f2a:	609a      	str	r2, [r3, #8]
 8000f2c:	60da      	str	r2, [r3, #12]
 8000f2e:	611a      	str	r2, [r3, #16]
 8000f30:	615a      	str	r2, [r3, #20]
 8000f32:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000f34:	1d3b      	adds	r3, r7, #4
 8000f36:	2220      	movs	r2, #32
 8000f38:	2100      	movs	r1, #0
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	f008 ff24 	bl	8009d88 <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8000f40:	4b3f      	ldr	r3, [pc, #252]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f42:	4a40      	ldr	r2, [pc, #256]	@ (8001044 <MX_TIM8_Init+0x134>)
 8000f44:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 335;
 8000f46:	4b3e      	ldr	r3, [pc, #248]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f48:	f240 124f 	movw	r2, #335	@ 0x14f
 8000f4c:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f4e:	4b3c      	ldr	r3, [pc, #240]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f50:	2200      	movs	r2, #0
 8000f52:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 999;
 8000f54:	4b3a      	ldr	r3, [pc, #232]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f56:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000f5a:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f5c:	4b38      	ldr	r3, [pc, #224]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8000f62:	4b37      	ldr	r3, [pc, #220]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000f68:	4b35      	ldr	r3, [pc, #212]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f6a:	2280      	movs	r2, #128	@ 0x80
 8000f6c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 8000f6e:	4834      	ldr	r0, [pc, #208]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f70:	f004 f8ee 	bl	8005150 <HAL_TIM_PWM_Init>
 8000f74:	4603      	mov	r3, r0
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d001      	beq.n	8000f7e <MX_TIM8_Init+0x6e>
  {
    Error_Handler();
 8000f7a:	f000 fc3f 	bl	80017fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000f7e:	2300      	movs	r3, #0
 8000f80:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f82:	2300      	movs	r3, #0
 8000f84:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8000f86:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000f8a:	4619      	mov	r1, r3
 8000f8c:	482c      	ldr	r0, [pc, #176]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f8e:	f004 ff0d 	bl	8005dac <HAL_TIMEx_MasterConfigSynchronization>
 8000f92:	4603      	mov	r3, r0
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d001      	beq.n	8000f9c <MX_TIM8_Init+0x8c>
  {
    Error_Handler();
 8000f98:	f000 fc30 	bl	80017fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000f9c:	2360      	movs	r3, #96	@ 0x60
 8000f9e:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000fa8:	2300      	movs	r3, #0
 8000faa:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000fac:	2300      	movs	r3, #0
 8000fae:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000fb4:	2300      	movs	r3, #0
 8000fb6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000fb8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	4619      	mov	r1, r3
 8000fc0:	481f      	ldr	r0, [pc, #124]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000fc2:	f004 fa4d 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000fc6:	4603      	mov	r3, r0
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d001      	beq.n	8000fd0 <MX_TIM8_Init+0xc0>
  {
    Error_Handler();
 8000fcc:	f000 fc16 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000fd0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fd4:	2204      	movs	r2, #4
 8000fd6:	4619      	mov	r1, r3
 8000fd8:	4819      	ldr	r0, [pc, #100]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000fda:	f004 fa41 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d001      	beq.n	8000fe8 <MX_TIM8_Init+0xd8>
  {
    Error_Handler();
 8000fe4:	f000 fc0a 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000fe8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fec:	2208      	movs	r2, #8
 8000fee:	4619      	mov	r1, r3
 8000ff0:	4813      	ldr	r0, [pc, #76]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000ff2:	f004 fa35 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 8000ff6:	4603      	mov	r3, r0
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	d001      	beq.n	8001000 <MX_TIM8_Init+0xf0>
  {
    Error_Handler();
 8000ffc:	f000 fbfe 	bl	80017fc <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001000:	2300      	movs	r3, #0
 8001002:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001004:	2300      	movs	r3, #0
 8001006:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001008:	2300      	movs	r3, #0
 800100a:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800100c:	2300      	movs	r3, #0
 800100e:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001010:	2300      	movs	r3, #0
 8001012:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001014:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001018:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800101a:	2300      	movs	r3, #0
 800101c:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 800101e:	1d3b      	adds	r3, r7, #4
 8001020:	4619      	mov	r1, r3
 8001022:	4807      	ldr	r0, [pc, #28]	@ (8001040 <MX_TIM8_Init+0x130>)
 8001024:	f004 ff3e 	bl	8005ea4 <HAL_TIMEx_ConfigBreakDeadTime>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d001      	beq.n	8001032 <MX_TIM8_Init+0x122>
  {
    Error_Handler();
 800102e:	f000 fbe5 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 8001032:	4803      	ldr	r0, [pc, #12]	@ (8001040 <MX_TIM8_Init+0x130>)
 8001034:	f001 fb00 	bl	8002638 <HAL_TIM_MspPostInit>

}
 8001038:	bf00      	nop
 800103a:	3748      	adds	r7, #72	@ 0x48
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}
 8001040:	200005d4 	.word	0x200005d4
 8001044:	40010400 	.word	0x40010400

08001048 <MX_TIM10_Init>:
  * @brief TIM10 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM10_Init(void)
{
 8001048:	b580      	push	{r7, lr}
 800104a:	b088      	sub	sp, #32
 800104c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM10_Init 0 */

  /* USER CODE END TIM10_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 800104e:	1d3b      	adds	r3, r7, #4
 8001050:	2200      	movs	r2, #0
 8001052:	601a      	str	r2, [r3, #0]
 8001054:	605a      	str	r2, [r3, #4]
 8001056:	609a      	str	r2, [r3, #8]
 8001058:	60da      	str	r2, [r3, #12]
 800105a:	611a      	str	r2, [r3, #16]
 800105c:	615a      	str	r2, [r3, #20]
 800105e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 8001060:	4b1e      	ldr	r3, [pc, #120]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001062:	4a1f      	ldr	r2, [pc, #124]	@ (80010e0 <MX_TIM10_Init+0x98>)
 8001064:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 0;
 8001066:	4b1d      	ldr	r3, [pc, #116]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001068:	2200      	movs	r2, #0
 800106a:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 800106c:	4b1b      	ldr	r3, [pc, #108]	@ (80010dc <MX_TIM10_Init+0x94>)
 800106e:	2200      	movs	r2, #0
 8001070:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 4999;
 8001072:	4b1a      	ldr	r3, [pc, #104]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001074:	f241 3287 	movw	r2, #4999	@ 0x1387
 8001078:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800107a:	4b18      	ldr	r3, [pc, #96]	@ (80010dc <MX_TIM10_Init+0x94>)
 800107c:	2200      	movs	r2, #0
 800107e:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001080:	4b16      	ldr	r3, [pc, #88]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001082:	2200      	movs	r2, #0
 8001084:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 8001086:	4815      	ldr	r0, [pc, #84]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001088:	f003 ffaa 	bl	8004fe0 <HAL_TIM_Base_Init>
 800108c:	4603      	mov	r3, r0
 800108e:	2b00      	cmp	r3, #0
 8001090:	d001      	beq.n	8001096 <MX_TIM10_Init+0x4e>
  {
    Error_Handler();
 8001092:	f000 fbb3 	bl	80017fc <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 8001096:	4811      	ldr	r0, [pc, #68]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001098:	f004 f85a 	bl	8005150 <HAL_TIM_PWM_Init>
 800109c:	4603      	mov	r3, r0
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d001      	beq.n	80010a6 <MX_TIM10_Init+0x5e>
  {
    Error_Handler();
 80010a2:	f000 fbab 	bl	80017fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80010a6:	2360      	movs	r3, #96	@ 0x60
 80010a8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80010aa:	2300      	movs	r3, #0
 80010ac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010ae:	2300      	movs	r3, #0
 80010b0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80010b2:	2300      	movs	r3, #0
 80010b4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80010b6:	1d3b      	adds	r3, r7, #4
 80010b8:	2200      	movs	r2, #0
 80010ba:	4619      	mov	r1, r3
 80010bc:	4807      	ldr	r0, [pc, #28]	@ (80010dc <MX_TIM10_Init+0x94>)
 80010be:	f004 f9cf 	bl	8005460 <HAL_TIM_PWM_ConfigChannel>
 80010c2:	4603      	mov	r3, r0
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d001      	beq.n	80010cc <MX_TIM10_Init+0x84>
  {
    Error_Handler();
 80010c8:	f000 fb98 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */
  HAL_TIM_MspPostInit(&htim10);
 80010cc:	4803      	ldr	r0, [pc, #12]	@ (80010dc <MX_TIM10_Init+0x94>)
 80010ce:	f001 fab3 	bl	8002638 <HAL_TIM_MspPostInit>

}
 80010d2:	bf00      	nop
 80010d4:	3720      	adds	r7, #32
 80010d6:	46bd      	mov	sp, r7
 80010d8:	bd80      	pop	{r7, pc}
 80010da:	bf00      	nop
 80010dc:	2000061c 	.word	0x2000061c
 80010e0:	40014400 	.word	0x40014400

080010e4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80010e8:	4b11      	ldr	r3, [pc, #68]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010ea:	4a12      	ldr	r2, [pc, #72]	@ (8001134 <MX_USART1_UART_Init+0x50>)
 80010ec:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80010ee:	4b10      	ldr	r3, [pc, #64]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010f0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80010f4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80010f6:	4b0e      	ldr	r3, [pc, #56]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010f8:	2200      	movs	r2, #0
 80010fa:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80010fc:	4b0c      	ldr	r3, [pc, #48]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010fe:	2200      	movs	r2, #0
 8001100:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001102:	4b0b      	ldr	r3, [pc, #44]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 8001104:	2200      	movs	r2, #0
 8001106:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001108:	4b09      	ldr	r3, [pc, #36]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 800110a:	220c      	movs	r2, #12
 800110c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800110e:	4b08      	ldr	r3, [pc, #32]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 8001110:	2200      	movs	r2, #0
 8001112:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001114:	4b06      	ldr	r3, [pc, #24]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 8001116:	2200      	movs	r2, #0
 8001118:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800111a:	4805      	ldr	r0, [pc, #20]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 800111c:	f004 ff14 	bl	8005f48 <HAL_UART_Init>
 8001120:	4603      	mov	r3, r0
 8001122:	2b00      	cmp	r3, #0
 8001124:	d001      	beq.n	800112a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001126:	f000 fb69 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800112a:	bf00      	nop
 800112c:	bd80      	pop	{r7, pc}
 800112e:	bf00      	nop
 8001130:	20000784 	.word	0x20000784
 8001134:	40011000 	.word	0x40011000

08001138 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8001138:	b580      	push	{r7, lr}
 800113a:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 800113c:	4b11      	ldr	r3, [pc, #68]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800113e:	4a12      	ldr	r2, [pc, #72]	@ (8001188 <MX_USART3_UART_Init+0x50>)
 8001140:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 100000;
 8001142:	4b10      	ldr	r3, [pc, #64]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001144:	4a11      	ldr	r2, [pc, #68]	@ (800118c <MX_USART3_UART_Init+0x54>)
 8001146:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8001148:	4b0e      	ldr	r3, [pc, #56]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800114a:	2200      	movs	r2, #0
 800114c:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800114e:	4b0d      	ldr	r3, [pc, #52]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001150:	2200      	movs	r2, #0
 8001152:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_EVEN;
 8001154:	4b0b      	ldr	r3, [pc, #44]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001156:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800115a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800115c:	4b09      	ldr	r3, [pc, #36]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800115e:	220c      	movs	r2, #12
 8001160:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001162:	4b08      	ldr	r3, [pc, #32]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001164:	2200      	movs	r2, #0
 8001166:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001168:	4b06      	ldr	r3, [pc, #24]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800116a:	2200      	movs	r2, #0
 800116c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800116e:	4805      	ldr	r0, [pc, #20]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001170:	f004 feea 	bl	8005f48 <HAL_UART_Init>
 8001174:	4603      	mov	r3, r0
 8001176:	2b00      	cmp	r3, #0
 8001178:	d001      	beq.n	800117e <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800117a:	f000 fb3f 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800117e:	bf00      	nop
 8001180:	bd80      	pop	{r7, pc}
 8001182:	bf00      	nop
 8001184:	200007cc 	.word	0x200007cc
 8001188:	40004800 	.word	0x40004800
 800118c:	000186a0 	.word	0x000186a0

08001190 <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8001190:	b580      	push	{r7, lr}
 8001192:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8001194:	4b11      	ldr	r3, [pc, #68]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 8001196:	4a12      	ldr	r2, [pc, #72]	@ (80011e0 <MX_USART6_UART_Init+0x50>)
 8001198:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 115200;
 800119a:	4b10      	ldr	r3, [pc, #64]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 800119c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80011a0:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 80011a2:	4b0e      	ldr	r3, [pc, #56]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011a4:	2200      	movs	r2, #0
 80011a6:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 80011a8:	4b0c      	ldr	r3, [pc, #48]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011aa:	2200      	movs	r2, #0
 80011ac:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 80011ae:	4b0b      	ldr	r3, [pc, #44]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011b0:	2200      	movs	r2, #0
 80011b2:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 80011b4:	4b09      	ldr	r3, [pc, #36]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011b6:	220c      	movs	r2, #12
 80011b8:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80011ba:	4b08      	ldr	r3, [pc, #32]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011bc:	2200      	movs	r2, #0
 80011be:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 80011c0:	4b06      	ldr	r3, [pc, #24]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011c2:	2200      	movs	r2, #0
 80011c4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart6) != HAL_OK)
 80011c6:	4805      	ldr	r0, [pc, #20]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011c8:	f004 febe 	bl	8005f48 <HAL_UART_Init>
 80011cc:	4603      	mov	r3, r0
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	d001      	beq.n	80011d6 <MX_USART6_UART_Init+0x46>
  {
    Error_Handler();
 80011d2:	f000 fb13 	bl	80017fc <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 80011d6:	bf00      	nop
 80011d8:	bd80      	pop	{r7, pc}
 80011da:	bf00      	nop
 80011dc:	20000814 	.word	0x20000814
 80011e0:	40011400 	.word	0x40011400

080011e4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80011e4:	b580      	push	{r7, lr}
 80011e6:	b082      	sub	sp, #8
 80011e8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80011ea:	2300      	movs	r3, #0
 80011ec:	607b      	str	r3, [r7, #4]
 80011ee:	4b2f      	ldr	r3, [pc, #188]	@ (80012ac <MX_DMA_Init+0xc8>)
 80011f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011f2:	4a2e      	ldr	r2, [pc, #184]	@ (80012ac <MX_DMA_Init+0xc8>)
 80011f4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80011f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80011fa:	4b2c      	ldr	r3, [pc, #176]	@ (80012ac <MX_DMA_Init+0xc8>)
 80011fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011fe:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001202:	607b      	str	r3, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001206:	2300      	movs	r3, #0
 8001208:	603b      	str	r3, [r7, #0]
 800120a:	4b28      	ldr	r3, [pc, #160]	@ (80012ac <MX_DMA_Init+0xc8>)
 800120c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800120e:	4a27      	ldr	r2, [pc, #156]	@ (80012ac <MX_DMA_Init+0xc8>)
 8001210:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001214:	6313      	str	r3, [r2, #48]	@ 0x30
 8001216:	4b25      	ldr	r3, [pc, #148]	@ (80012ac <MX_DMA_Init+0xc8>)
 8001218:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800121a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800121e:	603b      	str	r3, [r7, #0]
 8001220:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 8001222:	2200      	movs	r2, #0
 8001224:	2105      	movs	r1, #5
 8001226:	200c      	movs	r0, #12
 8001228:	f002 fa63 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 800122c:	200c      	movs	r0, #12
 800122e:	f002 fa7c 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 5, 0);
 8001232:	2200      	movs	r2, #0
 8001234:	2105      	movs	r1, #5
 8001236:	202f      	movs	r0, #47	@ 0x2f
 8001238:	f002 fa5b 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 800123c:	202f      	movs	r0, #47	@ 0x2f
 800123e:	f002 fa74 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8001242:	2200      	movs	r2, #0
 8001244:	2105      	movs	r1, #5
 8001246:	2039      	movs	r0, #57	@ 0x39
 8001248:	f002 fa53 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 800124c:	2039      	movs	r0, #57	@ 0x39
 800124e:	f002 fa6c 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 8001252:	2200      	movs	r2, #0
 8001254:	2105      	movs	r1, #5
 8001256:	203a      	movs	r0, #58	@ 0x3a
 8001258:	f002 fa4b 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 800125c:	203a      	movs	r0, #58	@ 0x3a
 800125e:	f002 fa64 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 8001262:	2200      	movs	r2, #0
 8001264:	2105      	movs	r1, #5
 8001266:	203b      	movs	r0, #59	@ 0x3b
 8001268:	f002 fa43 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 800126c:	203b      	movs	r0, #59	@ 0x3b
 800126e:	f002 fa5c 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream5_IRQn, 5, 0);
 8001272:	2200      	movs	r2, #0
 8001274:	2105      	movs	r1, #5
 8001276:	2044      	movs	r0, #68	@ 0x44
 8001278:	f002 fa3b 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream5_IRQn);
 800127c:	2044      	movs	r0, #68	@ 0x44
 800127e:	f002 fa54 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 5, 0);
 8001282:	2200      	movs	r2, #0
 8001284:	2105      	movs	r1, #5
 8001286:	2045      	movs	r0, #69	@ 0x45
 8001288:	f002 fa33 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 800128c:	2045      	movs	r0, #69	@ 0x45
 800128e:	f002 fa4c 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 8001292:	2200      	movs	r2, #0
 8001294:	2105      	movs	r1, #5
 8001296:	2046      	movs	r0, #70	@ 0x46
 8001298:	f002 fa2b 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 800129c:	2046      	movs	r0, #70	@ 0x46
 800129e:	f002 fa44 	bl	800372a <HAL_NVIC_EnableIRQ>

}
 80012a2:	bf00      	nop
 80012a4:	3708      	adds	r7, #8
 80012a6:	46bd      	mov	sp, r7
 80012a8:	bd80      	pop	{r7, pc}
 80012aa:	bf00      	nop
 80012ac:	40023800 	.word	0x40023800

080012b0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	b08e      	sub	sp, #56	@ 0x38
 80012b4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012b6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80012ba:	2200      	movs	r2, #0
 80012bc:	601a      	str	r2, [r3, #0]
 80012be:	605a      	str	r2, [r3, #4]
 80012c0:	609a      	str	r2, [r3, #8]
 80012c2:	60da      	str	r2, [r3, #12]
 80012c4:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80012c6:	2300      	movs	r3, #0
 80012c8:	623b      	str	r3, [r7, #32]
 80012ca:	4b77      	ldr	r3, [pc, #476]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012ce:	4a76      	ldr	r2, [pc, #472]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012d0:	f043 0302 	orr.w	r3, r3, #2
 80012d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80012d6:	4b74      	ldr	r3, [pc, #464]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012da:	f003 0302 	and.w	r3, r3, #2
 80012de:	623b      	str	r3, [r7, #32]
 80012e0:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80012e2:	2300      	movs	r3, #0
 80012e4:	61fb      	str	r3, [r7, #28]
 80012e6:	4b70      	ldr	r3, [pc, #448]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012ea:	4a6f      	ldr	r2, [pc, #444]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80012f2:	4b6d      	ldr	r3, [pc, #436]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80012fa:	61fb      	str	r3, [r7, #28]
 80012fc:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012fe:	2300      	movs	r3, #0
 8001300:	61bb      	str	r3, [r7, #24]
 8001302:	4b69      	ldr	r3, [pc, #420]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001304:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001306:	4a68      	ldr	r2, [pc, #416]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001308:	f043 0301 	orr.w	r3, r3, #1
 800130c:	6313      	str	r3, [r2, #48]	@ 0x30
 800130e:	4b66      	ldr	r3, [pc, #408]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001312:	f003 0301 	and.w	r3, r3, #1
 8001316:	61bb      	str	r3, [r7, #24]
 8001318:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800131a:	2300      	movs	r3, #0
 800131c:	617b      	str	r3, [r7, #20]
 800131e:	4b62      	ldr	r3, [pc, #392]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001320:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001322:	4a61      	ldr	r2, [pc, #388]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001324:	f043 0308 	orr.w	r3, r3, #8
 8001328:	6313      	str	r3, [r2, #48]	@ 0x30
 800132a:	4b5f      	ldr	r3, [pc, #380]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800132c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800132e:	f003 0308 	and.w	r3, r3, #8
 8001332:	617b      	str	r3, [r7, #20]
 8001334:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001336:	2300      	movs	r3, #0
 8001338:	613b      	str	r3, [r7, #16]
 800133a:	4b5b      	ldr	r3, [pc, #364]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800133c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800133e:	4a5a      	ldr	r2, [pc, #360]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001340:	f043 0304 	orr.w	r3, r3, #4
 8001344:	6313      	str	r3, [r2, #48]	@ 0x30
 8001346:	4b58      	ldr	r3, [pc, #352]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800134a:	f003 0304 	and.w	r3, r3, #4
 800134e:	613b      	str	r3, [r7, #16]
 8001350:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001352:	2300      	movs	r3, #0
 8001354:	60fb      	str	r3, [r7, #12]
 8001356:	4b54      	ldr	r3, [pc, #336]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001358:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800135a:	4a53      	ldr	r2, [pc, #332]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800135c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001360:	6313      	str	r3, [r2, #48]	@ 0x30
 8001362:	4b51      	ldr	r3, [pc, #324]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001364:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001366:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800136a:	60fb      	str	r3, [r7, #12]
 800136c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800136e:	2300      	movs	r3, #0
 8001370:	60bb      	str	r3, [r7, #8]
 8001372:	4b4d      	ldr	r3, [pc, #308]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001374:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001376:	4a4c      	ldr	r2, [pc, #304]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001378:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800137c:	6313      	str	r3, [r2, #48]	@ 0x30
 800137e:	4b4a      	ldr	r3, [pc, #296]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001380:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001382:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001386:	60bb      	str	r3, [r7, #8]
 8001388:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800138a:	2300      	movs	r3, #0
 800138c:	607b      	str	r3, [r7, #4]
 800138e:	4b46      	ldr	r3, [pc, #280]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001390:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001392:	4a45      	ldr	r2, [pc, #276]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001394:	f043 0320 	orr.w	r3, r3, #32
 8001398:	6313      	str	r3, [r2, #48]	@ 0x30
 800139a:	4b43      	ldr	r3, [pc, #268]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800139c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800139e:	f003 0320 	and.w	r3, r3, #32
 80013a2:	607b      	str	r3, [r7, #4]
 80013a4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013a6:	2300      	movs	r3, #0
 80013a8:	603b      	str	r3, [r7, #0]
 80013aa:	4b3f      	ldr	r3, [pc, #252]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80013ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ae:	4a3e      	ldr	r2, [pc, #248]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80013b0:	f043 0310 	orr.w	r3, r3, #16
 80013b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80013b6:	4b3c      	ldr	r3, [pc, #240]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80013b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ba:	f003 0310 	and.w	r3, r3, #16
 80013be:	603b      	str	r3, [r7, #0]
 80013c0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_6, GPIO_PIN_RESET);
 80013c2:	2200      	movs	r2, #0
 80013c4:	2140      	movs	r1, #64	@ 0x40
 80013c6:	4839      	ldr	r0, [pc, #228]	@ (80014ac <MX_GPIO_Init+0x1fc>)
 80013c8:	f002 ff80 	bl	80042cc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 80013cc:	2200      	movs	r2, #0
 80013ce:	2110      	movs	r1, #16
 80013d0:	4837      	ldr	r0, [pc, #220]	@ (80014b0 <MX_GPIO_Init+0x200>)
 80013d2:	f002 ff7b 	bl	80042cc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 80013d6:	2200      	movs	r2, #0
 80013d8:	2101      	movs	r1, #1
 80013da:	4836      	ldr	r0, [pc, #216]	@ (80014b4 <MX_GPIO_Init+0x204>)
 80013dc:	f002 ff76 	bl	80042cc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PG6 */
  GPIO_InitStruct.Pin = GPIO_PIN_6;
 80013e0:	2340      	movs	r3, #64	@ 0x40
 80013e2:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013e4:	2301      	movs	r3, #1
 80013e6:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013e8:	2300      	movs	r3, #0
 80013ea:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013ec:	2300      	movs	r3, #0
 80013ee:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80013f0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80013f4:	4619      	mov	r1, r3
 80013f6:	482d      	ldr	r0, [pc, #180]	@ (80014ac <MX_GPIO_Init+0x1fc>)
 80013f8:	f002 fdb4 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pin : PG3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80013fc:	2308      	movs	r3, #8
 80013fe:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001400:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001404:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001406:	2300      	movs	r3, #0
 8001408:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800140a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800140e:	4619      	mov	r1, r3
 8001410:	4826      	ldr	r0, [pc, #152]	@ (80014ac <MX_GPIO_Init+0x1fc>)
 8001412:	f002 fda7 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001416:	2301      	movs	r3, #1
 8001418:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800141a:	2300      	movs	r3, #0
 800141c:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800141e:	2300      	movs	r3, #0
 8001420:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001422:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001426:	4619      	mov	r1, r3
 8001428:	4821      	ldr	r0, [pc, #132]	@ (80014b0 <MX_GPIO_Init+0x200>)
 800142a:	f002 fd9b 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 800142e:	2310      	movs	r3, #16
 8001430:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001432:	2301      	movs	r3, #1
 8001434:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001436:	2300      	movs	r3, #0
 8001438:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800143a:	2300      	movs	r3, #0
 800143c:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800143e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001442:	4619      	mov	r1, r3
 8001444:	481a      	ldr	r0, [pc, #104]	@ (80014b0 <MX_GPIO_Init+0x200>)
 8001446:	f002 fd8d 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pins : INT1_ACCEL_Pin_Pin INT1_GRYO_Pin_Pin */
  GPIO_InitStruct.Pin = INT1_ACCEL_Pin_Pin|INT1_GRYO_Pin_Pin;
 800144a:	2330      	movs	r3, #48	@ 0x30
 800144c:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800144e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001452:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001454:	2300      	movs	r3, #0
 8001456:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001458:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800145c:	4619      	mov	r1, r3
 800145e:	4816      	ldr	r0, [pc, #88]	@ (80014b8 <MX_GPIO_Init+0x208>)
 8001460:	f002 fd80 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001464:	2301      	movs	r3, #1
 8001466:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001468:	2301      	movs	r3, #1
 800146a:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800146c:	2300      	movs	r3, #0
 800146e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001470:	2300      	movs	r3, #0
 8001472:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001474:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001478:	4619      	mov	r1, r3
 800147a:	480e      	ldr	r0, [pc, #56]	@ (80014b4 <MX_GPIO_Init+0x204>)
 800147c:	f002 fd72 	bl	8003f64 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001480:	2200      	movs	r2, #0
 8001482:	2105      	movs	r1, #5
 8001484:	2009      	movs	r0, #9
 8001486:	f002 f934 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800148a:	2009      	movs	r0, #9
 800148c:	f002 f94d 	bl	800372a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 8001490:	2200      	movs	r2, #0
 8001492:	2105      	movs	r1, #5
 8001494:	200a      	movs	r0, #10
 8001496:	f002 f92c 	bl	80036f2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 800149a:	200a      	movs	r0, #10
 800149c:	f002 f945 	bl	800372a <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80014a0:	bf00      	nop
 80014a2:	3738      	adds	r7, #56	@ 0x38
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bd80      	pop	{r7, pc}
 80014a8:	40023800 	.word	0x40023800
 80014ac:	40021800 	.word	0x40021800
 80014b0:	40020000 	.word	0x40020000
 80014b4:	40020400 	.word	0x40020400
 80014b8:	40020800 	.word	0x40020800

080014bc <TaskMain>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_TaskMain */
void TaskMain(void *argument)
{
 80014bc:	b580      	push	{r7, lr}
 80014be:	b082      	sub	sp, #8
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
  osDelay(1);
 80014c4:	2001      	movs	r0, #1
 80014c6:	f005 ff89 	bl	80073dc <osDelay>
 80014ca:	e7fb      	b.n	80014c4 <TaskMain+0x8>

080014cc <TaskChassis>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_TaskChassis */
void TaskChassis(void *argument)
{
 80014cc:	b580      	push	{r7, lr}
 80014ce:	b08e      	sub	sp, #56	@ 0x38
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]
  HAL_TIM_Base_Start(&htim1);
  HAL_TIM_Base_Start(&htim4);
  HAL_TIM_Base_Start(&htim5);
  HAL_TIM_Base_Start(&htim8);
  */
  PWMInit(&htim1, &htim4, &htim5, &htim8);
 80014d4:	4bbc      	ldr	r3, [pc, #752]	@ (80017c8 <TaskChassis+0x2fc>)
 80014d6:	4abd      	ldr	r2, [pc, #756]	@ (80017cc <TaskChassis+0x300>)
 80014d8:	49bd      	ldr	r1, [pc, #756]	@ (80017d0 <TaskChassis+0x304>)
 80014da:	48be      	ldr	r0, [pc, #760]	@ (80017d4 <TaskChassis+0x308>)
 80014dc:	f000 f994 	bl	8001808 <PWMInit>


  int16_t speedOfPulse = 100;
 80014e0:	2364      	movs	r3, #100	@ 0x64
 80014e2:	843b      	strh	r3, [r7, #32]
  int16_t negativeComponent = speedOfPulse*(-0.5f);
 80014e4:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 80014e8:	ee07 3a90 	vmov	s15, r3
 80014ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014f0:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 80014f4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80014fc:	ee17 3a90 	vmov	r3, s15
 8001500:	83fb      	strh	r3, [r7, #30]
  float FancyLEDscaler = (1/(float)speedOfPulse);
 8001502:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 8001506:	ee07 3a90 	vmov	s15, r3
 800150a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800150e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001512:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001516:	edc7 7a06 	vstr	s15, [r7, #24]

  int8_t iSwapper = 0;
 800151a:	2300      	movs	r3, #0
 800151c:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
  int16_t iVal = negativeComponent;
 8001520:	8bfb      	ldrh	r3, [r7, #30]
 8001522:	86bb      	strh	r3, [r7, #52]	@ 0x34
  int8_t iSwapper1 = 0;
 8001524:	2300      	movs	r3, #0
 8001526:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
  int16_t iVal1 = negativeComponent*-1;
 800152a:	8bfb      	ldrh	r3, [r7, #30]
 800152c:	425b      	negs	r3, r3
 800152e:	b29b      	uxth	r3, r3
 8001530:	863b      	strh	r3, [r7, #48]	@ 0x30
  int8_t iSwapper2 = 1;
 8001532:	2301      	movs	r3, #1
 8001534:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  int16_t iVal2 = negativeComponent*-1;
 8001538:	8bfb      	ldrh	r3, [r7, #30]
 800153a:	425b      	negs	r3, r3
 800153c:	b29b      	uxth	r3, r3
 800153e:	85bb      	strh	r3, [r7, #44]	@ 0x2c

  int16_t MotorCycle = 400;
 8001540:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8001544:	857b      	strh	r3, [r7, #42]	@ 0x2a
  */
  // int8_t iSwapper3 = 1;
  // int16_t buzzerVal = 0;
  // int8_t swapper = 0;

  int16_t servoPosition = 1200;
 8001546:	f44f 6396 	mov.w	r3, #1200	@ 0x4b0
 800154a:	853b      	strh	r3, [r7, #40]	@ 0x28

	timeTracker++;
	*/
	// PWMOutput(Buzzer, 1, NeverGonnaGiveYouUpNotes());
	// PWMOutput(Buzzer, 1, CaliforniaGirlsNotes());
	PWMOutput(Buzzer, 1, HampsterNotes());
 800154c:	f000 fcec 	bl	8001f28 <HampsterNotes>
 8001550:	4603      	mov	r3, r0
 8001552:	461a      	mov	r2, r3
 8001554:	2101      	movs	r1, #1
 8001556:	2002      	movs	r0, #2
 8001558:	f000 fb8c 	bl	8001c74 <PWMOutput>

	if (iVal > speedOfPulse) {
 800155c:	f9b7 2034 	ldrsh.w	r2, [r7, #52]	@ 0x34
 8001560:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 8001564:	429a      	cmp	r2, r3
 8001566:	dd07      	ble.n	8001578 <TaskChassis+0xac>
		iVal = speedOfPulse-1;
 8001568:	8c3b      	ldrh	r3, [r7, #32]
 800156a:	3b01      	subs	r3, #1
 800156c:	b29b      	uxth	r3, r3
 800156e:	86bb      	strh	r3, [r7, #52]	@ 0x34
		iSwapper = 1;
 8001570:	2301      	movs	r3, #1
 8001572:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8001576:	e00c      	b.n	8001592 <TaskChassis+0xc6>
	} else if (iVal < negativeComponent) {
 8001578:	f9b7 2034 	ldrsh.w	r2, [r7, #52]	@ 0x34
 800157c:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8001580:	429a      	cmp	r2, r3
 8001582:	da06      	bge.n	8001592 <TaskChassis+0xc6>
		iVal = negativeComponent+1;
 8001584:	8bfb      	ldrh	r3, [r7, #30]
 8001586:	3301      	adds	r3, #1
 8001588:	b29b      	uxth	r3, r3
 800158a:	86bb      	strh	r3, [r7, #52]	@ 0x34
		iSwapper = 0;
 800158c:	2300      	movs	r3, #0
 800158e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
	}
	if (iSwapper == 1) {
 8001592:	f997 3037 	ldrsb.w	r3, [r7, #55]	@ 0x37
 8001596:	2b01      	cmp	r3, #1
 8001598:	d106      	bne.n	80015a8 <TaskChassis+0xdc>
		iVal--;
 800159a:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	@ 0x34
 800159e:	b29b      	uxth	r3, r3
 80015a0:	3b01      	subs	r3, #1
 80015a2:	b29b      	uxth	r3, r3
 80015a4:	86bb      	strh	r3, [r7, #52]	@ 0x34
 80015a6:	e005      	b.n	80015b4 <TaskChassis+0xe8>
	} else {
		iVal++;
 80015a8:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	@ 0x34
 80015ac:	b29b      	uxth	r3, r3
 80015ae:	3301      	adds	r3, #1
 80015b0:	b29b      	uxth	r3, r3
 80015b2:	86bb      	strh	r3, [r7, #52]	@ 0x34
	}


	if (iVal1 > speedOfPulse) {
 80015b4:	f9b7 2030 	ldrsh.w	r2, [r7, #48]	@ 0x30
 80015b8:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 80015bc:	429a      	cmp	r2, r3
 80015be:	dd07      	ble.n	80015d0 <TaskChassis+0x104>
		iVal1 = speedOfPulse-1;
 80015c0:	8c3b      	ldrh	r3, [r7, #32]
 80015c2:	3b01      	subs	r3, #1
 80015c4:	b29b      	uxth	r3, r3
 80015c6:	863b      	strh	r3, [r7, #48]	@ 0x30
		iSwapper1 = 1;
 80015c8:	2301      	movs	r3, #1
 80015ca:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 80015ce:	e00c      	b.n	80015ea <TaskChassis+0x11e>
	} else if (iVal1 < negativeComponent) {
 80015d0:	f9b7 2030 	ldrsh.w	r2, [r7, #48]	@ 0x30
 80015d4:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 80015d8:	429a      	cmp	r2, r3
 80015da:	da06      	bge.n	80015ea <TaskChassis+0x11e>
		iVal1 = negativeComponent+1;
 80015dc:	8bfb      	ldrh	r3, [r7, #30]
 80015de:	3301      	adds	r3, #1
 80015e0:	b29b      	uxth	r3, r3
 80015e2:	863b      	strh	r3, [r7, #48]	@ 0x30
		iSwapper1 = 0;
 80015e4:	2300      	movs	r3, #0
 80015e6:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
	}
	if (iSwapper1 == 1) {
 80015ea:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 80015ee:	2b01      	cmp	r3, #1
 80015f0:	d106      	bne.n	8001600 <TaskChassis+0x134>
		iVal1--;
 80015f2:	f9b7 3030 	ldrsh.w	r3, [r7, #48]	@ 0x30
 80015f6:	b29b      	uxth	r3, r3
 80015f8:	3b01      	subs	r3, #1
 80015fa:	b29b      	uxth	r3, r3
 80015fc:	863b      	strh	r3, [r7, #48]	@ 0x30
 80015fe:	e005      	b.n	800160c <TaskChassis+0x140>
	} else {
		iVal1++;
 8001600:	f9b7 3030 	ldrsh.w	r3, [r7, #48]	@ 0x30
 8001604:	b29b      	uxth	r3, r3
 8001606:	3301      	adds	r3, #1
 8001608:	b29b      	uxth	r3, r3
 800160a:	863b      	strh	r3, [r7, #48]	@ 0x30
	}


	if (iVal2 > speedOfPulse) {
 800160c:	f9b7 202c 	ldrsh.w	r2, [r7, #44]	@ 0x2c
 8001610:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 8001614:	429a      	cmp	r2, r3
 8001616:	dd07      	ble.n	8001628 <TaskChassis+0x15c>
		iVal2 = speedOfPulse-1;
 8001618:	8c3b      	ldrh	r3, [r7, #32]
 800161a:	3b01      	subs	r3, #1
 800161c:	b29b      	uxth	r3, r3
 800161e:	85bb      	strh	r3, [r7, #44]	@ 0x2c
		iSwapper2 = 1;
 8001620:	2301      	movs	r3, #1
 8001622:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8001626:	e00c      	b.n	8001642 <TaskChassis+0x176>
	} else if (iVal2 < negativeComponent) {
 8001628:	f9b7 202c 	ldrsh.w	r2, [r7, #44]	@ 0x2c
 800162c:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8001630:	429a      	cmp	r2, r3
 8001632:	da06      	bge.n	8001642 <TaskChassis+0x176>
		iVal2 = negativeComponent+1;
 8001634:	8bfb      	ldrh	r3, [r7, #30]
 8001636:	3301      	adds	r3, #1
 8001638:	b29b      	uxth	r3, r3
 800163a:	85bb      	strh	r3, [r7, #44]	@ 0x2c
		iSwapper2 = 0;
 800163c:	2300      	movs	r3, #0
 800163e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	}
	if (iSwapper2 == 1) {
 8001642:	f997 302f 	ldrsb.w	r3, [r7, #47]	@ 0x2f
 8001646:	2b01      	cmp	r3, #1
 8001648:	d106      	bne.n	8001658 <TaskChassis+0x18c>
		iVal2--;
 800164a:	f9b7 302c 	ldrsh.w	r3, [r7, #44]	@ 0x2c
 800164e:	b29b      	uxth	r3, r3
 8001650:	3b01      	subs	r3, #1
 8001652:	b29b      	uxth	r3, r3
 8001654:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 8001656:	e005      	b.n	8001664 <TaskChassis+0x198>
	} else {
		iVal2++;
 8001658:	f9b7 302c 	ldrsh.w	r3, [r7, #44]	@ 0x2c
 800165c:	b29b      	uxth	r3, r3
 800165e:	3301      	adds	r3, #1
 8001660:	b29b      	uxth	r3, r3
 8001662:	85bb      	strh	r3, [r7, #44]	@ 0x2c
	}

	int16_t Val = iVal;
 8001664:	8ebb      	ldrh	r3, [r7, #52]	@ 0x34
 8001666:	84fb      	strh	r3, [r7, #38]	@ 0x26
	if (iVal < 0) {
 8001668:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	@ 0x34
 800166c:	2b00      	cmp	r3, #0
 800166e:	da01      	bge.n	8001674 <TaskChassis+0x1a8>
		Val = 0;
 8001670:	2300      	movs	r3, #0
 8001672:	84fb      	strh	r3, [r7, #38]	@ 0x26
	}
	int16_t Val1 = iVal1;
 8001674:	8e3b      	ldrh	r3, [r7, #48]	@ 0x30
 8001676:	84bb      	strh	r3, [r7, #36]	@ 0x24
	if (iVal1 < 0) {
 8001678:	f9b7 3030 	ldrsh.w	r3, [r7, #48]	@ 0x30
 800167c:	2b00      	cmp	r3, #0
 800167e:	da01      	bge.n	8001684 <TaskChassis+0x1b8>
		Val1 = 0;
 8001680:	2300      	movs	r3, #0
 8001682:	84bb      	strh	r3, [r7, #36]	@ 0x24
	}
	int16_t Val2 = iVal2;
 8001684:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8001686:	847b      	strh	r3, [r7, #34]	@ 0x22
	if (iVal2 < 0) {
 8001688:	f9b7 302c 	ldrsh.w	r3, [r7, #44]	@ 0x2c
 800168c:	2b00      	cmp	r3, #0
 800168e:	da01      	bge.n	8001694 <TaskChassis+0x1c8>
		Val2 = 0;
 8001690:	2300      	movs	r3, #0
 8001692:	847b      	strh	r3, [r7, #34]	@ 0x22
	}



	float realVal = Val * FancyLEDscaler;
 8001694:	f9b7 3026 	ldrsh.w	r3, [r7, #38]	@ 0x26
 8001698:	ee07 3a90 	vmov	s15, r3
 800169c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016a0:	ed97 7a06 	vldr	s14, [r7, #24]
 80016a4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80016a8:	edc7 7a05 	vstr	s15, [r7, #20]
	float realVal1 = Val1 * FancyLEDscaler;
 80016ac:	f9b7 3024 	ldrsh.w	r3, [r7, #36]	@ 0x24
 80016b0:	ee07 3a90 	vmov	s15, r3
 80016b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016b8:	ed97 7a06 	vldr	s14, [r7, #24]
 80016bc:	ee67 7a27 	vmul.f32	s15, s14, s15
 80016c0:	edc7 7a04 	vstr	s15, [r7, #16]
	float realVal2 = Val2 * FancyLEDscaler;
 80016c4:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	@ 0x22
 80016c8:	ee07 3a90 	vmov	s15, r3
 80016cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016d0:	ed97 7a06 	vldr	s14, [r7, #24]
 80016d4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80016d8:	edc7 7a03 	vstr	s15, [r7, #12]

	// usart_printf("%d\r\n", iVal);
	// (TypesThatUsePWM_t Type, int8_t Position, int16_t desiredFrequency)

	int8_t KEY = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 80016dc:	2101      	movs	r1, #1
 80016de:	483e      	ldr	r0, [pc, #248]	@ (80017d8 <TaskChassis+0x30c>)
 80016e0:	f002 fddc 	bl	800429c <HAL_GPIO_ReadPin>
 80016e4:	4603      	mov	r3, r0
 80016e6:	72fb      	strb	r3, [r7, #11]
	if (MotorCycle > 1650) {
 80016e8:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 80016ec:	f240 6272 	movw	r2, #1650	@ 0x672
 80016f0:	4293      	cmp	r3, r2
 80016f2:	dd03      	ble.n	80016fc <TaskChassis+0x230>
		MotorCycle = 1650;
 80016f4:	f240 6372 	movw	r3, #1650	@ 0x672
 80016f8:	857b      	strh	r3, [r7, #42]	@ 0x2a
 80016fa:	e008      	b.n	800170e <TaskChassis+0x242>

	} else if (MotorCycle < 950) {
 80016fc:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 8001700:	f240 32b5 	movw	r2, #949	@ 0x3b5
 8001704:	4293      	cmp	r3, r2
 8001706:	dc02      	bgt.n	800170e <TaskChassis+0x242>
		MotorCycle = 950;
 8001708:	f240 33b6 	movw	r3, #950	@ 0x3b6
 800170c:	857b      	strh	r3, [r7, #42]	@ 0x2a
	}


	if (KEY == 1) {
 800170e:	f997 300b 	ldrsb.w	r3, [r7, #11]
 8001712:	2b01      	cmp	r3, #1
 8001714:	d107      	bne.n	8001726 <TaskChassis+0x25a>
		MotorCycle = MotorCycle - 6;
 8001716:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001718:	3b06      	subs	r3, #6
 800171a:	b29b      	uxth	r3, r3
 800171c:	857b      	strh	r3, [r7, #42]	@ 0x2a
		servoPosition = 1000;
 800171e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001722:	853b      	strh	r3, [r7, #40]	@ 0x28
 8001724:	e008      	b.n	8001738 <TaskChassis+0x26c>
		// PWMOff(Buzzer, 1);

	} else {
		initializeCaliforniaGirls();
 8001726:	f000 fbe9 	bl	8001efc <initializeCaliforniaGirls>
		MotorCycle = MotorCycle + 6;
 800172a:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 800172c:	3306      	adds	r3, #6
 800172e:	b29b      	uxth	r3, r3
 8001730:	857b      	strh	r3, [r7, #42]	@ 0x2a
		servoPosition = 2500;
 8001732:	f640 13c4 	movw	r3, #2500	@ 0x9c4
 8001736:	853b      	strh	r3, [r7, #40]	@ 0x28
	}
	// usart_printf("%d %d\r\n", KEY, MotorCycle);
	// usart_printf("%d %d %d  0\r\n", iVal, iVal1, iVal2);

	// htim4.Instance->CCR3=150;
	PWMOutput(LED, 3, 500);
 8001738:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800173c:	2103      	movs	r1, #3
 800173e:	2001      	movs	r0, #1
 8001740:	f000 fa98 	bl	8001c74 <PWMOutput>
	PWMOutput(LED, 2, 500);
 8001744:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001748:	2102      	movs	r1, #2
 800174a:	2001      	movs	r0, #1
 800174c:	f000 fa92 	bl	8001c74 <PWMOutput>
	PWMOutput(LED, 1, 500);
 8001750:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001754:	2101      	movs	r1, #1
 8001756:	2001      	movs	r0, #1
 8001758:	f000 fa8c 	bl	8001c74 <PWMOutput>
	//(htim1).Init.Period = 999;
	// PWMOutput(Motor, 5, 500);

	PWMOutput(Motor, 1, 50);
 800175c:	2232      	movs	r2, #50	@ 0x32
 800175e:	2101      	movs	r1, #1
 8001760:	2000      	movs	r0, #0
 8001762:	f000 fa87 	bl	8001c74 <PWMOutput>

	//PWMOutput(Buzzer, 1, 90);
	// usart_printf("beanis7\r\n");

	// (TypesThatUsePWM_t Type, msOrFullRange microsecondOrFullrange, int8_t position, float val)
	PWMInitialize(LED, FR, 3, realVal2);
 8001766:	ed97 0a03 	vldr	s0, [r7, #12]
 800176a:	2203      	movs	r2, #3
 800176c:	2101      	movs	r1, #1
 800176e:	2001      	movs	r0, #1
 8001770:	f000 f968 	bl	8001a44 <PWMInitialize>
	PWMInitialize(LED, FR, 2, realVal);
 8001774:	ed97 0a05 	vldr	s0, [r7, #20]
 8001778:	2202      	movs	r2, #2
 800177a:	2101      	movs	r1, #1
 800177c:	2001      	movs	r0, #1
 800177e:	f000 f961 	bl	8001a44 <PWMInitialize>
	PWMInitialize(LED, FR, 1, realVal1);
 8001782:	ed97 0a04 	vldr	s0, [r7, #16]
 8001786:	2201      	movs	r2, #1
 8001788:	2101      	movs	r1, #1
 800178a:	2001      	movs	r0, #1
 800178c:	f000 f95a 	bl	8001a44 <PWMInitialize>
	// (htim1).Instance->CCR1=499;

	// PWMInitialize(Motor, FR, 1, 0.5);
	// PWMInitialize(Motor, MS, 5, MotorCycle);
	PWMInitialize(Motor, MS, 1, servoPosition);
 8001790:	f9b7 3028 	ldrsh.w	r3, [r7, #40]	@ 0x28
 8001794:	ee07 3a90 	vmov	s15, r3
 8001798:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800179c:	eeb0 0a67 	vmov.f32	s0, s15
 80017a0:	2201      	movs	r2, #1
 80017a2:	2100      	movs	r1, #0
 80017a4:	2000      	movs	r0, #0
 80017a6:	f000 f94d 	bl	8001a44 <PWMInitialize>

	PWMInitialize(Buzzer, FR, 1, 0.5);
 80017aa:	eeb6 0a00 	vmov.f32	s0, #96	@ 0x3f000000  0.5
 80017ae:	2201      	movs	r2, #1
 80017b0:	2101      	movs	r1, #1
 80017b2:	2002      	movs	r0, #2
 80017b4:	f000 f946 	bl	8001a44 <PWMInitialize>
	// (*tim5).Instance->CCR2=value;

	// htim5.Init.Period = 1000;

	// htim5.Instance->CCR2=400;
	mainPrint();
 80017b8:	f000 fa8c 	bl	8001cd4 <mainPrint>

	PWMTimerStarter();
 80017bc:	f000 fa92 	bl	8001ce4 <PWMTimerStarter>

    osDelay(10);
 80017c0:	200a      	movs	r0, #10
 80017c2:	f005 fe0b 	bl	80073dc <osDelay>
  {
 80017c6:	e6c1      	b.n	800154c <TaskChassis+0x80>
 80017c8:	200005d4 	.word	0x200005d4
 80017cc:	2000058c 	.word	0x2000058c
 80017d0:	20000544 	.word	0x20000544
 80017d4:	200004fc 	.word	0x200004fc
 80017d8:	40020000 	.word	0x40020000

080017dc <imu_temp_control_task>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_imu_temp_control_task */
__weak void imu_temp_control_task(void *argument)
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	b082      	sub	sp, #8
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN imu_temp_control_task */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80017e4:	2001      	movs	r0, #1
 80017e6:	f005 fdf9 	bl	80073dc <osDelay>
 80017ea:	e7fb      	b.n	80017e4 <imu_temp_control_task+0x8>

080017ec <TaskTurret>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_TaskTurret */
void TaskTurret(void *argument)
{
 80017ec:	b580      	push	{r7, lr}
 80017ee:	b082      	sub	sp, #8
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN TaskTurret */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80017f4:	2001      	movs	r0, #1
 80017f6:	f005 fdf1 	bl	80073dc <osDelay>
 80017fa:	e7fb      	b.n	80017f4 <TaskTurret+0x8>

080017fc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017fc:	b480      	push	{r7}
 80017fe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001800:	b672      	cpsid	i
}
 8001802:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001804:	bf00      	nop
 8001806:	e7fd      	b.n	8001804 <Error_Handler+0x8>

08001808 <PWMInit>:
uint32_t period[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

// struct individualTracker PWMS[11];

// Initializes the variables in this library :<
void PWMInit (TIM_HandleTypeDef *t1, TIM_HandleTypeDef *t4, TIM_HandleTypeDef *t5, TIM_HandleTypeDef *t8) {
 8001808:	b580      	push	{r7, lr}
 800180a:	b084      	sub	sp, #16
 800180c:	af00      	add	r7, sp, #0
 800180e:	60f8      	str	r0, [r7, #12]
 8001810:	60b9      	str	r1, [r7, #8]
 8001812:	607a      	str	r2, [r7, #4]
 8001814:	603b      	str	r3, [r7, #0]
	tim1 = t1;
 8001816:	4a12      	ldr	r2, [pc, #72]	@ (8001860 <PWMInit+0x58>)
 8001818:	68fb      	ldr	r3, [r7, #12]
 800181a:	6013      	str	r3, [r2, #0]
	tim4 = t4;
 800181c:	4a11      	ldr	r2, [pc, #68]	@ (8001864 <PWMInit+0x5c>)
 800181e:	68bb      	ldr	r3, [r7, #8]
 8001820:	6013      	str	r3, [r2, #0]
	tim5 = t5;
 8001822:	4a11      	ldr	r2, [pc, #68]	@ (8001868 <PWMInit+0x60>)
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	6013      	str	r3, [r2, #0]
	tim8 = t8;
 8001828:	4a10      	ldr	r2, [pc, #64]	@ (800186c <PWMInit+0x64>)
 800182a:	683b      	ldr	r3, [r7, #0]
 800182c:	6013      	str	r3, [r2, #0]
	HAL_TIM_Base_Start(tim1);
 800182e:	4b0c      	ldr	r3, [pc, #48]	@ (8001860 <PWMInit+0x58>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	4618      	mov	r0, r3
 8001834:	f003 fc24 	bl	8005080 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(tim4);
 8001838:	4b0a      	ldr	r3, [pc, #40]	@ (8001864 <PWMInit+0x5c>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4618      	mov	r0, r3
 800183e:	f003 fc1f 	bl	8005080 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(tim5);
 8001842:	4b09      	ldr	r3, [pc, #36]	@ (8001868 <PWMInit+0x60>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	4618      	mov	r0, r3
 8001848:	f003 fc1a 	bl	8005080 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(tim8);
 800184c:	4b07      	ldr	r3, [pc, #28]	@ (800186c <PWMInit+0x64>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	4618      	mov	r0, r3
 8001852:	f003 fc15 	bl	8005080 <HAL_TIM_Base_Start>
}
 8001856:	bf00      	nop
 8001858:	3710      	adds	r7, #16
 800185a:	46bd      	mov	sp, r7
 800185c:	bd80      	pop	{r7, pc}
 800185e:	bf00      	nop
 8001860:	20000a4c 	.word	0x20000a4c
 8001864:	20000a50 	.word	0x20000a50
 8001868:	20000a54 	.word	0x20000a54
 800186c:	20000a58 	.word	0x20000a58

08001870 <calculateOutputPeriodToGetFrequency>:

uint32_t calculateOutputPeriodToGetFrequency (TypesThatUsePWM_t Type, uint32_t desiredFrequency) {
 8001870:	b480      	push	{r7}
 8001872:	b085      	sub	sp, #20
 8001874:	af00      	add	r7, sp, #0
 8001876:	4603      	mov	r3, r0
 8001878:	6039      	str	r1, [r7, #0]
 800187a:	71fb      	strb	r3, [r7, #7]
	uint32_t finalVal = 0;
 800187c:	2300      	movs	r3, #0
 800187e:	60fb      	str	r3, [r7, #12]
	switch (Type) {
 8001880:	79fb      	ldrb	r3, [r7, #7]
 8001882:	2b02      	cmp	r3, #2
 8001884:	d02c      	beq.n	80018e0 <calculateOutputPeriodToGetFrequency+0x70>
 8001886:	2b02      	cmp	r3, #2
 8001888:	dc3d      	bgt.n	8001906 <calculateOutputPeriodToGetFrequency+0x96>
 800188a:	2b00      	cmp	r3, #0
 800188c:	d002      	beq.n	8001894 <calculateOutputPeriodToGetFrequency+0x24>
 800188e:	2b01      	cmp	r3, #1
 8001890:	d013      	beq.n	80018ba <calculateOutputPeriodToGetFrequency+0x4a>
 8001892:	e038      	b.n	8001906 <calculateOutputPeriodToGetFrequency+0x96>
	case 0:
		finalVal = 1/(PWMPre*desiredFrequency);
 8001894:	683b      	ldr	r3, [r7, #0]
 8001896:	ee07 3a90 	vmov	s15, r3
 800189a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800189e:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 8001914 <calculateOutputPeriodToGetFrequency+0xa4>
 80018a2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80018a6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80018aa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018ae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80018b2:	ee17 3a90 	vmov	r3, s15
 80018b6:	60fb      	str	r3, [r7, #12]
		// usart_printf("%d %d\r\n", desiredFrequency, finalVal);
		break;
 80018b8:	e025      	b.n	8001906 <calculateOutputPeriodToGetFrequency+0x96>
	case 1:
		finalVal = 1/(LEDPre*desiredFrequency);
 80018ba:	683b      	ldr	r3, [r7, #0]
 80018bc:	ee07 3a90 	vmov	s15, r3
 80018c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018c4:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 8001918 <calculateOutputPeriodToGetFrequency+0xa8>
 80018c8:	ee27 7a87 	vmul.f32	s14, s15, s14
 80018cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80018d0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018d4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80018d8:	ee17 3a90 	vmov	r3, s15
 80018dc:	60fb      	str	r3, [r7, #12]
		// usart_printf("%d %d\r\n", desiredFrequency, finalVal);
		break;
 80018de:	e012      	b.n	8001906 <calculateOutputPeriodToGetFrequency+0x96>
	case 2:
		finalVal = 1/(buzzerPre*desiredFrequency);
 80018e0:	683b      	ldr	r3, [r7, #0]
 80018e2:	ee07 3a90 	vmov	s15, r3
 80018e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018ea:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001918 <calculateOutputPeriodToGetFrequency+0xa8>
 80018ee:	ee27 7a87 	vmul.f32	s14, s15, s14
 80018f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80018f6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018fa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80018fe:	ee17 3a90 	vmov	r3, s15
 8001902:	60fb      	str	r3, [r7, #12]
		// usart_printf("%d %d\r\n", desiredFrequency, finalVal);
		break;
 8001904:	bf00      	nop
	}

	return finalVal;
 8001906:	68fb      	ldr	r3, [r7, #12]
}
 8001908:	4618      	mov	r0, r3
 800190a:	3714      	adds	r7, #20
 800190c:	46bd      	mov	sp, r7
 800190e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001912:	4770      	bx	lr
 8001914:	360637bd 	.word	0x360637bd
 8001918:	358637bd 	.word	0x358637bd

0800191c <safeOutputPeriodValueCalculator>:

uint32_t safeOutputPeriodValueCalculator(int32_t maxVal, float ratioVal) {
 800191c:	b480      	push	{r7}
 800191e:	b085      	sub	sp, #20
 8001920:	af00      	add	r7, sp, #0
 8001922:	6078      	str	r0, [r7, #4]
 8001924:	ed87 0a00 	vstr	s0, [r7]
	// float val = (maxVal);
	// uint32_t val = maxVal;
	// uint32_t val = 500;

	uint32_t val1 = maxVal * ratioVal;// (uint32_t)val;
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	ee07 3a90 	vmov	s15, r3
 800192e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001932:	edd7 7a00 	vldr	s15, [r7]
 8001936:	ee67 7a27 	vmul.f32	s15, s14, s15
 800193a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800193e:	ee17 3a90 	vmov	r3, s15
 8001942:	60fb      	str	r3, [r7, #12]

	if (val1 > (uint32_t)maxVal) {
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	68fa      	ldr	r2, [r7, #12]
 8001948:	429a      	cmp	r2, r3
 800194a:	d902      	bls.n	8001952 <safeOutputPeriodValueCalculator+0x36>
		val1 = (uint32_t)(maxVal);
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	60fb      	str	r3, [r7, #12]
 8001950:	e004      	b.n	800195c <safeOutputPeriodValueCalculator+0x40>
	} else if (val1 < 1) {
 8001952:	68fb      	ldr	r3, [r7, #12]
 8001954:	2b00      	cmp	r3, #0
 8001956:	d101      	bne.n	800195c <safeOutputPeriodValueCalculator+0x40>
		val1 = 1;
 8001958:	2301      	movs	r3, #1
 800195a:	60fb      	str	r3, [r7, #12]
	}

	// val1 = val1-1;
	return val1;
 800195c:	68fb      	ldr	r3, [r7, #12]

}
 800195e:	4618      	mov	r0, r3
 8001960:	3714      	adds	r7, #20
 8001962:	46bd      	mov	sp, r7
 8001964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001968:	4770      	bx	lr
	...

0800196c <calculateOutputPeriodValue>:

uint32_t calculateOutputPeriodValue (TypesThatUsePWM_t Type, msOrFullRange microsecondOrFullrange, int8_t position, float val) {
 800196c:	b580      	push	{r7, lr}
 800196e:	b084      	sub	sp, #16
 8001970:	af00      	add	r7, sp, #0
 8001972:	4603      	mov	r3, r0
 8001974:	ed87 0a00 	vstr	s0, [r7]
 8001978:	71fb      	strb	r3, [r7, #7]
 800197a:	460b      	mov	r3, r1
 800197c:	71bb      	strb	r3, [r7, #6]
 800197e:	4613      	mov	r3, r2
 8001980:	717b      	strb	r3, [r7, #5]
	uint32_t returnVal = 0;
 8001982:	2300      	movs	r3, #0
 8001984:	60fb      	str	r3, [r7, #12]
	// usart_printf("beanis1 %d", position);
	switch (Type) {
 8001986:	79fb      	ldrb	r3, [r7, #7]
 8001988:	2b02      	cmp	r3, #2
 800198a:	d03c      	beq.n	8001a06 <calculateOutputPeriodValue+0x9a>
 800198c:	2b02      	cmp	r3, #2
 800198e:	dc51      	bgt.n	8001a34 <calculateOutputPeriodValue+0xc8>
 8001990:	2b00      	cmp	r3, #0
 8001992:	d002      	beq.n	800199a <calculateOutputPeriodValue+0x2e>
 8001994:	2b01      	cmp	r3, #1
 8001996:	d01b      	beq.n	80019d0 <calculateOutputPeriodValue+0x64>
 8001998:	e04c      	b.n	8001a34 <calculateOutputPeriodValue+0xc8>
		case 0:
			if (microsecondOrFullrange == MS) {
 800199a:	79bb      	ldrb	r3, [r7, #6]
 800199c:	2b00      	cmp	r3, #0
 800199e:	d10a      	bne.n	80019b6 <calculateOutputPeriodValue+0x4a>
				returnVal = (uint32_t)(val)/PWMµsPre;
 80019a0:	edd7 7a00 	vldr	s15, [r7]
 80019a4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019a8:	ee17 2a90 	vmov	r2, s15
 80019ac:	2302      	movs	r3, #2
 80019ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80019b2:	60fb      	str	r3, [r7, #12]
			} else {
				returnVal = safeOutputPeriodValueCalculator(period[position-1], val);
			}
			// usart_printf("beanis %d %d\r\n", returnVal, period[position-1]);
			// PWMS[position-1].period = returnVal;
			break;
 80019b4:	e03e      	b.n	8001a34 <calculateOutputPeriodValue+0xc8>
				returnVal = safeOutputPeriodValueCalculator(period[position-1], val);
 80019b6:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80019ba:	3b01      	subs	r3, #1
 80019bc:	4a20      	ldr	r2, [pc, #128]	@ (8001a40 <calculateOutputPeriodValue+0xd4>)
 80019be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80019c2:	ed97 0a00 	vldr	s0, [r7]
 80019c6:	4618      	mov	r0, r3
 80019c8:	f7ff ffa8 	bl	800191c <safeOutputPeriodValueCalculator>
 80019cc:	60f8      	str	r0, [r7, #12]
			break;
 80019ce:	e031      	b.n	8001a34 <calculateOutputPeriodValue+0xc8>
		case 1:
			if (microsecondOrFullrange == MS) {
 80019d0:	79bb      	ldrb	r3, [r7, #6]
 80019d2:	2b00      	cmp	r3, #0
 80019d4:	d10a      	bne.n	80019ec <calculateOutputPeriodValue+0x80>
				returnVal = (uint32_t)(val)/LEDµsPre;
 80019d6:	edd7 7a00 	vldr	s15, [r7]
 80019da:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019de:	ee17 2a90 	vmov	r2, s15
 80019e2:	2301      	movs	r3, #1
 80019e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80019e8:	60fb      	str	r3, [r7, #12]
				returnVal = safeOutputPeriodValueCalculator(period[position+6], val);
			}
			// usart_printf("%d %d\r\n", returnVal, period[position+6]);
			// (int32_t)((float)(period[position+6]) * val)
			// PWMS[position+6].period = returnVal;
			break;
 80019ea:	e023      	b.n	8001a34 <calculateOutputPeriodValue+0xc8>
				returnVal = safeOutputPeriodValueCalculator(period[position+6], val);
 80019ec:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80019f0:	3306      	adds	r3, #6
 80019f2:	4a13      	ldr	r2, [pc, #76]	@ (8001a40 <calculateOutputPeriodValue+0xd4>)
 80019f4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80019f8:	ed97 0a00 	vldr	s0, [r7]
 80019fc:	4618      	mov	r0, r3
 80019fe:	f7ff ff8d 	bl	800191c <safeOutputPeriodValueCalculator>
 8001a02:	60f8      	str	r0, [r7, #12]
			break;
 8001a04:	e016      	b.n	8001a34 <calculateOutputPeriodValue+0xc8>
		case 2:
			if (microsecondOrFullrange == MS) {
 8001a06:	79bb      	ldrb	r3, [r7, #6]
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	d10a      	bne.n	8001a22 <calculateOutputPeriodValue+0xb6>
				returnVal = (uint32_t)(val)/buzzerµsPre;
 8001a0c:	edd7 7a00 	vldr	s15, [r7]
 8001a10:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a14:	ee17 2a90 	vmov	r2, s15
 8001a18:	2301      	movs	r3, #1
 8001a1a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a1e:	60fb      	str	r3, [r7, #12]
			} else {
				returnVal = safeOutputPeriodValueCalculator(period[10], val);
			}
			// PWMS[10].period = returnVal;
			// usart_printf("%d %d\r\n", returnVal, period[10]);
			break;
 8001a20:	e007      	b.n	8001a32 <calculateOutputPeriodValue+0xc6>
				returnVal = safeOutputPeriodValueCalculator(period[10], val);
 8001a22:	4b07      	ldr	r3, [pc, #28]	@ (8001a40 <calculateOutputPeriodValue+0xd4>)
 8001a24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001a26:	ed97 0a00 	vldr	s0, [r7]
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	f7ff ff76 	bl	800191c <safeOutputPeriodValueCalculator>
 8001a30:	60f8      	str	r0, [r7, #12]
			break;
 8001a32:	bf00      	nop
		default:
	}
	return returnVal;
 8001a34:	68fb      	ldr	r3, [r7, #12]
}
 8001a36:	4618      	mov	r0, r3
 8001a38:	3710      	adds	r7, #16
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd80      	pop	{r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	20000a94 	.word	0x20000a94

08001a44 <PWMInitialize>:

void PWMInitialize(TypesThatUsePWM_t Type, msOrFullRange microsecondOrFullrange, int8_t position, float val) {
 8001a44:	b580      	push	{r7, lr}
 8001a46:	b084      	sub	sp, #16
 8001a48:	af00      	add	r7, sp, #0
 8001a4a:	4603      	mov	r3, r0
 8001a4c:	ed87 0a00 	vstr	s0, [r7]
 8001a50:	71fb      	strb	r3, [r7, #7]
 8001a52:	460b      	mov	r3, r1
 8001a54:	71bb      	strb	r3, [r7, #6]
 8001a56:	4613      	mov	r3, r2
 8001a58:	717b      	strb	r3, [r7, #5]

	// usart_printf("beanis2 %d\r\n", position);

	uint32_t value = calculateOutputPeriodValue (Type, microsecondOrFullrange, position, val);
 8001a5a:	f997 2005 	ldrsb.w	r2, [r7, #5]
 8001a5e:	79b9      	ldrb	r1, [r7, #6]
 8001a60:	79fb      	ldrb	r3, [r7, #7]
 8001a62:	ed97 0a00 	vldr	s0, [r7]
 8001a66:	4618      	mov	r0, r3
 8001a68:	f7ff ff80 	bl	800196c <calculateOutputPeriodValue>
 8001a6c:	60f8      	str	r0, [r7, #12]
	switch (Type) {
 8001a6e:	79fb      	ldrb	r3, [r7, #7]
 8001a70:	2b02      	cmp	r3, #2
 8001a72:	d076      	beq.n	8001b62 <PWMInitialize+0x11e>
 8001a74:	2b02      	cmp	r3, #2
 8001a76:	dc7e      	bgt.n	8001b76 <PWMInitialize+0x132>
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	d002      	beq.n	8001a82 <PWMInitialize+0x3e>
 8001a7c:	2b01      	cmp	r3, #1
 8001a7e:	d04a      	beq.n	8001b16 <PWMInitialize+0xd2>
	case 2:
		(*tim4).Instance->CCR3=value;
		subPeriod[10] = value;
		break;
	}
	return;
 8001a80:	e079      	b.n	8001b76 <PWMInitialize+0x132>
		switch (position) {
 8001a82:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001a86:	3b01      	subs	r3, #1
 8001a88:	2b06      	cmp	r3, #6
 8001a8a:	d83b      	bhi.n	8001b04 <PWMInitialize+0xc0>
 8001a8c:	a201      	add	r2, pc, #4	@ (adr r2, 8001a94 <PWMInitialize+0x50>)
 8001a8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a92:	bf00      	nop
 8001a94:	08001ab1 	.word	0x08001ab1
 8001a98:	08001abd 	.word	0x08001abd
 8001a9c:	08001ac9 	.word	0x08001ac9
 8001aa0:	08001ad5 	.word	0x08001ad5
 8001aa4:	08001ae1 	.word	0x08001ae1
 8001aa8:	08001aed 	.word	0x08001aed
 8001aac:	08001af9 	.word	0x08001af9
			(*tim1).Instance->CCR1=value;
 8001ab0:	4b33      	ldr	r3, [pc, #204]	@ (8001b80 <PWMInitialize+0x13c>)
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	68fa      	ldr	r2, [r7, #12]
 8001ab8:	635a      	str	r2, [r3, #52]	@ 0x34
			break;
 8001aba:	e024      	b.n	8001b06 <PWMInitialize+0xc2>
			(*tim1).Instance->CCR2=value;
 8001abc:	4b30      	ldr	r3, [pc, #192]	@ (8001b80 <PWMInitialize+0x13c>)
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	68fa      	ldr	r2, [r7, #12]
 8001ac4:	639a      	str	r2, [r3, #56]	@ 0x38
			break;
 8001ac6:	e01e      	b.n	8001b06 <PWMInitialize+0xc2>
			(*tim1).Instance->CCR3=value;
 8001ac8:	4b2d      	ldr	r3, [pc, #180]	@ (8001b80 <PWMInitialize+0x13c>)
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	681b      	ldr	r3, [r3, #0]
 8001ace:	68fa      	ldr	r2, [r7, #12]
 8001ad0:	63da      	str	r2, [r3, #60]	@ 0x3c
			break;
 8001ad2:	e018      	b.n	8001b06 <PWMInitialize+0xc2>
			(*tim1).Instance->CCR4=value;
 8001ad4:	4b2a      	ldr	r3, [pc, #168]	@ (8001b80 <PWMInitialize+0x13c>)
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	68fa      	ldr	r2, [r7, #12]
 8001adc:	641a      	str	r2, [r3, #64]	@ 0x40
			break;
 8001ade:	e012      	b.n	8001b06 <PWMInitialize+0xc2>
			(*tim8).Instance->CCR1=value;
 8001ae0:	4b28      	ldr	r3, [pc, #160]	@ (8001b84 <PWMInitialize+0x140>)
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	681b      	ldr	r3, [r3, #0]
 8001ae6:	68fa      	ldr	r2, [r7, #12]
 8001ae8:	635a      	str	r2, [r3, #52]	@ 0x34
			break;
 8001aea:	e00c      	b.n	8001b06 <PWMInitialize+0xc2>
			(*tim8).Instance->CCR2=value;
 8001aec:	4b25      	ldr	r3, [pc, #148]	@ (8001b84 <PWMInitialize+0x140>)
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	681b      	ldr	r3, [r3, #0]
 8001af2:	68fa      	ldr	r2, [r7, #12]
 8001af4:	639a      	str	r2, [r3, #56]	@ 0x38
			break;
 8001af6:	e006      	b.n	8001b06 <PWMInitialize+0xc2>
			(*tim8).Instance->CCR3=value;
 8001af8:	4b22      	ldr	r3, [pc, #136]	@ (8001b84 <PWMInitialize+0x140>)
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	68fa      	ldr	r2, [r7, #12]
 8001b00:	63da      	str	r2, [r3, #60]	@ 0x3c
			break;
 8001b02:	e000      	b.n	8001b06 <PWMInitialize+0xc2>
			break;
 8001b04:	bf00      	nop
		subPeriod[position-1] = value;
 8001b06:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001b0a:	3b01      	subs	r3, #1
 8001b0c:	491e      	ldr	r1, [pc, #120]	@ (8001b88 <PWMInitialize+0x144>)
 8001b0e:	68fa      	ldr	r2, [r7, #12]
 8001b10:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		break;
 8001b14:	e02e      	b.n	8001b74 <PWMInitialize+0x130>
		switch (position) {
 8001b16:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001b1a:	2b03      	cmp	r3, #3
 8001b1c:	d012      	beq.n	8001b44 <PWMInitialize+0x100>
 8001b1e:	2b03      	cmp	r3, #3
 8001b20:	dc16      	bgt.n	8001b50 <PWMInitialize+0x10c>
 8001b22:	2b01      	cmp	r3, #1
 8001b24:	d002      	beq.n	8001b2c <PWMInitialize+0xe8>
 8001b26:	2b02      	cmp	r3, #2
 8001b28:	d006      	beq.n	8001b38 <PWMInitialize+0xf4>
			break;
 8001b2a:	e011      	b.n	8001b50 <PWMInitialize+0x10c>
			(*tim5).Instance->CCR1=value;
 8001b2c:	4b17      	ldr	r3, [pc, #92]	@ (8001b8c <PWMInitialize+0x148>)
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	681b      	ldr	r3, [r3, #0]
 8001b32:	68fa      	ldr	r2, [r7, #12]
 8001b34:	635a      	str	r2, [r3, #52]	@ 0x34
			break;
 8001b36:	e00c      	b.n	8001b52 <PWMInitialize+0x10e>
			(*tim5).Instance->CCR2=value;
 8001b38:	4b14      	ldr	r3, [pc, #80]	@ (8001b8c <PWMInitialize+0x148>)
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	68fa      	ldr	r2, [r7, #12]
 8001b40:	639a      	str	r2, [r3, #56]	@ 0x38
			break;
 8001b42:	e006      	b.n	8001b52 <PWMInitialize+0x10e>
			(*tim5).Instance->CCR3=value;
 8001b44:	4b11      	ldr	r3, [pc, #68]	@ (8001b8c <PWMInitialize+0x148>)
 8001b46:	681b      	ldr	r3, [r3, #0]
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	68fa      	ldr	r2, [r7, #12]
 8001b4c:	63da      	str	r2, [r3, #60]	@ 0x3c
			break;
 8001b4e:	e000      	b.n	8001b52 <PWMInitialize+0x10e>
			break;
 8001b50:	bf00      	nop
		subPeriod[position+6] = value;
 8001b52:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001b56:	3306      	adds	r3, #6
 8001b58:	490b      	ldr	r1, [pc, #44]	@ (8001b88 <PWMInitialize+0x144>)
 8001b5a:	68fa      	ldr	r2, [r7, #12]
 8001b5c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		break;
 8001b60:	e008      	b.n	8001b74 <PWMInitialize+0x130>
		(*tim4).Instance->CCR3=value;
 8001b62:	4b0b      	ldr	r3, [pc, #44]	@ (8001b90 <PWMInitialize+0x14c>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	68fa      	ldr	r2, [r7, #12]
 8001b6a:	63da      	str	r2, [r3, #60]	@ 0x3c
		subPeriod[10] = value;
 8001b6c:	4a06      	ldr	r2, [pc, #24]	@ (8001b88 <PWMInitialize+0x144>)
 8001b6e:	68fb      	ldr	r3, [r7, #12]
 8001b70:	6293      	str	r3, [r2, #40]	@ 0x28
		break;
 8001b72:	bf00      	nop
	return;
 8001b74:	bf00      	nop
 8001b76:	bf00      	nop
}
 8001b78:	3710      	adds	r7, #16
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}
 8001b7e:	bf00      	nop
 8001b80:	20000a4c 	.word	0x20000a4c
 8001b84:	20000a58 	.word	0x20000a58
 8001b88:	20000a68 	.word	0x20000a68
 8001b8c:	20000a54 	.word	0x20000a54
 8001b90:	20000a50 	.word	0x20000a50

08001b94 <MotorPositionForInitializingPeriod>:

void MotorPositionForInitializingPeriod(int8_t Position, uint32_t calculatedPeriod) {
 8001b94:	b480      	push	{r7}
 8001b96:	b083      	sub	sp, #12
 8001b98:	af00      	add	r7, sp, #0
 8001b9a:	4603      	mov	r3, r0
 8001b9c:	6039      	str	r1, [r7, #0]
 8001b9e:	71fb      	strb	r3, [r7, #7]
	if (Position < 5) {
 8001ba0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ba4:	2b04      	cmp	r3, #4
 8001ba6:	dc0c      	bgt.n	8001bc2 <MotorPositionForInitializingPeriod+0x2e>

		(*tim1).Instance->ARR = calculatedPeriod;
 8001ba8:	4b0f      	ldr	r3, [pc, #60]	@ (8001be8 <MotorPositionForInitializingPeriod+0x54>)
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	683a      	ldr	r2, [r7, #0]
 8001bb0:	62da      	str	r2, [r3, #44]	@ 0x2c
		// (*tim1).Init.Period = calculatedPeriod;
		period[Position-1] = calculatedPeriod;
 8001bb2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bb6:	3b01      	subs	r3, #1
 8001bb8:	490c      	ldr	r1, [pc, #48]	@ (8001bec <MotorPositionForInitializingPeriod+0x58>)
 8001bba:	683a      	ldr	r2, [r7, #0]
 8001bbc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	} else {
		(*tim8).Instance->ARR = calculatedPeriod;
		period[Position-1] = calculatedPeriod;
	}

}
 8001bc0:	e00b      	b.n	8001bda <MotorPositionForInitializingPeriod+0x46>
		(*tim8).Instance->ARR = calculatedPeriod;
 8001bc2:	4b0b      	ldr	r3, [pc, #44]	@ (8001bf0 <MotorPositionForInitializingPeriod+0x5c>)
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	683a      	ldr	r2, [r7, #0]
 8001bca:	62da      	str	r2, [r3, #44]	@ 0x2c
		period[Position-1] = calculatedPeriod;
 8001bcc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bd0:	3b01      	subs	r3, #1
 8001bd2:	4906      	ldr	r1, [pc, #24]	@ (8001bec <MotorPositionForInitializingPeriod+0x58>)
 8001bd4:	683a      	ldr	r2, [r7, #0]
 8001bd6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001bda:	bf00      	nop
 8001bdc:	370c      	adds	r7, #12
 8001bde:	46bd      	mov	sp, r7
 8001be0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be4:	4770      	bx	lr
 8001be6:	bf00      	nop
 8001be8:	20000a4c 	.word	0x20000a4c
 8001bec:	20000a94 	.word	0x20000a94
 8001bf0:	20000a58 	.word	0x20000a58

08001bf4 <initializePeriod>:

// htim1.Init.Period
void initializePeriod (TypesThatUsePWM_t Type, int8_t Position, uint32_t desiredFrequency) {
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b084      	sub	sp, #16
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	603a      	str	r2, [r7, #0]
 8001bfe:	71fb      	strb	r3, [r7, #7]
 8001c00:	460b      	mov	r3, r1
 8001c02:	71bb      	strb	r3, [r7, #6]
	uint32_t calculatedPeriod = calculateOutputPeriodToGetFrequency(Type, desiredFrequency);
 8001c04:	79fb      	ldrb	r3, [r7, #7]
 8001c06:	6839      	ldr	r1, [r7, #0]
 8001c08:	4618      	mov	r0, r3
 8001c0a:	f7ff fe31 	bl	8001870 <calculateOutputPeriodToGetFrequency>
 8001c0e:	60f8      	str	r0, [r7, #12]
	// usart_printf("%d %d\r\n", Position ,calculatedPeriod);
	switch (Type) {
 8001c10:	79fb      	ldrb	r3, [r7, #7]
 8001c12:	2b02      	cmp	r3, #2
 8001c14:	d01a      	beq.n	8001c4c <initializePeriod+0x58>
 8001c16:	2b02      	cmp	r3, #2
 8001c18:	dc22      	bgt.n	8001c60 <initializePeriod+0x6c>
 8001c1a:	2b00      	cmp	r3, #0
 8001c1c:	d002      	beq.n	8001c24 <initializePeriod+0x30>
 8001c1e:	2b01      	cmp	r3, #1
 8001c20:	d007      	beq.n	8001c32 <initializePeriod+0x3e>
		// (*tim4).Init.Period = calculatedPeriod;
		(*tim4).Instance->ARR = calculatedPeriod;
		period[10] = calculatedPeriod;
		break;
	}
	return;
 8001c22:	e01d      	b.n	8001c60 <initializePeriod+0x6c>
		MotorPositionForInitializingPeriod(Position, calculatedPeriod);
 8001c24:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001c28:	68f9      	ldr	r1, [r7, #12]
 8001c2a:	4618      	mov	r0, r3
 8001c2c:	f7ff ffb2 	bl	8001b94 <MotorPositionForInitializingPeriod>
		break;
 8001c30:	e015      	b.n	8001c5e <initializePeriod+0x6a>
		(*tim5).Instance->ARR = calculatedPeriod;
 8001c32:	4b0d      	ldr	r3, [pc, #52]	@ (8001c68 <initializePeriod+0x74>)
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	68fa      	ldr	r2, [r7, #12]
 8001c3a:	62da      	str	r2, [r3, #44]	@ 0x2c
		period[Position+6] = calculatedPeriod;
 8001c3c:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001c40:	3306      	adds	r3, #6
 8001c42:	490a      	ldr	r1, [pc, #40]	@ (8001c6c <initializePeriod+0x78>)
 8001c44:	68fa      	ldr	r2, [r7, #12]
 8001c46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		break;
 8001c4a:	e008      	b.n	8001c5e <initializePeriod+0x6a>
		(*tim4).Instance->ARR = calculatedPeriod;
 8001c4c:	4b08      	ldr	r3, [pc, #32]	@ (8001c70 <initializePeriod+0x7c>)
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	68fa      	ldr	r2, [r7, #12]
 8001c54:	62da      	str	r2, [r3, #44]	@ 0x2c
		period[10] = calculatedPeriod;
 8001c56:	4a05      	ldr	r2, [pc, #20]	@ (8001c6c <initializePeriod+0x78>)
 8001c58:	68fb      	ldr	r3, [r7, #12]
 8001c5a:	6293      	str	r3, [r2, #40]	@ 0x28
		break;
 8001c5c:	bf00      	nop
	return;
 8001c5e:	bf00      	nop
 8001c60:	bf00      	nop
}
 8001c62:	3710      	adds	r7, #16
 8001c64:	46bd      	mov	sp, r7
 8001c66:	bd80      	pop	{r7, pc}
 8001c68:	20000a54 	.word	0x20000a54
 8001c6c:	20000a94 	.word	0x20000a94
 8001c70:	20000a50 	.word	0x20000a50

08001c74 <PWMOutput>:

// (Type, Position, ms or fullrange, val)
void PWMOutput(TypesThatUsePWM_t Type, int8_t Position, uint32_t desiredFrequency) {
 8001c74:	b580      	push	{r7, lr}
 8001c76:	b082      	sub	sp, #8
 8001c78:	af00      	add	r7, sp, #0
 8001c7a:	4603      	mov	r3, r0
 8001c7c:	603a      	str	r2, [r7, #0]
 8001c7e:	71fb      	strb	r3, [r7, #7]
 8001c80:	460b      	mov	r3, r1
 8001c82:	71bb      	strb	r3, [r7, #6]

	initializePeriod(Type, Position, desiredFrequency);
 8001c84:	f997 1006 	ldrsb.w	r1, [r7, #6]
 8001c88:	79fb      	ldrb	r3, [r7, #7]
 8001c8a:	683a      	ldr	r2, [r7, #0]
 8001c8c:	4618      	mov	r0, r3
 8001c8e:	f7ff ffb1 	bl	8001bf4 <initializePeriod>

	// usart_printf("beanis3 %d\r\n", Position);
	switch (Type) {
 8001c92:	79fb      	ldrb	r3, [r7, #7]
 8001c94:	2b02      	cmp	r3, #2
 8001c96:	d014      	beq.n	8001cc2 <PWMOutput+0x4e>
 8001c98:	2b02      	cmp	r3, #2
 8001c9a:	dc16      	bgt.n	8001cca <PWMOutput+0x56>
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	d002      	beq.n	8001ca6 <PWMOutput+0x32>
 8001ca0:	2b01      	cmp	r3, #1
 8001ca2:	d007      	beq.n	8001cb4 <PWMOutput+0x40>
 8001ca4:	e011      	b.n	8001cca <PWMOutput+0x56>
	case 0:
		whichPWMisOn[Position-1] = 1;
 8001ca6:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001caa:	3b01      	subs	r3, #1
 8001cac:	4a08      	ldr	r2, [pc, #32]	@ (8001cd0 <PWMOutput+0x5c>)
 8001cae:	2101      	movs	r1, #1
 8001cb0:	54d1      	strb	r1, [r2, r3]
		// usart_printf("PWM %d\r\n", Position);
		return;
 8001cb2:	e00a      	b.n	8001cca <PWMOutput+0x56>
	case 1:
		whichPWMisOn[Position+6] = 1;
 8001cb4:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001cb8:	3306      	adds	r3, #6
 8001cba:	4a05      	ldr	r2, [pc, #20]	@ (8001cd0 <PWMOutput+0x5c>)
 8001cbc:	2101      	movs	r1, #1
 8001cbe:	54d1      	strb	r1, [r2, r3]
		// usart_printf("LED %d\r\n", Position);
		return;
 8001cc0:	e003      	b.n	8001cca <PWMOutput+0x56>
	case 2:
		whichPWMisOn[10] = 1;
 8001cc2:	4b03      	ldr	r3, [pc, #12]	@ (8001cd0 <PWMOutput+0x5c>)
 8001cc4:	2201      	movs	r2, #1
 8001cc6:	729a      	strb	r2, [r3, #10]
		// usart_printf("Buzzer %d\r\n", Position);
		return;
 8001cc8:	bf00      	nop
	}
	// whichPWMisOn[7]= 1;
	// usart_printf("beanis7 %d %d\r\n", Position, whichPWMisOn[Position-1]);
	// return;
}
 8001cca:	3708      	adds	r7, #8
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	bd80      	pop	{r7, pc}
 8001cd0:	20000a5c 	.word	0x20000a5c

08001cd4 <mainPrint>:
int32_t frequency[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
int32_t subPeriod[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
int32_t period[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
*/

void mainPrint() {
 8001cd4:	b480      	push	{r7}
 8001cd6:	af00      	add	r7, sp, #0
	usart_printf("          |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  1  |  2  |  3  |   1    |\r\n");
	*/
	// usart_printf("Is it on? |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |\r\n", whichPWMisOn[0], whichPWMisOn[1], whichPWMisOn[2], whichPWMisOn[3], whichPWMisOn[4], whichPWMisOn[5], whichPWMisOn[6], whichPWMisOn[7], whichPWMisOn[8], whichPWMisOn[9], whichPWMisOn[10]);

	// usart_printf("||| %d | %d | %d \r\n", whichPWMisOn[10], period[10], subPeriod[10]);
}
 8001cd8:	bf00      	nop
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce0:	4770      	bx	lr
	...

08001ce4 <PWMTimerStarter>:

void PWMTimerStarter() {
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b082      	sub	sp, #8
 8001ce8:	af00      	add	r7, sp, #0
	for (int i = 0; i < 11; i++) {
 8001cea:	2300      	movs	r3, #0
 8001cec:	607b      	str	r3, [r7, #4]
 8001cee:	e0f1      	b.n	8001ed4 <PWMTimerStarter+0x1f0>
		switch (i) {
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	2b0a      	cmp	r3, #10
 8001cf4:	f200 80eb 	bhi.w	8001ece <PWMTimerStarter+0x1ea>
 8001cf8:	a201      	add	r2, pc, #4	@ (adr r2, 8001d00 <PWMTimerStarter+0x1c>)
 8001cfa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cfe:	bf00      	nop
 8001d00:	08001d2d 	.word	0x08001d2d
 8001d04:	08001d53 	.word	0x08001d53
 8001d08:	08001d79 	.word	0x08001d79
 8001d0c:	08001d9f 	.word	0x08001d9f
 8001d10:	08001dc5 	.word	0x08001dc5
 8001d14:	08001deb 	.word	0x08001deb
 8001d18:	08001e11 	.word	0x08001e11
 8001d1c:	08001e37 	.word	0x08001e37
 8001d20:	08001e5d 	.word	0x08001e5d
 8001d24:	08001e83 	.word	0x08001e83
 8001d28:	08001ea9 	.word	0x08001ea9
		case 0:
			if (whichPWMisOn[0] == 1) {
 8001d2c:	4b6e      	ldr	r3, [pc, #440]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001d2e:	f993 3000 	ldrsb.w	r3, [r3]
 8001d32:	2b01      	cmp	r3, #1
 8001d34:	d106      	bne.n	8001d44 <PWMTimerStarter+0x60>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_1);
 8001d36:	4b6d      	ldr	r3, [pc, #436]	@ (8001eec <PWMTimerStarter+0x208>)
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	2100      	movs	r1, #0
 8001d3c:	4618      	mov	r0, r3
 8001d3e:	f003 fa57 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_1);
			}
			break;
 8001d42:	e0c4      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_1);
 8001d44:	4b69      	ldr	r3, [pc, #420]	@ (8001eec <PWMTimerStarter+0x208>)
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	2100      	movs	r1, #0
 8001d4a:	4618      	mov	r0, r3
 8001d4c:	f003 fb18 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001d50:	e0bd      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 1:
			if (whichPWMisOn[1] == 1) {
 8001d52:	4b65      	ldr	r3, [pc, #404]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001d54:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8001d58:	2b01      	cmp	r3, #1
 8001d5a:	d106      	bne.n	8001d6a <PWMTimerStarter+0x86>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_2);
 8001d5c:	4b63      	ldr	r3, [pc, #396]	@ (8001eec <PWMTimerStarter+0x208>)
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	2104      	movs	r1, #4
 8001d62:	4618      	mov	r0, r3
 8001d64:	f003 fa44 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_2);
			}
			break;
 8001d68:	e0b1      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_2);
 8001d6a:	4b60      	ldr	r3, [pc, #384]	@ (8001eec <PWMTimerStarter+0x208>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	2104      	movs	r1, #4
 8001d70:	4618      	mov	r0, r3
 8001d72:	f003 fb05 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001d76:	e0aa      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 2:
			if (whichPWMisOn[2] == 1) {
 8001d78:	4b5b      	ldr	r3, [pc, #364]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001d7a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8001d7e:	2b01      	cmp	r3, #1
 8001d80:	d106      	bne.n	8001d90 <PWMTimerStarter+0xac>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_3);
 8001d82:	4b5a      	ldr	r3, [pc, #360]	@ (8001eec <PWMTimerStarter+0x208>)
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	2108      	movs	r1, #8
 8001d88:	4618      	mov	r0, r3
 8001d8a:	f003 fa31 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_3);
			}
			break;
 8001d8e:	e09e      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_3);
 8001d90:	4b56      	ldr	r3, [pc, #344]	@ (8001eec <PWMTimerStarter+0x208>)
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	2108      	movs	r1, #8
 8001d96:	4618      	mov	r0, r3
 8001d98:	f003 faf2 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001d9c:	e097      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 3:
			if (whichPWMisOn[3] == 1) {
 8001d9e:	4b52      	ldr	r3, [pc, #328]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001da0:	f993 3003 	ldrsb.w	r3, [r3, #3]
 8001da4:	2b01      	cmp	r3, #1
 8001da6:	d106      	bne.n	8001db6 <PWMTimerStarter+0xd2>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_4);
 8001da8:	4b50      	ldr	r3, [pc, #320]	@ (8001eec <PWMTimerStarter+0x208>)
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	210c      	movs	r1, #12
 8001dae:	4618      	mov	r0, r3
 8001db0:	f003 fa1e 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_4);
			}
			break;
 8001db4:	e08b      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_4);
 8001db6:	4b4d      	ldr	r3, [pc, #308]	@ (8001eec <PWMTimerStarter+0x208>)
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	210c      	movs	r1, #12
 8001dbc:	4618      	mov	r0, r3
 8001dbe:	f003 fadf 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001dc2:	e084      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 4:
			if (whichPWMisOn[4] == 1) {
 8001dc4:	4b48      	ldr	r3, [pc, #288]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001dc6:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8001dca:	2b01      	cmp	r3, #1
 8001dcc:	d106      	bne.n	8001ddc <PWMTimerStarter+0xf8>
				HAL_TIM_PWM_Start(tim8, TIM_CHANNEL_1);
 8001dce:	4b48      	ldr	r3, [pc, #288]	@ (8001ef0 <PWMTimerStarter+0x20c>)
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	2100      	movs	r1, #0
 8001dd4:	4618      	mov	r0, r3
 8001dd6:	f003 fa0b 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_1);
			}
			break;
 8001dda:	e078      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_1);
 8001ddc:	4b44      	ldr	r3, [pc, #272]	@ (8001ef0 <PWMTimerStarter+0x20c>)
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	2100      	movs	r1, #0
 8001de2:	4618      	mov	r0, r3
 8001de4:	f003 facc 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001de8:	e071      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 5:
			if (whichPWMisOn[5] == 1) {
 8001dea:	4b3f      	ldr	r3, [pc, #252]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001dec:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8001df0:	2b01      	cmp	r3, #1
 8001df2:	d106      	bne.n	8001e02 <PWMTimerStarter+0x11e>
				HAL_TIM_PWM_Start(tim8, TIM_CHANNEL_2);
 8001df4:	4b3e      	ldr	r3, [pc, #248]	@ (8001ef0 <PWMTimerStarter+0x20c>)
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	2104      	movs	r1, #4
 8001dfa:	4618      	mov	r0, r3
 8001dfc:	f003 f9f8 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_2);
			}
			break;
 8001e00:	e065      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_2);
 8001e02:	4b3b      	ldr	r3, [pc, #236]	@ (8001ef0 <PWMTimerStarter+0x20c>)
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	2104      	movs	r1, #4
 8001e08:	4618      	mov	r0, r3
 8001e0a:	f003 fab9 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001e0e:	e05e      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 6:
			if (whichPWMisOn[6] == 1) {
 8001e10:	4b35      	ldr	r3, [pc, #212]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001e12:	f993 3006 	ldrsb.w	r3, [r3, #6]
 8001e16:	2b01      	cmp	r3, #1
 8001e18:	d106      	bne.n	8001e28 <PWMTimerStarter+0x144>
				HAL_TIM_PWM_Start(tim8, TIM_CHANNEL_3);
 8001e1a:	4b35      	ldr	r3, [pc, #212]	@ (8001ef0 <PWMTimerStarter+0x20c>)
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	2108      	movs	r1, #8
 8001e20:	4618      	mov	r0, r3
 8001e22:	f003 f9e5 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_3);
			}
			break;
 8001e26:	e052      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_3);
 8001e28:	4b31      	ldr	r3, [pc, #196]	@ (8001ef0 <PWMTimerStarter+0x20c>)
 8001e2a:	681b      	ldr	r3, [r3, #0]
 8001e2c:	2108      	movs	r1, #8
 8001e2e:	4618      	mov	r0, r3
 8001e30:	f003 faa6 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001e34:	e04b      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 7:
			if (whichPWMisOn[7] == 1) {
 8001e36:	4b2c      	ldr	r3, [pc, #176]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001e38:	f993 3007 	ldrsb.w	r3, [r3, #7]
 8001e3c:	2b01      	cmp	r3, #1
 8001e3e:	d106      	bne.n	8001e4e <PWMTimerStarter+0x16a>
				HAL_TIM_PWM_Start(tim5, TIM_CHANNEL_1);
 8001e40:	4b2c      	ldr	r3, [pc, #176]	@ (8001ef4 <PWMTimerStarter+0x210>)
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	2100      	movs	r1, #0
 8001e46:	4618      	mov	r0, r3
 8001e48:	f003 f9d2 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_1);
			}
			break;
 8001e4c:	e03f      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_1);
 8001e4e:	4b29      	ldr	r3, [pc, #164]	@ (8001ef4 <PWMTimerStarter+0x210>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	2100      	movs	r1, #0
 8001e54:	4618      	mov	r0, r3
 8001e56:	f003 fa93 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001e5a:	e038      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 8:
			if (whichPWMisOn[8] == 1) {
 8001e5c:	4b22      	ldr	r3, [pc, #136]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001e5e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8001e62:	2b01      	cmp	r3, #1
 8001e64:	d106      	bne.n	8001e74 <PWMTimerStarter+0x190>
				HAL_TIM_PWM_Start(tim5, TIM_CHANNEL_2);
 8001e66:	4b23      	ldr	r3, [pc, #140]	@ (8001ef4 <PWMTimerStarter+0x210>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	2104      	movs	r1, #4
 8001e6c:	4618      	mov	r0, r3
 8001e6e:	f003 f9bf 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_2);
			}
			break;
 8001e72:	e02c      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_2);
 8001e74:	4b1f      	ldr	r3, [pc, #124]	@ (8001ef4 <PWMTimerStarter+0x210>)
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	2104      	movs	r1, #4
 8001e7a:	4618      	mov	r0, r3
 8001e7c:	f003 fa80 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001e80:	e025      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 9:
			if (whichPWMisOn[9] == 1) {
 8001e82:	4b19      	ldr	r3, [pc, #100]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001e84:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8001e88:	2b01      	cmp	r3, #1
 8001e8a:	d106      	bne.n	8001e9a <PWMTimerStarter+0x1b6>
				HAL_TIM_PWM_Start(tim5, TIM_CHANNEL_3);
 8001e8c:	4b19      	ldr	r3, [pc, #100]	@ (8001ef4 <PWMTimerStarter+0x210>)
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	2108      	movs	r1, #8
 8001e92:	4618      	mov	r0, r3
 8001e94:	f003 f9ac 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_3);
			}
			// usart_printf("Returned1\r\n");
			break;
 8001e98:	e019      	b.n	8001ece <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_3);
 8001e9a:	4b16      	ldr	r3, [pc, #88]	@ (8001ef4 <PWMTimerStarter+0x210>)
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	2108      	movs	r1, #8
 8001ea0:	4618      	mov	r0, r3
 8001ea2:	f003 fa6d 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001ea6:	e012      	b.n	8001ece <PWMTimerStarter+0x1ea>
		case 10:
			if (whichPWMisOn[10] == 1) {
 8001ea8:	4b0f      	ldr	r3, [pc, #60]	@ (8001ee8 <PWMTimerStarter+0x204>)
 8001eaa:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8001eae:	2b01      	cmp	r3, #1
 8001eb0:	d106      	bne.n	8001ec0 <PWMTimerStarter+0x1dc>
				HAL_TIM_PWM_Start(tim4, TIM_CHANNEL_3);
 8001eb2:	4b11      	ldr	r3, [pc, #68]	@ (8001ef8 <PWMTimerStarter+0x214>)
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	2108      	movs	r1, #8
 8001eb8:	4618      	mov	r0, r3
 8001eba:	f003 f999 	bl	80051f0 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim4, TIM_CHANNEL_3);
			}
			// usart_printf("Returned2\r\n");
			break;
 8001ebe:	e005      	b.n	8001ecc <PWMTimerStarter+0x1e8>
				HAL_TIM_PWM_Stop(tim4, TIM_CHANNEL_3);
 8001ec0:	4b0d      	ldr	r3, [pc, #52]	@ (8001ef8 <PWMTimerStarter+0x214>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	2108      	movs	r1, #8
 8001ec6:	4618      	mov	r0, r3
 8001ec8:	f003 fa5a 	bl	8005380 <HAL_TIM_PWM_Stop>
			break;
 8001ecc:	bf00      	nop
	for (int i = 0; i < 11; i++) {
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	3301      	adds	r3, #1
 8001ed2:	607b      	str	r3, [r7, #4]
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	2b0a      	cmp	r3, #10
 8001ed8:	f77f af0a 	ble.w	8001cf0 <PWMTimerStarter+0xc>
		}
	}
}
 8001edc:	bf00      	nop
 8001ede:	bf00      	nop
 8001ee0:	3708      	adds	r7, #8
 8001ee2:	46bd      	mov	sp, r7
 8001ee4:	bd80      	pop	{r7, pc}
 8001ee6:	bf00      	nop
 8001ee8:	20000a5c 	.word	0x20000a5c
 8001eec:	20000a4c 	.word	0x20000a4c
 8001ef0:	20000a58 	.word	0x20000a58
 8001ef4:	20000a54 	.word	0x20000a54
 8001ef8:	20000a50 	.word	0x20000a50

08001efc <initializeCaliforniaGirls>:
uint8_t HD3Notes[46] = {4, 5, 6, 14, 6, 4, 14, 4, 1, 14, 1, 14, 1, 14, 1, 4, 1, 4, 6, 5, 14, 5, 4, 14, 4, 6, 4, 6, 8, 7, 14, 7, 6, 5, 6, 14, 6, 14, 6, 5, 14, 5, 14, 5, 4};
uint8_t HD1Rests[45] = {10, 10, 20, 19, 1, 19, 1, 10, 29, 1, 40, 40, 20, 10, 20, 110, 10, 10, 10, 10, 10, 10, 10, 9, 1, 9, 1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 40, 39, 1, 39, 1, 20};
uint8_t HD2Rests[39] = {10, 10, 40, 40, 59, 1, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 10, 10, 9, 1, 9, 1, 20, 9, 1, 9, 1, 20, 60};
uint8_t HD3Rests[46] = {10, 10, 19, 1, 20, 19, 1, 20, 29, 1, 29, 1, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 10, 10, 9, 1, 9, 1, 20, 9, 1, 9, 1, 20, 60};

void initializeCaliforniaGirls() {
 8001efc:	b480      	push	{r7}
 8001efe:	af00      	add	r7, sp, #0
	songProgress = 0;
 8001f00:	4b06      	ldr	r3, [pc, #24]	@ (8001f1c <initializeCaliforniaGirls+0x20>)
 8001f02:	2200      	movs	r2, #0
 8001f04:	701a      	strb	r2, [r3, #0]
	timeTracker = 0;
 8001f06:	4b06      	ldr	r3, [pc, #24]	@ (8001f20 <initializeCaliforniaGirls+0x24>)
 8001f08:	2200      	movs	r2, #0
 8001f0a:	801a      	strh	r2, [r3, #0]
	noteTracker = 0;
 8001f0c:	4b05      	ldr	r3, [pc, #20]	@ (8001f24 <initializeCaliforniaGirls+0x28>)
 8001f0e:	2200      	movs	r2, #0
 8001f10:	801a      	strh	r2, [r3, #0]
}
 8001f12:	bf00      	nop
 8001f14:	46bd      	mov	sp, r7
 8001f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f1a:	4770      	bx	lr
 8001f1c:	20000ac0 	.word	0x20000ac0
 8001f20:	20000ac2 	.word	0x20000ac2
 8001f24:	20000ac4 	.word	0x20000ac4

08001f28 <HampsterNotes>:

uint32_t HampsterNotes() {
 8001f28:	b480      	push	{r7}
 8001f2a:	b083      	sub	sp, #12
 8001f2c:	af00      	add	r7, sp, #0
	uint32_t actualFrequency = 0;
 8001f2e:	2300      	movs	r3, #0
 8001f30:	607b      	str	r3, [r7, #4]
	if (songProgress == 0 || songProgress == 1) {
 8001f32:	4b4c      	ldr	r3, [pc, #304]	@ (8002064 <HampsterNotes+0x13c>)
 8001f34:	781b      	ldrb	r3, [r3, #0]
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d003      	beq.n	8001f42 <HampsterNotes+0x1a>
 8001f3a:	4b4a      	ldr	r3, [pc, #296]	@ (8002064 <HampsterNotes+0x13c>)
 8001f3c:	781b      	ldrb	r3, [r3, #0]
 8001f3e:	2b01      	cmp	r3, #1
 8001f40:	d12f      	bne.n	8001fa2 <HampsterNotes+0x7a>
		if (timeTracker > HD1Rests[noteTracker]) {
 8001f42:	4b49      	ldr	r3, [pc, #292]	@ (8002068 <HampsterNotes+0x140>)
 8001f44:	881b      	ldrh	r3, [r3, #0]
 8001f46:	461a      	mov	r2, r3
 8001f48:	4b48      	ldr	r3, [pc, #288]	@ (800206c <HampsterNotes+0x144>)
 8001f4a:	5c9b      	ldrb	r3, [r3, r2]
 8001f4c:	461a      	mov	r2, r3
 8001f4e:	4b48      	ldr	r3, [pc, #288]	@ (8002070 <HampsterNotes+0x148>)
 8001f50:	881b      	ldrh	r3, [r3, #0]
 8001f52:	429a      	cmp	r2, r3
 8001f54:	d208      	bcs.n	8001f68 <HampsterNotes+0x40>
			noteTracker++;
 8001f56:	4b44      	ldr	r3, [pc, #272]	@ (8002068 <HampsterNotes+0x140>)
 8001f58:	881b      	ldrh	r3, [r3, #0]
 8001f5a:	3301      	adds	r3, #1
 8001f5c:	b29a      	uxth	r2, r3
 8001f5e:	4b42      	ldr	r3, [pc, #264]	@ (8002068 <HampsterNotes+0x140>)
 8001f60:	801a      	strh	r2, [r3, #0]
			timeTracker = 0;
 8001f62:	4b43      	ldr	r3, [pc, #268]	@ (8002070 <HampsterNotes+0x148>)
 8001f64:	2200      	movs	r2, #0
 8001f66:	801a      	strh	r2, [r3, #0]
		}

		if (noteTracker > 44) {
 8001f68:	4b3f      	ldr	r3, [pc, #252]	@ (8002068 <HampsterNotes+0x140>)
 8001f6a:	881b      	ldrh	r3, [r3, #0]
 8001f6c:	2b2c      	cmp	r3, #44	@ 0x2c
 8001f6e:	d90d      	bls.n	8001f8c <HampsterNotes+0x64>
			noteTracker = 0;
 8001f70:	4b3d      	ldr	r3, [pc, #244]	@ (8002068 <HampsterNotes+0x140>)
 8001f72:	2200      	movs	r2, #0
 8001f74:	801a      	strh	r2, [r3, #0]
			if (songProgress == 0) {
 8001f76:	4b3b      	ldr	r3, [pc, #236]	@ (8002064 <HampsterNotes+0x13c>)
 8001f78:	781b      	ldrb	r3, [r3, #0]
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d103      	bne.n	8001f86 <HampsterNotes+0x5e>
				songProgress = 1;
 8001f7e:	4b39      	ldr	r3, [pc, #228]	@ (8002064 <HampsterNotes+0x13c>)
 8001f80:	2201      	movs	r2, #1
 8001f82:	701a      	strb	r2, [r3, #0]
 8001f84:	e002      	b.n	8001f8c <HampsterNotes+0x64>
			} else {
				songProgress = 2;
 8001f86:	4b37      	ldr	r3, [pc, #220]	@ (8002064 <HampsterNotes+0x13c>)
 8001f88:	2202      	movs	r2, #2
 8001f8a:	701a      	strb	r2, [r3, #0]
			}
		}
		actualFrequency =  frequencyEMajorAtA5[HD1Notes[noteTracker]];
 8001f8c:	4b36      	ldr	r3, [pc, #216]	@ (8002068 <HampsterNotes+0x140>)
 8001f8e:	881b      	ldrh	r3, [r3, #0]
 8001f90:	461a      	mov	r2, r3
 8001f92:	4b38      	ldr	r3, [pc, #224]	@ (8002074 <HampsterNotes+0x14c>)
 8001f94:	5c9b      	ldrb	r3, [r3, r2]
 8001f96:	461a      	mov	r2, r3
 8001f98:	4b37      	ldr	r3, [pc, #220]	@ (8002078 <HampsterNotes+0x150>)
 8001f9a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f9e:	607b      	str	r3, [r7, #4]
 8001fa0:	e052      	b.n	8002048 <HampsterNotes+0x120>
	} else if (songProgress == 2){
 8001fa2:	4b30      	ldr	r3, [pc, #192]	@ (8002064 <HampsterNotes+0x13c>)
 8001fa4:	781b      	ldrb	r3, [r3, #0]
 8001fa6:	2b02      	cmp	r3, #2
 8001fa8:	d127      	bne.n	8001ffa <HampsterNotes+0xd2>
		if (timeTracker > HD2Rests[noteTracker]) {
 8001faa:	4b2f      	ldr	r3, [pc, #188]	@ (8002068 <HampsterNotes+0x140>)
 8001fac:	881b      	ldrh	r3, [r3, #0]
 8001fae:	461a      	mov	r2, r3
 8001fb0:	4b32      	ldr	r3, [pc, #200]	@ (800207c <HampsterNotes+0x154>)
 8001fb2:	5c9b      	ldrb	r3, [r3, r2]
 8001fb4:	461a      	mov	r2, r3
 8001fb6:	4b2e      	ldr	r3, [pc, #184]	@ (8002070 <HampsterNotes+0x148>)
 8001fb8:	881b      	ldrh	r3, [r3, #0]
 8001fba:	429a      	cmp	r2, r3
 8001fbc:	d208      	bcs.n	8001fd0 <HampsterNotes+0xa8>
			noteTracker++;
 8001fbe:	4b2a      	ldr	r3, [pc, #168]	@ (8002068 <HampsterNotes+0x140>)
 8001fc0:	881b      	ldrh	r3, [r3, #0]
 8001fc2:	3301      	adds	r3, #1
 8001fc4:	b29a      	uxth	r2, r3
 8001fc6:	4b28      	ldr	r3, [pc, #160]	@ (8002068 <HampsterNotes+0x140>)
 8001fc8:	801a      	strh	r2, [r3, #0]
			timeTracker = 0;
 8001fca:	4b29      	ldr	r3, [pc, #164]	@ (8002070 <HampsterNotes+0x148>)
 8001fcc:	2200      	movs	r2, #0
 8001fce:	801a      	strh	r2, [r3, #0]
		}

		if (noteTracker > 38) {
 8001fd0:	4b25      	ldr	r3, [pc, #148]	@ (8002068 <HampsterNotes+0x140>)
 8001fd2:	881b      	ldrh	r3, [r3, #0]
 8001fd4:	2b26      	cmp	r3, #38	@ 0x26
 8001fd6:	d905      	bls.n	8001fe4 <HampsterNotes+0xbc>
			songProgress = 3;
 8001fd8:	4b22      	ldr	r3, [pc, #136]	@ (8002064 <HampsterNotes+0x13c>)
 8001fda:	2203      	movs	r2, #3
 8001fdc:	701a      	strb	r2, [r3, #0]
			noteTracker = 0;
 8001fde:	4b22      	ldr	r3, [pc, #136]	@ (8002068 <HampsterNotes+0x140>)
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	801a      	strh	r2, [r3, #0]
		}
		actualFrequency = frequencyEMajorAtA5[HD2Notes[noteTracker]];
 8001fe4:	4b20      	ldr	r3, [pc, #128]	@ (8002068 <HampsterNotes+0x140>)
 8001fe6:	881b      	ldrh	r3, [r3, #0]
 8001fe8:	461a      	mov	r2, r3
 8001fea:	4b25      	ldr	r3, [pc, #148]	@ (8002080 <HampsterNotes+0x158>)
 8001fec:	5c9b      	ldrb	r3, [r3, r2]
 8001fee:	461a      	mov	r2, r3
 8001ff0:	4b21      	ldr	r3, [pc, #132]	@ (8002078 <HampsterNotes+0x150>)
 8001ff2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ff6:	607b      	str	r3, [r7, #4]
 8001ff8:	e026      	b.n	8002048 <HampsterNotes+0x120>
	} else {
		if (timeTracker > HD3Rests[noteTracker]) {
 8001ffa:	4b1b      	ldr	r3, [pc, #108]	@ (8002068 <HampsterNotes+0x140>)
 8001ffc:	881b      	ldrh	r3, [r3, #0]
 8001ffe:	461a      	mov	r2, r3
 8002000:	4b20      	ldr	r3, [pc, #128]	@ (8002084 <HampsterNotes+0x15c>)
 8002002:	5c9b      	ldrb	r3, [r3, r2]
 8002004:	461a      	mov	r2, r3
 8002006:	4b1a      	ldr	r3, [pc, #104]	@ (8002070 <HampsterNotes+0x148>)
 8002008:	881b      	ldrh	r3, [r3, #0]
 800200a:	429a      	cmp	r2, r3
 800200c:	d208      	bcs.n	8002020 <HampsterNotes+0xf8>
			noteTracker++;
 800200e:	4b16      	ldr	r3, [pc, #88]	@ (8002068 <HampsterNotes+0x140>)
 8002010:	881b      	ldrh	r3, [r3, #0]
 8002012:	3301      	adds	r3, #1
 8002014:	b29a      	uxth	r2, r3
 8002016:	4b14      	ldr	r3, [pc, #80]	@ (8002068 <HampsterNotes+0x140>)
 8002018:	801a      	strh	r2, [r3, #0]
			timeTracker = 0;
 800201a:	4b15      	ldr	r3, [pc, #84]	@ (8002070 <HampsterNotes+0x148>)
 800201c:	2200      	movs	r2, #0
 800201e:	801a      	strh	r2, [r3, #0]
		}

		if (noteTracker > 45) {
 8002020:	4b11      	ldr	r3, [pc, #68]	@ (8002068 <HampsterNotes+0x140>)
 8002022:	881b      	ldrh	r3, [r3, #0]
 8002024:	2b2d      	cmp	r3, #45	@ 0x2d
 8002026:	d905      	bls.n	8002034 <HampsterNotes+0x10c>
			songProgress = 0;
 8002028:	4b0e      	ldr	r3, [pc, #56]	@ (8002064 <HampsterNotes+0x13c>)
 800202a:	2200      	movs	r2, #0
 800202c:	701a      	strb	r2, [r3, #0]
			noteTracker = 0;
 800202e:	4b0e      	ldr	r3, [pc, #56]	@ (8002068 <HampsterNotes+0x140>)
 8002030:	2200      	movs	r2, #0
 8002032:	801a      	strh	r2, [r3, #0]
		}
		actualFrequency = frequencyEMajorAtA5[HD3Notes[noteTracker]];
 8002034:	4b0c      	ldr	r3, [pc, #48]	@ (8002068 <HampsterNotes+0x140>)
 8002036:	881b      	ldrh	r3, [r3, #0]
 8002038:	461a      	mov	r2, r3
 800203a:	4b13      	ldr	r3, [pc, #76]	@ (8002088 <HampsterNotes+0x160>)
 800203c:	5c9b      	ldrb	r3, [r3, r2]
 800203e:	461a      	mov	r2, r3
 8002040:	4b0d      	ldr	r3, [pc, #52]	@ (8002078 <HampsterNotes+0x150>)
 8002042:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002046:	607b      	str	r3, [r7, #4]
	}
	timeTracker++;
 8002048:	4b09      	ldr	r3, [pc, #36]	@ (8002070 <HampsterNotes+0x148>)
 800204a:	881b      	ldrh	r3, [r3, #0]
 800204c:	3301      	adds	r3, #1
 800204e:	b29a      	uxth	r2, r3
 8002050:	4b07      	ldr	r3, [pc, #28]	@ (8002070 <HampsterNotes+0x148>)
 8002052:	801a      	strh	r2, [r3, #0]
	return actualFrequency;
 8002054:	687b      	ldr	r3, [r7, #4]

}
 8002056:	4618      	mov	r0, r3
 8002058:	370c      	adds	r7, #12
 800205a:	46bd      	mov	sp, r7
 800205c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002060:	4770      	bx	lr
 8002062:	bf00      	nop
 8002064:	20000ac0 	.word	0x20000ac0
 8002068:	20000ac4 	.word	0x20000ac4
 800206c:	200000c4 	.word	0x200000c4
 8002070:	20000ac2 	.word	0x20000ac2
 8002074:	2000003c 	.word	0x2000003c
 8002078:	20000000 	.word	0x20000000
 800207c:	200000f4 	.word	0x200000f4
 8002080:	2000006c 	.word	0x2000006c
 8002084:	2000011c 	.word	0x2000011c
 8002088:	20000094 	.word	0x20000094

0800208c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800208c:	b580      	push	{r7, lr}
 800208e:	b082      	sub	sp, #8
 8002090:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002092:	2300      	movs	r3, #0
 8002094:	607b      	str	r3, [r7, #4]
 8002096:	4b12      	ldr	r3, [pc, #72]	@ (80020e0 <HAL_MspInit+0x54>)
 8002098:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800209a:	4a11      	ldr	r2, [pc, #68]	@ (80020e0 <HAL_MspInit+0x54>)
 800209c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80020a0:	6453      	str	r3, [r2, #68]	@ 0x44
 80020a2:	4b0f      	ldr	r3, [pc, #60]	@ (80020e0 <HAL_MspInit+0x54>)
 80020a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020a6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80020aa:	607b      	str	r3, [r7, #4]
 80020ac:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80020ae:	2300      	movs	r3, #0
 80020b0:	603b      	str	r3, [r7, #0]
 80020b2:	4b0b      	ldr	r3, [pc, #44]	@ (80020e0 <HAL_MspInit+0x54>)
 80020b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020b6:	4a0a      	ldr	r2, [pc, #40]	@ (80020e0 <HAL_MspInit+0x54>)
 80020b8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80020bc:	6413      	str	r3, [r2, #64]	@ 0x40
 80020be:	4b08      	ldr	r3, [pc, #32]	@ (80020e0 <HAL_MspInit+0x54>)
 80020c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020c2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020c6:	603b      	str	r3, [r7, #0]
 80020c8:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80020ca:	2200      	movs	r2, #0
 80020cc:	210f      	movs	r1, #15
 80020ce:	f06f 0001 	mvn.w	r0, #1
 80020d2:	f001 fb0e 	bl	80036f2 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80020d6:	bf00      	nop
 80020d8:	3708      	adds	r7, #8
 80020da:	46bd      	mov	sp, r7
 80020dc:	bd80      	pop	{r7, pc}
 80020de:	bf00      	nop
 80020e0:	40023800 	.word	0x40023800

080020e4 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 80020e4:	b580      	push	{r7, lr}
 80020e6:	b08c      	sub	sp, #48	@ 0x30
 80020e8:	af00      	add	r7, sp, #0
 80020ea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020ec:	f107 031c 	add.w	r3, r7, #28
 80020f0:	2200      	movs	r2, #0
 80020f2:	601a      	str	r2, [r3, #0]
 80020f4:	605a      	str	r2, [r3, #4]
 80020f6:	609a      	str	r2, [r3, #8]
 80020f8:	60da      	str	r2, [r3, #12]
 80020fa:	611a      	str	r2, [r3, #16]
  if(hcan->Instance==CAN1)
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	4a4a      	ldr	r2, [pc, #296]	@ (800222c <HAL_CAN_MspInit+0x148>)
 8002102:	4293      	cmp	r3, r2
 8002104:	d13d      	bne.n	8002182 <HAL_CAN_MspInit+0x9e>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_CAN1_CLK_ENABLED++;
 8002106:	4b4a      	ldr	r3, [pc, #296]	@ (8002230 <HAL_CAN_MspInit+0x14c>)
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	3301      	adds	r3, #1
 800210c:	4a48      	ldr	r2, [pc, #288]	@ (8002230 <HAL_CAN_MspInit+0x14c>)
 800210e:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_CAN1_CLK_ENABLED==1){
 8002110:	4b47      	ldr	r3, [pc, #284]	@ (8002230 <HAL_CAN_MspInit+0x14c>)
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	2b01      	cmp	r3, #1
 8002116:	d10d      	bne.n	8002134 <HAL_CAN_MspInit+0x50>
      __HAL_RCC_CAN1_CLK_ENABLE();
 8002118:	2300      	movs	r3, #0
 800211a:	61bb      	str	r3, [r7, #24]
 800211c:	4b45      	ldr	r3, [pc, #276]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 800211e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002120:	4a44      	ldr	r2, [pc, #272]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 8002122:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002126:	6413      	str	r3, [r2, #64]	@ 0x40
 8002128:	4b42      	ldr	r3, [pc, #264]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 800212a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800212c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002130:	61bb      	str	r3, [r7, #24]
 8002132:	69bb      	ldr	r3, [r7, #24]
    }

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002134:	2300      	movs	r3, #0
 8002136:	617b      	str	r3, [r7, #20]
 8002138:	4b3e      	ldr	r3, [pc, #248]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 800213a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800213c:	4a3d      	ldr	r2, [pc, #244]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 800213e:	f043 0308 	orr.w	r3, r3, #8
 8002142:	6313      	str	r3, [r2, #48]	@ 0x30
 8002144:	4b3b      	ldr	r3, [pc, #236]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 8002146:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002148:	f003 0308 	and.w	r3, r3, #8
 800214c:	617b      	str	r3, [r7, #20]
 800214e:	697b      	ldr	r3, [r7, #20]
    /**CAN1 GPIO Configuration
    PD0     ------> CAN1_RX
    PD1     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002150:	2303      	movs	r3, #3
 8002152:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002154:	2302      	movs	r3, #2
 8002156:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002158:	2300      	movs	r3, #0
 800215a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800215c:	2303      	movs	r3, #3
 800215e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 8002160:	2309      	movs	r3, #9
 8002162:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002164:	f107 031c 	add.w	r3, r7, #28
 8002168:	4619      	mov	r1, r3
 800216a:	4833      	ldr	r0, [pc, #204]	@ (8002238 <HAL_CAN_MspInit+0x154>)
 800216c:	f001 fefa 	bl	8003f64 <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 5, 0);
 8002170:	2200      	movs	r2, #0
 8002172:	2105      	movs	r1, #5
 8002174:	2014      	movs	r0, #20
 8002176:	f001 fabc 	bl	80036f2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 800217a:	2014      	movs	r0, #20
 800217c:	f001 fad5 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN2_MspInit 1 */

  /* USER CODE END CAN2_MspInit 1 */
  }

}
 8002180:	e04f      	b.n	8002222 <HAL_CAN_MspInit+0x13e>
  else if(hcan->Instance==CAN2)
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	4a2d      	ldr	r2, [pc, #180]	@ (800223c <HAL_CAN_MspInit+0x158>)
 8002188:	4293      	cmp	r3, r2
 800218a:	d14a      	bne.n	8002222 <HAL_CAN_MspInit+0x13e>
    __HAL_RCC_CAN2_CLK_ENABLE();
 800218c:	2300      	movs	r3, #0
 800218e:	613b      	str	r3, [r7, #16]
 8002190:	4b28      	ldr	r3, [pc, #160]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 8002192:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002194:	4a27      	ldr	r2, [pc, #156]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 8002196:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800219a:	6413      	str	r3, [r2, #64]	@ 0x40
 800219c:	4b25      	ldr	r3, [pc, #148]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 800219e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021a0:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80021a4:	613b      	str	r3, [r7, #16]
 80021a6:	693b      	ldr	r3, [r7, #16]
    HAL_RCC_CAN1_CLK_ENABLED++;
 80021a8:	4b21      	ldr	r3, [pc, #132]	@ (8002230 <HAL_CAN_MspInit+0x14c>)
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	3301      	adds	r3, #1
 80021ae:	4a20      	ldr	r2, [pc, #128]	@ (8002230 <HAL_CAN_MspInit+0x14c>)
 80021b0:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_CAN1_CLK_ENABLED==1){
 80021b2:	4b1f      	ldr	r3, [pc, #124]	@ (8002230 <HAL_CAN_MspInit+0x14c>)
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	2b01      	cmp	r3, #1
 80021b8:	d10d      	bne.n	80021d6 <HAL_CAN_MspInit+0xf2>
      __HAL_RCC_CAN1_CLK_ENABLE();
 80021ba:	2300      	movs	r3, #0
 80021bc:	60fb      	str	r3, [r7, #12]
 80021be:	4b1d      	ldr	r3, [pc, #116]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 80021c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021c2:	4a1c      	ldr	r2, [pc, #112]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 80021c4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80021c8:	6413      	str	r3, [r2, #64]	@ 0x40
 80021ca:	4b1a      	ldr	r3, [pc, #104]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 80021cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80021d2:	60fb      	str	r3, [r7, #12]
 80021d4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80021d6:	2300      	movs	r3, #0
 80021d8:	60bb      	str	r3, [r7, #8]
 80021da:	4b16      	ldr	r3, [pc, #88]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 80021dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021de:	4a15      	ldr	r2, [pc, #84]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 80021e0:	f043 0302 	orr.w	r3, r3, #2
 80021e4:	6313      	str	r3, [r2, #48]	@ 0x30
 80021e6:	4b13      	ldr	r3, [pc, #76]	@ (8002234 <HAL_CAN_MspInit+0x150>)
 80021e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021ea:	f003 0302 	and.w	r3, r3, #2
 80021ee:	60bb      	str	r3, [r7, #8]
 80021f0:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80021f2:	2360      	movs	r3, #96	@ 0x60
 80021f4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021f6:	2302      	movs	r3, #2
 80021f8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021fa:	2300      	movs	r3, #0
 80021fc:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021fe:	2303      	movs	r3, #3
 8002200:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8002202:	2309      	movs	r3, #9
 8002204:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002206:	f107 031c 	add.w	r3, r7, #28
 800220a:	4619      	mov	r1, r3
 800220c:	480c      	ldr	r0, [pc, #48]	@ (8002240 <HAL_CAN_MspInit+0x15c>)
 800220e:	f001 fea9 	bl	8003f64 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 5, 0);
 8002212:	2200      	movs	r2, #0
 8002214:	2105      	movs	r1, #5
 8002216:	2040      	movs	r0, #64	@ 0x40
 8002218:	f001 fa6b 	bl	80036f2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 800221c:	2040      	movs	r0, #64	@ 0x40
 800221e:	f001 fa84 	bl	800372a <HAL_NVIC_EnableIRQ>
}
 8002222:	bf00      	nop
 8002224:	3730      	adds	r7, #48	@ 0x30
 8002226:	46bd      	mov	sp, r7
 8002228:	bd80      	pop	{r7, pc}
 800222a:	bf00      	nop
 800222c:	40006400 	.word	0x40006400
 8002230:	20000ac8 	.word	0x20000ac8
 8002234:	40023800 	.word	0x40023800
 8002238:	40020c00 	.word	0x40020c00
 800223c:	40006800 	.word	0x40006800
 8002240:	40020400 	.word	0x40020400

08002244 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002244:	b580      	push	{r7, lr}
 8002246:	b08a      	sub	sp, #40	@ 0x28
 8002248:	af00      	add	r7, sp, #0
 800224a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800224c:	f107 0314 	add.w	r3, r7, #20
 8002250:	2200      	movs	r2, #0
 8002252:	601a      	str	r2, [r3, #0]
 8002254:	605a      	str	r2, [r3, #4]
 8002256:	609a      	str	r2, [r3, #8]
 8002258:	60da      	str	r2, [r3, #12]
 800225a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C3)
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	4a29      	ldr	r2, [pc, #164]	@ (8002308 <HAL_I2C_MspInit+0xc4>)
 8002262:	4293      	cmp	r3, r2
 8002264:	d14b      	bne.n	80022fe <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002266:	2300      	movs	r3, #0
 8002268:	613b      	str	r3, [r7, #16]
 800226a:	4b28      	ldr	r3, [pc, #160]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 800226c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800226e:	4a27      	ldr	r2, [pc, #156]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 8002270:	f043 0304 	orr.w	r3, r3, #4
 8002274:	6313      	str	r3, [r2, #48]	@ 0x30
 8002276:	4b25      	ldr	r3, [pc, #148]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 8002278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800227a:	f003 0304 	and.w	r3, r3, #4
 800227e:	613b      	str	r3, [r7, #16]
 8002280:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002282:	2300      	movs	r3, #0
 8002284:	60fb      	str	r3, [r7, #12]
 8002286:	4b21      	ldr	r3, [pc, #132]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 8002288:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800228a:	4a20      	ldr	r2, [pc, #128]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 800228c:	f043 0301 	orr.w	r3, r3, #1
 8002290:	6313      	str	r3, [r2, #48]	@ 0x30
 8002292:	4b1e      	ldr	r3, [pc, #120]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 8002294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002296:	f003 0301 	and.w	r3, r3, #1
 800229a:	60fb      	str	r3, [r7, #12]
 800229c:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PC9     ------> I2C3_SDA
    PA8     ------> I2C3_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800229e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80022a2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022a4:	2312      	movs	r3, #18
 80022a6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022a8:	2300      	movs	r3, #0
 80022aa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ac:	2303      	movs	r3, #3
 80022ae:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022b0:	2304      	movs	r3, #4
 80022b2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022b4:	f107 0314 	add.w	r3, r7, #20
 80022b8:	4619      	mov	r1, r3
 80022ba:	4815      	ldr	r0, [pc, #84]	@ (8002310 <HAL_I2C_MspInit+0xcc>)
 80022bc:	f001 fe52 	bl	8003f64 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80022c4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022c6:	2312      	movs	r3, #18
 80022c8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ca:	2300      	movs	r3, #0
 80022cc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ce:	2303      	movs	r3, #3
 80022d0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022d2:	2304      	movs	r3, #4
 80022d4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022d6:	f107 0314 	add.w	r3, r7, #20
 80022da:	4619      	mov	r1, r3
 80022dc:	480d      	ldr	r0, [pc, #52]	@ (8002314 <HAL_I2C_MspInit+0xd0>)
 80022de:	f001 fe41 	bl	8003f64 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022e2:	2300      	movs	r3, #0
 80022e4:	60bb      	str	r3, [r7, #8]
 80022e6:	4b09      	ldr	r3, [pc, #36]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 80022e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022ea:	4a08      	ldr	r2, [pc, #32]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 80022ec:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80022f0:	6413      	str	r3, [r2, #64]	@ 0x40
 80022f2:	4b06      	ldr	r3, [pc, #24]	@ (800230c <HAL_I2C_MspInit+0xc8>)
 80022f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022f6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80022fa:	60bb      	str	r3, [r7, #8]
 80022fc:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80022fe:	bf00      	nop
 8002300:	3728      	adds	r7, #40	@ 0x28
 8002302:	46bd      	mov	sp, r7
 8002304:	bd80      	pop	{r7, pc}
 8002306:	bf00      	nop
 8002308:	40005c00 	.word	0x40005c00
 800230c:	40023800 	.word	0x40023800
 8002310:	40020800 	.word	0x40020800
 8002314:	40020000 	.word	0x40020000

08002318 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002318:	b580      	push	{r7, lr}
 800231a:	b08a      	sub	sp, #40	@ 0x28
 800231c:	af00      	add	r7, sp, #0
 800231e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002320:	f107 0314 	add.w	r3, r7, #20
 8002324:	2200      	movs	r2, #0
 8002326:	601a      	str	r2, [r3, #0]
 8002328:	605a      	str	r2, [r3, #4]
 800232a:	609a      	str	r2, [r3, #8]
 800232c:	60da      	str	r2, [r3, #12]
 800232e:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	4a28      	ldr	r2, [pc, #160]	@ (80023d8 <HAL_SPI_MspInit+0xc0>)
 8002336:	4293      	cmp	r3, r2
 8002338:	d149      	bne.n	80023ce <HAL_SPI_MspInit+0xb6>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800233a:	2300      	movs	r3, #0
 800233c:	613b      	str	r3, [r7, #16]
 800233e:	4b27      	ldr	r3, [pc, #156]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 8002340:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002342:	4a26      	ldr	r2, [pc, #152]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 8002344:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002348:	6453      	str	r3, [r2, #68]	@ 0x44
 800234a:	4b24      	ldr	r3, [pc, #144]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 800234c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800234e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002352:	613b      	str	r3, [r7, #16]
 8002354:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002356:	2300      	movs	r3, #0
 8002358:	60fb      	str	r3, [r7, #12]
 800235a:	4b20      	ldr	r3, [pc, #128]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 800235c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800235e:	4a1f      	ldr	r2, [pc, #124]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 8002360:	f043 0302 	orr.w	r3, r3, #2
 8002364:	6313      	str	r3, [r2, #48]	@ 0x30
 8002366:	4b1d      	ldr	r3, [pc, #116]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 8002368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800236a:	f003 0302 	and.w	r3, r3, #2
 800236e:	60fb      	str	r3, [r7, #12]
 8002370:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002372:	2300      	movs	r3, #0
 8002374:	60bb      	str	r3, [r7, #8]
 8002376:	4b19      	ldr	r3, [pc, #100]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 8002378:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800237a:	4a18      	ldr	r2, [pc, #96]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 800237c:	f043 0301 	orr.w	r3, r3, #1
 8002380:	6313      	str	r3, [r2, #48]	@ 0x30
 8002382:	4b16      	ldr	r3, [pc, #88]	@ (80023dc <HAL_SPI_MspInit+0xc4>)
 8002384:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002386:	f003 0301 	and.w	r3, r3, #1
 800238a:	60bb      	str	r3, [r7, #8]
 800238c:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PB4     ------> SPI1_MISO
    PB3     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3;
 800238e:	2318      	movs	r3, #24
 8002390:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002392:	2302      	movs	r3, #2
 8002394:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002396:	2300      	movs	r3, #0
 8002398:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800239a:	2303      	movs	r3, #3
 800239c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800239e:	2305      	movs	r3, #5
 80023a0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023a2:	f107 0314 	add.w	r3, r7, #20
 80023a6:	4619      	mov	r1, r3
 80023a8:	480d      	ldr	r0, [pc, #52]	@ (80023e0 <HAL_SPI_MspInit+0xc8>)
 80023aa:	f001 fddb 	bl	8003f64 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80023ae:	2380      	movs	r3, #128	@ 0x80
 80023b0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023b2:	2302      	movs	r3, #2
 80023b4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023b6:	2300      	movs	r3, #0
 80023b8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023ba:	2303      	movs	r3, #3
 80023bc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80023be:	2305      	movs	r3, #5
 80023c0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023c2:	f107 0314 	add.w	r3, r7, #20
 80023c6:	4619      	mov	r1, r3
 80023c8:	4806      	ldr	r0, [pc, #24]	@ (80023e4 <HAL_SPI_MspInit+0xcc>)
 80023ca:	f001 fdcb 	bl	8003f64 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 80023ce:	bf00      	nop
 80023d0:	3728      	adds	r7, #40	@ 0x28
 80023d2:	46bd      	mov	sp, r7
 80023d4:	bd80      	pop	{r7, pc}
 80023d6:	bf00      	nop
 80023d8:	40013000 	.word	0x40013000
 80023dc:	40023800 	.word	0x40023800
 80023e0:	40020400 	.word	0x40020400
 80023e4:	40020000 	.word	0x40020000

080023e8 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80023e8:	b580      	push	{r7, lr}
 80023ea:	b086      	sub	sp, #24
 80023ec:	af00      	add	r7, sp, #0
 80023ee:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	4a53      	ldr	r2, [pc, #332]	@ (8002544 <HAL_TIM_PWM_MspInit+0x15c>)
 80023f6:	4293      	cmp	r3, r2
 80023f8:	d13e      	bne.n	8002478 <HAL_TIM_PWM_MspInit+0x90>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80023fa:	2300      	movs	r3, #0
 80023fc:	617b      	str	r3, [r7, #20]
 80023fe:	4b52      	ldr	r3, [pc, #328]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 8002400:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002402:	4a51      	ldr	r2, [pc, #324]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 8002404:	f043 0301 	orr.w	r3, r3, #1
 8002408:	6453      	str	r3, [r2, #68]	@ 0x44
 800240a:	4b4f      	ldr	r3, [pc, #316]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 800240c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800240e:	f003 0301 	and.w	r3, r3, #1
 8002412:	617b      	str	r3, [r7, #20]
 8002414:	697b      	ldr	r3, [r7, #20]

    /* TIM1 DMA Init */
    /* TIM1_CH1 Init */
    hdma_tim1_ch1.Instance = DMA2_Stream3;
 8002416:	4b4d      	ldr	r3, [pc, #308]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002418:	4a4d      	ldr	r2, [pc, #308]	@ (8002550 <HAL_TIM_PWM_MspInit+0x168>)
 800241a:	601a      	str	r2, [r3, #0]
    hdma_tim1_ch1.Init.Channel = DMA_CHANNEL_6;
 800241c:	4b4b      	ldr	r3, [pc, #300]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 800241e:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 8002422:	605a      	str	r2, [r3, #4]
    hdma_tim1_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002424:	4b49      	ldr	r3, [pc, #292]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002426:	2200      	movs	r2, #0
 8002428:	609a      	str	r2, [r3, #8]
    hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 800242a:	4b48      	ldr	r3, [pc, #288]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 800242c:	2200      	movs	r2, #0
 800242e:	60da      	str	r2, [r3, #12]
    hdma_tim1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 8002430:	4b46      	ldr	r3, [pc, #280]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002432:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002436:	611a      	str	r2, [r3, #16]
    hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002438:	4b44      	ldr	r3, [pc, #272]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 800243a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800243e:	615a      	str	r2, [r3, #20]
    hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002440:	4b42      	ldr	r3, [pc, #264]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002442:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002446:	619a      	str	r2, [r3, #24]
    hdma_tim1_ch1.Init.Mode = DMA_NORMAL;
 8002448:	4b40      	ldr	r3, [pc, #256]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 800244a:	2200      	movs	r2, #0
 800244c:	61da      	str	r2, [r3, #28]
    hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 800244e:	4b3f      	ldr	r3, [pc, #252]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002450:	2200      	movs	r2, #0
 8002452:	621a      	str	r2, [r3, #32]
    hdma_tim1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002454:	4b3d      	ldr	r3, [pc, #244]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002456:	2200      	movs	r2, #0
 8002458:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 800245a:	483c      	ldr	r0, [pc, #240]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 800245c:	f001 f980 	bl	8003760 <HAL_DMA_Init>
 8002460:	4603      	mov	r3, r0
 8002462:	2b00      	cmp	r3, #0
 8002464:	d001      	beq.n	800246a <HAL_TIM_PWM_MspInit+0x82>
    {
      Error_Handler();
 8002466:	f7ff f9c9 	bl	80017fc <Error_Handler>
    }

    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC1],hdma_tim1_ch1);
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	4a37      	ldr	r2, [pc, #220]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 800246e:	625a      	str	r2, [r3, #36]	@ 0x24
 8002470:	4a36      	ldr	r2, [pc, #216]	@ (800254c <HAL_TIM_PWM_MspInit+0x164>)
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	6393      	str	r3, [r2, #56]	@ 0x38
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8002476:	e061      	b.n	800253c <HAL_TIM_PWM_MspInit+0x154>
  else if(htim_pwm->Instance==TIM5)
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4a35      	ldr	r2, [pc, #212]	@ (8002554 <HAL_TIM_PWM_MspInit+0x16c>)
 800247e:	4293      	cmp	r3, r2
 8002480:	d10e      	bne.n	80024a0 <HAL_TIM_PWM_MspInit+0xb8>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002482:	2300      	movs	r3, #0
 8002484:	613b      	str	r3, [r7, #16]
 8002486:	4b30      	ldr	r3, [pc, #192]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 8002488:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800248a:	4a2f      	ldr	r2, [pc, #188]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 800248c:	f043 0308 	orr.w	r3, r3, #8
 8002490:	6413      	str	r3, [r2, #64]	@ 0x40
 8002492:	4b2d      	ldr	r3, [pc, #180]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 8002494:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002496:	f003 0308 	and.w	r3, r3, #8
 800249a:	613b      	str	r3, [r7, #16]
 800249c:	693b      	ldr	r3, [r7, #16]
}
 800249e:	e04d      	b.n	800253c <HAL_TIM_PWM_MspInit+0x154>
  else if(htim_pwm->Instance==TIM8)
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	4a2c      	ldr	r2, [pc, #176]	@ (8002558 <HAL_TIM_PWM_MspInit+0x170>)
 80024a6:	4293      	cmp	r3, r2
 80024a8:	d148      	bne.n	800253c <HAL_TIM_PWM_MspInit+0x154>
    __HAL_RCC_TIM8_CLK_ENABLE();
 80024aa:	2300      	movs	r3, #0
 80024ac:	60fb      	str	r3, [r7, #12]
 80024ae:	4b26      	ldr	r3, [pc, #152]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 80024b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80024b2:	4a25      	ldr	r2, [pc, #148]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 80024b4:	f043 0302 	orr.w	r3, r3, #2
 80024b8:	6453      	str	r3, [r2, #68]	@ 0x44
 80024ba:	4b23      	ldr	r3, [pc, #140]	@ (8002548 <HAL_TIM_PWM_MspInit+0x160>)
 80024bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80024be:	f003 0302 	and.w	r3, r3, #2
 80024c2:	60fb      	str	r3, [r7, #12]
 80024c4:	68fb      	ldr	r3, [r7, #12]
    hdma_tim8_ch1_ch2_ch3.Instance = DMA2_Stream2;
 80024c6:	4b25      	ldr	r3, [pc, #148]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024c8:	4a25      	ldr	r2, [pc, #148]	@ (8002560 <HAL_TIM_PWM_MspInit+0x178>)
 80024ca:	601a      	str	r2, [r3, #0]
    hdma_tim8_ch1_ch2_ch3.Init.Channel = DMA_CHANNEL_0;
 80024cc:	4b23      	ldr	r3, [pc, #140]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024ce:	2200      	movs	r2, #0
 80024d0:	605a      	str	r2, [r3, #4]
    hdma_tim8_ch1_ch2_ch3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80024d2:	4b22      	ldr	r3, [pc, #136]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024d4:	2200      	movs	r2, #0
 80024d6:	609a      	str	r2, [r3, #8]
    hdma_tim8_ch1_ch2_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 80024d8:	4b20      	ldr	r3, [pc, #128]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024da:	2200      	movs	r2, #0
 80024dc:	60da      	str	r2, [r3, #12]
    hdma_tim8_ch1_ch2_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80024de:	4b1f      	ldr	r3, [pc, #124]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024e0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80024e4:	611a      	str	r2, [r3, #16]
    hdma_tim8_ch1_ch2_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80024e6:	4b1d      	ldr	r3, [pc, #116]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024e8:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80024ec:	615a      	str	r2, [r3, #20]
    hdma_tim8_ch1_ch2_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80024ee:	4b1b      	ldr	r3, [pc, #108]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024f0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80024f4:	619a      	str	r2, [r3, #24]
    hdma_tim8_ch1_ch2_ch3.Init.Mode = DMA_NORMAL;
 80024f6:	4b19      	ldr	r3, [pc, #100]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024f8:	2200      	movs	r2, #0
 80024fa:	61da      	str	r2, [r3, #28]
    hdma_tim8_ch1_ch2_ch3.Init.Priority = DMA_PRIORITY_LOW;
 80024fc:	4b17      	ldr	r3, [pc, #92]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 80024fe:	2200      	movs	r2, #0
 8002500:	621a      	str	r2, [r3, #32]
    hdma_tim8_ch1_ch2_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002502:	4b16      	ldr	r3, [pc, #88]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 8002504:	2200      	movs	r2, #0
 8002506:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim8_ch1_ch2_ch3) != HAL_OK)
 8002508:	4814      	ldr	r0, [pc, #80]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 800250a:	f001 f929 	bl	8003760 <HAL_DMA_Init>
 800250e:	4603      	mov	r3, r0
 8002510:	2b00      	cmp	r3, #0
 8002512:	d001      	beq.n	8002518 <HAL_TIM_PWM_MspInit+0x130>
      Error_Handler();
 8002514:	f7ff f972 	bl	80017fc <Error_Handler>
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC1],hdma_tim8_ch1_ch2_ch3);
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	4a10      	ldr	r2, [pc, #64]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 800251c:	625a      	str	r2, [r3, #36]	@ 0x24
 800251e:	4a0f      	ldr	r2, [pc, #60]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	6393      	str	r3, [r2, #56]	@ 0x38
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC2],hdma_tim8_ch1_ch2_ch3);
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	4a0d      	ldr	r2, [pc, #52]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 8002528:	629a      	str	r2, [r3, #40]	@ 0x28
 800252a:	4a0c      	ldr	r2, [pc, #48]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	6393      	str	r3, [r2, #56]	@ 0x38
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC3],hdma_tim8_ch1_ch2_ch3);
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	4a0a      	ldr	r2, [pc, #40]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 8002534:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002536:	4a09      	ldr	r2, [pc, #36]	@ (800255c <HAL_TIM_PWM_MspInit+0x174>)
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	6393      	str	r3, [r2, #56]	@ 0x38
}
 800253c:	bf00      	nop
 800253e:	3718      	adds	r7, #24
 8002540:	46bd      	mov	sp, r7
 8002542:	bd80      	pop	{r7, pc}
 8002544:	40010000 	.word	0x40010000
 8002548:	40023800 	.word	0x40023800
 800254c:	20000664 	.word	0x20000664
 8002550:	40026458 	.word	0x40026458
 8002554:	40000c00 	.word	0x40000c00
 8002558:	40010400 	.word	0x40010400
 800255c:	20000724 	.word	0x20000724
 8002560:	40026440 	.word	0x40026440

08002564 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002564:	b580      	push	{r7, lr}
 8002566:	b084      	sub	sp, #16
 8002568:	af00      	add	r7, sp, #0
 800256a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM4)
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	4a2c      	ldr	r2, [pc, #176]	@ (8002624 <HAL_TIM_Base_MspInit+0xc0>)
 8002572:	4293      	cmp	r3, r2
 8002574:	d13e      	bne.n	80025f4 <HAL_TIM_Base_MspInit+0x90>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002576:	2300      	movs	r3, #0
 8002578:	60fb      	str	r3, [r7, #12]
 800257a:	4b2b      	ldr	r3, [pc, #172]	@ (8002628 <HAL_TIM_Base_MspInit+0xc4>)
 800257c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800257e:	4a2a      	ldr	r2, [pc, #168]	@ (8002628 <HAL_TIM_Base_MspInit+0xc4>)
 8002580:	f043 0304 	orr.w	r3, r3, #4
 8002584:	6413      	str	r3, [r2, #64]	@ 0x40
 8002586:	4b28      	ldr	r3, [pc, #160]	@ (8002628 <HAL_TIM_Base_MspInit+0xc4>)
 8002588:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800258a:	f003 0304 	and.w	r3, r3, #4
 800258e:	60fb      	str	r3, [r7, #12]
 8002590:	68fb      	ldr	r3, [r7, #12]

    /* TIM4 DMA Init */
    /* TIM4_CH3 Init */
    hdma_tim4_ch3.Instance = DMA1_Stream7;
 8002592:	4b26      	ldr	r3, [pc, #152]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 8002594:	4a26      	ldr	r2, [pc, #152]	@ (8002630 <HAL_TIM_Base_MspInit+0xcc>)
 8002596:	601a      	str	r2, [r3, #0]
    hdma_tim4_ch3.Init.Channel = DMA_CHANNEL_2;
 8002598:	4b24      	ldr	r3, [pc, #144]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 800259a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800259e:	605a      	str	r2, [r3, #4]
    hdma_tim4_ch3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80025a0:	4b22      	ldr	r3, [pc, #136]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025a2:	2200      	movs	r2, #0
 80025a4:	609a      	str	r2, [r3, #8]
    hdma_tim4_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 80025a6:	4b21      	ldr	r3, [pc, #132]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025a8:	2200      	movs	r2, #0
 80025aa:	60da      	str	r2, [r3, #12]
    hdma_tim4_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80025ac:	4b1f      	ldr	r3, [pc, #124]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025ae:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80025b2:	611a      	str	r2, [r3, #16]
    hdma_tim4_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80025b4:	4b1d      	ldr	r3, [pc, #116]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025b6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80025ba:	615a      	str	r2, [r3, #20]
    hdma_tim4_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80025bc:	4b1b      	ldr	r3, [pc, #108]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025be:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80025c2:	619a      	str	r2, [r3, #24]
    hdma_tim4_ch3.Init.Mode = DMA_NORMAL;
 80025c4:	4b19      	ldr	r3, [pc, #100]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025c6:	2200      	movs	r2, #0
 80025c8:	61da      	str	r2, [r3, #28]
    hdma_tim4_ch3.Init.Priority = DMA_PRIORITY_LOW;
 80025ca:	4b18      	ldr	r3, [pc, #96]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025cc:	2200      	movs	r2, #0
 80025ce:	621a      	str	r2, [r3, #32]
    hdma_tim4_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80025d0:	4b16      	ldr	r3, [pc, #88]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025d2:	2200      	movs	r2, #0
 80025d4:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim4_ch3) != HAL_OK)
 80025d6:	4815      	ldr	r0, [pc, #84]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025d8:	f001 f8c2 	bl	8003760 <HAL_DMA_Init>
 80025dc:	4603      	mov	r3, r0
 80025de:	2b00      	cmp	r3, #0
 80025e0:	d001      	beq.n	80025e6 <HAL_TIM_Base_MspInit+0x82>
    {
      Error_Handler();
 80025e2:	f7ff f90b 	bl	80017fc <Error_Handler>
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim4_ch3);
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	4a10      	ldr	r2, [pc, #64]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025ea:	62da      	str	r2, [r3, #44]	@ 0x2c
 80025ec:	4a0f      	ldr	r2, [pc, #60]	@ (800262c <HAL_TIM_Base_MspInit+0xc8>)
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	6393      	str	r3, [r2, #56]	@ 0x38
  /* USER CODE BEGIN TIM10_MspInit 1 */

  /* USER CODE END TIM10_MspInit 1 */
  }

}
 80025f2:	e012      	b.n	800261a <HAL_TIM_Base_MspInit+0xb6>
  else if(htim_base->Instance==TIM10)
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	681b      	ldr	r3, [r3, #0]
 80025f8:	4a0e      	ldr	r2, [pc, #56]	@ (8002634 <HAL_TIM_Base_MspInit+0xd0>)
 80025fa:	4293      	cmp	r3, r2
 80025fc:	d10d      	bne.n	800261a <HAL_TIM_Base_MspInit+0xb6>
    __HAL_RCC_TIM10_CLK_ENABLE();
 80025fe:	2300      	movs	r3, #0
 8002600:	60bb      	str	r3, [r7, #8]
 8002602:	4b09      	ldr	r3, [pc, #36]	@ (8002628 <HAL_TIM_Base_MspInit+0xc4>)
 8002604:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002606:	4a08      	ldr	r2, [pc, #32]	@ (8002628 <HAL_TIM_Base_MspInit+0xc4>)
 8002608:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800260c:	6453      	str	r3, [r2, #68]	@ 0x44
 800260e:	4b06      	ldr	r3, [pc, #24]	@ (8002628 <HAL_TIM_Base_MspInit+0xc4>)
 8002610:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002612:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002616:	60bb      	str	r3, [r7, #8]
 8002618:	68bb      	ldr	r3, [r7, #8]
}
 800261a:	bf00      	nop
 800261c:	3710      	adds	r7, #16
 800261e:	46bd      	mov	sp, r7
 8002620:	bd80      	pop	{r7, pc}
 8002622:	bf00      	nop
 8002624:	40000800 	.word	0x40000800
 8002628:	40023800 	.word	0x40023800
 800262c:	200006c4 	.word	0x200006c4
 8002630:	400260b8 	.word	0x400260b8
 8002634:	40014400 	.word	0x40014400

08002638 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002638:	b580      	push	{r7, lr}
 800263a:	b08e      	sub	sp, #56	@ 0x38
 800263c:	af00      	add	r7, sp, #0
 800263e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002640:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002644:	2200      	movs	r2, #0
 8002646:	601a      	str	r2, [r3, #0]
 8002648:	605a      	str	r2, [r3, #4]
 800264a:	609a      	str	r2, [r3, #8]
 800264c:	60da      	str	r2, [r3, #12]
 800264e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	4a6a      	ldr	r2, [pc, #424]	@ (8002800 <HAL_TIM_MspPostInit+0x1c8>)
 8002656:	4293      	cmp	r3, r2
 8002658:	d11f      	bne.n	800269a <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800265a:	2300      	movs	r3, #0
 800265c:	623b      	str	r3, [r7, #32]
 800265e:	4b69      	ldr	r3, [pc, #420]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 8002660:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002662:	4a68      	ldr	r2, [pc, #416]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 8002664:	f043 0310 	orr.w	r3, r3, #16
 8002668:	6313      	str	r3, [r2, #48]	@ 0x30
 800266a:	4b66      	ldr	r3, [pc, #408]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 800266c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800266e:	f003 0310 	and.w	r3, r3, #16
 8002672:	623b      	str	r3, [r7, #32]
 8002674:	6a3b      	ldr	r3, [r7, #32]
    PE13     ------> TIM1_CH3
    PE9     ------> TIM1_CH1
    PE11     ------> TIM1_CH2
    PE14     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_14;
 8002676:	f44f 43d4 	mov.w	r3, #27136	@ 0x6a00
 800267a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800267c:	2302      	movs	r3, #2
 800267e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002680:	2300      	movs	r3, #0
 8002682:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002684:	2300      	movs	r3, #0
 8002686:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002688:	2301      	movs	r3, #1
 800268a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800268c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002690:	4619      	mov	r1, r3
 8002692:	485d      	ldr	r0, [pc, #372]	@ (8002808 <HAL_TIM_MspPostInit+0x1d0>)
 8002694:	f001 fc66 	bl	8003f64 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM10_MspPostInit 1 */

  /* USER CODE END TIM10_MspPostInit 1 */
  }

}
 8002698:	e0ae      	b.n	80027f8 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM4)
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	4a5b      	ldr	r2, [pc, #364]	@ (800280c <HAL_TIM_MspPostInit+0x1d4>)
 80026a0:	4293      	cmp	r3, r2
 80026a2:	d11f      	bne.n	80026e4 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80026a4:	2300      	movs	r3, #0
 80026a6:	61fb      	str	r3, [r7, #28]
 80026a8:	4b56      	ldr	r3, [pc, #344]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80026aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026ac:	4a55      	ldr	r2, [pc, #340]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80026ae:	f043 0308 	orr.w	r3, r3, #8
 80026b2:	6313      	str	r3, [r2, #48]	@ 0x30
 80026b4:	4b53      	ldr	r3, [pc, #332]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80026b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026b8:	f003 0308 	and.w	r3, r3, #8
 80026bc:	61fb      	str	r3, [r7, #28]
 80026be:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_14;
 80026c0:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80026c4:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026c6:	2302      	movs	r3, #2
 80026c8:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026ca:	2300      	movs	r3, #0
 80026cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026ce:	2300      	movs	r3, #0
 80026d0:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80026d2:	2302      	movs	r3, #2
 80026d4:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026d6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80026da:	4619      	mov	r1, r3
 80026dc:	484c      	ldr	r0, [pc, #304]	@ (8002810 <HAL_TIM_MspPostInit+0x1d8>)
 80026de:	f001 fc41 	bl	8003f64 <HAL_GPIO_Init>
}
 80026e2:	e089      	b.n	80027f8 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM5)
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	4a4a      	ldr	r2, [pc, #296]	@ (8002814 <HAL_TIM_MspPostInit+0x1dc>)
 80026ea:	4293      	cmp	r3, r2
 80026ec:	d11f      	bne.n	800272e <HAL_TIM_MspPostInit+0xf6>
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80026ee:	2300      	movs	r3, #0
 80026f0:	61bb      	str	r3, [r7, #24]
 80026f2:	4b44      	ldr	r3, [pc, #272]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80026f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026f6:	4a43      	ldr	r2, [pc, #268]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80026f8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80026fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80026fe:	4b41      	ldr	r3, [pc, #260]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 8002700:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002702:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002706:	61bb      	str	r3, [r7, #24]
 8002708:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11|GPIO_PIN_10;
 800270a:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 800270e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002710:	2302      	movs	r3, #2
 8002712:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002714:	2300      	movs	r3, #0
 8002716:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002718:	2300      	movs	r3, #0
 800271a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 800271c:	2302      	movs	r3, #2
 800271e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002720:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002724:	4619      	mov	r1, r3
 8002726:	483c      	ldr	r0, [pc, #240]	@ (8002818 <HAL_TIM_MspPostInit+0x1e0>)
 8002728:	f001 fc1c 	bl	8003f64 <HAL_GPIO_Init>
}
 800272c:	e064      	b.n	80027f8 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM8)
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	4a3a      	ldr	r2, [pc, #232]	@ (800281c <HAL_TIM_MspPostInit+0x1e4>)
 8002734:	4293      	cmp	r3, r2
 8002736:	d13c      	bne.n	80027b2 <HAL_TIM_MspPostInit+0x17a>
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8002738:	2300      	movs	r3, #0
 800273a:	617b      	str	r3, [r7, #20]
 800273c:	4b31      	ldr	r3, [pc, #196]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 800273e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002740:	4a30      	ldr	r2, [pc, #192]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 8002742:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002746:	6313      	str	r3, [r2, #48]	@ 0x30
 8002748:	4b2e      	ldr	r3, [pc, #184]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 800274a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800274c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002750:	617b      	str	r3, [r7, #20]
 8002752:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002754:	2300      	movs	r3, #0
 8002756:	613b      	str	r3, [r7, #16]
 8002758:	4b2a      	ldr	r3, [pc, #168]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 800275a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800275c:	4a29      	ldr	r2, [pc, #164]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 800275e:	f043 0304 	orr.w	r3, r3, #4
 8002762:	6313      	str	r3, [r2, #48]	@ 0x30
 8002764:	4b27      	ldr	r3, [pc, #156]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 8002766:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002768:	f003 0304 	and.w	r3, r3, #4
 800276c:	613b      	str	r3, [r7, #16]
 800276e:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 8002770:	23c0      	movs	r3, #192	@ 0xc0
 8002772:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002774:	2302      	movs	r3, #2
 8002776:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002778:	2300      	movs	r3, #0
 800277a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800277c:	2300      	movs	r3, #0
 800277e:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8002780:	2303      	movs	r3, #3
 8002782:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002784:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002788:	4619      	mov	r1, r3
 800278a:	4825      	ldr	r0, [pc, #148]	@ (8002820 <HAL_TIM_MspPostInit+0x1e8>)
 800278c:	f001 fbea 	bl	8003f64 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8002790:	2340      	movs	r3, #64	@ 0x40
 8002792:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002794:	2302      	movs	r3, #2
 8002796:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002798:	2300      	movs	r3, #0
 800279a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800279c:	2300      	movs	r3, #0
 800279e:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 80027a0:	2303      	movs	r3, #3
 80027a2:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80027a4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80027a8:	4619      	mov	r1, r3
 80027aa:	481e      	ldr	r0, [pc, #120]	@ (8002824 <HAL_TIM_MspPostInit+0x1ec>)
 80027ac:	f001 fbda 	bl	8003f64 <HAL_GPIO_Init>
}
 80027b0:	e022      	b.n	80027f8 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM10)
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	681b      	ldr	r3, [r3, #0]
 80027b6:	4a1c      	ldr	r2, [pc, #112]	@ (8002828 <HAL_TIM_MspPostInit+0x1f0>)
 80027b8:	4293      	cmp	r3, r2
 80027ba:	d11d      	bne.n	80027f8 <HAL_TIM_MspPostInit+0x1c0>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80027bc:	2300      	movs	r3, #0
 80027be:	60fb      	str	r3, [r7, #12]
 80027c0:	4b10      	ldr	r3, [pc, #64]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80027c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027c4:	4a0f      	ldr	r2, [pc, #60]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80027c6:	f043 0320 	orr.w	r3, r3, #32
 80027ca:	6313      	str	r3, [r2, #48]	@ 0x30
 80027cc:	4b0d      	ldr	r3, [pc, #52]	@ (8002804 <HAL_TIM_MspPostInit+0x1cc>)
 80027ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027d0:	f003 0320 	and.w	r3, r3, #32
 80027d4:	60fb      	str	r3, [r7, #12]
 80027d6:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80027d8:	2340      	movs	r3, #64	@ 0x40
 80027da:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027dc:	2302      	movs	r3, #2
 80027de:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80027e0:	2301      	movs	r3, #1
 80027e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80027e4:	2302      	movs	r3, #2
 80027e6:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 80027e8:	2303      	movs	r3, #3
 80027ea:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027ec:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80027f0:	4619      	mov	r1, r3
 80027f2:	480e      	ldr	r0, [pc, #56]	@ (800282c <HAL_TIM_MspPostInit+0x1f4>)
 80027f4:	f001 fbb6 	bl	8003f64 <HAL_GPIO_Init>
}
 80027f8:	bf00      	nop
 80027fa:	3738      	adds	r7, #56	@ 0x38
 80027fc:	46bd      	mov	sp, r7
 80027fe:	bd80      	pop	{r7, pc}
 8002800:	40010000 	.word	0x40010000
 8002804:	40023800 	.word	0x40023800
 8002808:	40021000 	.word	0x40021000
 800280c:	40000800 	.word	0x40000800
 8002810:	40020c00 	.word	0x40020c00
 8002814:	40000c00 	.word	0x40000c00
 8002818:	40021c00 	.word	0x40021c00
 800281c:	40010400 	.word	0x40010400
 8002820:	40022000 	.word	0x40022000
 8002824:	40020800 	.word	0x40020800
 8002828:	40014400 	.word	0x40014400
 800282c:	40021400 	.word	0x40021400

08002830 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002830:	b580      	push	{r7, lr}
 8002832:	b08e      	sub	sp, #56	@ 0x38
 8002834:	af00      	add	r7, sp, #0
 8002836:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002838:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800283c:	2200      	movs	r2, #0
 800283e:	601a      	str	r2, [r3, #0]
 8002840:	605a      	str	r2, [r3, #4]
 8002842:	609a      	str	r2, [r3, #8]
 8002844:	60da      	str	r2, [r3, #12]
 8002846:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	4a90      	ldr	r2, [pc, #576]	@ (8002a90 <HAL_UART_MspInit+0x260>)
 800284e:	4293      	cmp	r3, r2
 8002850:	f040 80b2 	bne.w	80029b8 <HAL_UART_MspInit+0x188>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002854:	2300      	movs	r3, #0
 8002856:	623b      	str	r3, [r7, #32]
 8002858:	4b8e      	ldr	r3, [pc, #568]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 800285a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800285c:	4a8d      	ldr	r2, [pc, #564]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 800285e:	f043 0310 	orr.w	r3, r3, #16
 8002862:	6453      	str	r3, [r2, #68]	@ 0x44
 8002864:	4b8b      	ldr	r3, [pc, #556]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 8002866:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002868:	f003 0310 	and.w	r3, r3, #16
 800286c:	623b      	str	r3, [r7, #32]
 800286e:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002870:	2300      	movs	r3, #0
 8002872:	61fb      	str	r3, [r7, #28]
 8002874:	4b87      	ldr	r3, [pc, #540]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 8002876:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002878:	4a86      	ldr	r2, [pc, #536]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 800287a:	f043 0302 	orr.w	r3, r3, #2
 800287e:	6313      	str	r3, [r2, #48]	@ 0x30
 8002880:	4b84      	ldr	r3, [pc, #528]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 8002882:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002884:	f003 0302 	and.w	r3, r3, #2
 8002888:	61fb      	str	r3, [r7, #28]
 800288a:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800288c:	2300      	movs	r3, #0
 800288e:	61bb      	str	r3, [r7, #24]
 8002890:	4b80      	ldr	r3, [pc, #512]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 8002892:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002894:	4a7f      	ldr	r2, [pc, #508]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 8002896:	f043 0301 	orr.w	r3, r3, #1
 800289a:	6313      	str	r3, [r2, #48]	@ 0x30
 800289c:	4b7d      	ldr	r3, [pc, #500]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 800289e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028a0:	f003 0301 	and.w	r3, r3, #1
 80028a4:	61bb      	str	r3, [r7, #24]
 80028a6:	69bb      	ldr	r3, [r7, #24]
    /**USART1 GPIO Configuration
    PB7     ------> USART1_RX
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80028a8:	2380      	movs	r3, #128	@ 0x80
 80028aa:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028ac:	2302      	movs	r3, #2
 80028ae:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028b0:	2300      	movs	r3, #0
 80028b2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80028b4:	2303      	movs	r3, #3
 80028b6:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80028b8:	2307      	movs	r3, #7
 80028ba:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028bc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80028c0:	4619      	mov	r1, r3
 80028c2:	4875      	ldr	r0, [pc, #468]	@ (8002a98 <HAL_UART_MspInit+0x268>)
 80028c4:	f001 fb4e 	bl	8003f64 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80028c8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80028cc:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028ce:	2302      	movs	r3, #2
 80028d0:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028d2:	2300      	movs	r3, #0
 80028d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80028d6:	2303      	movs	r3, #3
 80028d8:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80028da:	2307      	movs	r3, #7
 80028dc:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028de:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80028e2:	4619      	mov	r1, r3
 80028e4:	486d      	ldr	r0, [pc, #436]	@ (8002a9c <HAL_UART_MspInit+0x26c>)
 80028e6:	f001 fb3d 	bl	8003f64 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA2_Stream7;
 80028ea:	4b6d      	ldr	r3, [pc, #436]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 80028ec:	4a6d      	ldr	r2, [pc, #436]	@ (8002aa4 <HAL_UART_MspInit+0x274>)
 80028ee:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 80028f0:	4b6b      	ldr	r3, [pc, #428]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 80028f2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80028f6:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80028f8:	4b69      	ldr	r3, [pc, #420]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 80028fa:	2240      	movs	r2, #64	@ 0x40
 80028fc:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80028fe:	4b68      	ldr	r3, [pc, #416]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002900:	2200      	movs	r2, #0
 8002902:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002904:	4b66      	ldr	r3, [pc, #408]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002906:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800290a:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800290c:	4b64      	ldr	r3, [pc, #400]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 800290e:	2200      	movs	r2, #0
 8002910:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002912:	4b63      	ldr	r3, [pc, #396]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002914:	2200      	movs	r2, #0
 8002916:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 8002918:	4b61      	ldr	r3, [pc, #388]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 800291a:	2200      	movs	r2, #0
 800291c:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 800291e:	4b60      	ldr	r3, [pc, #384]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002920:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002924:	621a      	str	r2, [r3, #32]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002926:	4b5e      	ldr	r3, [pc, #376]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002928:	2200      	movs	r2, #0
 800292a:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 800292c:	485c      	ldr	r0, [pc, #368]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 800292e:	f000 ff17 	bl	8003760 <HAL_DMA_Init>
 8002932:	4603      	mov	r3, r0
 8002934:	2b00      	cmp	r3, #0
 8002936:	d001      	beq.n	800293c <HAL_UART_MspInit+0x10c>
    {
      Error_Handler();
 8002938:	f7fe ff60 	bl	80017fc <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	4a58      	ldr	r2, [pc, #352]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002940:	639a      	str	r2, [r3, #56]	@ 0x38
 8002942:	4a57      	ldr	r2, [pc, #348]	@ (8002aa0 <HAL_UART_MspInit+0x270>)
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA2_Stream5;
 8002948:	4b57      	ldr	r3, [pc, #348]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 800294a:	4a58      	ldr	r2, [pc, #352]	@ (8002aac <HAL_UART_MspInit+0x27c>)
 800294c:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 800294e:	4b56      	ldr	r3, [pc, #344]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 8002950:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002954:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002956:	4b54      	ldr	r3, [pc, #336]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 8002958:	2200      	movs	r2, #0
 800295a:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800295c:	4b52      	ldr	r3, [pc, #328]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 800295e:	2200      	movs	r2, #0
 8002960:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002962:	4b51      	ldr	r3, [pc, #324]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 8002964:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002968:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800296a:	4b4f      	ldr	r3, [pc, #316]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 800296c:	2200      	movs	r2, #0
 800296e:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002970:	4b4d      	ldr	r3, [pc, #308]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 8002972:	2200      	movs	r2, #0
 8002974:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 8002976:	4b4c      	ldr	r3, [pc, #304]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 8002978:	2200      	movs	r2, #0
 800297a:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 800297c:	4b4a      	ldr	r3, [pc, #296]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 800297e:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002982:	621a      	str	r2, [r3, #32]
    hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002984:	4b48      	ldr	r3, [pc, #288]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 8002986:	2200      	movs	r2, #0
 8002988:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 800298a:	4847      	ldr	r0, [pc, #284]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 800298c:	f000 fee8 	bl	8003760 <HAL_DMA_Init>
 8002990:	4603      	mov	r3, r0
 8002992:	2b00      	cmp	r3, #0
 8002994:	d001      	beq.n	800299a <HAL_UART_MspInit+0x16a>
    {
      Error_Handler();
 8002996:	f7fe ff31 	bl	80017fc <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	4a42      	ldr	r2, [pc, #264]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 800299e:	63da      	str	r2, [r3, #60]	@ 0x3c
 80029a0:	4a41      	ldr	r2, [pc, #260]	@ (8002aa8 <HAL_UART_MspInit+0x278>)
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 80029a6:	2200      	movs	r2, #0
 80029a8:	2105      	movs	r1, #5
 80029aa:	2025      	movs	r0, #37	@ 0x25
 80029ac:	f000 fea1 	bl	80036f2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80029b0:	2025      	movs	r0, #37	@ 0x25
 80029b2:	f000 feba 	bl	800372a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART6_MspInit 1 */

  /* USER CODE END USART6_MspInit 1 */
  }

}
 80029b6:	e11c      	b.n	8002bf2 <HAL_UART_MspInit+0x3c2>
  else if(huart->Instance==USART3)
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	4a3c      	ldr	r2, [pc, #240]	@ (8002ab0 <HAL_UART_MspInit+0x280>)
 80029be:	4293      	cmp	r3, r2
 80029c0:	d17e      	bne.n	8002ac0 <HAL_UART_MspInit+0x290>
    __HAL_RCC_USART3_CLK_ENABLE();
 80029c2:	2300      	movs	r3, #0
 80029c4:	617b      	str	r3, [r7, #20]
 80029c6:	4b33      	ldr	r3, [pc, #204]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 80029c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029ca:	4a32      	ldr	r2, [pc, #200]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 80029cc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80029d0:	6413      	str	r3, [r2, #64]	@ 0x40
 80029d2:	4b30      	ldr	r3, [pc, #192]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 80029d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029d6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80029da:	617b      	str	r3, [r7, #20]
 80029dc:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80029de:	2300      	movs	r3, #0
 80029e0:	613b      	str	r3, [r7, #16]
 80029e2:	4b2c      	ldr	r3, [pc, #176]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 80029e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029e6:	4a2b      	ldr	r2, [pc, #172]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 80029e8:	f043 0304 	orr.w	r3, r3, #4
 80029ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80029ee:	4b29      	ldr	r3, [pc, #164]	@ (8002a94 <HAL_UART_MspInit+0x264>)
 80029f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029f2:	f003 0304 	and.w	r3, r3, #4
 80029f6:	613b      	str	r3, [r7, #16]
 80029f8:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_10;
 80029fa:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80029fe:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a00:	2302      	movs	r3, #2
 8002a02:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a04:	2300      	movs	r3, #0
 8002a06:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a08:	2303      	movs	r3, #3
 8002a0a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8002a0c:	2307      	movs	r3, #7
 8002a0e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a10:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002a14:	4619      	mov	r1, r3
 8002a16:	4827      	ldr	r0, [pc, #156]	@ (8002ab4 <HAL_UART_MspInit+0x284>)
 8002a18:	f001 faa4 	bl	8003f64 <HAL_GPIO_Init>
    hdma_usart3_rx.Instance = DMA1_Stream1;
 8002a1c:	4b26      	ldr	r3, [pc, #152]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a1e:	4a27      	ldr	r2, [pc, #156]	@ (8002abc <HAL_UART_MspInit+0x28c>)
 8002a20:	601a      	str	r2, [r3, #0]
    hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 8002a22:	4b25      	ldr	r3, [pc, #148]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a24:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002a28:	605a      	str	r2, [r3, #4]
    hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002a2a:	4b23      	ldr	r3, [pc, #140]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a2c:	2200      	movs	r2, #0
 8002a2e:	609a      	str	r2, [r3, #8]
    hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002a30:	4b21      	ldr	r3, [pc, #132]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a32:	2200      	movs	r2, #0
 8002a34:	60da      	str	r2, [r3, #12]
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002a36:	4b20      	ldr	r3, [pc, #128]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a38:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002a3c:	611a      	str	r2, [r3, #16]
    hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002a3e:	4b1e      	ldr	r3, [pc, #120]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a40:	2200      	movs	r2, #0
 8002a42:	615a      	str	r2, [r3, #20]
    hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002a44:	4b1c      	ldr	r3, [pc, #112]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a46:	2200      	movs	r2, #0
 8002a48:	619a      	str	r2, [r3, #24]
    hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 8002a4a:	4b1b      	ldr	r3, [pc, #108]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a4c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002a50:	61da      	str	r2, [r3, #28]
    hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002a52:	4b19      	ldr	r3, [pc, #100]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a54:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002a58:	621a      	str	r2, [r3, #32]
    hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002a5a:	4b17      	ldr	r3, [pc, #92]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a5c:	2200      	movs	r2, #0
 8002a5e:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 8002a60:	4815      	ldr	r0, [pc, #84]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a62:	f000 fe7d 	bl	8003760 <HAL_DMA_Init>
 8002a66:	4603      	mov	r3, r0
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d001      	beq.n	8002a70 <HAL_UART_MspInit+0x240>
      Error_Handler();
 8002a6c:	f7fe fec6 	bl	80017fc <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	4a11      	ldr	r2, [pc, #68]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a74:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002a76:	4a10      	ldr	r2, [pc, #64]	@ (8002ab8 <HAL_UART_MspInit+0x288>)
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	2105      	movs	r1, #5
 8002a80:	2027      	movs	r0, #39	@ 0x27
 8002a82:	f000 fe36 	bl	80036f2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8002a86:	2027      	movs	r0, #39	@ 0x27
 8002a88:	f000 fe4f 	bl	800372a <HAL_NVIC_EnableIRQ>
}
 8002a8c:	e0b1      	b.n	8002bf2 <HAL_UART_MspInit+0x3c2>
 8002a8e:	bf00      	nop
 8002a90:	40011000 	.word	0x40011000
 8002a94:	40023800 	.word	0x40023800
 8002a98:	40020400 	.word	0x40020400
 8002a9c:	40020000 	.word	0x40020000
 8002aa0:	2000085c 	.word	0x2000085c
 8002aa4:	400264b8 	.word	0x400264b8
 8002aa8:	200008bc 	.word	0x200008bc
 8002aac:	40026488 	.word	0x40026488
 8002ab0:	40004800 	.word	0x40004800
 8002ab4:	40020800 	.word	0x40020800
 8002ab8:	2000091c 	.word	0x2000091c
 8002abc:	40026028 	.word	0x40026028
  else if(huart->Instance==USART6)
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	4a4d      	ldr	r2, [pc, #308]	@ (8002bfc <HAL_UART_MspInit+0x3cc>)
 8002ac6:	4293      	cmp	r3, r2
 8002ac8:	f040 8093 	bne.w	8002bf2 <HAL_UART_MspInit+0x3c2>
    __HAL_RCC_USART6_CLK_ENABLE();
 8002acc:	2300      	movs	r3, #0
 8002ace:	60fb      	str	r3, [r7, #12]
 8002ad0:	4b4b      	ldr	r3, [pc, #300]	@ (8002c00 <HAL_UART_MspInit+0x3d0>)
 8002ad2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ad4:	4a4a      	ldr	r2, [pc, #296]	@ (8002c00 <HAL_UART_MspInit+0x3d0>)
 8002ad6:	f043 0320 	orr.w	r3, r3, #32
 8002ada:	6453      	str	r3, [r2, #68]	@ 0x44
 8002adc:	4b48      	ldr	r3, [pc, #288]	@ (8002c00 <HAL_UART_MspInit+0x3d0>)
 8002ade:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ae0:	f003 0320 	and.w	r3, r3, #32
 8002ae4:	60fb      	str	r3, [r7, #12]
 8002ae6:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002ae8:	2300      	movs	r3, #0
 8002aea:	60bb      	str	r3, [r7, #8]
 8002aec:	4b44      	ldr	r3, [pc, #272]	@ (8002c00 <HAL_UART_MspInit+0x3d0>)
 8002aee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002af0:	4a43      	ldr	r2, [pc, #268]	@ (8002c00 <HAL_UART_MspInit+0x3d0>)
 8002af2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002af6:	6313      	str	r3, [r2, #48]	@ 0x30
 8002af8:	4b41      	ldr	r3, [pc, #260]	@ (8002c00 <HAL_UART_MspInit+0x3d0>)
 8002afa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002afc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002b00:	60bb      	str	r3, [r7, #8]
 8002b02:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_9;
 8002b04:	f44f 4384 	mov.w	r3, #16896	@ 0x4200
 8002b08:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b0a:	2302      	movs	r3, #2
 8002b0c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b0e:	2300      	movs	r3, #0
 8002b10:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002b12:	2303      	movs	r3, #3
 8002b14:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8002b16:	2308      	movs	r3, #8
 8002b18:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b1a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002b1e:	4619      	mov	r1, r3
 8002b20:	4838      	ldr	r0, [pc, #224]	@ (8002c04 <HAL_UART_MspInit+0x3d4>)
 8002b22:	f001 fa1f 	bl	8003f64 <HAL_GPIO_Init>
    hdma_usart6_rx.Instance = DMA2_Stream1;
 8002b26:	4b38      	ldr	r3, [pc, #224]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b28:	4a38      	ldr	r2, [pc, #224]	@ (8002c0c <HAL_UART_MspInit+0x3dc>)
 8002b2a:	601a      	str	r2, [r3, #0]
    hdma_usart6_rx.Init.Channel = DMA_CHANNEL_5;
 8002b2c:	4b36      	ldr	r3, [pc, #216]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b2e:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 8002b32:	605a      	str	r2, [r3, #4]
    hdma_usart6_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002b34:	4b34      	ldr	r3, [pc, #208]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b36:	2200      	movs	r2, #0
 8002b38:	609a      	str	r2, [r3, #8]
    hdma_usart6_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002b3a:	4b33      	ldr	r3, [pc, #204]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b3c:	2200      	movs	r2, #0
 8002b3e:	60da      	str	r2, [r3, #12]
    hdma_usart6_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002b40:	4b31      	ldr	r3, [pc, #196]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b42:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002b46:	611a      	str	r2, [r3, #16]
    hdma_usart6_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002b48:	4b2f      	ldr	r3, [pc, #188]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	615a      	str	r2, [r3, #20]
    hdma_usart6_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002b4e:	4b2e      	ldr	r3, [pc, #184]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b50:	2200      	movs	r2, #0
 8002b52:	619a      	str	r2, [r3, #24]
    hdma_usart6_rx.Init.Mode = DMA_NORMAL;
 8002b54:	4b2c      	ldr	r3, [pc, #176]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b56:	2200      	movs	r2, #0
 8002b58:	61da      	str	r2, [r3, #28]
    hdma_usart6_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002b5a:	4b2b      	ldr	r3, [pc, #172]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b5c:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002b60:	621a      	str	r2, [r3, #32]
    hdma_usart6_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002b62:	4b29      	ldr	r3, [pc, #164]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b64:	2200      	movs	r2, #0
 8002b66:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart6_rx) != HAL_OK)
 8002b68:	4827      	ldr	r0, [pc, #156]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b6a:	f000 fdf9 	bl	8003760 <HAL_DMA_Init>
 8002b6e:	4603      	mov	r3, r0
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d001      	beq.n	8002b78 <HAL_UART_MspInit+0x348>
      Error_Handler();
 8002b74:	f7fe fe42 	bl	80017fc <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart6_rx);
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	4a23      	ldr	r2, [pc, #140]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b7c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002b7e:	4a22      	ldr	r2, [pc, #136]	@ (8002c08 <HAL_UART_MspInit+0x3d8>)
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	6393      	str	r3, [r2, #56]	@ 0x38
    hdma_usart6_tx.Instance = DMA2_Stream6;
 8002b84:	4b22      	ldr	r3, [pc, #136]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002b86:	4a23      	ldr	r2, [pc, #140]	@ (8002c14 <HAL_UART_MspInit+0x3e4>)
 8002b88:	601a      	str	r2, [r3, #0]
    hdma_usart6_tx.Init.Channel = DMA_CHANNEL_5;
 8002b8a:	4b21      	ldr	r3, [pc, #132]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002b8c:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 8002b90:	605a      	str	r2, [r3, #4]
    hdma_usart6_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002b92:	4b1f      	ldr	r3, [pc, #124]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002b94:	2240      	movs	r2, #64	@ 0x40
 8002b96:	609a      	str	r2, [r3, #8]
    hdma_usart6_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002b98:	4b1d      	ldr	r3, [pc, #116]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	60da      	str	r2, [r3, #12]
    hdma_usart6_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002b9e:	4b1c      	ldr	r3, [pc, #112]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002ba0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002ba4:	611a      	str	r2, [r3, #16]
    hdma_usart6_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002ba6:	4b1a      	ldr	r3, [pc, #104]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002ba8:	2200      	movs	r2, #0
 8002baa:	615a      	str	r2, [r3, #20]
    hdma_usart6_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002bac:	4b18      	ldr	r3, [pc, #96]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bae:	2200      	movs	r2, #0
 8002bb0:	619a      	str	r2, [r3, #24]
    hdma_usart6_tx.Init.Mode = DMA_NORMAL;
 8002bb2:	4b17      	ldr	r3, [pc, #92]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	61da      	str	r2, [r3, #28]
    hdma_usart6_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002bb8:	4b15      	ldr	r3, [pc, #84]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bba:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002bbe:	621a      	str	r2, [r3, #32]
    hdma_usart6_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002bc0:	4b13      	ldr	r3, [pc, #76]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bc2:	2200      	movs	r2, #0
 8002bc4:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart6_tx) != HAL_OK)
 8002bc6:	4812      	ldr	r0, [pc, #72]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bc8:	f000 fdca 	bl	8003760 <HAL_DMA_Init>
 8002bcc:	4603      	mov	r3, r0
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d001      	beq.n	8002bd6 <HAL_UART_MspInit+0x3a6>
      Error_Handler();
 8002bd2:	f7fe fe13 	bl	80017fc <Error_Handler>
    __HAL_LINKDMA(huart,hdmatx,hdma_usart6_tx);
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	4a0d      	ldr	r2, [pc, #52]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bda:	639a      	str	r2, [r3, #56]	@ 0x38
 8002bdc:	4a0c      	ldr	r2, [pc, #48]	@ (8002c10 <HAL_UART_MspInit+0x3e0>)
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_NVIC_SetPriority(USART6_IRQn, 5, 0);
 8002be2:	2200      	movs	r2, #0
 8002be4:	2105      	movs	r1, #5
 8002be6:	2047      	movs	r0, #71	@ 0x47
 8002be8:	f000 fd83 	bl	80036f2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART6_IRQn);
 8002bec:	2047      	movs	r0, #71	@ 0x47
 8002bee:	f000 fd9c 	bl	800372a <HAL_NVIC_EnableIRQ>
}
 8002bf2:	bf00      	nop
 8002bf4:	3738      	adds	r7, #56	@ 0x38
 8002bf6:	46bd      	mov	sp, r7
 8002bf8:	bd80      	pop	{r7, pc}
 8002bfa:	bf00      	nop
 8002bfc:	40011400 	.word	0x40011400
 8002c00:	40023800 	.word	0x40023800
 8002c04:	40021800 	.word	0x40021800
 8002c08:	2000097c 	.word	0x2000097c
 8002c0c:	40026428 	.word	0x40026428
 8002c10:	200009dc 	.word	0x200009dc
 8002c14:	400264a0 	.word	0x400264a0

08002c18 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002c18:	b580      	push	{r7, lr}
 8002c1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 8002c1c:	f002 f93c 	bl	8004e98 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002c20:	bf00      	nop
 8002c22:	e7fd      	b.n	8002c20 <NMI_Handler+0x8>

08002c24 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002c24:	b480      	push	{r7}
 8002c26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002c28:	bf00      	nop
 8002c2a:	e7fd      	b.n	8002c28 <HardFault_Handler+0x4>

08002c2c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002c2c:	b480      	push	{r7}
 8002c2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002c30:	bf00      	nop
 8002c32:	e7fd      	b.n	8002c30 <MemManage_Handler+0x4>

08002c34 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002c34:	b480      	push	{r7}
 8002c36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002c38:	bf00      	nop
 8002c3a:	e7fd      	b.n	8002c38 <BusFault_Handler+0x4>

08002c3c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002c3c:	b480      	push	{r7}
 8002c3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002c40:	bf00      	nop
 8002c42:	e7fd      	b.n	8002c40 <UsageFault_Handler+0x4>

08002c44 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002c44:	b480      	push	{r7}
 8002c46:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002c48:	bf00      	nop
 8002c4a:	46bd      	mov	sp, r7
 8002c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c50:	4770      	bx	lr

08002c52 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002c52:	b580      	push	{r7, lr}
 8002c54:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002c56:	f000 f91d 	bl	8002e94 <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 8002c5a:	f006 f815 	bl	8008c88 <xTaskGetSchedulerState>
 8002c5e:	4603      	mov	r3, r0
 8002c60:	2b01      	cmp	r3, #1
 8002c62:	d001      	beq.n	8002c68 <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 8002c64:	f006 fe10 	bl	8009888 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002c68:	bf00      	nop
 8002c6a:	bd80      	pop	{r7, pc}

08002c6c <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002c6c:	b580      	push	{r7, lr}
 8002c6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 8002c70:	2008      	movs	r0, #8
 8002c72:	f001 fb45 	bl	8004300 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002c76:	bf00      	nop
 8002c78:	bd80      	pop	{r7, pc}

08002c7a <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8002c7a:	b580      	push	{r7, lr}
 8002c7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(INT1_ACCEL_Pin_Pin);
 8002c7e:	2010      	movs	r0, #16
 8002c80:	f001 fb3e 	bl	8004300 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 8002c84:	bf00      	nop
 8002c86:	bd80      	pop	{r7, pc}

08002c88 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
 8002c8c:	4802      	ldr	r0, [pc, #8]	@ (8002c98 <DMA1_Stream1_IRQHandler+0x10>)
 8002c8e:	f000 feff 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 8002c92:	bf00      	nop
 8002c94:	bd80      	pop	{r7, pc}
 8002c96:	bf00      	nop
 8002c98:	2000091c 	.word	0x2000091c

08002c9c <CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles CAN1 RX0 interrupts.
  */
void CAN1_RX0_IRQHandler(void)
{
 8002c9c:	b580      	push	{r7, lr}
 8002c9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX0_IRQn 0 */

  /* USER CODE END CAN1_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8002ca0:	4802      	ldr	r0, [pc, #8]	@ (8002cac <CAN1_RX0_IRQHandler+0x10>)
 8002ca2:	f000 fa12 	bl	80030ca <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX0_IRQn 1 */

  /* USER CODE END CAN1_RX0_IRQn 1 */
}
 8002ca6:	bf00      	nop
 8002ca8:	bd80      	pop	{r7, pc}
 8002caa:	bf00      	nop
 8002cac:	20000400 	.word	0x20000400

08002cb0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002cb4:	4802      	ldr	r0, [pc, #8]	@ (8002cc0 <USART1_IRQHandler+0x10>)
 8002cb6:	f003 f9f5 	bl	80060a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002cba:	bf00      	nop
 8002cbc:	bd80      	pop	{r7, pc}
 8002cbe:	bf00      	nop
 8002cc0:	20000784 	.word	0x20000784

08002cc4 <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 8002cc4:	b580      	push	{r7, lr}
 8002cc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch3);
 8002cc8:	4802      	ldr	r0, [pc, #8]	@ (8002cd4 <DMA1_Stream7_IRQHandler+0x10>)
 8002cca:	f000 fee1 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8002cce:	bf00      	nop
 8002cd0:	bd80      	pop	{r7, pc}
 8002cd2:	bf00      	nop
 8002cd4:	200006c4 	.word	0x200006c4

08002cd8 <DMA2_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA2 stream1 global interrupt.
  */
void DMA2_Stream1_IRQHandler(void)
{
 8002cd8:	b580      	push	{r7, lr}
 8002cda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */

  /* USER CODE END DMA2_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart6_rx);
 8002cdc:	4802      	ldr	r0, [pc, #8]	@ (8002ce8 <DMA2_Stream1_IRQHandler+0x10>)
 8002cde:	f000 fed7 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */

  /* USER CODE END DMA2_Stream1_IRQn 1 */
}
 8002ce2:	bf00      	nop
 8002ce4:	bd80      	pop	{r7, pc}
 8002ce6:	bf00      	nop
 8002ce8:	2000097c 	.word	0x2000097c

08002cec <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8002cec:	b580      	push	{r7, lr}
 8002cee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim8_ch1_ch2_ch3);
 8002cf0:	4802      	ldr	r0, [pc, #8]	@ (8002cfc <DMA2_Stream2_IRQHandler+0x10>)
 8002cf2:	f000 fecd 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8002cf6:	bf00      	nop
 8002cf8:	bd80      	pop	{r7, pc}
 8002cfa:	bf00      	nop
 8002cfc:	20000724 	.word	0x20000724

08002d00 <DMA2_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA2 stream3 global interrupt.
  */
void DMA2_Stream3_IRQHandler(void)
{
 8002d00:	b580      	push	{r7, lr}
 8002d02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 8002d04:	4802      	ldr	r0, [pc, #8]	@ (8002d10 <DMA2_Stream3_IRQHandler+0x10>)
 8002d06:	f000 fec3 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */

  /* USER CODE END DMA2_Stream3_IRQn 1 */
}
 8002d0a:	bf00      	nop
 8002d0c:	bd80      	pop	{r7, pc}
 8002d0e:	bf00      	nop
 8002d10:	20000664 	.word	0x20000664

08002d14 <CAN2_RX0_IRQHandler>:

/**
  * @brief This function handles CAN2 RX0 interrupts.
  */
void CAN2_RX0_IRQHandler(void)
{
 8002d14:	b580      	push	{r7, lr}
 8002d16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_RX0_IRQn 0 */

  /* USER CODE END CAN2_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8002d18:	4802      	ldr	r0, [pc, #8]	@ (8002d24 <CAN2_RX0_IRQHandler+0x10>)
 8002d1a:	f000 f9d6 	bl	80030ca <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_RX0_IRQn 1 */

  /* USER CODE END CAN2_RX0_IRQn 1 */
}
 8002d1e:	bf00      	nop
 8002d20:	bd80      	pop	{r7, pc}
 8002d22:	bf00      	nop
 8002d24:	20000428 	.word	0x20000428

08002d28 <DMA2_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA2 stream5 global interrupt.
  */
void DMA2_Stream5_IRQHandler(void)
{
 8002d28:	b580      	push	{r7, lr}
 8002d2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */

  /* USER CODE END DMA2_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8002d2c:	4802      	ldr	r0, [pc, #8]	@ (8002d38 <DMA2_Stream5_IRQHandler+0x10>)
 8002d2e:	f000 feaf 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */

  /* USER CODE END DMA2_Stream5_IRQn 1 */
}
 8002d32:	bf00      	nop
 8002d34:	bd80      	pop	{r7, pc}
 8002d36:	bf00      	nop
 8002d38:	200008bc 	.word	0x200008bc

08002d3c <DMA2_Stream6_IRQHandler>:

/**
  * @brief This function handles DMA2 stream6 global interrupt.
  */
void DMA2_Stream6_IRQHandler(void)
{
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */

  /* USER CODE END DMA2_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart6_tx);
 8002d40:	4802      	ldr	r0, [pc, #8]	@ (8002d4c <DMA2_Stream6_IRQHandler+0x10>)
 8002d42:	f000 fea5 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */

  /* USER CODE END DMA2_Stream6_IRQn 1 */
}
 8002d46:	bf00      	nop
 8002d48:	bd80      	pop	{r7, pc}
 8002d4a:	bf00      	nop
 8002d4c:	200009dc 	.word	0x200009dc

08002d50 <DMA2_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA2 stream7 global interrupt.
  */
void DMA2_Stream7_IRQHandler(void)
{
 8002d50:	b580      	push	{r7, lr}
 8002d52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 8002d54:	4802      	ldr	r0, [pc, #8]	@ (8002d60 <DMA2_Stream7_IRQHandler+0x10>)
 8002d56:	f000 fe9b 	bl	8003a90 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */

  /* USER CODE END DMA2_Stream7_IRQn 1 */
}
 8002d5a:	bf00      	nop
 8002d5c:	bd80      	pop	{r7, pc}
 8002d5e:	bf00      	nop
 8002d60:	2000085c 	.word	0x2000085c

08002d64 <USART6_IRQHandler>:

/**
  * @brief This function handles USART6 global interrupt.
  */
void USART6_IRQHandler(void)
{
 8002d64:	b580      	push	{r7, lr}
 8002d66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART6_IRQn 0 */

  /* USER CODE END USART6_IRQn 0 */
  HAL_UART_IRQHandler(&huart6);
 8002d68:	4802      	ldr	r0, [pc, #8]	@ (8002d74 <USART6_IRQHandler+0x10>)
 8002d6a:	f003 f99b 	bl	80060a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART6_IRQn 1 */

  /* USER CODE END USART6_IRQn 1 */
}
 8002d6e:	bf00      	nop
 8002d70:	bd80      	pop	{r7, pc}
 8002d72:	bf00      	nop
 8002d74:	20000814 	.word	0x20000814

08002d78 <SystemInit>:
 8002d78:	b480      	push	{r7}
 8002d7a:	af00      	add	r7, sp, #0
 8002d7c:	4b06      	ldr	r3, [pc, #24]	@ (8002d98 <SystemInit+0x20>)
 8002d7e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002d82:	4a05      	ldr	r2, [pc, #20]	@ (8002d98 <SystemInit+0x20>)
 8002d84:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002d88:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002d8c:	bf00      	nop
 8002d8e:	46bd      	mov	sp, r7
 8002d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d94:	4770      	bx	lr
 8002d96:	bf00      	nop
 8002d98:	e000ed00 	.word	0xe000ed00

08002d9c <Reset_Handler>:
 8002d9c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002dd4 <LoopFillZerobss+0xe>
 8002da0:	f7ff ffea 	bl	8002d78 <SystemInit>
 8002da4:	480c      	ldr	r0, [pc, #48]	@ (8002dd8 <LoopFillZerobss+0x12>)
 8002da6:	490d      	ldr	r1, [pc, #52]	@ (8002ddc <LoopFillZerobss+0x16>)
 8002da8:	4a0d      	ldr	r2, [pc, #52]	@ (8002de0 <LoopFillZerobss+0x1a>)
 8002daa:	2300      	movs	r3, #0
 8002dac:	e002      	b.n	8002db4 <LoopCopyDataInit>

08002dae <CopyDataInit>:
 8002dae:	58d4      	ldr	r4, [r2, r3]
 8002db0:	50c4      	str	r4, [r0, r3]
 8002db2:	3304      	adds	r3, #4

08002db4 <LoopCopyDataInit>:
 8002db4:	18c4      	adds	r4, r0, r3
 8002db6:	428c      	cmp	r4, r1
 8002db8:	d3f9      	bcc.n	8002dae <CopyDataInit>
 8002dba:	4a0a      	ldr	r2, [pc, #40]	@ (8002de4 <LoopFillZerobss+0x1e>)
 8002dbc:	4c0a      	ldr	r4, [pc, #40]	@ (8002de8 <LoopFillZerobss+0x22>)
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	e001      	b.n	8002dc6 <LoopFillZerobss>

08002dc2 <FillZerobss>:
 8002dc2:	6013      	str	r3, [r2, #0]
 8002dc4:	3204      	adds	r2, #4

08002dc6 <LoopFillZerobss>:
 8002dc6:	42a2      	cmp	r2, r4
 8002dc8:	d3fb      	bcc.n	8002dc2 <FillZerobss>
 8002dca:	f007 f83b 	bl	8009e44 <__libc_init_array>
 8002dce:	f7fd fd73 	bl	80008b8 <main>
 8002dd2:	4770      	bx	lr
 8002dd4:	20020000 	.word	0x20020000
 8002dd8:	20000000 	.word	0x20000000
 8002ddc:	200001ac 	.word	0x200001ac
 8002de0:	0800a07c 	.word	0x0800a07c
 8002de4:	200001b0 	.word	0x200001b0
 8002de8:	200055f8 	.word	0x200055f8

08002dec <ADC_IRQHandler>:
 8002dec:	e7fe      	b.n	8002dec <ADC_IRQHandler>
	...

08002df0 <HAL_Init>:
 8002df0:	b580      	push	{r7, lr}
 8002df2:	af00      	add	r7, sp, #0
 8002df4:	4b0e      	ldr	r3, [pc, #56]	@ (8002e30 <HAL_Init+0x40>)
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	4a0d      	ldr	r2, [pc, #52]	@ (8002e30 <HAL_Init+0x40>)
 8002dfa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002dfe:	6013      	str	r3, [r2, #0]
 8002e00:	4b0b      	ldr	r3, [pc, #44]	@ (8002e30 <HAL_Init+0x40>)
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	4a0a      	ldr	r2, [pc, #40]	@ (8002e30 <HAL_Init+0x40>)
 8002e06:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002e0a:	6013      	str	r3, [r2, #0]
 8002e0c:	4b08      	ldr	r3, [pc, #32]	@ (8002e30 <HAL_Init+0x40>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	4a07      	ldr	r2, [pc, #28]	@ (8002e30 <HAL_Init+0x40>)
 8002e12:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002e16:	6013      	str	r3, [r2, #0]
 8002e18:	2003      	movs	r0, #3
 8002e1a:	f000 fc5f 	bl	80036dc <HAL_NVIC_SetPriorityGrouping>
 8002e1e:	200f      	movs	r0, #15
 8002e20:	f000 f808 	bl	8002e34 <HAL_InitTick>
 8002e24:	f7ff f932 	bl	800208c <HAL_MspInit>
 8002e28:	2300      	movs	r3, #0
 8002e2a:	4618      	mov	r0, r3
 8002e2c:	bd80      	pop	{r7, pc}
 8002e2e:	bf00      	nop
 8002e30:	40023c00 	.word	0x40023c00

08002e34 <HAL_InitTick>:
 8002e34:	b580      	push	{r7, lr}
 8002e36:	b082      	sub	sp, #8
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	6078      	str	r0, [r7, #4]
 8002e3c:	4b12      	ldr	r3, [pc, #72]	@ (8002e88 <HAL_InitTick+0x54>)
 8002e3e:	681a      	ldr	r2, [r3, #0]
 8002e40:	4b12      	ldr	r3, [pc, #72]	@ (8002e8c <HAL_InitTick+0x58>)
 8002e42:	781b      	ldrb	r3, [r3, #0]
 8002e44:	4619      	mov	r1, r3
 8002e46:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002e4a:	fbb3 f3f1 	udiv	r3, r3, r1
 8002e4e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e52:	4618      	mov	r0, r3
 8002e54:	f000 fc77 	bl	8003746 <HAL_SYSTICK_Config>
 8002e58:	4603      	mov	r3, r0
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d001      	beq.n	8002e62 <HAL_InitTick+0x2e>
 8002e5e:	2301      	movs	r3, #1
 8002e60:	e00e      	b.n	8002e80 <HAL_InitTick+0x4c>
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	2b0f      	cmp	r3, #15
 8002e66:	d80a      	bhi.n	8002e7e <HAL_InitTick+0x4a>
 8002e68:	2200      	movs	r2, #0
 8002e6a:	6879      	ldr	r1, [r7, #4]
 8002e6c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002e70:	f000 fc3f 	bl	80036f2 <HAL_NVIC_SetPriority>
 8002e74:	4a06      	ldr	r2, [pc, #24]	@ (8002e90 <HAL_InitTick+0x5c>)
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	6013      	str	r3, [r2, #0]
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	e000      	b.n	8002e80 <HAL_InitTick+0x4c>
 8002e7e:	2301      	movs	r3, #1
 8002e80:	4618      	mov	r0, r3
 8002e82:	3708      	adds	r7, #8
 8002e84:	46bd      	mov	sp, r7
 8002e86:	bd80      	pop	{r7, pc}
 8002e88:	2000014c 	.word	0x2000014c
 8002e8c:	20000154 	.word	0x20000154
 8002e90:	20000150 	.word	0x20000150

08002e94 <HAL_IncTick>:
 8002e94:	b480      	push	{r7}
 8002e96:	af00      	add	r7, sp, #0
 8002e98:	4b06      	ldr	r3, [pc, #24]	@ (8002eb4 <HAL_IncTick+0x20>)
 8002e9a:	781b      	ldrb	r3, [r3, #0]
 8002e9c:	461a      	mov	r2, r3
 8002e9e:	4b06      	ldr	r3, [pc, #24]	@ (8002eb8 <HAL_IncTick+0x24>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	4413      	add	r3, r2
 8002ea4:	4a04      	ldr	r2, [pc, #16]	@ (8002eb8 <HAL_IncTick+0x24>)
 8002ea6:	6013      	str	r3, [r2, #0]
 8002ea8:	bf00      	nop
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eb0:	4770      	bx	lr
 8002eb2:	bf00      	nop
 8002eb4:	20000154 	.word	0x20000154
 8002eb8:	20000acc 	.word	0x20000acc

08002ebc <HAL_GetTick>:
 8002ebc:	b480      	push	{r7}
 8002ebe:	af00      	add	r7, sp, #0
 8002ec0:	4b03      	ldr	r3, [pc, #12]	@ (8002ed0 <HAL_GetTick+0x14>)
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ecc:	4770      	bx	lr
 8002ece:	bf00      	nop
 8002ed0:	20000acc 	.word	0x20000acc

08002ed4 <HAL_CAN_Init>:
 8002ed4:	b580      	push	{r7, lr}
 8002ed6:	b084      	sub	sp, #16
 8002ed8:	af00      	add	r7, sp, #0
 8002eda:	6078      	str	r0, [r7, #4]
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d101      	bne.n	8002ee6 <HAL_CAN_Init+0x12>
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	e0ed      	b.n	80030c2 <HAL_CAN_Init+0x1ee>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002eec:	b2db      	uxtb	r3, r3
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d102      	bne.n	8002ef8 <HAL_CAN_Init+0x24>
 8002ef2:	6878      	ldr	r0, [r7, #4]
 8002ef4:	f7ff f8f6 	bl	80020e4 <HAL_CAN_MspInit>
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	681a      	ldr	r2, [r3, #0]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	f042 0201 	orr.w	r2, r2, #1
 8002f06:	601a      	str	r2, [r3, #0]
 8002f08:	f7ff ffd8 	bl	8002ebc <HAL_GetTick>
 8002f0c:	60f8      	str	r0, [r7, #12]
 8002f0e:	e012      	b.n	8002f36 <HAL_CAN_Init+0x62>
 8002f10:	f7ff ffd4 	bl	8002ebc <HAL_GetTick>
 8002f14:	4602      	mov	r2, r0
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	1ad3      	subs	r3, r2, r3
 8002f1a:	2b0a      	cmp	r3, #10
 8002f1c:	d90b      	bls.n	8002f36 <HAL_CAN_Init+0x62>
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f22:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	625a      	str	r2, [r3, #36]	@ 0x24
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	2205      	movs	r2, #5
 8002f2e:	f883 2020 	strb.w	r2, [r3, #32]
 8002f32:	2301      	movs	r3, #1
 8002f34:	e0c5      	b.n	80030c2 <HAL_CAN_Init+0x1ee>
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	685b      	ldr	r3, [r3, #4]
 8002f3c:	f003 0301 	and.w	r3, r3, #1
 8002f40:	2b00      	cmp	r3, #0
 8002f42:	d0e5      	beq.n	8002f10 <HAL_CAN_Init+0x3c>
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	681a      	ldr	r2, [r3, #0]
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	f022 0202 	bic.w	r2, r2, #2
 8002f52:	601a      	str	r2, [r3, #0]
 8002f54:	f7ff ffb2 	bl	8002ebc <HAL_GetTick>
 8002f58:	60f8      	str	r0, [r7, #12]
 8002f5a:	e012      	b.n	8002f82 <HAL_CAN_Init+0xae>
 8002f5c:	f7ff ffae 	bl	8002ebc <HAL_GetTick>
 8002f60:	4602      	mov	r2, r0
 8002f62:	68fb      	ldr	r3, [r7, #12]
 8002f64:	1ad3      	subs	r3, r2, r3
 8002f66:	2b0a      	cmp	r3, #10
 8002f68:	d90b      	bls.n	8002f82 <HAL_CAN_Init+0xae>
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f6e:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	625a      	str	r2, [r3, #36]	@ 0x24
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	2205      	movs	r2, #5
 8002f7a:	f883 2020 	strb.w	r2, [r3, #32]
 8002f7e:	2301      	movs	r3, #1
 8002f80:	e09f      	b.n	80030c2 <HAL_CAN_Init+0x1ee>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	685b      	ldr	r3, [r3, #4]
 8002f88:	f003 0302 	and.w	r3, r3, #2
 8002f8c:	2b00      	cmp	r3, #0
 8002f8e:	d1e5      	bne.n	8002f5c <HAL_CAN_Init+0x88>
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	7e1b      	ldrb	r3, [r3, #24]
 8002f94:	2b01      	cmp	r3, #1
 8002f96:	d108      	bne.n	8002faa <HAL_CAN_Init+0xd6>
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	681a      	ldr	r2, [r3, #0]
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8002fa6:	601a      	str	r2, [r3, #0]
 8002fa8:	e007      	b.n	8002fba <HAL_CAN_Init+0xe6>
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	681a      	ldr	r2, [r3, #0]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002fb8:	601a      	str	r2, [r3, #0]
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	7e5b      	ldrb	r3, [r3, #25]
 8002fbe:	2b01      	cmp	r3, #1
 8002fc0:	d108      	bne.n	8002fd4 <HAL_CAN_Init+0x100>
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	681a      	ldr	r2, [r3, #0]
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002fd0:	601a      	str	r2, [r3, #0]
 8002fd2:	e007      	b.n	8002fe4 <HAL_CAN_Init+0x110>
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	681a      	ldr	r2, [r3, #0]
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002fe2:	601a      	str	r2, [r3, #0]
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	7e9b      	ldrb	r3, [r3, #26]
 8002fe8:	2b01      	cmp	r3, #1
 8002fea:	d108      	bne.n	8002ffe <HAL_CAN_Init+0x12a>
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	681a      	ldr	r2, [r3, #0]
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	f042 0220 	orr.w	r2, r2, #32
 8002ffa:	601a      	str	r2, [r3, #0]
 8002ffc:	e007      	b.n	800300e <HAL_CAN_Init+0x13a>
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	681a      	ldr	r2, [r3, #0]
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	f022 0220 	bic.w	r2, r2, #32
 800300c:	601a      	str	r2, [r3, #0]
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	7edb      	ldrb	r3, [r3, #27]
 8003012:	2b01      	cmp	r3, #1
 8003014:	d108      	bne.n	8003028 <HAL_CAN_Init+0x154>
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	681a      	ldr	r2, [r3, #0]
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	f022 0210 	bic.w	r2, r2, #16
 8003024:	601a      	str	r2, [r3, #0]
 8003026:	e007      	b.n	8003038 <HAL_CAN_Init+0x164>
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	681a      	ldr	r2, [r3, #0]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	f042 0210 	orr.w	r2, r2, #16
 8003036:	601a      	str	r2, [r3, #0]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	7f1b      	ldrb	r3, [r3, #28]
 800303c:	2b01      	cmp	r3, #1
 800303e:	d108      	bne.n	8003052 <HAL_CAN_Init+0x17e>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	681a      	ldr	r2, [r3, #0]
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	f042 0208 	orr.w	r2, r2, #8
 800304e:	601a      	str	r2, [r3, #0]
 8003050:	e007      	b.n	8003062 <HAL_CAN_Init+0x18e>
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	681a      	ldr	r2, [r3, #0]
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	f022 0208 	bic.w	r2, r2, #8
 8003060:	601a      	str	r2, [r3, #0]
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	7f5b      	ldrb	r3, [r3, #29]
 8003066:	2b01      	cmp	r3, #1
 8003068:	d108      	bne.n	800307c <HAL_CAN_Init+0x1a8>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	681a      	ldr	r2, [r3, #0]
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	f042 0204 	orr.w	r2, r2, #4
 8003078:	601a      	str	r2, [r3, #0]
 800307a:	e007      	b.n	800308c <HAL_CAN_Init+0x1b8>
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	681a      	ldr	r2, [r3, #0]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	f022 0204 	bic.w	r2, r2, #4
 800308a:	601a      	str	r2, [r3, #0]
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	689a      	ldr	r2, [r3, #8]
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	68db      	ldr	r3, [r3, #12]
 8003094:	431a      	orrs	r2, r3
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	691b      	ldr	r3, [r3, #16]
 800309a:	431a      	orrs	r2, r3
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	695b      	ldr	r3, [r3, #20]
 80030a0:	ea42 0103 	orr.w	r1, r2, r3
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	685b      	ldr	r3, [r3, #4]
 80030a8:	1e5a      	subs	r2, r3, #1
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	430a      	orrs	r2, r1
 80030b0:	61da      	str	r2, [r3, #28]
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	2200      	movs	r2, #0
 80030b6:	625a      	str	r2, [r3, #36]	@ 0x24
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2201      	movs	r2, #1
 80030bc:	f883 2020 	strb.w	r2, [r3, #32]
 80030c0:	2300      	movs	r3, #0
 80030c2:	4618      	mov	r0, r3
 80030c4:	3710      	adds	r7, #16
 80030c6:	46bd      	mov	sp, r7
 80030c8:	bd80      	pop	{r7, pc}

080030ca <HAL_CAN_IRQHandler>:
 80030ca:	b580      	push	{r7, lr}
 80030cc:	b08a      	sub	sp, #40	@ 0x28
 80030ce:	af00      	add	r7, sp, #0
 80030d0:	6078      	str	r0, [r7, #4]
 80030d2:	2300      	movs	r3, #0
 80030d4:	627b      	str	r3, [r7, #36]	@ 0x24
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	695b      	ldr	r3, [r3, #20]
 80030dc:	623b      	str	r3, [r7, #32]
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	685b      	ldr	r3, [r3, #4]
 80030e4:	61fb      	str	r3, [r7, #28]
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	689b      	ldr	r3, [r3, #8]
 80030ec:	61bb      	str	r3, [r7, #24]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	68db      	ldr	r3, [r3, #12]
 80030f4:	617b      	str	r3, [r7, #20]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	691b      	ldr	r3, [r3, #16]
 80030fc:	613b      	str	r3, [r7, #16]
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	699b      	ldr	r3, [r3, #24]
 8003104:	60fb      	str	r3, [r7, #12]
 8003106:	6a3b      	ldr	r3, [r7, #32]
 8003108:	f003 0301 	and.w	r3, r3, #1
 800310c:	2b00      	cmp	r3, #0
 800310e:	d07c      	beq.n	800320a <HAL_CAN_IRQHandler+0x140>
 8003110:	69bb      	ldr	r3, [r7, #24]
 8003112:	f003 0301 	and.w	r3, r3, #1
 8003116:	2b00      	cmp	r3, #0
 8003118:	d023      	beq.n	8003162 <HAL_CAN_IRQHandler+0x98>
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	2201      	movs	r2, #1
 8003120:	609a      	str	r2, [r3, #8]
 8003122:	69bb      	ldr	r3, [r7, #24]
 8003124:	f003 0302 	and.w	r3, r3, #2
 8003128:	2b00      	cmp	r3, #0
 800312a:	d003      	beq.n	8003134 <HAL_CAN_IRQHandler+0x6a>
 800312c:	6878      	ldr	r0, [r7, #4]
 800312e:	f000 f983 	bl	8003438 <HAL_CAN_TxMailbox0CompleteCallback>
 8003132:	e016      	b.n	8003162 <HAL_CAN_IRQHandler+0x98>
 8003134:	69bb      	ldr	r3, [r7, #24]
 8003136:	f003 0304 	and.w	r3, r3, #4
 800313a:	2b00      	cmp	r3, #0
 800313c:	d004      	beq.n	8003148 <HAL_CAN_IRQHandler+0x7e>
 800313e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003140:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8003144:	627b      	str	r3, [r7, #36]	@ 0x24
 8003146:	e00c      	b.n	8003162 <HAL_CAN_IRQHandler+0x98>
 8003148:	69bb      	ldr	r3, [r7, #24]
 800314a:	f003 0308 	and.w	r3, r3, #8
 800314e:	2b00      	cmp	r3, #0
 8003150:	d004      	beq.n	800315c <HAL_CAN_IRQHandler+0x92>
 8003152:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003154:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003158:	627b      	str	r3, [r7, #36]	@ 0x24
 800315a:	e002      	b.n	8003162 <HAL_CAN_IRQHandler+0x98>
 800315c:	6878      	ldr	r0, [r7, #4]
 800315e:	f000 f989 	bl	8003474 <HAL_CAN_TxMailbox0AbortCallback>
 8003162:	69bb      	ldr	r3, [r7, #24]
 8003164:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003168:	2b00      	cmp	r3, #0
 800316a:	d024      	beq.n	80031b6 <HAL_CAN_IRQHandler+0xec>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003174:	609a      	str	r2, [r3, #8]
 8003176:	69bb      	ldr	r3, [r7, #24]
 8003178:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800317c:	2b00      	cmp	r3, #0
 800317e:	d003      	beq.n	8003188 <HAL_CAN_IRQHandler+0xbe>
 8003180:	6878      	ldr	r0, [r7, #4]
 8003182:	f000 f963 	bl	800344c <HAL_CAN_TxMailbox1CompleteCallback>
 8003186:	e016      	b.n	80031b6 <HAL_CAN_IRQHandler+0xec>
 8003188:	69bb      	ldr	r3, [r7, #24]
 800318a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800318e:	2b00      	cmp	r3, #0
 8003190:	d004      	beq.n	800319c <HAL_CAN_IRQHandler+0xd2>
 8003192:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003194:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8003198:	627b      	str	r3, [r7, #36]	@ 0x24
 800319a:	e00c      	b.n	80031b6 <HAL_CAN_IRQHandler+0xec>
 800319c:	69bb      	ldr	r3, [r7, #24]
 800319e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d004      	beq.n	80031b0 <HAL_CAN_IRQHandler+0xe6>
 80031a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031a8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80031ac:	627b      	str	r3, [r7, #36]	@ 0x24
 80031ae:	e002      	b.n	80031b6 <HAL_CAN_IRQHandler+0xec>
 80031b0:	6878      	ldr	r0, [r7, #4]
 80031b2:	f000 f969 	bl	8003488 <HAL_CAN_TxMailbox1AbortCallback>
 80031b6:	69bb      	ldr	r3, [r7, #24]
 80031b8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80031bc:	2b00      	cmp	r3, #0
 80031be:	d024      	beq.n	800320a <HAL_CAN_IRQHandler+0x140>
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	681b      	ldr	r3, [r3, #0]
 80031c4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80031c8:	609a      	str	r2, [r3, #8]
 80031ca:	69bb      	ldr	r3, [r7, #24]
 80031cc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	d003      	beq.n	80031dc <HAL_CAN_IRQHandler+0x112>
 80031d4:	6878      	ldr	r0, [r7, #4]
 80031d6:	f000 f943 	bl	8003460 <HAL_CAN_TxMailbox2CompleteCallback>
 80031da:	e016      	b.n	800320a <HAL_CAN_IRQHandler+0x140>
 80031dc:	69bb      	ldr	r3, [r7, #24]
 80031de:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d004      	beq.n	80031f0 <HAL_CAN_IRQHandler+0x126>
 80031e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031e8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80031ec:	627b      	str	r3, [r7, #36]	@ 0x24
 80031ee:	e00c      	b.n	800320a <HAL_CAN_IRQHandler+0x140>
 80031f0:	69bb      	ldr	r3, [r7, #24]
 80031f2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80031f6:	2b00      	cmp	r3, #0
 80031f8:	d004      	beq.n	8003204 <HAL_CAN_IRQHandler+0x13a>
 80031fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031fc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003200:	627b      	str	r3, [r7, #36]	@ 0x24
 8003202:	e002      	b.n	800320a <HAL_CAN_IRQHandler+0x140>
 8003204:	6878      	ldr	r0, [r7, #4]
 8003206:	f000 f949 	bl	800349c <HAL_CAN_TxMailbox2AbortCallback>
 800320a:	6a3b      	ldr	r3, [r7, #32]
 800320c:	f003 0308 	and.w	r3, r3, #8
 8003210:	2b00      	cmp	r3, #0
 8003212:	d00c      	beq.n	800322e <HAL_CAN_IRQHandler+0x164>
 8003214:	697b      	ldr	r3, [r7, #20]
 8003216:	f003 0310 	and.w	r3, r3, #16
 800321a:	2b00      	cmp	r3, #0
 800321c:	d007      	beq.n	800322e <HAL_CAN_IRQHandler+0x164>
 800321e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003220:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003224:	627b      	str	r3, [r7, #36]	@ 0x24
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	2210      	movs	r2, #16
 800322c:	60da      	str	r2, [r3, #12]
 800322e:	6a3b      	ldr	r3, [r7, #32]
 8003230:	f003 0304 	and.w	r3, r3, #4
 8003234:	2b00      	cmp	r3, #0
 8003236:	d00b      	beq.n	8003250 <HAL_CAN_IRQHandler+0x186>
 8003238:	697b      	ldr	r3, [r7, #20]
 800323a:	f003 0308 	and.w	r3, r3, #8
 800323e:	2b00      	cmp	r3, #0
 8003240:	d006      	beq.n	8003250 <HAL_CAN_IRQHandler+0x186>
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	681b      	ldr	r3, [r3, #0]
 8003246:	2208      	movs	r2, #8
 8003248:	60da      	str	r2, [r3, #12]
 800324a:	6878      	ldr	r0, [r7, #4]
 800324c:	f000 f93a 	bl	80034c4 <HAL_CAN_RxFifo0FullCallback>
 8003250:	6a3b      	ldr	r3, [r7, #32]
 8003252:	f003 0302 	and.w	r3, r3, #2
 8003256:	2b00      	cmp	r3, #0
 8003258:	d009      	beq.n	800326e <HAL_CAN_IRQHandler+0x1a4>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	68db      	ldr	r3, [r3, #12]
 8003260:	f003 0303 	and.w	r3, r3, #3
 8003264:	2b00      	cmp	r3, #0
 8003266:	d002      	beq.n	800326e <HAL_CAN_IRQHandler+0x1a4>
 8003268:	6878      	ldr	r0, [r7, #4]
 800326a:	f000 f921 	bl	80034b0 <HAL_CAN_RxFifo0MsgPendingCallback>
 800326e:	6a3b      	ldr	r3, [r7, #32]
 8003270:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003274:	2b00      	cmp	r3, #0
 8003276:	d00c      	beq.n	8003292 <HAL_CAN_IRQHandler+0x1c8>
 8003278:	693b      	ldr	r3, [r7, #16]
 800327a:	f003 0310 	and.w	r3, r3, #16
 800327e:	2b00      	cmp	r3, #0
 8003280:	d007      	beq.n	8003292 <HAL_CAN_IRQHandler+0x1c8>
 8003282:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003284:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003288:	627b      	str	r3, [r7, #36]	@ 0x24
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	2210      	movs	r2, #16
 8003290:	611a      	str	r2, [r3, #16]
 8003292:	6a3b      	ldr	r3, [r7, #32]
 8003294:	f003 0320 	and.w	r3, r3, #32
 8003298:	2b00      	cmp	r3, #0
 800329a:	d00b      	beq.n	80032b4 <HAL_CAN_IRQHandler+0x1ea>
 800329c:	693b      	ldr	r3, [r7, #16]
 800329e:	f003 0308 	and.w	r3, r3, #8
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	d006      	beq.n	80032b4 <HAL_CAN_IRQHandler+0x1ea>
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	2208      	movs	r2, #8
 80032ac:	611a      	str	r2, [r3, #16]
 80032ae:	6878      	ldr	r0, [r7, #4]
 80032b0:	f000 f91c 	bl	80034ec <HAL_CAN_RxFifo1FullCallback>
 80032b4:	6a3b      	ldr	r3, [r7, #32]
 80032b6:	f003 0310 	and.w	r3, r3, #16
 80032ba:	2b00      	cmp	r3, #0
 80032bc:	d009      	beq.n	80032d2 <HAL_CAN_IRQHandler+0x208>
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	691b      	ldr	r3, [r3, #16]
 80032c4:	f003 0303 	and.w	r3, r3, #3
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	d002      	beq.n	80032d2 <HAL_CAN_IRQHandler+0x208>
 80032cc:	6878      	ldr	r0, [r7, #4]
 80032ce:	f000 f903 	bl	80034d8 <HAL_CAN_RxFifo1MsgPendingCallback>
 80032d2:	6a3b      	ldr	r3, [r7, #32]
 80032d4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80032d8:	2b00      	cmp	r3, #0
 80032da:	d00b      	beq.n	80032f4 <HAL_CAN_IRQHandler+0x22a>
 80032dc:	69fb      	ldr	r3, [r7, #28]
 80032de:	f003 0310 	and.w	r3, r3, #16
 80032e2:	2b00      	cmp	r3, #0
 80032e4:	d006      	beq.n	80032f4 <HAL_CAN_IRQHandler+0x22a>
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	2210      	movs	r2, #16
 80032ec:	605a      	str	r2, [r3, #4]
 80032ee:	6878      	ldr	r0, [r7, #4]
 80032f0:	f000 f906 	bl	8003500 <HAL_CAN_SleepCallback>
 80032f4:	6a3b      	ldr	r3, [r7, #32]
 80032f6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d00b      	beq.n	8003316 <HAL_CAN_IRQHandler+0x24c>
 80032fe:	69fb      	ldr	r3, [r7, #28]
 8003300:	f003 0308 	and.w	r3, r3, #8
 8003304:	2b00      	cmp	r3, #0
 8003306:	d006      	beq.n	8003316 <HAL_CAN_IRQHandler+0x24c>
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	2208      	movs	r2, #8
 800330e:	605a      	str	r2, [r3, #4]
 8003310:	6878      	ldr	r0, [r7, #4]
 8003312:	f000 f8ff 	bl	8003514 <HAL_CAN_WakeUpFromRxMsgCallback>
 8003316:	6a3b      	ldr	r3, [r7, #32]
 8003318:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800331c:	2b00      	cmp	r3, #0
 800331e:	d07b      	beq.n	8003418 <HAL_CAN_IRQHandler+0x34e>
 8003320:	69fb      	ldr	r3, [r7, #28]
 8003322:	f003 0304 	and.w	r3, r3, #4
 8003326:	2b00      	cmp	r3, #0
 8003328:	d072      	beq.n	8003410 <HAL_CAN_IRQHandler+0x346>
 800332a:	6a3b      	ldr	r3, [r7, #32]
 800332c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003330:	2b00      	cmp	r3, #0
 8003332:	d008      	beq.n	8003346 <HAL_CAN_IRQHandler+0x27c>
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	f003 0301 	and.w	r3, r3, #1
 800333a:	2b00      	cmp	r3, #0
 800333c:	d003      	beq.n	8003346 <HAL_CAN_IRQHandler+0x27c>
 800333e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003340:	f043 0301 	orr.w	r3, r3, #1
 8003344:	627b      	str	r3, [r7, #36]	@ 0x24
 8003346:	6a3b      	ldr	r3, [r7, #32]
 8003348:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800334c:	2b00      	cmp	r3, #0
 800334e:	d008      	beq.n	8003362 <HAL_CAN_IRQHandler+0x298>
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	f003 0302 	and.w	r3, r3, #2
 8003356:	2b00      	cmp	r3, #0
 8003358:	d003      	beq.n	8003362 <HAL_CAN_IRQHandler+0x298>
 800335a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800335c:	f043 0302 	orr.w	r3, r3, #2
 8003360:	627b      	str	r3, [r7, #36]	@ 0x24
 8003362:	6a3b      	ldr	r3, [r7, #32]
 8003364:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003368:	2b00      	cmp	r3, #0
 800336a:	d008      	beq.n	800337e <HAL_CAN_IRQHandler+0x2b4>
 800336c:	68fb      	ldr	r3, [r7, #12]
 800336e:	f003 0304 	and.w	r3, r3, #4
 8003372:	2b00      	cmp	r3, #0
 8003374:	d003      	beq.n	800337e <HAL_CAN_IRQHandler+0x2b4>
 8003376:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003378:	f043 0304 	orr.w	r3, r3, #4
 800337c:	627b      	str	r3, [r7, #36]	@ 0x24
 800337e:	6a3b      	ldr	r3, [r7, #32]
 8003380:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003384:	2b00      	cmp	r3, #0
 8003386:	d043      	beq.n	8003410 <HAL_CAN_IRQHandler+0x346>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800338e:	2b00      	cmp	r3, #0
 8003390:	d03e      	beq.n	8003410 <HAL_CAN_IRQHandler+0x346>
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003398:	2b60      	cmp	r3, #96	@ 0x60
 800339a:	d02b      	beq.n	80033f4 <HAL_CAN_IRQHandler+0x32a>
 800339c:	2b60      	cmp	r3, #96	@ 0x60
 800339e:	d82e      	bhi.n	80033fe <HAL_CAN_IRQHandler+0x334>
 80033a0:	2b50      	cmp	r3, #80	@ 0x50
 80033a2:	d022      	beq.n	80033ea <HAL_CAN_IRQHandler+0x320>
 80033a4:	2b50      	cmp	r3, #80	@ 0x50
 80033a6:	d82a      	bhi.n	80033fe <HAL_CAN_IRQHandler+0x334>
 80033a8:	2b40      	cmp	r3, #64	@ 0x40
 80033aa:	d019      	beq.n	80033e0 <HAL_CAN_IRQHandler+0x316>
 80033ac:	2b40      	cmp	r3, #64	@ 0x40
 80033ae:	d826      	bhi.n	80033fe <HAL_CAN_IRQHandler+0x334>
 80033b0:	2b30      	cmp	r3, #48	@ 0x30
 80033b2:	d010      	beq.n	80033d6 <HAL_CAN_IRQHandler+0x30c>
 80033b4:	2b30      	cmp	r3, #48	@ 0x30
 80033b6:	d822      	bhi.n	80033fe <HAL_CAN_IRQHandler+0x334>
 80033b8:	2b10      	cmp	r3, #16
 80033ba:	d002      	beq.n	80033c2 <HAL_CAN_IRQHandler+0x2f8>
 80033bc:	2b20      	cmp	r3, #32
 80033be:	d005      	beq.n	80033cc <HAL_CAN_IRQHandler+0x302>
 80033c0:	e01d      	b.n	80033fe <HAL_CAN_IRQHandler+0x334>
 80033c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033c4:	f043 0308 	orr.w	r3, r3, #8
 80033c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80033ca:	e019      	b.n	8003400 <HAL_CAN_IRQHandler+0x336>
 80033cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033ce:	f043 0310 	orr.w	r3, r3, #16
 80033d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80033d4:	e014      	b.n	8003400 <HAL_CAN_IRQHandler+0x336>
 80033d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033d8:	f043 0320 	orr.w	r3, r3, #32
 80033dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80033de:	e00f      	b.n	8003400 <HAL_CAN_IRQHandler+0x336>
 80033e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80033e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80033e8:	e00a      	b.n	8003400 <HAL_CAN_IRQHandler+0x336>
 80033ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033ec:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80033f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80033f2:	e005      	b.n	8003400 <HAL_CAN_IRQHandler+0x336>
 80033f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033f6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80033fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80033fc:	e000      	b.n	8003400 <HAL_CAN_IRQHandler+0x336>
 80033fe:	bf00      	nop
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	699a      	ldr	r2, [r3, #24]
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800340e:	619a      	str	r2, [r3, #24]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	2204      	movs	r2, #4
 8003416:	605a      	str	r2, [r3, #4]
 8003418:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800341a:	2b00      	cmp	r3, #0
 800341c:	d008      	beq.n	8003430 <HAL_CAN_IRQHandler+0x366>
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003422:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003424:	431a      	orrs	r2, r3
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	625a      	str	r2, [r3, #36]	@ 0x24
 800342a:	6878      	ldr	r0, [r7, #4]
 800342c:	f000 f87c 	bl	8003528 <HAL_CAN_ErrorCallback>
 8003430:	bf00      	nop
 8003432:	3728      	adds	r7, #40	@ 0x28
 8003434:	46bd      	mov	sp, r7
 8003436:	bd80      	pop	{r7, pc}

08003438 <HAL_CAN_TxMailbox0CompleteCallback>:
 8003438:	b480      	push	{r7}
 800343a:	b083      	sub	sp, #12
 800343c:	af00      	add	r7, sp, #0
 800343e:	6078      	str	r0, [r7, #4]
 8003440:	bf00      	nop
 8003442:	370c      	adds	r7, #12
 8003444:	46bd      	mov	sp, r7
 8003446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800344a:	4770      	bx	lr

0800344c <HAL_CAN_TxMailbox1CompleteCallback>:
 800344c:	b480      	push	{r7}
 800344e:	b083      	sub	sp, #12
 8003450:	af00      	add	r7, sp, #0
 8003452:	6078      	str	r0, [r7, #4]
 8003454:	bf00      	nop
 8003456:	370c      	adds	r7, #12
 8003458:	46bd      	mov	sp, r7
 800345a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800345e:	4770      	bx	lr

08003460 <HAL_CAN_TxMailbox2CompleteCallback>:
 8003460:	b480      	push	{r7}
 8003462:	b083      	sub	sp, #12
 8003464:	af00      	add	r7, sp, #0
 8003466:	6078      	str	r0, [r7, #4]
 8003468:	bf00      	nop
 800346a:	370c      	adds	r7, #12
 800346c:	46bd      	mov	sp, r7
 800346e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003472:	4770      	bx	lr

08003474 <HAL_CAN_TxMailbox0AbortCallback>:
 8003474:	b480      	push	{r7}
 8003476:	b083      	sub	sp, #12
 8003478:	af00      	add	r7, sp, #0
 800347a:	6078      	str	r0, [r7, #4]
 800347c:	bf00      	nop
 800347e:	370c      	adds	r7, #12
 8003480:	46bd      	mov	sp, r7
 8003482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003486:	4770      	bx	lr

08003488 <HAL_CAN_TxMailbox1AbortCallback>:
 8003488:	b480      	push	{r7}
 800348a:	b083      	sub	sp, #12
 800348c:	af00      	add	r7, sp, #0
 800348e:	6078      	str	r0, [r7, #4]
 8003490:	bf00      	nop
 8003492:	370c      	adds	r7, #12
 8003494:	46bd      	mov	sp, r7
 8003496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349a:	4770      	bx	lr

0800349c <HAL_CAN_TxMailbox2AbortCallback>:
 800349c:	b480      	push	{r7}
 800349e:	b083      	sub	sp, #12
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	6078      	str	r0, [r7, #4]
 80034a4:	bf00      	nop
 80034a6:	370c      	adds	r7, #12
 80034a8:	46bd      	mov	sp, r7
 80034aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ae:	4770      	bx	lr

080034b0 <HAL_CAN_RxFifo0MsgPendingCallback>:
 80034b0:	b480      	push	{r7}
 80034b2:	b083      	sub	sp, #12
 80034b4:	af00      	add	r7, sp, #0
 80034b6:	6078      	str	r0, [r7, #4]
 80034b8:	bf00      	nop
 80034ba:	370c      	adds	r7, #12
 80034bc:	46bd      	mov	sp, r7
 80034be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034c2:	4770      	bx	lr

080034c4 <HAL_CAN_RxFifo0FullCallback>:
 80034c4:	b480      	push	{r7}
 80034c6:	b083      	sub	sp, #12
 80034c8:	af00      	add	r7, sp, #0
 80034ca:	6078      	str	r0, [r7, #4]
 80034cc:	bf00      	nop
 80034ce:	370c      	adds	r7, #12
 80034d0:	46bd      	mov	sp, r7
 80034d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d6:	4770      	bx	lr

080034d8 <HAL_CAN_RxFifo1MsgPendingCallback>:
 80034d8:	b480      	push	{r7}
 80034da:	b083      	sub	sp, #12
 80034dc:	af00      	add	r7, sp, #0
 80034de:	6078      	str	r0, [r7, #4]
 80034e0:	bf00      	nop
 80034e2:	370c      	adds	r7, #12
 80034e4:	46bd      	mov	sp, r7
 80034e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ea:	4770      	bx	lr

080034ec <HAL_CAN_RxFifo1FullCallback>:
 80034ec:	b480      	push	{r7}
 80034ee:	b083      	sub	sp, #12
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	6078      	str	r0, [r7, #4]
 80034f4:	bf00      	nop
 80034f6:	370c      	adds	r7, #12
 80034f8:	46bd      	mov	sp, r7
 80034fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034fe:	4770      	bx	lr

08003500 <HAL_CAN_SleepCallback>:
 8003500:	b480      	push	{r7}
 8003502:	b083      	sub	sp, #12
 8003504:	af00      	add	r7, sp, #0
 8003506:	6078      	str	r0, [r7, #4]
 8003508:	bf00      	nop
 800350a:	370c      	adds	r7, #12
 800350c:	46bd      	mov	sp, r7
 800350e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003512:	4770      	bx	lr

08003514 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8003514:	b480      	push	{r7}
 8003516:	b083      	sub	sp, #12
 8003518:	af00      	add	r7, sp, #0
 800351a:	6078      	str	r0, [r7, #4]
 800351c:	bf00      	nop
 800351e:	370c      	adds	r7, #12
 8003520:	46bd      	mov	sp, r7
 8003522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003526:	4770      	bx	lr

08003528 <HAL_CAN_ErrorCallback>:
 8003528:	b480      	push	{r7}
 800352a:	b083      	sub	sp, #12
 800352c:	af00      	add	r7, sp, #0
 800352e:	6078      	str	r0, [r7, #4]
 8003530:	bf00      	nop
 8003532:	370c      	adds	r7, #12
 8003534:	46bd      	mov	sp, r7
 8003536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800353a:	4770      	bx	lr

0800353c <__NVIC_SetPriorityGrouping>:
 800353c:	b480      	push	{r7}
 800353e:	b085      	sub	sp, #20
 8003540:	af00      	add	r7, sp, #0
 8003542:	6078      	str	r0, [r7, #4]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	f003 0307 	and.w	r3, r3, #7
 800354a:	60fb      	str	r3, [r7, #12]
 800354c:	4b0c      	ldr	r3, [pc, #48]	@ (8003580 <__NVIC_SetPriorityGrouping+0x44>)
 800354e:	68db      	ldr	r3, [r3, #12]
 8003550:	60bb      	str	r3, [r7, #8]
 8003552:	68ba      	ldr	r2, [r7, #8]
 8003554:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003558:	4013      	ands	r3, r2
 800355a:	60bb      	str	r3, [r7, #8]
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	021a      	lsls	r2, r3, #8
 8003560:	68bb      	ldr	r3, [r7, #8]
 8003562:	4313      	orrs	r3, r2
 8003564:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003568:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800356c:	60bb      	str	r3, [r7, #8]
 800356e:	4a04      	ldr	r2, [pc, #16]	@ (8003580 <__NVIC_SetPriorityGrouping+0x44>)
 8003570:	68bb      	ldr	r3, [r7, #8]
 8003572:	60d3      	str	r3, [r2, #12]
 8003574:	bf00      	nop
 8003576:	3714      	adds	r7, #20
 8003578:	46bd      	mov	sp, r7
 800357a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800357e:	4770      	bx	lr
 8003580:	e000ed00 	.word	0xe000ed00

08003584 <__NVIC_GetPriorityGrouping>:
 8003584:	b480      	push	{r7}
 8003586:	af00      	add	r7, sp, #0
 8003588:	4b04      	ldr	r3, [pc, #16]	@ (800359c <__NVIC_GetPriorityGrouping+0x18>)
 800358a:	68db      	ldr	r3, [r3, #12]
 800358c:	0a1b      	lsrs	r3, r3, #8
 800358e:	f003 0307 	and.w	r3, r3, #7
 8003592:	4618      	mov	r0, r3
 8003594:	46bd      	mov	sp, r7
 8003596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800359a:	4770      	bx	lr
 800359c:	e000ed00 	.word	0xe000ed00

080035a0 <__NVIC_EnableIRQ>:
 80035a0:	b480      	push	{r7}
 80035a2:	b083      	sub	sp, #12
 80035a4:	af00      	add	r7, sp, #0
 80035a6:	4603      	mov	r3, r0
 80035a8:	71fb      	strb	r3, [r7, #7]
 80035aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	db0b      	blt.n	80035ca <__NVIC_EnableIRQ+0x2a>
 80035b2:	79fb      	ldrb	r3, [r7, #7]
 80035b4:	f003 021f 	and.w	r2, r3, #31
 80035b8:	4907      	ldr	r1, [pc, #28]	@ (80035d8 <__NVIC_EnableIRQ+0x38>)
 80035ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035be:	095b      	lsrs	r3, r3, #5
 80035c0:	2001      	movs	r0, #1
 80035c2:	fa00 f202 	lsl.w	r2, r0, r2
 80035c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80035ca:	bf00      	nop
 80035cc:	370c      	adds	r7, #12
 80035ce:	46bd      	mov	sp, r7
 80035d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035d4:	4770      	bx	lr
 80035d6:	bf00      	nop
 80035d8:	e000e100 	.word	0xe000e100

080035dc <__NVIC_SetPriority>:
 80035dc:	b480      	push	{r7}
 80035de:	b083      	sub	sp, #12
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	4603      	mov	r3, r0
 80035e4:	6039      	str	r1, [r7, #0]
 80035e6:	71fb      	strb	r3, [r7, #7]
 80035e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	db0a      	blt.n	8003606 <__NVIC_SetPriority+0x2a>
 80035f0:	683b      	ldr	r3, [r7, #0]
 80035f2:	b2da      	uxtb	r2, r3
 80035f4:	490c      	ldr	r1, [pc, #48]	@ (8003628 <__NVIC_SetPriority+0x4c>)
 80035f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035fa:	0112      	lsls	r2, r2, #4
 80035fc:	b2d2      	uxtb	r2, r2
 80035fe:	440b      	add	r3, r1
 8003600:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003604:	e00a      	b.n	800361c <__NVIC_SetPriority+0x40>
 8003606:	683b      	ldr	r3, [r7, #0]
 8003608:	b2da      	uxtb	r2, r3
 800360a:	4908      	ldr	r1, [pc, #32]	@ (800362c <__NVIC_SetPriority+0x50>)
 800360c:	79fb      	ldrb	r3, [r7, #7]
 800360e:	f003 030f 	and.w	r3, r3, #15
 8003612:	3b04      	subs	r3, #4
 8003614:	0112      	lsls	r2, r2, #4
 8003616:	b2d2      	uxtb	r2, r2
 8003618:	440b      	add	r3, r1
 800361a:	761a      	strb	r2, [r3, #24]
 800361c:	bf00      	nop
 800361e:	370c      	adds	r7, #12
 8003620:	46bd      	mov	sp, r7
 8003622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003626:	4770      	bx	lr
 8003628:	e000e100 	.word	0xe000e100
 800362c:	e000ed00 	.word	0xe000ed00

08003630 <NVIC_EncodePriority>:
 8003630:	b480      	push	{r7}
 8003632:	b089      	sub	sp, #36	@ 0x24
 8003634:	af00      	add	r7, sp, #0
 8003636:	60f8      	str	r0, [r7, #12]
 8003638:	60b9      	str	r1, [r7, #8]
 800363a:	607a      	str	r2, [r7, #4]
 800363c:	68fb      	ldr	r3, [r7, #12]
 800363e:	f003 0307 	and.w	r3, r3, #7
 8003642:	61fb      	str	r3, [r7, #28]
 8003644:	69fb      	ldr	r3, [r7, #28]
 8003646:	f1c3 0307 	rsb	r3, r3, #7
 800364a:	2b04      	cmp	r3, #4
 800364c:	bf28      	it	cs
 800364e:	2304      	movcs	r3, #4
 8003650:	61bb      	str	r3, [r7, #24]
 8003652:	69fb      	ldr	r3, [r7, #28]
 8003654:	3304      	adds	r3, #4
 8003656:	2b06      	cmp	r3, #6
 8003658:	d902      	bls.n	8003660 <NVIC_EncodePriority+0x30>
 800365a:	69fb      	ldr	r3, [r7, #28]
 800365c:	3b03      	subs	r3, #3
 800365e:	e000      	b.n	8003662 <NVIC_EncodePriority+0x32>
 8003660:	2300      	movs	r3, #0
 8003662:	617b      	str	r3, [r7, #20]
 8003664:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003668:	69bb      	ldr	r3, [r7, #24]
 800366a:	fa02 f303 	lsl.w	r3, r2, r3
 800366e:	43da      	mvns	r2, r3
 8003670:	68bb      	ldr	r3, [r7, #8]
 8003672:	401a      	ands	r2, r3
 8003674:	697b      	ldr	r3, [r7, #20]
 8003676:	409a      	lsls	r2, r3
 8003678:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800367c:	697b      	ldr	r3, [r7, #20]
 800367e:	fa01 f303 	lsl.w	r3, r1, r3
 8003682:	43d9      	mvns	r1, r3
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	400b      	ands	r3, r1
 8003688:	4313      	orrs	r3, r2
 800368a:	4618      	mov	r0, r3
 800368c:	3724      	adds	r7, #36	@ 0x24
 800368e:	46bd      	mov	sp, r7
 8003690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003694:	4770      	bx	lr
	...

08003698 <SysTick_Config>:
 8003698:	b580      	push	{r7, lr}
 800369a:	b082      	sub	sp, #8
 800369c:	af00      	add	r7, sp, #0
 800369e:	6078      	str	r0, [r7, #4]
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	3b01      	subs	r3, #1
 80036a4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80036a8:	d301      	bcc.n	80036ae <SysTick_Config+0x16>
 80036aa:	2301      	movs	r3, #1
 80036ac:	e00f      	b.n	80036ce <SysTick_Config+0x36>
 80036ae:	4a0a      	ldr	r2, [pc, #40]	@ (80036d8 <SysTick_Config+0x40>)
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	3b01      	subs	r3, #1
 80036b4:	6053      	str	r3, [r2, #4]
 80036b6:	210f      	movs	r1, #15
 80036b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80036bc:	f7ff ff8e 	bl	80035dc <__NVIC_SetPriority>
 80036c0:	4b05      	ldr	r3, [pc, #20]	@ (80036d8 <SysTick_Config+0x40>)
 80036c2:	2200      	movs	r2, #0
 80036c4:	609a      	str	r2, [r3, #8]
 80036c6:	4b04      	ldr	r3, [pc, #16]	@ (80036d8 <SysTick_Config+0x40>)
 80036c8:	2207      	movs	r2, #7
 80036ca:	601a      	str	r2, [r3, #0]
 80036cc:	2300      	movs	r3, #0
 80036ce:	4618      	mov	r0, r3
 80036d0:	3708      	adds	r7, #8
 80036d2:	46bd      	mov	sp, r7
 80036d4:	bd80      	pop	{r7, pc}
 80036d6:	bf00      	nop
 80036d8:	e000e010 	.word	0xe000e010

080036dc <HAL_NVIC_SetPriorityGrouping>:
 80036dc:	b580      	push	{r7, lr}
 80036de:	b082      	sub	sp, #8
 80036e0:	af00      	add	r7, sp, #0
 80036e2:	6078      	str	r0, [r7, #4]
 80036e4:	6878      	ldr	r0, [r7, #4]
 80036e6:	f7ff ff29 	bl	800353c <__NVIC_SetPriorityGrouping>
 80036ea:	bf00      	nop
 80036ec:	3708      	adds	r7, #8
 80036ee:	46bd      	mov	sp, r7
 80036f0:	bd80      	pop	{r7, pc}

080036f2 <HAL_NVIC_SetPriority>:
 80036f2:	b580      	push	{r7, lr}
 80036f4:	b086      	sub	sp, #24
 80036f6:	af00      	add	r7, sp, #0
 80036f8:	4603      	mov	r3, r0
 80036fa:	60b9      	str	r1, [r7, #8]
 80036fc:	607a      	str	r2, [r7, #4]
 80036fe:	73fb      	strb	r3, [r7, #15]
 8003700:	2300      	movs	r3, #0
 8003702:	617b      	str	r3, [r7, #20]
 8003704:	f7ff ff3e 	bl	8003584 <__NVIC_GetPriorityGrouping>
 8003708:	6178      	str	r0, [r7, #20]
 800370a:	687a      	ldr	r2, [r7, #4]
 800370c:	68b9      	ldr	r1, [r7, #8]
 800370e:	6978      	ldr	r0, [r7, #20]
 8003710:	f7ff ff8e 	bl	8003630 <NVIC_EncodePriority>
 8003714:	4602      	mov	r2, r0
 8003716:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800371a:	4611      	mov	r1, r2
 800371c:	4618      	mov	r0, r3
 800371e:	f7ff ff5d 	bl	80035dc <__NVIC_SetPriority>
 8003722:	bf00      	nop
 8003724:	3718      	adds	r7, #24
 8003726:	46bd      	mov	sp, r7
 8003728:	bd80      	pop	{r7, pc}

0800372a <HAL_NVIC_EnableIRQ>:
 800372a:	b580      	push	{r7, lr}
 800372c:	b082      	sub	sp, #8
 800372e:	af00      	add	r7, sp, #0
 8003730:	4603      	mov	r3, r0
 8003732:	71fb      	strb	r3, [r7, #7]
 8003734:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003738:	4618      	mov	r0, r3
 800373a:	f7ff ff31 	bl	80035a0 <__NVIC_EnableIRQ>
 800373e:	bf00      	nop
 8003740:	3708      	adds	r7, #8
 8003742:	46bd      	mov	sp, r7
 8003744:	bd80      	pop	{r7, pc}

08003746 <HAL_SYSTICK_Config>:
 8003746:	b580      	push	{r7, lr}
 8003748:	b082      	sub	sp, #8
 800374a:	af00      	add	r7, sp, #0
 800374c:	6078      	str	r0, [r7, #4]
 800374e:	6878      	ldr	r0, [r7, #4]
 8003750:	f7ff ffa2 	bl	8003698 <SysTick_Config>
 8003754:	4603      	mov	r3, r0
 8003756:	4618      	mov	r0, r3
 8003758:	3708      	adds	r7, #8
 800375a:	46bd      	mov	sp, r7
 800375c:	bd80      	pop	{r7, pc}
	...

08003760 <HAL_DMA_Init>:
 8003760:	b580      	push	{r7, lr}
 8003762:	b086      	sub	sp, #24
 8003764:	af00      	add	r7, sp, #0
 8003766:	6078      	str	r0, [r7, #4]
 8003768:	2300      	movs	r3, #0
 800376a:	617b      	str	r3, [r7, #20]
 800376c:	f7ff fba6 	bl	8002ebc <HAL_GetTick>
 8003770:	6138      	str	r0, [r7, #16]
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	2b00      	cmp	r3, #0
 8003776:	d101      	bne.n	800377c <HAL_DMA_Init+0x1c>
 8003778:	2301      	movs	r3, #1
 800377a:	e099      	b.n	80038b0 <HAL_DMA_Init+0x150>
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	2202      	movs	r2, #2
 8003780:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	2200      	movs	r2, #0
 8003788:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	681b      	ldr	r3, [r3, #0]
 8003790:	681a      	ldr	r2, [r3, #0]
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	f022 0201 	bic.w	r2, r2, #1
 800379a:	601a      	str	r2, [r3, #0]
 800379c:	e00f      	b.n	80037be <HAL_DMA_Init+0x5e>
 800379e:	f7ff fb8d 	bl	8002ebc <HAL_GetTick>
 80037a2:	4602      	mov	r2, r0
 80037a4:	693b      	ldr	r3, [r7, #16]
 80037a6:	1ad3      	subs	r3, r2, r3
 80037a8:	2b05      	cmp	r3, #5
 80037aa:	d908      	bls.n	80037be <HAL_DMA_Init+0x5e>
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	2220      	movs	r2, #32
 80037b0:	655a      	str	r2, [r3, #84]	@ 0x54
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	2203      	movs	r2, #3
 80037b6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80037ba:	2303      	movs	r3, #3
 80037bc:	e078      	b.n	80038b0 <HAL_DMA_Init+0x150>
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	f003 0301 	and.w	r3, r3, #1
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d1e8      	bne.n	800379e <HAL_DMA_Init+0x3e>
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	617b      	str	r3, [r7, #20]
 80037d4:	697a      	ldr	r2, [r7, #20]
 80037d6:	4b38      	ldr	r3, [pc, #224]	@ (80038b8 <HAL_DMA_Init+0x158>)
 80037d8:	4013      	ands	r3, r2
 80037da:	617b      	str	r3, [r7, #20]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	685a      	ldr	r2, [r3, #4]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	689b      	ldr	r3, [r3, #8]
 80037e4:	431a      	orrs	r2, r3
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	68db      	ldr	r3, [r3, #12]
 80037ea:	431a      	orrs	r2, r3
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	691b      	ldr	r3, [r3, #16]
 80037f0:	431a      	orrs	r2, r3
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	695b      	ldr	r3, [r3, #20]
 80037f6:	431a      	orrs	r2, r3
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	699b      	ldr	r3, [r3, #24]
 80037fc:	431a      	orrs	r2, r3
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	69db      	ldr	r3, [r3, #28]
 8003802:	431a      	orrs	r2, r3
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	6a1b      	ldr	r3, [r3, #32]
 8003808:	4313      	orrs	r3, r2
 800380a:	697a      	ldr	r2, [r7, #20]
 800380c:	4313      	orrs	r3, r2
 800380e:	617b      	str	r3, [r7, #20]
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003814:	2b04      	cmp	r3, #4
 8003816:	d107      	bne.n	8003828 <HAL_DMA_Init+0xc8>
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003820:	4313      	orrs	r3, r2
 8003822:	697a      	ldr	r2, [r7, #20]
 8003824:	4313      	orrs	r3, r2
 8003826:	617b      	str	r3, [r7, #20]
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	697a      	ldr	r2, [r7, #20]
 800382e:	601a      	str	r2, [r3, #0]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	695b      	ldr	r3, [r3, #20]
 8003836:	617b      	str	r3, [r7, #20]
 8003838:	697b      	ldr	r3, [r7, #20]
 800383a:	f023 0307 	bic.w	r3, r3, #7
 800383e:	617b      	str	r3, [r7, #20]
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003844:	697a      	ldr	r2, [r7, #20]
 8003846:	4313      	orrs	r3, r2
 8003848:	617b      	str	r3, [r7, #20]
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800384e:	2b04      	cmp	r3, #4
 8003850:	d117      	bne.n	8003882 <HAL_DMA_Init+0x122>
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003856:	697a      	ldr	r2, [r7, #20]
 8003858:	4313      	orrs	r3, r2
 800385a:	617b      	str	r3, [r7, #20]
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003860:	2b00      	cmp	r3, #0
 8003862:	d00e      	beq.n	8003882 <HAL_DMA_Init+0x122>
 8003864:	6878      	ldr	r0, [r7, #4]
 8003866:	f000 fb01 	bl	8003e6c <DMA_CheckFifoParam>
 800386a:	4603      	mov	r3, r0
 800386c:	2b00      	cmp	r3, #0
 800386e:	d008      	beq.n	8003882 <HAL_DMA_Init+0x122>
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	2240      	movs	r2, #64	@ 0x40
 8003874:	655a      	str	r2, [r3, #84]	@ 0x54
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	2201      	movs	r2, #1
 800387a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800387e:	2301      	movs	r3, #1
 8003880:	e016      	b.n	80038b0 <HAL_DMA_Init+0x150>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	697a      	ldr	r2, [r7, #20]
 8003888:	615a      	str	r2, [r3, #20]
 800388a:	6878      	ldr	r0, [r7, #4]
 800388c:	f000 fab8 	bl	8003e00 <DMA_CalcBaseAndBitshift>
 8003890:	4603      	mov	r3, r0
 8003892:	60fb      	str	r3, [r7, #12]
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003898:	223f      	movs	r2, #63	@ 0x3f
 800389a:	409a      	lsls	r2, r3
 800389c:	68fb      	ldr	r3, [r7, #12]
 800389e:	609a      	str	r2, [r3, #8]
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	2200      	movs	r2, #0
 80038a4:	655a      	str	r2, [r3, #84]	@ 0x54
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	2201      	movs	r2, #1
 80038aa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80038ae:	2300      	movs	r3, #0
 80038b0:	4618      	mov	r0, r3
 80038b2:	3718      	adds	r7, #24
 80038b4:	46bd      	mov	sp, r7
 80038b6:	bd80      	pop	{r7, pc}
 80038b8:	f010803f 	.word	0xf010803f

080038bc <HAL_DMA_Start_IT>:
 80038bc:	b580      	push	{r7, lr}
 80038be:	b086      	sub	sp, #24
 80038c0:	af00      	add	r7, sp, #0
 80038c2:	60f8      	str	r0, [r7, #12]
 80038c4:	60b9      	str	r1, [r7, #8]
 80038c6:	607a      	str	r2, [r7, #4]
 80038c8:	603b      	str	r3, [r7, #0]
 80038ca:	2300      	movs	r3, #0
 80038cc:	75fb      	strb	r3, [r7, #23]
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80038d2:	613b      	str	r3, [r7, #16]
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80038da:	2b01      	cmp	r3, #1
 80038dc:	d101      	bne.n	80038e2 <HAL_DMA_Start_IT+0x26>
 80038de:	2302      	movs	r3, #2
 80038e0:	e040      	b.n	8003964 <HAL_DMA_Start_IT+0xa8>
 80038e2:	68fb      	ldr	r3, [r7, #12]
 80038e4:	2201      	movs	r2, #1
 80038e6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80038ea:	68fb      	ldr	r3, [r7, #12]
 80038ec:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80038f0:	b2db      	uxtb	r3, r3
 80038f2:	2b01      	cmp	r3, #1
 80038f4:	d12f      	bne.n	8003956 <HAL_DMA_Start_IT+0x9a>
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	2202      	movs	r2, #2
 80038fa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	2200      	movs	r2, #0
 8003902:	655a      	str	r2, [r3, #84]	@ 0x54
 8003904:	683b      	ldr	r3, [r7, #0]
 8003906:	687a      	ldr	r2, [r7, #4]
 8003908:	68b9      	ldr	r1, [r7, #8]
 800390a:	68f8      	ldr	r0, [r7, #12]
 800390c:	f000 fa4a 	bl	8003da4 <DMA_SetConfig>
 8003910:	68fb      	ldr	r3, [r7, #12]
 8003912:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003914:	223f      	movs	r2, #63	@ 0x3f
 8003916:	409a      	lsls	r2, r3
 8003918:	693b      	ldr	r3, [r7, #16]
 800391a:	609a      	str	r2, [r3, #8]
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	681a      	ldr	r2, [r3, #0]
 8003922:	68fb      	ldr	r3, [r7, #12]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	f042 0216 	orr.w	r2, r2, #22
 800392a:	601a      	str	r2, [r3, #0]
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003930:	2b00      	cmp	r3, #0
 8003932:	d007      	beq.n	8003944 <HAL_DMA_Start_IT+0x88>
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	681a      	ldr	r2, [r3, #0]
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	f042 0208 	orr.w	r2, r2, #8
 8003942:	601a      	str	r2, [r3, #0]
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	681a      	ldr	r2, [r3, #0]
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	f042 0201 	orr.w	r2, r2, #1
 8003952:	601a      	str	r2, [r3, #0]
 8003954:	e005      	b.n	8003962 <HAL_DMA_Start_IT+0xa6>
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	2200      	movs	r2, #0
 800395a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800395e:	2302      	movs	r3, #2
 8003960:	75fb      	strb	r3, [r7, #23]
 8003962:	7dfb      	ldrb	r3, [r7, #23]
 8003964:	4618      	mov	r0, r3
 8003966:	3718      	adds	r7, #24
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}

0800396c <HAL_DMA_Abort>:
 800396c:	b580      	push	{r7, lr}
 800396e:	b084      	sub	sp, #16
 8003970:	af00      	add	r7, sp, #0
 8003972:	6078      	str	r0, [r7, #4]
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003978:	60fb      	str	r3, [r7, #12]
 800397a:	f7ff fa9f 	bl	8002ebc <HAL_GetTick>
 800397e:	60b8      	str	r0, [r7, #8]
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003986:	b2db      	uxtb	r3, r3
 8003988:	2b02      	cmp	r3, #2
 800398a:	d008      	beq.n	800399e <HAL_DMA_Abort+0x32>
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	2280      	movs	r2, #128	@ 0x80
 8003990:	655a      	str	r2, [r3, #84]	@ 0x54
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	2200      	movs	r2, #0
 8003996:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800399a:	2301      	movs	r3, #1
 800399c:	e052      	b.n	8003a44 <HAL_DMA_Abort+0xd8>
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	681a      	ldr	r2, [r3, #0]
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	f022 0216 	bic.w	r2, r2, #22
 80039ac:	601a      	str	r2, [r3, #0]
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	695a      	ldr	r2, [r3, #20]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80039bc:	615a      	str	r2, [r3, #20]
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039c2:	2b00      	cmp	r3, #0
 80039c4:	d103      	bne.n	80039ce <HAL_DMA_Abort+0x62>
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d007      	beq.n	80039de <HAL_DMA_Abort+0x72>
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	681a      	ldr	r2, [r3, #0]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	f022 0208 	bic.w	r2, r2, #8
 80039dc:	601a      	str	r2, [r3, #0]
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	681a      	ldr	r2, [r3, #0]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	f022 0201 	bic.w	r2, r2, #1
 80039ec:	601a      	str	r2, [r3, #0]
 80039ee:	e013      	b.n	8003a18 <HAL_DMA_Abort+0xac>
 80039f0:	f7ff fa64 	bl	8002ebc <HAL_GetTick>
 80039f4:	4602      	mov	r2, r0
 80039f6:	68bb      	ldr	r3, [r7, #8]
 80039f8:	1ad3      	subs	r3, r2, r3
 80039fa:	2b05      	cmp	r3, #5
 80039fc:	d90c      	bls.n	8003a18 <HAL_DMA_Abort+0xac>
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	2220      	movs	r2, #32
 8003a02:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	2203      	movs	r2, #3
 8003a08:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	2200      	movs	r2, #0
 8003a10:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003a14:	2303      	movs	r3, #3
 8003a16:	e015      	b.n	8003a44 <HAL_DMA_Abort+0xd8>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	f003 0301 	and.w	r3, r3, #1
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d1e4      	bne.n	80039f0 <HAL_DMA_Abort+0x84>
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a2a:	223f      	movs	r2, #63	@ 0x3f
 8003a2c:	409a      	lsls	r2, r3
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	609a      	str	r2, [r3, #8]
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	2201      	movs	r2, #1
 8003a36:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003a42:	2300      	movs	r3, #0
 8003a44:	4618      	mov	r0, r3
 8003a46:	3710      	adds	r7, #16
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	bd80      	pop	{r7, pc}

08003a4c <HAL_DMA_Abort_IT>:
 8003a4c:	b480      	push	{r7}
 8003a4e:	b083      	sub	sp, #12
 8003a50:	af00      	add	r7, sp, #0
 8003a52:	6078      	str	r0, [r7, #4]
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a5a:	b2db      	uxtb	r3, r3
 8003a5c:	2b02      	cmp	r3, #2
 8003a5e:	d004      	beq.n	8003a6a <HAL_DMA_Abort_IT+0x1e>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	2280      	movs	r2, #128	@ 0x80
 8003a64:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a66:	2301      	movs	r3, #1
 8003a68:	e00c      	b.n	8003a84 <HAL_DMA_Abort_IT+0x38>
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	2205      	movs	r2, #5
 8003a6e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	681a      	ldr	r2, [r3, #0]
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	f022 0201 	bic.w	r2, r2, #1
 8003a80:	601a      	str	r2, [r3, #0]
 8003a82:	2300      	movs	r3, #0
 8003a84:	4618      	mov	r0, r3
 8003a86:	370c      	adds	r7, #12
 8003a88:	46bd      	mov	sp, r7
 8003a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8e:	4770      	bx	lr

08003a90 <HAL_DMA_IRQHandler>:
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b086      	sub	sp, #24
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	2300      	movs	r3, #0
 8003a9a:	60bb      	str	r3, [r7, #8]
 8003a9c:	4b8e      	ldr	r3, [pc, #568]	@ (8003cd8 <HAL_DMA_IRQHandler+0x248>)
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	4a8e      	ldr	r2, [pc, #568]	@ (8003cdc <HAL_DMA_IRQHandler+0x24c>)
 8003aa2:	fba2 2303 	umull	r2, r3, r2, r3
 8003aa6:	0a9b      	lsrs	r3, r3, #10
 8003aa8:	617b      	str	r3, [r7, #20]
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003aae:	613b      	str	r3, [r7, #16]
 8003ab0:	693b      	ldr	r3, [r7, #16]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	60fb      	str	r3, [r7, #12]
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003aba:	2208      	movs	r2, #8
 8003abc:	409a      	lsls	r2, r3
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	4013      	ands	r3, r2
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d01a      	beq.n	8003afc <HAL_DMA_IRQHandler+0x6c>
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	f003 0304 	and.w	r3, r3, #4
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d013      	beq.n	8003afc <HAL_DMA_IRQHandler+0x6c>
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	681a      	ldr	r2, [r3, #0]
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	f022 0204 	bic.w	r2, r2, #4
 8003ae2:	601a      	str	r2, [r3, #0]
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ae8:	2208      	movs	r2, #8
 8003aea:	409a      	lsls	r2, r3
 8003aec:	693b      	ldr	r3, [r7, #16]
 8003aee:	609a      	str	r2, [r3, #8]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003af4:	f043 0201 	orr.w	r2, r3, #1
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	655a      	str	r2, [r3, #84]	@ 0x54
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b00:	2201      	movs	r2, #1
 8003b02:	409a      	lsls	r2, r3
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	4013      	ands	r3, r2
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	d012      	beq.n	8003b32 <HAL_DMA_IRQHandler+0xa2>
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	695b      	ldr	r3, [r3, #20]
 8003b12:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b16:	2b00      	cmp	r3, #0
 8003b18:	d00b      	beq.n	8003b32 <HAL_DMA_IRQHandler+0xa2>
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b1e:	2201      	movs	r2, #1
 8003b20:	409a      	lsls	r2, r3
 8003b22:	693b      	ldr	r3, [r7, #16]
 8003b24:	609a      	str	r2, [r3, #8]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b2a:	f043 0202 	orr.w	r2, r3, #2
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b36:	2204      	movs	r2, #4
 8003b38:	409a      	lsls	r2, r3
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	4013      	ands	r3, r2
 8003b3e:	2b00      	cmp	r3, #0
 8003b40:	d012      	beq.n	8003b68 <HAL_DMA_IRQHandler+0xd8>
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	f003 0302 	and.w	r3, r3, #2
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d00b      	beq.n	8003b68 <HAL_DMA_IRQHandler+0xd8>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b54:	2204      	movs	r2, #4
 8003b56:	409a      	lsls	r2, r3
 8003b58:	693b      	ldr	r3, [r7, #16]
 8003b5a:	609a      	str	r2, [r3, #8]
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b60:	f043 0204 	orr.w	r2, r3, #4
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b6c:	2210      	movs	r2, #16
 8003b6e:	409a      	lsls	r2, r3
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	4013      	ands	r3, r2
 8003b74:	2b00      	cmp	r3, #0
 8003b76:	d043      	beq.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	f003 0308 	and.w	r3, r3, #8
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d03c      	beq.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b8a:	2210      	movs	r2, #16
 8003b8c:	409a      	lsls	r2, r3
 8003b8e:	693b      	ldr	r3, [r7, #16]
 8003b90:	609a      	str	r2, [r3, #8]
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d018      	beq.n	8003bd2 <HAL_DMA_IRQHandler+0x142>
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d108      	bne.n	8003bc0 <HAL_DMA_IRQHandler+0x130>
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d024      	beq.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bba:	6878      	ldr	r0, [r7, #4]
 8003bbc:	4798      	blx	r3
 8003bbe:	e01f      	b.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d01b      	beq.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bcc:	6878      	ldr	r0, [r7, #4]
 8003bce:	4798      	blx	r3
 8003bd0:	e016      	b.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003bdc:	2b00      	cmp	r3, #0
 8003bde:	d107      	bne.n	8003bf0 <HAL_DMA_IRQHandler+0x160>
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	681a      	ldr	r2, [r3, #0]
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	f022 0208 	bic.w	r2, r2, #8
 8003bee:	601a      	str	r2, [r3, #0]
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d003      	beq.n	8003c00 <HAL_DMA_IRQHandler+0x170>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bfc:	6878      	ldr	r0, [r7, #4]
 8003bfe:	4798      	blx	r3
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c04:	2220      	movs	r2, #32
 8003c06:	409a      	lsls	r2, r3
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	4013      	ands	r3, r2
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	f000 808f 	beq.w	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	f003 0310 	and.w	r3, r3, #16
 8003c1c:	2b00      	cmp	r3, #0
 8003c1e:	f000 8087 	beq.w	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c26:	2220      	movs	r2, #32
 8003c28:	409a      	lsls	r2, r3
 8003c2a:	693b      	ldr	r3, [r7, #16]
 8003c2c:	609a      	str	r2, [r3, #8]
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c34:	b2db      	uxtb	r3, r3
 8003c36:	2b05      	cmp	r3, #5
 8003c38:	d136      	bne.n	8003ca8 <HAL_DMA_IRQHandler+0x218>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	681a      	ldr	r2, [r3, #0]
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	f022 0216 	bic.w	r2, r2, #22
 8003c48:	601a      	str	r2, [r3, #0]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	695a      	ldr	r2, [r3, #20]
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003c58:	615a      	str	r2, [r3, #20]
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d103      	bne.n	8003c6a <HAL_DMA_IRQHandler+0x1da>
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c66:	2b00      	cmp	r3, #0
 8003c68:	d007      	beq.n	8003c7a <HAL_DMA_IRQHandler+0x1ea>
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	681a      	ldr	r2, [r3, #0]
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	f022 0208 	bic.w	r2, r2, #8
 8003c78:	601a      	str	r2, [r3, #0]
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c7e:	223f      	movs	r2, #63	@ 0x3f
 8003c80:	409a      	lsls	r2, r3
 8003c82:	693b      	ldr	r3, [r7, #16]
 8003c84:	609a      	str	r2, [r3, #8]
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	2201      	movs	r2, #1
 8003c8a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	2200      	movs	r2, #0
 8003c92:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d07e      	beq.n	8003d9c <HAL_DMA_IRQHandler+0x30c>
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003ca2:	6878      	ldr	r0, [r7, #4]
 8003ca4:	4798      	blx	r3
 8003ca6:	e079      	b.n	8003d9c <HAL_DMA_IRQHandler+0x30c>
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d01d      	beq.n	8003cf2 <HAL_DMA_IRQHandler+0x262>
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d10d      	bne.n	8003ce0 <HAL_DMA_IRQHandler+0x250>
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	d031      	beq.n	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cd0:	6878      	ldr	r0, [r7, #4]
 8003cd2:	4798      	blx	r3
 8003cd4:	e02c      	b.n	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003cd6:	bf00      	nop
 8003cd8:	2000014c 	.word	0x2000014c
 8003cdc:	1b4e81b5 	.word	0x1b4e81b5
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d023      	beq.n	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003cec:	6878      	ldr	r0, [r7, #4]
 8003cee:	4798      	blx	r3
 8003cf0:	e01e      	b.n	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	d10f      	bne.n	8003d20 <HAL_DMA_IRQHandler+0x290>
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	681a      	ldr	r2, [r3, #0]
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	f022 0210 	bic.w	r2, r2, #16
 8003d0e:	601a      	str	r2, [r3, #0]
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	2201      	movs	r2, #1
 8003d14:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	2200      	movs	r2, #0
 8003d1c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d24:	2b00      	cmp	r3, #0
 8003d26:	d003      	beq.n	8003d30 <HAL_DMA_IRQHandler+0x2a0>
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d2c:	6878      	ldr	r0, [r7, #4]
 8003d2e:	4798      	blx	r3
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	d032      	beq.n	8003d9e <HAL_DMA_IRQHandler+0x30e>
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d3c:	f003 0301 	and.w	r3, r3, #1
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d022      	beq.n	8003d8a <HAL_DMA_IRQHandler+0x2fa>
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	2205      	movs	r2, #5
 8003d48:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	681a      	ldr	r2, [r3, #0]
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	f022 0201 	bic.w	r2, r2, #1
 8003d5a:	601a      	str	r2, [r3, #0]
 8003d5c:	68bb      	ldr	r3, [r7, #8]
 8003d5e:	3301      	adds	r3, #1
 8003d60:	60bb      	str	r3, [r7, #8]
 8003d62:	697a      	ldr	r2, [r7, #20]
 8003d64:	429a      	cmp	r2, r3
 8003d66:	d307      	bcc.n	8003d78 <HAL_DMA_IRQHandler+0x2e8>
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	681b      	ldr	r3, [r3, #0]
 8003d6e:	f003 0301 	and.w	r3, r3, #1
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d1f2      	bne.n	8003d5c <HAL_DMA_IRQHandler+0x2cc>
 8003d76:	e000      	b.n	8003d7a <HAL_DMA_IRQHandler+0x2ea>
 8003d78:	bf00      	nop
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	2201      	movs	r2, #1
 8003d7e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2200      	movs	r2, #0
 8003d86:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d005      	beq.n	8003d9e <HAL_DMA_IRQHandler+0x30e>
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003d96:	6878      	ldr	r0, [r7, #4]
 8003d98:	4798      	blx	r3
 8003d9a:	e000      	b.n	8003d9e <HAL_DMA_IRQHandler+0x30e>
 8003d9c:	bf00      	nop
 8003d9e:	3718      	adds	r7, #24
 8003da0:	46bd      	mov	sp, r7
 8003da2:	bd80      	pop	{r7, pc}

08003da4 <DMA_SetConfig>:
 8003da4:	b480      	push	{r7}
 8003da6:	b085      	sub	sp, #20
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	60f8      	str	r0, [r7, #12]
 8003dac:	60b9      	str	r1, [r7, #8]
 8003dae:	607a      	str	r2, [r7, #4]
 8003db0:	603b      	str	r3, [r7, #0]
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	681a      	ldr	r2, [r3, #0]
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003dc0:	601a      	str	r2, [r3, #0]
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	681b      	ldr	r3, [r3, #0]
 8003dc6:	683a      	ldr	r2, [r7, #0]
 8003dc8:	605a      	str	r2, [r3, #4]
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	689b      	ldr	r3, [r3, #8]
 8003dce:	2b40      	cmp	r3, #64	@ 0x40
 8003dd0:	d108      	bne.n	8003de4 <DMA_SetConfig+0x40>
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	687a      	ldr	r2, [r7, #4]
 8003dd8:	609a      	str	r2, [r3, #8]
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	68ba      	ldr	r2, [r7, #8]
 8003de0:	60da      	str	r2, [r3, #12]
 8003de2:	e007      	b.n	8003df4 <DMA_SetConfig+0x50>
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	68ba      	ldr	r2, [r7, #8]
 8003dea:	609a      	str	r2, [r3, #8]
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	687a      	ldr	r2, [r7, #4]
 8003df2:	60da      	str	r2, [r3, #12]
 8003df4:	bf00      	nop
 8003df6:	3714      	adds	r7, #20
 8003df8:	46bd      	mov	sp, r7
 8003dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dfe:	4770      	bx	lr

08003e00 <DMA_CalcBaseAndBitshift>:
 8003e00:	b480      	push	{r7}
 8003e02:	b085      	sub	sp, #20
 8003e04:	af00      	add	r7, sp, #0
 8003e06:	6078      	str	r0, [r7, #4]
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	b2db      	uxtb	r3, r3
 8003e0e:	3b10      	subs	r3, #16
 8003e10:	4a14      	ldr	r2, [pc, #80]	@ (8003e64 <DMA_CalcBaseAndBitshift+0x64>)
 8003e12:	fba2 2303 	umull	r2, r3, r2, r3
 8003e16:	091b      	lsrs	r3, r3, #4
 8003e18:	60fb      	str	r3, [r7, #12]
 8003e1a:	4a13      	ldr	r2, [pc, #76]	@ (8003e68 <DMA_CalcBaseAndBitshift+0x68>)
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	4413      	add	r3, r2
 8003e20:	781b      	ldrb	r3, [r3, #0]
 8003e22:	461a      	mov	r2, r3
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	2b03      	cmp	r3, #3
 8003e2c:	d909      	bls.n	8003e42 <DMA_CalcBaseAndBitshift+0x42>
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e36:	f023 0303 	bic.w	r3, r3, #3
 8003e3a:	1d1a      	adds	r2, r3, #4
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	659a      	str	r2, [r3, #88]	@ 0x58
 8003e40:	e007      	b.n	8003e52 <DMA_CalcBaseAndBitshift+0x52>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e4a:	f023 0303 	bic.w	r3, r3, #3
 8003e4e:	687a      	ldr	r2, [r7, #4]
 8003e50:	6593      	str	r3, [r2, #88]	@ 0x58
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003e56:	4618      	mov	r0, r3
 8003e58:	3714      	adds	r7, #20
 8003e5a:	46bd      	mov	sp, r7
 8003e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e60:	4770      	bx	lr
 8003e62:	bf00      	nop
 8003e64:	aaaaaaab 	.word	0xaaaaaaab
 8003e68:	0800a064 	.word	0x0800a064

08003e6c <DMA_CheckFifoParam>:
 8003e6c:	b480      	push	{r7}
 8003e6e:	b085      	sub	sp, #20
 8003e70:	af00      	add	r7, sp, #0
 8003e72:	6078      	str	r0, [r7, #4]
 8003e74:	2300      	movs	r3, #0
 8003e76:	73fb      	strb	r3, [r7, #15]
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e7c:	60bb      	str	r3, [r7, #8]
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	699b      	ldr	r3, [r3, #24]
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d11f      	bne.n	8003ec6 <DMA_CheckFifoParam+0x5a>
 8003e86:	68bb      	ldr	r3, [r7, #8]
 8003e88:	2b03      	cmp	r3, #3
 8003e8a:	d856      	bhi.n	8003f3a <DMA_CheckFifoParam+0xce>
 8003e8c:	a201      	add	r2, pc, #4	@ (adr r2, 8003e94 <DMA_CheckFifoParam+0x28>)
 8003e8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e92:	bf00      	nop
 8003e94:	08003ea5 	.word	0x08003ea5
 8003e98:	08003eb7 	.word	0x08003eb7
 8003e9c:	08003ea5 	.word	0x08003ea5
 8003ea0:	08003f3b 	.word	0x08003f3b
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ea8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d046      	beq.n	8003f3e <DMA_CheckFifoParam+0xd2>
 8003eb0:	2301      	movs	r3, #1
 8003eb2:	73fb      	strb	r3, [r7, #15]
 8003eb4:	e043      	b.n	8003f3e <DMA_CheckFifoParam+0xd2>
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003eba:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003ebe:	d140      	bne.n	8003f42 <DMA_CheckFifoParam+0xd6>
 8003ec0:	2301      	movs	r3, #1
 8003ec2:	73fb      	strb	r3, [r7, #15]
 8003ec4:	e03d      	b.n	8003f42 <DMA_CheckFifoParam+0xd6>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	699b      	ldr	r3, [r3, #24]
 8003eca:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003ece:	d121      	bne.n	8003f14 <DMA_CheckFifoParam+0xa8>
 8003ed0:	68bb      	ldr	r3, [r7, #8]
 8003ed2:	2b03      	cmp	r3, #3
 8003ed4:	d837      	bhi.n	8003f46 <DMA_CheckFifoParam+0xda>
 8003ed6:	a201      	add	r2, pc, #4	@ (adr r2, 8003edc <DMA_CheckFifoParam+0x70>)
 8003ed8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003edc:	08003eed 	.word	0x08003eed
 8003ee0:	08003ef3 	.word	0x08003ef3
 8003ee4:	08003eed 	.word	0x08003eed
 8003ee8:	08003f05 	.word	0x08003f05
 8003eec:	2301      	movs	r3, #1
 8003eee:	73fb      	strb	r3, [r7, #15]
 8003ef0:	e030      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ef6:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003efa:	2b00      	cmp	r3, #0
 8003efc:	d025      	beq.n	8003f4a <DMA_CheckFifoParam+0xde>
 8003efe:	2301      	movs	r3, #1
 8003f00:	73fb      	strb	r3, [r7, #15]
 8003f02:	e022      	b.n	8003f4a <DMA_CheckFifoParam+0xde>
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f08:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003f0c:	d11f      	bne.n	8003f4e <DMA_CheckFifoParam+0xe2>
 8003f0e:	2301      	movs	r3, #1
 8003f10:	73fb      	strb	r3, [r7, #15]
 8003f12:	e01c      	b.n	8003f4e <DMA_CheckFifoParam+0xe2>
 8003f14:	68bb      	ldr	r3, [r7, #8]
 8003f16:	2b02      	cmp	r3, #2
 8003f18:	d903      	bls.n	8003f22 <DMA_CheckFifoParam+0xb6>
 8003f1a:	68bb      	ldr	r3, [r7, #8]
 8003f1c:	2b03      	cmp	r3, #3
 8003f1e:	d003      	beq.n	8003f28 <DMA_CheckFifoParam+0xbc>
 8003f20:	e018      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f22:	2301      	movs	r3, #1
 8003f24:	73fb      	strb	r3, [r7, #15]
 8003f26:	e015      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f2c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f30:	2b00      	cmp	r3, #0
 8003f32:	d00e      	beq.n	8003f52 <DMA_CheckFifoParam+0xe6>
 8003f34:	2301      	movs	r3, #1
 8003f36:	73fb      	strb	r3, [r7, #15]
 8003f38:	e00b      	b.n	8003f52 <DMA_CheckFifoParam+0xe6>
 8003f3a:	bf00      	nop
 8003f3c:	e00a      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f3e:	bf00      	nop
 8003f40:	e008      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f42:	bf00      	nop
 8003f44:	e006      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f46:	bf00      	nop
 8003f48:	e004      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f4a:	bf00      	nop
 8003f4c:	e002      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f4e:	bf00      	nop
 8003f50:	e000      	b.n	8003f54 <DMA_CheckFifoParam+0xe8>
 8003f52:	bf00      	nop
 8003f54:	7bfb      	ldrb	r3, [r7, #15]
 8003f56:	4618      	mov	r0, r3
 8003f58:	3714      	adds	r7, #20
 8003f5a:	46bd      	mov	sp, r7
 8003f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f60:	4770      	bx	lr
 8003f62:	bf00      	nop

08003f64 <HAL_GPIO_Init>:
 8003f64:	b480      	push	{r7}
 8003f66:	b089      	sub	sp, #36	@ 0x24
 8003f68:	af00      	add	r7, sp, #0
 8003f6a:	6078      	str	r0, [r7, #4]
 8003f6c:	6039      	str	r1, [r7, #0]
 8003f6e:	2300      	movs	r3, #0
 8003f70:	617b      	str	r3, [r7, #20]
 8003f72:	2300      	movs	r3, #0
 8003f74:	613b      	str	r3, [r7, #16]
 8003f76:	2300      	movs	r3, #0
 8003f78:	61bb      	str	r3, [r7, #24]
 8003f7a:	2300      	movs	r3, #0
 8003f7c:	61fb      	str	r3, [r7, #28]
 8003f7e:	e16b      	b.n	8004258 <HAL_GPIO_Init+0x2f4>
 8003f80:	2201      	movs	r2, #1
 8003f82:	69fb      	ldr	r3, [r7, #28]
 8003f84:	fa02 f303 	lsl.w	r3, r2, r3
 8003f88:	617b      	str	r3, [r7, #20]
 8003f8a:	683b      	ldr	r3, [r7, #0]
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	697a      	ldr	r2, [r7, #20]
 8003f90:	4013      	ands	r3, r2
 8003f92:	613b      	str	r3, [r7, #16]
 8003f94:	693a      	ldr	r2, [r7, #16]
 8003f96:	697b      	ldr	r3, [r7, #20]
 8003f98:	429a      	cmp	r2, r3
 8003f9a:	f040 815a 	bne.w	8004252 <HAL_GPIO_Init+0x2ee>
 8003f9e:	683b      	ldr	r3, [r7, #0]
 8003fa0:	685b      	ldr	r3, [r3, #4]
 8003fa2:	f003 0303 	and.w	r3, r3, #3
 8003fa6:	2b01      	cmp	r3, #1
 8003fa8:	d005      	beq.n	8003fb6 <HAL_GPIO_Init+0x52>
 8003faa:	683b      	ldr	r3, [r7, #0]
 8003fac:	685b      	ldr	r3, [r3, #4]
 8003fae:	f003 0303 	and.w	r3, r3, #3
 8003fb2:	2b02      	cmp	r3, #2
 8003fb4:	d130      	bne.n	8004018 <HAL_GPIO_Init+0xb4>
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	689b      	ldr	r3, [r3, #8]
 8003fba:	61bb      	str	r3, [r7, #24]
 8003fbc:	69fb      	ldr	r3, [r7, #28]
 8003fbe:	005b      	lsls	r3, r3, #1
 8003fc0:	2203      	movs	r2, #3
 8003fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8003fc6:	43db      	mvns	r3, r3
 8003fc8:	69ba      	ldr	r2, [r7, #24]
 8003fca:	4013      	ands	r3, r2
 8003fcc:	61bb      	str	r3, [r7, #24]
 8003fce:	683b      	ldr	r3, [r7, #0]
 8003fd0:	68da      	ldr	r2, [r3, #12]
 8003fd2:	69fb      	ldr	r3, [r7, #28]
 8003fd4:	005b      	lsls	r3, r3, #1
 8003fd6:	fa02 f303 	lsl.w	r3, r2, r3
 8003fda:	69ba      	ldr	r2, [r7, #24]
 8003fdc:	4313      	orrs	r3, r2
 8003fde:	61bb      	str	r3, [r7, #24]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	69ba      	ldr	r2, [r7, #24]
 8003fe4:	609a      	str	r2, [r3, #8]
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	685b      	ldr	r3, [r3, #4]
 8003fea:	61bb      	str	r3, [r7, #24]
 8003fec:	2201      	movs	r2, #1
 8003fee:	69fb      	ldr	r3, [r7, #28]
 8003ff0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ff4:	43db      	mvns	r3, r3
 8003ff6:	69ba      	ldr	r2, [r7, #24]
 8003ff8:	4013      	ands	r3, r2
 8003ffa:	61bb      	str	r3, [r7, #24]
 8003ffc:	683b      	ldr	r3, [r7, #0]
 8003ffe:	685b      	ldr	r3, [r3, #4]
 8004000:	091b      	lsrs	r3, r3, #4
 8004002:	f003 0201 	and.w	r2, r3, #1
 8004006:	69fb      	ldr	r3, [r7, #28]
 8004008:	fa02 f303 	lsl.w	r3, r2, r3
 800400c:	69ba      	ldr	r2, [r7, #24]
 800400e:	4313      	orrs	r3, r2
 8004010:	61bb      	str	r3, [r7, #24]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	69ba      	ldr	r2, [r7, #24]
 8004016:	605a      	str	r2, [r3, #4]
 8004018:	683b      	ldr	r3, [r7, #0]
 800401a:	685b      	ldr	r3, [r3, #4]
 800401c:	f003 0303 	and.w	r3, r3, #3
 8004020:	2b03      	cmp	r3, #3
 8004022:	d017      	beq.n	8004054 <HAL_GPIO_Init+0xf0>
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	68db      	ldr	r3, [r3, #12]
 8004028:	61bb      	str	r3, [r7, #24]
 800402a:	69fb      	ldr	r3, [r7, #28]
 800402c:	005b      	lsls	r3, r3, #1
 800402e:	2203      	movs	r2, #3
 8004030:	fa02 f303 	lsl.w	r3, r2, r3
 8004034:	43db      	mvns	r3, r3
 8004036:	69ba      	ldr	r2, [r7, #24]
 8004038:	4013      	ands	r3, r2
 800403a:	61bb      	str	r3, [r7, #24]
 800403c:	683b      	ldr	r3, [r7, #0]
 800403e:	689a      	ldr	r2, [r3, #8]
 8004040:	69fb      	ldr	r3, [r7, #28]
 8004042:	005b      	lsls	r3, r3, #1
 8004044:	fa02 f303 	lsl.w	r3, r2, r3
 8004048:	69ba      	ldr	r2, [r7, #24]
 800404a:	4313      	orrs	r3, r2
 800404c:	61bb      	str	r3, [r7, #24]
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	69ba      	ldr	r2, [r7, #24]
 8004052:	60da      	str	r2, [r3, #12]
 8004054:	683b      	ldr	r3, [r7, #0]
 8004056:	685b      	ldr	r3, [r3, #4]
 8004058:	f003 0303 	and.w	r3, r3, #3
 800405c:	2b02      	cmp	r3, #2
 800405e:	d123      	bne.n	80040a8 <HAL_GPIO_Init+0x144>
 8004060:	69fb      	ldr	r3, [r7, #28]
 8004062:	08da      	lsrs	r2, r3, #3
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	3208      	adds	r2, #8
 8004068:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800406c:	61bb      	str	r3, [r7, #24]
 800406e:	69fb      	ldr	r3, [r7, #28]
 8004070:	f003 0307 	and.w	r3, r3, #7
 8004074:	009b      	lsls	r3, r3, #2
 8004076:	220f      	movs	r2, #15
 8004078:	fa02 f303 	lsl.w	r3, r2, r3
 800407c:	43db      	mvns	r3, r3
 800407e:	69ba      	ldr	r2, [r7, #24]
 8004080:	4013      	ands	r3, r2
 8004082:	61bb      	str	r3, [r7, #24]
 8004084:	683b      	ldr	r3, [r7, #0]
 8004086:	691a      	ldr	r2, [r3, #16]
 8004088:	69fb      	ldr	r3, [r7, #28]
 800408a:	f003 0307 	and.w	r3, r3, #7
 800408e:	009b      	lsls	r3, r3, #2
 8004090:	fa02 f303 	lsl.w	r3, r2, r3
 8004094:	69ba      	ldr	r2, [r7, #24]
 8004096:	4313      	orrs	r3, r2
 8004098:	61bb      	str	r3, [r7, #24]
 800409a:	69fb      	ldr	r3, [r7, #28]
 800409c:	08da      	lsrs	r2, r3, #3
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	3208      	adds	r2, #8
 80040a2:	69b9      	ldr	r1, [r7, #24]
 80040a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	61bb      	str	r3, [r7, #24]
 80040ae:	69fb      	ldr	r3, [r7, #28]
 80040b0:	005b      	lsls	r3, r3, #1
 80040b2:	2203      	movs	r2, #3
 80040b4:	fa02 f303 	lsl.w	r3, r2, r3
 80040b8:	43db      	mvns	r3, r3
 80040ba:	69ba      	ldr	r2, [r7, #24]
 80040bc:	4013      	ands	r3, r2
 80040be:	61bb      	str	r3, [r7, #24]
 80040c0:	683b      	ldr	r3, [r7, #0]
 80040c2:	685b      	ldr	r3, [r3, #4]
 80040c4:	f003 0203 	and.w	r2, r3, #3
 80040c8:	69fb      	ldr	r3, [r7, #28]
 80040ca:	005b      	lsls	r3, r3, #1
 80040cc:	fa02 f303 	lsl.w	r3, r2, r3
 80040d0:	69ba      	ldr	r2, [r7, #24]
 80040d2:	4313      	orrs	r3, r2
 80040d4:	61bb      	str	r3, [r7, #24]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	69ba      	ldr	r2, [r7, #24]
 80040da:	601a      	str	r2, [r3, #0]
 80040dc:	683b      	ldr	r3, [r7, #0]
 80040de:	685b      	ldr	r3, [r3, #4]
 80040e0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	f000 80b4 	beq.w	8004252 <HAL_GPIO_Init+0x2ee>
 80040ea:	2300      	movs	r3, #0
 80040ec:	60fb      	str	r3, [r7, #12]
 80040ee:	4b60      	ldr	r3, [pc, #384]	@ (8004270 <HAL_GPIO_Init+0x30c>)
 80040f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80040f2:	4a5f      	ldr	r2, [pc, #380]	@ (8004270 <HAL_GPIO_Init+0x30c>)
 80040f4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80040f8:	6453      	str	r3, [r2, #68]	@ 0x44
 80040fa:	4b5d      	ldr	r3, [pc, #372]	@ (8004270 <HAL_GPIO_Init+0x30c>)
 80040fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80040fe:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004102:	60fb      	str	r3, [r7, #12]
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	4a5b      	ldr	r2, [pc, #364]	@ (8004274 <HAL_GPIO_Init+0x310>)
 8004108:	69fb      	ldr	r3, [r7, #28]
 800410a:	089b      	lsrs	r3, r3, #2
 800410c:	3302      	adds	r3, #2
 800410e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004112:	61bb      	str	r3, [r7, #24]
 8004114:	69fb      	ldr	r3, [r7, #28]
 8004116:	f003 0303 	and.w	r3, r3, #3
 800411a:	009b      	lsls	r3, r3, #2
 800411c:	220f      	movs	r2, #15
 800411e:	fa02 f303 	lsl.w	r3, r2, r3
 8004122:	43db      	mvns	r3, r3
 8004124:	69ba      	ldr	r2, [r7, #24]
 8004126:	4013      	ands	r3, r2
 8004128:	61bb      	str	r3, [r7, #24]
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	4a52      	ldr	r2, [pc, #328]	@ (8004278 <HAL_GPIO_Init+0x314>)
 800412e:	4293      	cmp	r3, r2
 8004130:	d02b      	beq.n	800418a <HAL_GPIO_Init+0x226>
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	4a51      	ldr	r2, [pc, #324]	@ (800427c <HAL_GPIO_Init+0x318>)
 8004136:	4293      	cmp	r3, r2
 8004138:	d025      	beq.n	8004186 <HAL_GPIO_Init+0x222>
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	4a50      	ldr	r2, [pc, #320]	@ (8004280 <HAL_GPIO_Init+0x31c>)
 800413e:	4293      	cmp	r3, r2
 8004140:	d01f      	beq.n	8004182 <HAL_GPIO_Init+0x21e>
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	4a4f      	ldr	r2, [pc, #316]	@ (8004284 <HAL_GPIO_Init+0x320>)
 8004146:	4293      	cmp	r3, r2
 8004148:	d019      	beq.n	800417e <HAL_GPIO_Init+0x21a>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	4a4e      	ldr	r2, [pc, #312]	@ (8004288 <HAL_GPIO_Init+0x324>)
 800414e:	4293      	cmp	r3, r2
 8004150:	d013      	beq.n	800417a <HAL_GPIO_Init+0x216>
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	4a4d      	ldr	r2, [pc, #308]	@ (800428c <HAL_GPIO_Init+0x328>)
 8004156:	4293      	cmp	r3, r2
 8004158:	d00d      	beq.n	8004176 <HAL_GPIO_Init+0x212>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	4a4c      	ldr	r2, [pc, #304]	@ (8004290 <HAL_GPIO_Init+0x32c>)
 800415e:	4293      	cmp	r3, r2
 8004160:	d007      	beq.n	8004172 <HAL_GPIO_Init+0x20e>
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	4a4b      	ldr	r2, [pc, #300]	@ (8004294 <HAL_GPIO_Init+0x330>)
 8004166:	4293      	cmp	r3, r2
 8004168:	d101      	bne.n	800416e <HAL_GPIO_Init+0x20a>
 800416a:	2307      	movs	r3, #7
 800416c:	e00e      	b.n	800418c <HAL_GPIO_Init+0x228>
 800416e:	2308      	movs	r3, #8
 8004170:	e00c      	b.n	800418c <HAL_GPIO_Init+0x228>
 8004172:	2306      	movs	r3, #6
 8004174:	e00a      	b.n	800418c <HAL_GPIO_Init+0x228>
 8004176:	2305      	movs	r3, #5
 8004178:	e008      	b.n	800418c <HAL_GPIO_Init+0x228>
 800417a:	2304      	movs	r3, #4
 800417c:	e006      	b.n	800418c <HAL_GPIO_Init+0x228>
 800417e:	2303      	movs	r3, #3
 8004180:	e004      	b.n	800418c <HAL_GPIO_Init+0x228>
 8004182:	2302      	movs	r3, #2
 8004184:	e002      	b.n	800418c <HAL_GPIO_Init+0x228>
 8004186:	2301      	movs	r3, #1
 8004188:	e000      	b.n	800418c <HAL_GPIO_Init+0x228>
 800418a:	2300      	movs	r3, #0
 800418c:	69fa      	ldr	r2, [r7, #28]
 800418e:	f002 0203 	and.w	r2, r2, #3
 8004192:	0092      	lsls	r2, r2, #2
 8004194:	4093      	lsls	r3, r2
 8004196:	69ba      	ldr	r2, [r7, #24]
 8004198:	4313      	orrs	r3, r2
 800419a:	61bb      	str	r3, [r7, #24]
 800419c:	4935      	ldr	r1, [pc, #212]	@ (8004274 <HAL_GPIO_Init+0x310>)
 800419e:	69fb      	ldr	r3, [r7, #28]
 80041a0:	089b      	lsrs	r3, r3, #2
 80041a2:	3302      	adds	r3, #2
 80041a4:	69ba      	ldr	r2, [r7, #24]
 80041a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80041aa:	4b3b      	ldr	r3, [pc, #236]	@ (8004298 <HAL_GPIO_Init+0x334>)
 80041ac:	689b      	ldr	r3, [r3, #8]
 80041ae:	61bb      	str	r3, [r7, #24]
 80041b0:	693b      	ldr	r3, [r7, #16]
 80041b2:	43db      	mvns	r3, r3
 80041b4:	69ba      	ldr	r2, [r7, #24]
 80041b6:	4013      	ands	r3, r2
 80041b8:	61bb      	str	r3, [r7, #24]
 80041ba:	683b      	ldr	r3, [r7, #0]
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d003      	beq.n	80041ce <HAL_GPIO_Init+0x26a>
 80041c6:	69ba      	ldr	r2, [r7, #24]
 80041c8:	693b      	ldr	r3, [r7, #16]
 80041ca:	4313      	orrs	r3, r2
 80041cc:	61bb      	str	r3, [r7, #24]
 80041ce:	4a32      	ldr	r2, [pc, #200]	@ (8004298 <HAL_GPIO_Init+0x334>)
 80041d0:	69bb      	ldr	r3, [r7, #24]
 80041d2:	6093      	str	r3, [r2, #8]
 80041d4:	4b30      	ldr	r3, [pc, #192]	@ (8004298 <HAL_GPIO_Init+0x334>)
 80041d6:	68db      	ldr	r3, [r3, #12]
 80041d8:	61bb      	str	r3, [r7, #24]
 80041da:	693b      	ldr	r3, [r7, #16]
 80041dc:	43db      	mvns	r3, r3
 80041de:	69ba      	ldr	r2, [r7, #24]
 80041e0:	4013      	ands	r3, r2
 80041e2:	61bb      	str	r3, [r7, #24]
 80041e4:	683b      	ldr	r3, [r7, #0]
 80041e6:	685b      	ldr	r3, [r3, #4]
 80041e8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d003      	beq.n	80041f8 <HAL_GPIO_Init+0x294>
 80041f0:	69ba      	ldr	r2, [r7, #24]
 80041f2:	693b      	ldr	r3, [r7, #16]
 80041f4:	4313      	orrs	r3, r2
 80041f6:	61bb      	str	r3, [r7, #24]
 80041f8:	4a27      	ldr	r2, [pc, #156]	@ (8004298 <HAL_GPIO_Init+0x334>)
 80041fa:	69bb      	ldr	r3, [r7, #24]
 80041fc:	60d3      	str	r3, [r2, #12]
 80041fe:	4b26      	ldr	r3, [pc, #152]	@ (8004298 <HAL_GPIO_Init+0x334>)
 8004200:	685b      	ldr	r3, [r3, #4]
 8004202:	61bb      	str	r3, [r7, #24]
 8004204:	693b      	ldr	r3, [r7, #16]
 8004206:	43db      	mvns	r3, r3
 8004208:	69ba      	ldr	r2, [r7, #24]
 800420a:	4013      	ands	r3, r2
 800420c:	61bb      	str	r3, [r7, #24]
 800420e:	683b      	ldr	r3, [r7, #0]
 8004210:	685b      	ldr	r3, [r3, #4]
 8004212:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004216:	2b00      	cmp	r3, #0
 8004218:	d003      	beq.n	8004222 <HAL_GPIO_Init+0x2be>
 800421a:	69ba      	ldr	r2, [r7, #24]
 800421c:	693b      	ldr	r3, [r7, #16]
 800421e:	4313      	orrs	r3, r2
 8004220:	61bb      	str	r3, [r7, #24]
 8004222:	4a1d      	ldr	r2, [pc, #116]	@ (8004298 <HAL_GPIO_Init+0x334>)
 8004224:	69bb      	ldr	r3, [r7, #24]
 8004226:	6053      	str	r3, [r2, #4]
 8004228:	4b1b      	ldr	r3, [pc, #108]	@ (8004298 <HAL_GPIO_Init+0x334>)
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	61bb      	str	r3, [r7, #24]
 800422e:	693b      	ldr	r3, [r7, #16]
 8004230:	43db      	mvns	r3, r3
 8004232:	69ba      	ldr	r2, [r7, #24]
 8004234:	4013      	ands	r3, r2
 8004236:	61bb      	str	r3, [r7, #24]
 8004238:	683b      	ldr	r3, [r7, #0]
 800423a:	685b      	ldr	r3, [r3, #4]
 800423c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004240:	2b00      	cmp	r3, #0
 8004242:	d003      	beq.n	800424c <HAL_GPIO_Init+0x2e8>
 8004244:	69ba      	ldr	r2, [r7, #24]
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	4313      	orrs	r3, r2
 800424a:	61bb      	str	r3, [r7, #24]
 800424c:	4a12      	ldr	r2, [pc, #72]	@ (8004298 <HAL_GPIO_Init+0x334>)
 800424e:	69bb      	ldr	r3, [r7, #24]
 8004250:	6013      	str	r3, [r2, #0]
 8004252:	69fb      	ldr	r3, [r7, #28]
 8004254:	3301      	adds	r3, #1
 8004256:	61fb      	str	r3, [r7, #28]
 8004258:	69fb      	ldr	r3, [r7, #28]
 800425a:	2b0f      	cmp	r3, #15
 800425c:	f67f ae90 	bls.w	8003f80 <HAL_GPIO_Init+0x1c>
 8004260:	bf00      	nop
 8004262:	bf00      	nop
 8004264:	3724      	adds	r7, #36	@ 0x24
 8004266:	46bd      	mov	sp, r7
 8004268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800426c:	4770      	bx	lr
 800426e:	bf00      	nop
 8004270:	40023800 	.word	0x40023800
 8004274:	40013800 	.word	0x40013800
 8004278:	40020000 	.word	0x40020000
 800427c:	40020400 	.word	0x40020400
 8004280:	40020800 	.word	0x40020800
 8004284:	40020c00 	.word	0x40020c00
 8004288:	40021000 	.word	0x40021000
 800428c:	40021400 	.word	0x40021400
 8004290:	40021800 	.word	0x40021800
 8004294:	40021c00 	.word	0x40021c00
 8004298:	40013c00 	.word	0x40013c00

0800429c <HAL_GPIO_ReadPin>:
 800429c:	b480      	push	{r7}
 800429e:	b085      	sub	sp, #20
 80042a0:	af00      	add	r7, sp, #0
 80042a2:	6078      	str	r0, [r7, #4]
 80042a4:	460b      	mov	r3, r1
 80042a6:	807b      	strh	r3, [r7, #2]
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	691a      	ldr	r2, [r3, #16]
 80042ac:	887b      	ldrh	r3, [r7, #2]
 80042ae:	4013      	ands	r3, r2
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	d002      	beq.n	80042ba <HAL_GPIO_ReadPin+0x1e>
 80042b4:	2301      	movs	r3, #1
 80042b6:	73fb      	strb	r3, [r7, #15]
 80042b8:	e001      	b.n	80042be <HAL_GPIO_ReadPin+0x22>
 80042ba:	2300      	movs	r3, #0
 80042bc:	73fb      	strb	r3, [r7, #15]
 80042be:	7bfb      	ldrb	r3, [r7, #15]
 80042c0:	4618      	mov	r0, r3
 80042c2:	3714      	adds	r7, #20
 80042c4:	46bd      	mov	sp, r7
 80042c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042ca:	4770      	bx	lr

080042cc <HAL_GPIO_WritePin>:
 80042cc:	b480      	push	{r7}
 80042ce:	b083      	sub	sp, #12
 80042d0:	af00      	add	r7, sp, #0
 80042d2:	6078      	str	r0, [r7, #4]
 80042d4:	460b      	mov	r3, r1
 80042d6:	807b      	strh	r3, [r7, #2]
 80042d8:	4613      	mov	r3, r2
 80042da:	707b      	strb	r3, [r7, #1]
 80042dc:	787b      	ldrb	r3, [r7, #1]
 80042de:	2b00      	cmp	r3, #0
 80042e0:	d003      	beq.n	80042ea <HAL_GPIO_WritePin+0x1e>
 80042e2:	887a      	ldrh	r2, [r7, #2]
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	619a      	str	r2, [r3, #24]
 80042e8:	e003      	b.n	80042f2 <HAL_GPIO_WritePin+0x26>
 80042ea:	887b      	ldrh	r3, [r7, #2]
 80042ec:	041a      	lsls	r2, r3, #16
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	619a      	str	r2, [r3, #24]
 80042f2:	bf00      	nop
 80042f4:	370c      	adds	r7, #12
 80042f6:	46bd      	mov	sp, r7
 80042f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042fc:	4770      	bx	lr
	...

08004300 <HAL_GPIO_EXTI_IRQHandler>:
 8004300:	b580      	push	{r7, lr}
 8004302:	b082      	sub	sp, #8
 8004304:	af00      	add	r7, sp, #0
 8004306:	4603      	mov	r3, r0
 8004308:	80fb      	strh	r3, [r7, #6]
 800430a:	4b08      	ldr	r3, [pc, #32]	@ (800432c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800430c:	695a      	ldr	r2, [r3, #20]
 800430e:	88fb      	ldrh	r3, [r7, #6]
 8004310:	4013      	ands	r3, r2
 8004312:	2b00      	cmp	r3, #0
 8004314:	d006      	beq.n	8004324 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8004316:	4a05      	ldr	r2, [pc, #20]	@ (800432c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004318:	88fb      	ldrh	r3, [r7, #6]
 800431a:	6153      	str	r3, [r2, #20]
 800431c:	88fb      	ldrh	r3, [r7, #6]
 800431e:	4618      	mov	r0, r3
 8004320:	f000 f806 	bl	8004330 <HAL_GPIO_EXTI_Callback>
 8004324:	bf00      	nop
 8004326:	3708      	adds	r7, #8
 8004328:	46bd      	mov	sp, r7
 800432a:	bd80      	pop	{r7, pc}
 800432c:	40013c00 	.word	0x40013c00

08004330 <HAL_GPIO_EXTI_Callback>:
 8004330:	b480      	push	{r7}
 8004332:	b083      	sub	sp, #12
 8004334:	af00      	add	r7, sp, #0
 8004336:	4603      	mov	r3, r0
 8004338:	80fb      	strh	r3, [r7, #6]
 800433a:	bf00      	nop
 800433c:	370c      	adds	r7, #12
 800433e:	46bd      	mov	sp, r7
 8004340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004344:	4770      	bx	lr
	...

08004348 <HAL_I2C_Init>:
 8004348:	b580      	push	{r7, lr}
 800434a:	b084      	sub	sp, #16
 800434c:	af00      	add	r7, sp, #0
 800434e:	6078      	str	r0, [r7, #4]
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	2b00      	cmp	r3, #0
 8004354:	d101      	bne.n	800435a <HAL_I2C_Init+0x12>
 8004356:	2301      	movs	r3, #1
 8004358:	e12b      	b.n	80045b2 <HAL_I2C_Init+0x26a>
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004360:	b2db      	uxtb	r3, r3
 8004362:	2b00      	cmp	r3, #0
 8004364:	d106      	bne.n	8004374 <HAL_I2C_Init+0x2c>
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	2200      	movs	r2, #0
 800436a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800436e:	6878      	ldr	r0, [r7, #4]
 8004370:	f7fd ff68 	bl	8002244 <HAL_I2C_MspInit>
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	2224      	movs	r2, #36	@ 0x24
 8004378:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	681a      	ldr	r2, [r3, #0]
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	f022 0201 	bic.w	r2, r2, #1
 800438a:	601a      	str	r2, [r3, #0]
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	681a      	ldr	r2, [r3, #0]
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800439a:	601a      	str	r2, [r3, #0]
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	681a      	ldr	r2, [r3, #0]
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80043aa:	601a      	str	r2, [r3, #0]
 80043ac:	f000 fd4c 	bl	8004e48 <HAL_RCC_GetPCLK1Freq>
 80043b0:	60f8      	str	r0, [r7, #12]
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	685b      	ldr	r3, [r3, #4]
 80043b6:	4a81      	ldr	r2, [pc, #516]	@ (80045bc <HAL_I2C_Init+0x274>)
 80043b8:	4293      	cmp	r3, r2
 80043ba:	d807      	bhi.n	80043cc <HAL_I2C_Init+0x84>
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	4a80      	ldr	r2, [pc, #512]	@ (80045c0 <HAL_I2C_Init+0x278>)
 80043c0:	4293      	cmp	r3, r2
 80043c2:	bf94      	ite	ls
 80043c4:	2301      	movls	r3, #1
 80043c6:	2300      	movhi	r3, #0
 80043c8:	b2db      	uxtb	r3, r3
 80043ca:	e006      	b.n	80043da <HAL_I2C_Init+0x92>
 80043cc:	68fb      	ldr	r3, [r7, #12]
 80043ce:	4a7d      	ldr	r2, [pc, #500]	@ (80045c4 <HAL_I2C_Init+0x27c>)
 80043d0:	4293      	cmp	r3, r2
 80043d2:	bf94      	ite	ls
 80043d4:	2301      	movls	r3, #1
 80043d6:	2300      	movhi	r3, #0
 80043d8:	b2db      	uxtb	r3, r3
 80043da:	2b00      	cmp	r3, #0
 80043dc:	d001      	beq.n	80043e2 <HAL_I2C_Init+0x9a>
 80043de:	2301      	movs	r3, #1
 80043e0:	e0e7      	b.n	80045b2 <HAL_I2C_Init+0x26a>
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	4a78      	ldr	r2, [pc, #480]	@ (80045c8 <HAL_I2C_Init+0x280>)
 80043e6:	fba2 2303 	umull	r2, r3, r2, r3
 80043ea:	0c9b      	lsrs	r3, r3, #18
 80043ec:	60bb      	str	r3, [r7, #8]
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	685b      	ldr	r3, [r3, #4]
 80043f4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	68ba      	ldr	r2, [r7, #8]
 80043fe:	430a      	orrs	r2, r1
 8004400:	605a      	str	r2, [r3, #4]
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	6a1b      	ldr	r3, [r3, #32]
 8004408:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	685b      	ldr	r3, [r3, #4]
 8004410:	4a6a      	ldr	r2, [pc, #424]	@ (80045bc <HAL_I2C_Init+0x274>)
 8004412:	4293      	cmp	r3, r2
 8004414:	d802      	bhi.n	800441c <HAL_I2C_Init+0xd4>
 8004416:	68bb      	ldr	r3, [r7, #8]
 8004418:	3301      	adds	r3, #1
 800441a:	e009      	b.n	8004430 <HAL_I2C_Init+0xe8>
 800441c:	68bb      	ldr	r3, [r7, #8]
 800441e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8004422:	fb02 f303 	mul.w	r3, r2, r3
 8004426:	4a69      	ldr	r2, [pc, #420]	@ (80045cc <HAL_I2C_Init+0x284>)
 8004428:	fba2 2303 	umull	r2, r3, r2, r3
 800442c:	099b      	lsrs	r3, r3, #6
 800442e:	3301      	adds	r3, #1
 8004430:	687a      	ldr	r2, [r7, #4]
 8004432:	6812      	ldr	r2, [r2, #0]
 8004434:	430b      	orrs	r3, r1
 8004436:	6213      	str	r3, [r2, #32]
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	681b      	ldr	r3, [r3, #0]
 800443c:	69db      	ldr	r3, [r3, #28]
 800443e:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8004442:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	685b      	ldr	r3, [r3, #4]
 800444a:	495c      	ldr	r1, [pc, #368]	@ (80045bc <HAL_I2C_Init+0x274>)
 800444c:	428b      	cmp	r3, r1
 800444e:	d819      	bhi.n	8004484 <HAL_I2C_Init+0x13c>
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	1e59      	subs	r1, r3, #1
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	685b      	ldr	r3, [r3, #4]
 8004458:	005b      	lsls	r3, r3, #1
 800445a:	fbb1 f3f3 	udiv	r3, r1, r3
 800445e:	1c59      	adds	r1, r3, #1
 8004460:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8004464:	400b      	ands	r3, r1
 8004466:	2b00      	cmp	r3, #0
 8004468:	d00a      	beq.n	8004480 <HAL_I2C_Init+0x138>
 800446a:	68fb      	ldr	r3, [r7, #12]
 800446c:	1e59      	subs	r1, r3, #1
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	685b      	ldr	r3, [r3, #4]
 8004472:	005b      	lsls	r3, r3, #1
 8004474:	fbb1 f3f3 	udiv	r3, r1, r3
 8004478:	3301      	adds	r3, #1
 800447a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800447e:	e051      	b.n	8004524 <HAL_I2C_Init+0x1dc>
 8004480:	2304      	movs	r3, #4
 8004482:	e04f      	b.n	8004524 <HAL_I2C_Init+0x1dc>
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	689b      	ldr	r3, [r3, #8]
 8004488:	2b00      	cmp	r3, #0
 800448a:	d111      	bne.n	80044b0 <HAL_I2C_Init+0x168>
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	1e58      	subs	r0, r3, #1
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	6859      	ldr	r1, [r3, #4]
 8004494:	460b      	mov	r3, r1
 8004496:	005b      	lsls	r3, r3, #1
 8004498:	440b      	add	r3, r1
 800449a:	fbb0 f3f3 	udiv	r3, r0, r3
 800449e:	3301      	adds	r3, #1
 80044a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	bf0c      	ite	eq
 80044a8:	2301      	moveq	r3, #1
 80044aa:	2300      	movne	r3, #0
 80044ac:	b2db      	uxtb	r3, r3
 80044ae:	e012      	b.n	80044d6 <HAL_I2C_Init+0x18e>
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	1e58      	subs	r0, r3, #1
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	6859      	ldr	r1, [r3, #4]
 80044b8:	460b      	mov	r3, r1
 80044ba:	009b      	lsls	r3, r3, #2
 80044bc:	440b      	add	r3, r1
 80044be:	0099      	lsls	r1, r3, #2
 80044c0:	440b      	add	r3, r1
 80044c2:	fbb0 f3f3 	udiv	r3, r0, r3
 80044c6:	3301      	adds	r3, #1
 80044c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	bf0c      	ite	eq
 80044d0:	2301      	moveq	r3, #1
 80044d2:	2300      	movne	r3, #0
 80044d4:	b2db      	uxtb	r3, r3
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d001      	beq.n	80044de <HAL_I2C_Init+0x196>
 80044da:	2301      	movs	r3, #1
 80044dc:	e022      	b.n	8004524 <HAL_I2C_Init+0x1dc>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	689b      	ldr	r3, [r3, #8]
 80044e2:	2b00      	cmp	r3, #0
 80044e4:	d10e      	bne.n	8004504 <HAL_I2C_Init+0x1bc>
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	1e58      	subs	r0, r3, #1
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	6859      	ldr	r1, [r3, #4]
 80044ee:	460b      	mov	r3, r1
 80044f0:	005b      	lsls	r3, r3, #1
 80044f2:	440b      	add	r3, r1
 80044f4:	fbb0 f3f3 	udiv	r3, r0, r3
 80044f8:	3301      	adds	r3, #1
 80044fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044fe:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004502:	e00f      	b.n	8004524 <HAL_I2C_Init+0x1dc>
 8004504:	68fb      	ldr	r3, [r7, #12]
 8004506:	1e58      	subs	r0, r3, #1
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	6859      	ldr	r1, [r3, #4]
 800450c:	460b      	mov	r3, r1
 800450e:	009b      	lsls	r3, r3, #2
 8004510:	440b      	add	r3, r1
 8004512:	0099      	lsls	r1, r3, #2
 8004514:	440b      	add	r3, r1
 8004516:	fbb0 f3f3 	udiv	r3, r0, r3
 800451a:	3301      	adds	r3, #1
 800451c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004520:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004524:	6879      	ldr	r1, [r7, #4]
 8004526:	6809      	ldr	r1, [r1, #0]
 8004528:	4313      	orrs	r3, r2
 800452a:	61cb      	str	r3, [r1, #28]
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	681b      	ldr	r3, [r3, #0]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	69da      	ldr	r2, [r3, #28]
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6a1b      	ldr	r3, [r3, #32]
 800453e:	431a      	orrs	r2, r3
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	430a      	orrs	r2, r1
 8004546:	601a      	str	r2, [r3, #0]
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	689b      	ldr	r3, [r3, #8]
 800454e:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8004552:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8004556:	687a      	ldr	r2, [r7, #4]
 8004558:	6911      	ldr	r1, [r2, #16]
 800455a:	687a      	ldr	r2, [r7, #4]
 800455c:	68d2      	ldr	r2, [r2, #12]
 800455e:	4311      	orrs	r1, r2
 8004560:	687a      	ldr	r2, [r7, #4]
 8004562:	6812      	ldr	r2, [r2, #0]
 8004564:	430b      	orrs	r3, r1
 8004566:	6093      	str	r3, [r2, #8]
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	68db      	ldr	r3, [r3, #12]
 800456e:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	695a      	ldr	r2, [r3, #20]
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	699b      	ldr	r3, [r3, #24]
 800457a:	431a      	orrs	r2, r3
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	430a      	orrs	r2, r1
 8004582:	60da      	str	r2, [r3, #12]
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	681a      	ldr	r2, [r3, #0]
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	f042 0201 	orr.w	r2, r2, #1
 8004592:	601a      	str	r2, [r3, #0]
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	2200      	movs	r2, #0
 8004598:	641a      	str	r2, [r3, #64]	@ 0x40
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	2220      	movs	r2, #32
 800459e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	2200      	movs	r2, #0
 80045a6:	631a      	str	r2, [r3, #48]	@ 0x30
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	2200      	movs	r2, #0
 80045ac:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80045b0:	2300      	movs	r3, #0
 80045b2:	4618      	mov	r0, r3
 80045b4:	3710      	adds	r7, #16
 80045b6:	46bd      	mov	sp, r7
 80045b8:	bd80      	pop	{r7, pc}
 80045ba:	bf00      	nop
 80045bc:	000186a0 	.word	0x000186a0
 80045c0:	001e847f 	.word	0x001e847f
 80045c4:	003d08ff 	.word	0x003d08ff
 80045c8:	431bde83 	.word	0x431bde83
 80045cc:	10624dd3 	.word	0x10624dd3

080045d0 <HAL_RCC_OscConfig>:
 80045d0:	b580      	push	{r7, lr}
 80045d2:	b086      	sub	sp, #24
 80045d4:	af00      	add	r7, sp, #0
 80045d6:	6078      	str	r0, [r7, #4]
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d101      	bne.n	80045e2 <HAL_RCC_OscConfig+0x12>
 80045de:	2301      	movs	r3, #1
 80045e0:	e267      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	f003 0301 	and.w	r3, r3, #1
 80045ea:	2b00      	cmp	r3, #0
 80045ec:	d075      	beq.n	80046da <HAL_RCC_OscConfig+0x10a>
 80045ee:	4b88      	ldr	r3, [pc, #544]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80045f0:	689b      	ldr	r3, [r3, #8]
 80045f2:	f003 030c 	and.w	r3, r3, #12
 80045f6:	2b04      	cmp	r3, #4
 80045f8:	d00c      	beq.n	8004614 <HAL_RCC_OscConfig+0x44>
 80045fa:	4b85      	ldr	r3, [pc, #532]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80045fc:	689b      	ldr	r3, [r3, #8]
 80045fe:	f003 030c 	and.w	r3, r3, #12
 8004602:	2b08      	cmp	r3, #8
 8004604:	d112      	bne.n	800462c <HAL_RCC_OscConfig+0x5c>
 8004606:	4b82      	ldr	r3, [pc, #520]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004608:	685b      	ldr	r3, [r3, #4]
 800460a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800460e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004612:	d10b      	bne.n	800462c <HAL_RCC_OscConfig+0x5c>
 8004614:	4b7e      	ldr	r3, [pc, #504]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800461c:	2b00      	cmp	r3, #0
 800461e:	d05b      	beq.n	80046d8 <HAL_RCC_OscConfig+0x108>
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	685b      	ldr	r3, [r3, #4]
 8004624:	2b00      	cmp	r3, #0
 8004626:	d157      	bne.n	80046d8 <HAL_RCC_OscConfig+0x108>
 8004628:	2301      	movs	r3, #1
 800462a:	e242      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	685b      	ldr	r3, [r3, #4]
 8004630:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004634:	d106      	bne.n	8004644 <HAL_RCC_OscConfig+0x74>
 8004636:	4b76      	ldr	r3, [pc, #472]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	4a75      	ldr	r2, [pc, #468]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800463c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004640:	6013      	str	r3, [r2, #0]
 8004642:	e01d      	b.n	8004680 <HAL_RCC_OscConfig+0xb0>
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	685b      	ldr	r3, [r3, #4]
 8004648:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800464c:	d10c      	bne.n	8004668 <HAL_RCC_OscConfig+0x98>
 800464e:	4b70      	ldr	r3, [pc, #448]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	4a6f      	ldr	r2, [pc, #444]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004654:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004658:	6013      	str	r3, [r2, #0]
 800465a:	4b6d      	ldr	r3, [pc, #436]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	4a6c      	ldr	r2, [pc, #432]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004660:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004664:	6013      	str	r3, [r2, #0]
 8004666:	e00b      	b.n	8004680 <HAL_RCC_OscConfig+0xb0>
 8004668:	4b69      	ldr	r3, [pc, #420]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	4a68      	ldr	r2, [pc, #416]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800466e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004672:	6013      	str	r3, [r2, #0]
 8004674:	4b66      	ldr	r3, [pc, #408]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	4a65      	ldr	r2, [pc, #404]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800467a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800467e:	6013      	str	r3, [r2, #0]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	685b      	ldr	r3, [r3, #4]
 8004684:	2b00      	cmp	r3, #0
 8004686:	d013      	beq.n	80046b0 <HAL_RCC_OscConfig+0xe0>
 8004688:	f7fe fc18 	bl	8002ebc <HAL_GetTick>
 800468c:	6138      	str	r0, [r7, #16]
 800468e:	e008      	b.n	80046a2 <HAL_RCC_OscConfig+0xd2>
 8004690:	f7fe fc14 	bl	8002ebc <HAL_GetTick>
 8004694:	4602      	mov	r2, r0
 8004696:	693b      	ldr	r3, [r7, #16]
 8004698:	1ad3      	subs	r3, r2, r3
 800469a:	2b64      	cmp	r3, #100	@ 0x64
 800469c:	d901      	bls.n	80046a2 <HAL_RCC_OscConfig+0xd2>
 800469e:	2303      	movs	r3, #3
 80046a0:	e207      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80046a2:	4b5b      	ldr	r3, [pc, #364]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80046a4:	681b      	ldr	r3, [r3, #0]
 80046a6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d0f0      	beq.n	8004690 <HAL_RCC_OscConfig+0xc0>
 80046ae:	e014      	b.n	80046da <HAL_RCC_OscConfig+0x10a>
 80046b0:	f7fe fc04 	bl	8002ebc <HAL_GetTick>
 80046b4:	6138      	str	r0, [r7, #16]
 80046b6:	e008      	b.n	80046ca <HAL_RCC_OscConfig+0xfa>
 80046b8:	f7fe fc00 	bl	8002ebc <HAL_GetTick>
 80046bc:	4602      	mov	r2, r0
 80046be:	693b      	ldr	r3, [r7, #16]
 80046c0:	1ad3      	subs	r3, r2, r3
 80046c2:	2b64      	cmp	r3, #100	@ 0x64
 80046c4:	d901      	bls.n	80046ca <HAL_RCC_OscConfig+0xfa>
 80046c6:	2303      	movs	r3, #3
 80046c8:	e1f3      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80046ca:	4b51      	ldr	r3, [pc, #324]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d1f0      	bne.n	80046b8 <HAL_RCC_OscConfig+0xe8>
 80046d6:	e000      	b.n	80046da <HAL_RCC_OscConfig+0x10a>
 80046d8:	bf00      	nop
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	f003 0302 	and.w	r3, r3, #2
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d063      	beq.n	80047ae <HAL_RCC_OscConfig+0x1de>
 80046e6:	4b4a      	ldr	r3, [pc, #296]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80046e8:	689b      	ldr	r3, [r3, #8]
 80046ea:	f003 030c 	and.w	r3, r3, #12
 80046ee:	2b00      	cmp	r3, #0
 80046f0:	d00b      	beq.n	800470a <HAL_RCC_OscConfig+0x13a>
 80046f2:	4b47      	ldr	r3, [pc, #284]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80046f4:	689b      	ldr	r3, [r3, #8]
 80046f6:	f003 030c 	and.w	r3, r3, #12
 80046fa:	2b08      	cmp	r3, #8
 80046fc:	d11c      	bne.n	8004738 <HAL_RCC_OscConfig+0x168>
 80046fe:	4b44      	ldr	r3, [pc, #272]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004706:	2b00      	cmp	r3, #0
 8004708:	d116      	bne.n	8004738 <HAL_RCC_OscConfig+0x168>
 800470a:	4b41      	ldr	r3, [pc, #260]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	f003 0302 	and.w	r3, r3, #2
 8004712:	2b00      	cmp	r3, #0
 8004714:	d005      	beq.n	8004722 <HAL_RCC_OscConfig+0x152>
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	68db      	ldr	r3, [r3, #12]
 800471a:	2b01      	cmp	r3, #1
 800471c:	d001      	beq.n	8004722 <HAL_RCC_OscConfig+0x152>
 800471e:	2301      	movs	r3, #1
 8004720:	e1c7      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004722:	4b3b      	ldr	r3, [pc, #236]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	691b      	ldr	r3, [r3, #16]
 800472e:	00db      	lsls	r3, r3, #3
 8004730:	4937      	ldr	r1, [pc, #220]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004732:	4313      	orrs	r3, r2
 8004734:	600b      	str	r3, [r1, #0]
 8004736:	e03a      	b.n	80047ae <HAL_RCC_OscConfig+0x1de>
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	68db      	ldr	r3, [r3, #12]
 800473c:	2b00      	cmp	r3, #0
 800473e:	d020      	beq.n	8004782 <HAL_RCC_OscConfig+0x1b2>
 8004740:	4b34      	ldr	r3, [pc, #208]	@ (8004814 <HAL_RCC_OscConfig+0x244>)
 8004742:	2201      	movs	r2, #1
 8004744:	601a      	str	r2, [r3, #0]
 8004746:	f7fe fbb9 	bl	8002ebc <HAL_GetTick>
 800474a:	6138      	str	r0, [r7, #16]
 800474c:	e008      	b.n	8004760 <HAL_RCC_OscConfig+0x190>
 800474e:	f7fe fbb5 	bl	8002ebc <HAL_GetTick>
 8004752:	4602      	mov	r2, r0
 8004754:	693b      	ldr	r3, [r7, #16]
 8004756:	1ad3      	subs	r3, r2, r3
 8004758:	2b02      	cmp	r3, #2
 800475a:	d901      	bls.n	8004760 <HAL_RCC_OscConfig+0x190>
 800475c:	2303      	movs	r3, #3
 800475e:	e1a8      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004760:	4b2b      	ldr	r3, [pc, #172]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	f003 0302 	and.w	r3, r3, #2
 8004768:	2b00      	cmp	r3, #0
 800476a:	d0f0      	beq.n	800474e <HAL_RCC_OscConfig+0x17e>
 800476c:	4b28      	ldr	r3, [pc, #160]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	691b      	ldr	r3, [r3, #16]
 8004778:	00db      	lsls	r3, r3, #3
 800477a:	4925      	ldr	r1, [pc, #148]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 800477c:	4313      	orrs	r3, r2
 800477e:	600b      	str	r3, [r1, #0]
 8004780:	e015      	b.n	80047ae <HAL_RCC_OscConfig+0x1de>
 8004782:	4b24      	ldr	r3, [pc, #144]	@ (8004814 <HAL_RCC_OscConfig+0x244>)
 8004784:	2200      	movs	r2, #0
 8004786:	601a      	str	r2, [r3, #0]
 8004788:	f7fe fb98 	bl	8002ebc <HAL_GetTick>
 800478c:	6138      	str	r0, [r7, #16]
 800478e:	e008      	b.n	80047a2 <HAL_RCC_OscConfig+0x1d2>
 8004790:	f7fe fb94 	bl	8002ebc <HAL_GetTick>
 8004794:	4602      	mov	r2, r0
 8004796:	693b      	ldr	r3, [r7, #16]
 8004798:	1ad3      	subs	r3, r2, r3
 800479a:	2b02      	cmp	r3, #2
 800479c:	d901      	bls.n	80047a2 <HAL_RCC_OscConfig+0x1d2>
 800479e:	2303      	movs	r3, #3
 80047a0:	e187      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80047a2:	4b1b      	ldr	r3, [pc, #108]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	f003 0302 	and.w	r3, r3, #2
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d1f0      	bne.n	8004790 <HAL_RCC_OscConfig+0x1c0>
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	f003 0308 	and.w	r3, r3, #8
 80047b6:	2b00      	cmp	r3, #0
 80047b8:	d036      	beq.n	8004828 <HAL_RCC_OscConfig+0x258>
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	695b      	ldr	r3, [r3, #20]
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d016      	beq.n	80047f0 <HAL_RCC_OscConfig+0x220>
 80047c2:	4b15      	ldr	r3, [pc, #84]	@ (8004818 <HAL_RCC_OscConfig+0x248>)
 80047c4:	2201      	movs	r2, #1
 80047c6:	601a      	str	r2, [r3, #0]
 80047c8:	f7fe fb78 	bl	8002ebc <HAL_GetTick>
 80047cc:	6138      	str	r0, [r7, #16]
 80047ce:	e008      	b.n	80047e2 <HAL_RCC_OscConfig+0x212>
 80047d0:	f7fe fb74 	bl	8002ebc <HAL_GetTick>
 80047d4:	4602      	mov	r2, r0
 80047d6:	693b      	ldr	r3, [r7, #16]
 80047d8:	1ad3      	subs	r3, r2, r3
 80047da:	2b02      	cmp	r3, #2
 80047dc:	d901      	bls.n	80047e2 <HAL_RCC_OscConfig+0x212>
 80047de:	2303      	movs	r3, #3
 80047e0:	e167      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80047e2:	4b0b      	ldr	r3, [pc, #44]	@ (8004810 <HAL_RCC_OscConfig+0x240>)
 80047e4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80047e6:	f003 0302 	and.w	r3, r3, #2
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	d0f0      	beq.n	80047d0 <HAL_RCC_OscConfig+0x200>
 80047ee:	e01b      	b.n	8004828 <HAL_RCC_OscConfig+0x258>
 80047f0:	4b09      	ldr	r3, [pc, #36]	@ (8004818 <HAL_RCC_OscConfig+0x248>)
 80047f2:	2200      	movs	r2, #0
 80047f4:	601a      	str	r2, [r3, #0]
 80047f6:	f7fe fb61 	bl	8002ebc <HAL_GetTick>
 80047fa:	6138      	str	r0, [r7, #16]
 80047fc:	e00e      	b.n	800481c <HAL_RCC_OscConfig+0x24c>
 80047fe:	f7fe fb5d 	bl	8002ebc <HAL_GetTick>
 8004802:	4602      	mov	r2, r0
 8004804:	693b      	ldr	r3, [r7, #16]
 8004806:	1ad3      	subs	r3, r2, r3
 8004808:	2b02      	cmp	r3, #2
 800480a:	d907      	bls.n	800481c <HAL_RCC_OscConfig+0x24c>
 800480c:	2303      	movs	r3, #3
 800480e:	e150      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004810:	40023800 	.word	0x40023800
 8004814:	42470000 	.word	0x42470000
 8004818:	42470e80 	.word	0x42470e80
 800481c:	4b88      	ldr	r3, [pc, #544]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 800481e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004820:	f003 0302 	and.w	r3, r3, #2
 8004824:	2b00      	cmp	r3, #0
 8004826:	d1ea      	bne.n	80047fe <HAL_RCC_OscConfig+0x22e>
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	f003 0304 	and.w	r3, r3, #4
 8004830:	2b00      	cmp	r3, #0
 8004832:	f000 8097 	beq.w	8004964 <HAL_RCC_OscConfig+0x394>
 8004836:	2300      	movs	r3, #0
 8004838:	75fb      	strb	r3, [r7, #23]
 800483a:	4b81      	ldr	r3, [pc, #516]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 800483c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800483e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004842:	2b00      	cmp	r3, #0
 8004844:	d10f      	bne.n	8004866 <HAL_RCC_OscConfig+0x296>
 8004846:	2300      	movs	r3, #0
 8004848:	60bb      	str	r3, [r7, #8]
 800484a:	4b7d      	ldr	r3, [pc, #500]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 800484c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800484e:	4a7c      	ldr	r2, [pc, #496]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 8004850:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004854:	6413      	str	r3, [r2, #64]	@ 0x40
 8004856:	4b7a      	ldr	r3, [pc, #488]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 8004858:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800485a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800485e:	60bb      	str	r3, [r7, #8]
 8004860:	68bb      	ldr	r3, [r7, #8]
 8004862:	2301      	movs	r3, #1
 8004864:	75fb      	strb	r3, [r7, #23]
 8004866:	4b77      	ldr	r3, [pc, #476]	@ (8004a44 <HAL_RCC_OscConfig+0x474>)
 8004868:	681b      	ldr	r3, [r3, #0]
 800486a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800486e:	2b00      	cmp	r3, #0
 8004870:	d118      	bne.n	80048a4 <HAL_RCC_OscConfig+0x2d4>
 8004872:	4b74      	ldr	r3, [pc, #464]	@ (8004a44 <HAL_RCC_OscConfig+0x474>)
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	4a73      	ldr	r2, [pc, #460]	@ (8004a44 <HAL_RCC_OscConfig+0x474>)
 8004878:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800487c:	6013      	str	r3, [r2, #0]
 800487e:	f7fe fb1d 	bl	8002ebc <HAL_GetTick>
 8004882:	6138      	str	r0, [r7, #16]
 8004884:	e008      	b.n	8004898 <HAL_RCC_OscConfig+0x2c8>
 8004886:	f7fe fb19 	bl	8002ebc <HAL_GetTick>
 800488a:	4602      	mov	r2, r0
 800488c:	693b      	ldr	r3, [r7, #16]
 800488e:	1ad3      	subs	r3, r2, r3
 8004890:	2b02      	cmp	r3, #2
 8004892:	d901      	bls.n	8004898 <HAL_RCC_OscConfig+0x2c8>
 8004894:	2303      	movs	r3, #3
 8004896:	e10c      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004898:	4b6a      	ldr	r3, [pc, #424]	@ (8004a44 <HAL_RCC_OscConfig+0x474>)
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	d0f0      	beq.n	8004886 <HAL_RCC_OscConfig+0x2b6>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	689b      	ldr	r3, [r3, #8]
 80048a8:	2b01      	cmp	r3, #1
 80048aa:	d106      	bne.n	80048ba <HAL_RCC_OscConfig+0x2ea>
 80048ac:	4b64      	ldr	r3, [pc, #400]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048ae:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80048b0:	4a63      	ldr	r2, [pc, #396]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048b2:	f043 0301 	orr.w	r3, r3, #1
 80048b6:	6713      	str	r3, [r2, #112]	@ 0x70
 80048b8:	e01c      	b.n	80048f4 <HAL_RCC_OscConfig+0x324>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	689b      	ldr	r3, [r3, #8]
 80048be:	2b05      	cmp	r3, #5
 80048c0:	d10c      	bne.n	80048dc <HAL_RCC_OscConfig+0x30c>
 80048c2:	4b5f      	ldr	r3, [pc, #380]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048c4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80048c6:	4a5e      	ldr	r2, [pc, #376]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048c8:	f043 0304 	orr.w	r3, r3, #4
 80048cc:	6713      	str	r3, [r2, #112]	@ 0x70
 80048ce:	4b5c      	ldr	r3, [pc, #368]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048d0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80048d2:	4a5b      	ldr	r2, [pc, #364]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048d4:	f043 0301 	orr.w	r3, r3, #1
 80048d8:	6713      	str	r3, [r2, #112]	@ 0x70
 80048da:	e00b      	b.n	80048f4 <HAL_RCC_OscConfig+0x324>
 80048dc:	4b58      	ldr	r3, [pc, #352]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048de:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80048e0:	4a57      	ldr	r2, [pc, #348]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048e2:	f023 0301 	bic.w	r3, r3, #1
 80048e6:	6713      	str	r3, [r2, #112]	@ 0x70
 80048e8:	4b55      	ldr	r3, [pc, #340]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048ea:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80048ec:	4a54      	ldr	r2, [pc, #336]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80048ee:	f023 0304 	bic.w	r3, r3, #4
 80048f2:	6713      	str	r3, [r2, #112]	@ 0x70
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	689b      	ldr	r3, [r3, #8]
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d015      	beq.n	8004928 <HAL_RCC_OscConfig+0x358>
 80048fc:	f7fe fade 	bl	8002ebc <HAL_GetTick>
 8004900:	6138      	str	r0, [r7, #16]
 8004902:	e00a      	b.n	800491a <HAL_RCC_OscConfig+0x34a>
 8004904:	f7fe fada 	bl	8002ebc <HAL_GetTick>
 8004908:	4602      	mov	r2, r0
 800490a:	693b      	ldr	r3, [r7, #16]
 800490c:	1ad3      	subs	r3, r2, r3
 800490e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004912:	4293      	cmp	r3, r2
 8004914:	d901      	bls.n	800491a <HAL_RCC_OscConfig+0x34a>
 8004916:	2303      	movs	r3, #3
 8004918:	e0cb      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 800491a:	4b49      	ldr	r3, [pc, #292]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 800491c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800491e:	f003 0302 	and.w	r3, r3, #2
 8004922:	2b00      	cmp	r3, #0
 8004924:	d0ee      	beq.n	8004904 <HAL_RCC_OscConfig+0x334>
 8004926:	e014      	b.n	8004952 <HAL_RCC_OscConfig+0x382>
 8004928:	f7fe fac8 	bl	8002ebc <HAL_GetTick>
 800492c:	6138      	str	r0, [r7, #16]
 800492e:	e00a      	b.n	8004946 <HAL_RCC_OscConfig+0x376>
 8004930:	f7fe fac4 	bl	8002ebc <HAL_GetTick>
 8004934:	4602      	mov	r2, r0
 8004936:	693b      	ldr	r3, [r7, #16]
 8004938:	1ad3      	subs	r3, r2, r3
 800493a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800493e:	4293      	cmp	r3, r2
 8004940:	d901      	bls.n	8004946 <HAL_RCC_OscConfig+0x376>
 8004942:	2303      	movs	r3, #3
 8004944:	e0b5      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004946:	4b3e      	ldr	r3, [pc, #248]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 8004948:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800494a:	f003 0302 	and.w	r3, r3, #2
 800494e:	2b00      	cmp	r3, #0
 8004950:	d1ee      	bne.n	8004930 <HAL_RCC_OscConfig+0x360>
 8004952:	7dfb      	ldrb	r3, [r7, #23]
 8004954:	2b01      	cmp	r3, #1
 8004956:	d105      	bne.n	8004964 <HAL_RCC_OscConfig+0x394>
 8004958:	4b39      	ldr	r3, [pc, #228]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 800495a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800495c:	4a38      	ldr	r2, [pc, #224]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 800495e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004962:	6413      	str	r3, [r2, #64]	@ 0x40
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	699b      	ldr	r3, [r3, #24]
 8004968:	2b00      	cmp	r3, #0
 800496a:	f000 80a1 	beq.w	8004ab0 <HAL_RCC_OscConfig+0x4e0>
 800496e:	4b34      	ldr	r3, [pc, #208]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 8004970:	689b      	ldr	r3, [r3, #8]
 8004972:	f003 030c 	and.w	r3, r3, #12
 8004976:	2b08      	cmp	r3, #8
 8004978:	d05c      	beq.n	8004a34 <HAL_RCC_OscConfig+0x464>
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	699b      	ldr	r3, [r3, #24]
 800497e:	2b02      	cmp	r3, #2
 8004980:	d141      	bne.n	8004a06 <HAL_RCC_OscConfig+0x436>
 8004982:	4b31      	ldr	r3, [pc, #196]	@ (8004a48 <HAL_RCC_OscConfig+0x478>)
 8004984:	2200      	movs	r2, #0
 8004986:	601a      	str	r2, [r3, #0]
 8004988:	f7fe fa98 	bl	8002ebc <HAL_GetTick>
 800498c:	6138      	str	r0, [r7, #16]
 800498e:	e008      	b.n	80049a2 <HAL_RCC_OscConfig+0x3d2>
 8004990:	f7fe fa94 	bl	8002ebc <HAL_GetTick>
 8004994:	4602      	mov	r2, r0
 8004996:	693b      	ldr	r3, [r7, #16]
 8004998:	1ad3      	subs	r3, r2, r3
 800499a:	2b02      	cmp	r3, #2
 800499c:	d901      	bls.n	80049a2 <HAL_RCC_OscConfig+0x3d2>
 800499e:	2303      	movs	r3, #3
 80049a0:	e087      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80049a2:	4b27      	ldr	r3, [pc, #156]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d1f0      	bne.n	8004990 <HAL_RCC_OscConfig+0x3c0>
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	69da      	ldr	r2, [r3, #28]
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	6a1b      	ldr	r3, [r3, #32]
 80049b6:	431a      	orrs	r2, r3
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049bc:	019b      	lsls	r3, r3, #6
 80049be:	431a      	orrs	r2, r3
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80049c4:	085b      	lsrs	r3, r3, #1
 80049c6:	3b01      	subs	r3, #1
 80049c8:	041b      	lsls	r3, r3, #16
 80049ca:	431a      	orrs	r2, r3
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80049d0:	061b      	lsls	r3, r3, #24
 80049d2:	491b      	ldr	r1, [pc, #108]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80049d4:	4313      	orrs	r3, r2
 80049d6:	604b      	str	r3, [r1, #4]
 80049d8:	4b1b      	ldr	r3, [pc, #108]	@ (8004a48 <HAL_RCC_OscConfig+0x478>)
 80049da:	2201      	movs	r2, #1
 80049dc:	601a      	str	r2, [r3, #0]
 80049de:	f7fe fa6d 	bl	8002ebc <HAL_GetTick>
 80049e2:	6138      	str	r0, [r7, #16]
 80049e4:	e008      	b.n	80049f8 <HAL_RCC_OscConfig+0x428>
 80049e6:	f7fe fa69 	bl	8002ebc <HAL_GetTick>
 80049ea:	4602      	mov	r2, r0
 80049ec:	693b      	ldr	r3, [r7, #16]
 80049ee:	1ad3      	subs	r3, r2, r3
 80049f0:	2b02      	cmp	r3, #2
 80049f2:	d901      	bls.n	80049f8 <HAL_RCC_OscConfig+0x428>
 80049f4:	2303      	movs	r3, #3
 80049f6:	e05c      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 80049f8:	4b11      	ldr	r3, [pc, #68]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d0f0      	beq.n	80049e6 <HAL_RCC_OscConfig+0x416>
 8004a04:	e054      	b.n	8004ab0 <HAL_RCC_OscConfig+0x4e0>
 8004a06:	4b10      	ldr	r3, [pc, #64]	@ (8004a48 <HAL_RCC_OscConfig+0x478>)
 8004a08:	2200      	movs	r2, #0
 8004a0a:	601a      	str	r2, [r3, #0]
 8004a0c:	f7fe fa56 	bl	8002ebc <HAL_GetTick>
 8004a10:	6138      	str	r0, [r7, #16]
 8004a12:	e008      	b.n	8004a26 <HAL_RCC_OscConfig+0x456>
 8004a14:	f7fe fa52 	bl	8002ebc <HAL_GetTick>
 8004a18:	4602      	mov	r2, r0
 8004a1a:	693b      	ldr	r3, [r7, #16]
 8004a1c:	1ad3      	subs	r3, r2, r3
 8004a1e:	2b02      	cmp	r3, #2
 8004a20:	d901      	bls.n	8004a26 <HAL_RCC_OscConfig+0x456>
 8004a22:	2303      	movs	r3, #3
 8004a24:	e045      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004a26:	4b06      	ldr	r3, [pc, #24]	@ (8004a40 <HAL_RCC_OscConfig+0x470>)
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d1f0      	bne.n	8004a14 <HAL_RCC_OscConfig+0x444>
 8004a32:	e03d      	b.n	8004ab0 <HAL_RCC_OscConfig+0x4e0>
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	699b      	ldr	r3, [r3, #24]
 8004a38:	2b01      	cmp	r3, #1
 8004a3a:	d107      	bne.n	8004a4c <HAL_RCC_OscConfig+0x47c>
 8004a3c:	2301      	movs	r3, #1
 8004a3e:	e038      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004a40:	40023800 	.word	0x40023800
 8004a44:	40007000 	.word	0x40007000
 8004a48:	42470060 	.word	0x42470060
 8004a4c:	4b1b      	ldr	r3, [pc, #108]	@ (8004abc <HAL_RCC_OscConfig+0x4ec>)
 8004a4e:	685b      	ldr	r3, [r3, #4]
 8004a50:	60fb      	str	r3, [r7, #12]
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	699b      	ldr	r3, [r3, #24]
 8004a56:	2b01      	cmp	r3, #1
 8004a58:	d028      	beq.n	8004aac <HAL_RCC_OscConfig+0x4dc>
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	69db      	ldr	r3, [r3, #28]
 8004a64:	429a      	cmp	r2, r3
 8004a66:	d121      	bne.n	8004aac <HAL_RCC_OscConfig+0x4dc>
 8004a68:	68fb      	ldr	r3, [r7, #12]
 8004a6a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	6a1b      	ldr	r3, [r3, #32]
 8004a72:	429a      	cmp	r2, r3
 8004a74:	d11a      	bne.n	8004aac <HAL_RCC_OscConfig+0x4dc>
 8004a76:	68fa      	ldr	r2, [r7, #12]
 8004a78:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004a7c:	4013      	ands	r3, r2
 8004a7e:	687a      	ldr	r2, [r7, #4]
 8004a80:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004a82:	0192      	lsls	r2, r2, #6
 8004a84:	4293      	cmp	r3, r2
 8004a86:	d111      	bne.n	8004aac <HAL_RCC_OscConfig+0x4dc>
 8004a88:	68fb      	ldr	r3, [r7, #12]
 8004a8a:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004a92:	085b      	lsrs	r3, r3, #1
 8004a94:	3b01      	subs	r3, #1
 8004a96:	041b      	lsls	r3, r3, #16
 8004a98:	429a      	cmp	r2, r3
 8004a9a:	d107      	bne.n	8004aac <HAL_RCC_OscConfig+0x4dc>
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004aa6:	061b      	lsls	r3, r3, #24
 8004aa8:	429a      	cmp	r2, r3
 8004aaa:	d001      	beq.n	8004ab0 <HAL_RCC_OscConfig+0x4e0>
 8004aac:	2301      	movs	r3, #1
 8004aae:	e000      	b.n	8004ab2 <HAL_RCC_OscConfig+0x4e2>
 8004ab0:	2300      	movs	r3, #0
 8004ab2:	4618      	mov	r0, r3
 8004ab4:	3718      	adds	r7, #24
 8004ab6:	46bd      	mov	sp, r7
 8004ab8:	bd80      	pop	{r7, pc}
 8004aba:	bf00      	nop
 8004abc:	40023800 	.word	0x40023800

08004ac0 <HAL_RCC_ClockConfig>:
 8004ac0:	b580      	push	{r7, lr}
 8004ac2:	b084      	sub	sp, #16
 8004ac4:	af00      	add	r7, sp, #0
 8004ac6:	6078      	str	r0, [r7, #4]
 8004ac8:	6039      	str	r1, [r7, #0]
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	2b00      	cmp	r3, #0
 8004ace:	d101      	bne.n	8004ad4 <HAL_RCC_ClockConfig+0x14>
 8004ad0:	2301      	movs	r3, #1
 8004ad2:	e0cc      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004ad4:	4b68      	ldr	r3, [pc, #416]	@ (8004c78 <HAL_RCC_ClockConfig+0x1b8>)
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	f003 0307 	and.w	r3, r3, #7
 8004adc:	683a      	ldr	r2, [r7, #0]
 8004ade:	429a      	cmp	r2, r3
 8004ae0:	d90c      	bls.n	8004afc <HAL_RCC_ClockConfig+0x3c>
 8004ae2:	4b65      	ldr	r3, [pc, #404]	@ (8004c78 <HAL_RCC_ClockConfig+0x1b8>)
 8004ae4:	683a      	ldr	r2, [r7, #0]
 8004ae6:	b2d2      	uxtb	r2, r2
 8004ae8:	701a      	strb	r2, [r3, #0]
 8004aea:	4b63      	ldr	r3, [pc, #396]	@ (8004c78 <HAL_RCC_ClockConfig+0x1b8>)
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	f003 0307 	and.w	r3, r3, #7
 8004af2:	683a      	ldr	r2, [r7, #0]
 8004af4:	429a      	cmp	r2, r3
 8004af6:	d001      	beq.n	8004afc <HAL_RCC_ClockConfig+0x3c>
 8004af8:	2301      	movs	r3, #1
 8004afa:	e0b8      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	f003 0302 	and.w	r3, r3, #2
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	d020      	beq.n	8004b4a <HAL_RCC_ClockConfig+0x8a>
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	681b      	ldr	r3, [r3, #0]
 8004b0c:	f003 0304 	and.w	r3, r3, #4
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	d005      	beq.n	8004b20 <HAL_RCC_ClockConfig+0x60>
 8004b14:	4b59      	ldr	r3, [pc, #356]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b16:	689b      	ldr	r3, [r3, #8]
 8004b18:	4a58      	ldr	r2, [pc, #352]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b1a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004b1e:	6093      	str	r3, [r2, #8]
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	f003 0308 	and.w	r3, r3, #8
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d005      	beq.n	8004b38 <HAL_RCC_ClockConfig+0x78>
 8004b2c:	4b53      	ldr	r3, [pc, #332]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b2e:	689b      	ldr	r3, [r3, #8]
 8004b30:	4a52      	ldr	r2, [pc, #328]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b32:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8004b36:	6093      	str	r3, [r2, #8]
 8004b38:	4b50      	ldr	r3, [pc, #320]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b3a:	689b      	ldr	r3, [r3, #8]
 8004b3c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	689b      	ldr	r3, [r3, #8]
 8004b44:	494d      	ldr	r1, [pc, #308]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b46:	4313      	orrs	r3, r2
 8004b48:	608b      	str	r3, [r1, #8]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	f003 0301 	and.w	r3, r3, #1
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d044      	beq.n	8004be0 <HAL_RCC_ClockConfig+0x120>
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	685b      	ldr	r3, [r3, #4]
 8004b5a:	2b01      	cmp	r3, #1
 8004b5c:	d107      	bne.n	8004b6e <HAL_RCC_ClockConfig+0xae>
 8004b5e:	4b47      	ldr	r3, [pc, #284]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004b66:	2b00      	cmp	r3, #0
 8004b68:	d119      	bne.n	8004b9e <HAL_RCC_ClockConfig+0xde>
 8004b6a:	2301      	movs	r3, #1
 8004b6c:	e07f      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	685b      	ldr	r3, [r3, #4]
 8004b72:	2b02      	cmp	r3, #2
 8004b74:	d003      	beq.n	8004b7e <HAL_RCC_ClockConfig+0xbe>
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	685b      	ldr	r3, [r3, #4]
 8004b7a:	2b03      	cmp	r3, #3
 8004b7c:	d107      	bne.n	8004b8e <HAL_RCC_ClockConfig+0xce>
 8004b7e:	4b3f      	ldr	r3, [pc, #252]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004b86:	2b00      	cmp	r3, #0
 8004b88:	d109      	bne.n	8004b9e <HAL_RCC_ClockConfig+0xde>
 8004b8a:	2301      	movs	r3, #1
 8004b8c:	e06f      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004b8e:	4b3b      	ldr	r3, [pc, #236]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	f003 0302 	and.w	r3, r3, #2
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d101      	bne.n	8004b9e <HAL_RCC_ClockConfig+0xde>
 8004b9a:	2301      	movs	r3, #1
 8004b9c:	e067      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004b9e:	4b37      	ldr	r3, [pc, #220]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004ba0:	689b      	ldr	r3, [r3, #8]
 8004ba2:	f023 0203 	bic.w	r2, r3, #3
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	685b      	ldr	r3, [r3, #4]
 8004baa:	4934      	ldr	r1, [pc, #208]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004bac:	4313      	orrs	r3, r2
 8004bae:	608b      	str	r3, [r1, #8]
 8004bb0:	f7fe f984 	bl	8002ebc <HAL_GetTick>
 8004bb4:	60f8      	str	r0, [r7, #12]
 8004bb6:	e00a      	b.n	8004bce <HAL_RCC_ClockConfig+0x10e>
 8004bb8:	f7fe f980 	bl	8002ebc <HAL_GetTick>
 8004bbc:	4602      	mov	r2, r0
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	1ad3      	subs	r3, r2, r3
 8004bc2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004bc6:	4293      	cmp	r3, r2
 8004bc8:	d901      	bls.n	8004bce <HAL_RCC_ClockConfig+0x10e>
 8004bca:	2303      	movs	r3, #3
 8004bcc:	e04f      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004bce:	4b2b      	ldr	r3, [pc, #172]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004bd0:	689b      	ldr	r3, [r3, #8]
 8004bd2:	f003 020c 	and.w	r2, r3, #12
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	685b      	ldr	r3, [r3, #4]
 8004bda:	009b      	lsls	r3, r3, #2
 8004bdc:	429a      	cmp	r2, r3
 8004bde:	d1eb      	bne.n	8004bb8 <HAL_RCC_ClockConfig+0xf8>
 8004be0:	4b25      	ldr	r3, [pc, #148]	@ (8004c78 <HAL_RCC_ClockConfig+0x1b8>)
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	f003 0307 	and.w	r3, r3, #7
 8004be8:	683a      	ldr	r2, [r7, #0]
 8004bea:	429a      	cmp	r2, r3
 8004bec:	d20c      	bcs.n	8004c08 <HAL_RCC_ClockConfig+0x148>
 8004bee:	4b22      	ldr	r3, [pc, #136]	@ (8004c78 <HAL_RCC_ClockConfig+0x1b8>)
 8004bf0:	683a      	ldr	r2, [r7, #0]
 8004bf2:	b2d2      	uxtb	r2, r2
 8004bf4:	701a      	strb	r2, [r3, #0]
 8004bf6:	4b20      	ldr	r3, [pc, #128]	@ (8004c78 <HAL_RCC_ClockConfig+0x1b8>)
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	f003 0307 	and.w	r3, r3, #7
 8004bfe:	683a      	ldr	r2, [r7, #0]
 8004c00:	429a      	cmp	r2, r3
 8004c02:	d001      	beq.n	8004c08 <HAL_RCC_ClockConfig+0x148>
 8004c04:	2301      	movs	r3, #1
 8004c06:	e032      	b.n	8004c6e <HAL_RCC_ClockConfig+0x1ae>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	f003 0304 	and.w	r3, r3, #4
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d008      	beq.n	8004c26 <HAL_RCC_ClockConfig+0x166>
 8004c14:	4b19      	ldr	r3, [pc, #100]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004c16:	689b      	ldr	r3, [r3, #8]
 8004c18:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	68db      	ldr	r3, [r3, #12]
 8004c20:	4916      	ldr	r1, [pc, #88]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004c22:	4313      	orrs	r3, r2
 8004c24:	608b      	str	r3, [r1, #8]
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	f003 0308 	and.w	r3, r3, #8
 8004c2e:	2b00      	cmp	r3, #0
 8004c30:	d009      	beq.n	8004c46 <HAL_RCC_ClockConfig+0x186>
 8004c32:	4b12      	ldr	r3, [pc, #72]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004c34:	689b      	ldr	r3, [r3, #8]
 8004c36:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	691b      	ldr	r3, [r3, #16]
 8004c3e:	00db      	lsls	r3, r3, #3
 8004c40:	490e      	ldr	r1, [pc, #56]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004c42:	4313      	orrs	r3, r2
 8004c44:	608b      	str	r3, [r1, #8]
 8004c46:	f000 f82d 	bl	8004ca4 <HAL_RCC_GetSysClockFreq>
 8004c4a:	4602      	mov	r2, r0
 8004c4c:	4b0b      	ldr	r3, [pc, #44]	@ (8004c7c <HAL_RCC_ClockConfig+0x1bc>)
 8004c4e:	689b      	ldr	r3, [r3, #8]
 8004c50:	091b      	lsrs	r3, r3, #4
 8004c52:	f003 030f 	and.w	r3, r3, #15
 8004c56:	490a      	ldr	r1, [pc, #40]	@ (8004c80 <HAL_RCC_ClockConfig+0x1c0>)
 8004c58:	5ccb      	ldrb	r3, [r1, r3]
 8004c5a:	fa22 f303 	lsr.w	r3, r2, r3
 8004c5e:	4a09      	ldr	r2, [pc, #36]	@ (8004c84 <HAL_RCC_ClockConfig+0x1c4>)
 8004c60:	6013      	str	r3, [r2, #0]
 8004c62:	4b09      	ldr	r3, [pc, #36]	@ (8004c88 <HAL_RCC_ClockConfig+0x1c8>)
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	4618      	mov	r0, r3
 8004c68:	f7fe f8e4 	bl	8002e34 <HAL_InitTick>
 8004c6c:	2300      	movs	r3, #0
 8004c6e:	4618      	mov	r0, r3
 8004c70:	3710      	adds	r7, #16
 8004c72:	46bd      	mov	sp, r7
 8004c74:	bd80      	pop	{r7, pc}
 8004c76:	bf00      	nop
 8004c78:	40023c00 	.word	0x40023c00
 8004c7c:	40023800 	.word	0x40023800
 8004c80:	0800a04c 	.word	0x0800a04c
 8004c84:	2000014c 	.word	0x2000014c
 8004c88:	20000150 	.word	0x20000150

08004c8c <HAL_RCC_EnableCSS>:
 8004c8c:	b480      	push	{r7}
 8004c8e:	af00      	add	r7, sp, #0
 8004c90:	4b03      	ldr	r3, [pc, #12]	@ (8004ca0 <HAL_RCC_EnableCSS+0x14>)
 8004c92:	2201      	movs	r2, #1
 8004c94:	601a      	str	r2, [r3, #0]
 8004c96:	bf00      	nop
 8004c98:	46bd      	mov	sp, r7
 8004c9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c9e:	4770      	bx	lr
 8004ca0:	4247004c 	.word	0x4247004c

08004ca4 <HAL_RCC_GetSysClockFreq>:
 8004ca4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004ca8:	b090      	sub	sp, #64	@ 0x40
 8004caa:	af00      	add	r7, sp, #0
 8004cac:	2300      	movs	r3, #0
 8004cae:	637b      	str	r3, [r7, #52]	@ 0x34
 8004cb0:	2300      	movs	r3, #0
 8004cb2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	633b      	str	r3, [r7, #48]	@ 0x30
 8004cb8:	2300      	movs	r3, #0
 8004cba:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004cbc:	4b59      	ldr	r3, [pc, #356]	@ (8004e24 <HAL_RCC_GetSysClockFreq+0x180>)
 8004cbe:	689b      	ldr	r3, [r3, #8]
 8004cc0:	f003 030c 	and.w	r3, r3, #12
 8004cc4:	2b08      	cmp	r3, #8
 8004cc6:	d00d      	beq.n	8004ce4 <HAL_RCC_GetSysClockFreq+0x40>
 8004cc8:	2b08      	cmp	r3, #8
 8004cca:	f200 80a1 	bhi.w	8004e10 <HAL_RCC_GetSysClockFreq+0x16c>
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	d002      	beq.n	8004cd8 <HAL_RCC_GetSysClockFreq+0x34>
 8004cd2:	2b04      	cmp	r3, #4
 8004cd4:	d003      	beq.n	8004cde <HAL_RCC_GetSysClockFreq+0x3a>
 8004cd6:	e09b      	b.n	8004e10 <HAL_RCC_GetSysClockFreq+0x16c>
 8004cd8:	4b53      	ldr	r3, [pc, #332]	@ (8004e28 <HAL_RCC_GetSysClockFreq+0x184>)
 8004cda:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004cdc:	e09b      	b.n	8004e16 <HAL_RCC_GetSysClockFreq+0x172>
 8004cde:	4b53      	ldr	r3, [pc, #332]	@ (8004e2c <HAL_RCC_GetSysClockFreq+0x188>)
 8004ce0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004ce2:	e098      	b.n	8004e16 <HAL_RCC_GetSysClockFreq+0x172>
 8004ce4:	4b4f      	ldr	r3, [pc, #316]	@ (8004e24 <HAL_RCC_GetSysClockFreq+0x180>)
 8004ce6:	685b      	ldr	r3, [r3, #4]
 8004ce8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004cec:	637b      	str	r3, [r7, #52]	@ 0x34
 8004cee:	4b4d      	ldr	r3, [pc, #308]	@ (8004e24 <HAL_RCC_GetSysClockFreq+0x180>)
 8004cf0:	685b      	ldr	r3, [r3, #4]
 8004cf2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004cf6:	2b00      	cmp	r3, #0
 8004cf8:	d028      	beq.n	8004d4c <HAL_RCC_GetSysClockFreq+0xa8>
 8004cfa:	4b4a      	ldr	r3, [pc, #296]	@ (8004e24 <HAL_RCC_GetSysClockFreq+0x180>)
 8004cfc:	685b      	ldr	r3, [r3, #4]
 8004cfe:	099b      	lsrs	r3, r3, #6
 8004d00:	2200      	movs	r2, #0
 8004d02:	623b      	str	r3, [r7, #32]
 8004d04:	627a      	str	r2, [r7, #36]	@ 0x24
 8004d06:	6a3b      	ldr	r3, [r7, #32]
 8004d08:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004d0c:	2100      	movs	r1, #0
 8004d0e:	4b47      	ldr	r3, [pc, #284]	@ (8004e2c <HAL_RCC_GetSysClockFreq+0x188>)
 8004d10:	fb03 f201 	mul.w	r2, r3, r1
 8004d14:	2300      	movs	r3, #0
 8004d16:	fb00 f303 	mul.w	r3, r0, r3
 8004d1a:	4413      	add	r3, r2
 8004d1c:	4a43      	ldr	r2, [pc, #268]	@ (8004e2c <HAL_RCC_GetSysClockFreq+0x188>)
 8004d1e:	fba0 1202 	umull	r1, r2, r0, r2
 8004d22:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004d24:	460a      	mov	r2, r1
 8004d26:	62ba      	str	r2, [r7, #40]	@ 0x28
 8004d28:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004d2a:	4413      	add	r3, r2
 8004d2c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004d2e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004d30:	2200      	movs	r2, #0
 8004d32:	61bb      	str	r3, [r7, #24]
 8004d34:	61fa      	str	r2, [r7, #28]
 8004d36:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004d3a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8004d3e:	f7fb fa47 	bl	80001d0 <__aeabi_uldivmod>
 8004d42:	4602      	mov	r2, r0
 8004d44:	460b      	mov	r3, r1
 8004d46:	4613      	mov	r3, r2
 8004d48:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004d4a:	e053      	b.n	8004df4 <HAL_RCC_GetSysClockFreq+0x150>
 8004d4c:	4b35      	ldr	r3, [pc, #212]	@ (8004e24 <HAL_RCC_GetSysClockFreq+0x180>)
 8004d4e:	685b      	ldr	r3, [r3, #4]
 8004d50:	099b      	lsrs	r3, r3, #6
 8004d52:	2200      	movs	r2, #0
 8004d54:	613b      	str	r3, [r7, #16]
 8004d56:	617a      	str	r2, [r7, #20]
 8004d58:	693b      	ldr	r3, [r7, #16]
 8004d5a:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8004d5e:	f04f 0b00 	mov.w	fp, #0
 8004d62:	4652      	mov	r2, sl
 8004d64:	465b      	mov	r3, fp
 8004d66:	f04f 0000 	mov.w	r0, #0
 8004d6a:	f04f 0100 	mov.w	r1, #0
 8004d6e:	0159      	lsls	r1, r3, #5
 8004d70:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004d74:	0150      	lsls	r0, r2, #5
 8004d76:	4602      	mov	r2, r0
 8004d78:	460b      	mov	r3, r1
 8004d7a:	ebb2 080a 	subs.w	r8, r2, sl
 8004d7e:	eb63 090b 	sbc.w	r9, r3, fp
 8004d82:	f04f 0200 	mov.w	r2, #0
 8004d86:	f04f 0300 	mov.w	r3, #0
 8004d8a:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8004d8e:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8004d92:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8004d96:	ebb2 0408 	subs.w	r4, r2, r8
 8004d9a:	eb63 0509 	sbc.w	r5, r3, r9
 8004d9e:	f04f 0200 	mov.w	r2, #0
 8004da2:	f04f 0300 	mov.w	r3, #0
 8004da6:	00eb      	lsls	r3, r5, #3
 8004da8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004dac:	00e2      	lsls	r2, r4, #3
 8004dae:	4614      	mov	r4, r2
 8004db0:	461d      	mov	r5, r3
 8004db2:	eb14 030a 	adds.w	r3, r4, sl
 8004db6:	603b      	str	r3, [r7, #0]
 8004db8:	eb45 030b 	adc.w	r3, r5, fp
 8004dbc:	607b      	str	r3, [r7, #4]
 8004dbe:	f04f 0200 	mov.w	r2, #0
 8004dc2:	f04f 0300 	mov.w	r3, #0
 8004dc6:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004dca:	4629      	mov	r1, r5
 8004dcc:	028b      	lsls	r3, r1, #10
 8004dce:	4621      	mov	r1, r4
 8004dd0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004dd4:	4621      	mov	r1, r4
 8004dd6:	028a      	lsls	r2, r1, #10
 8004dd8:	4610      	mov	r0, r2
 8004dda:	4619      	mov	r1, r3
 8004ddc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004dde:	2200      	movs	r2, #0
 8004de0:	60bb      	str	r3, [r7, #8]
 8004de2:	60fa      	str	r2, [r7, #12]
 8004de4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004de8:	f7fb f9f2 	bl	80001d0 <__aeabi_uldivmod>
 8004dec:	4602      	mov	r2, r0
 8004dee:	460b      	mov	r3, r1
 8004df0:	4613      	mov	r3, r2
 8004df2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004df4:	4b0b      	ldr	r3, [pc, #44]	@ (8004e24 <HAL_RCC_GetSysClockFreq+0x180>)
 8004df6:	685b      	ldr	r3, [r3, #4]
 8004df8:	0c1b      	lsrs	r3, r3, #16
 8004dfa:	f003 0303 	and.w	r3, r3, #3
 8004dfe:	3301      	adds	r3, #1
 8004e00:	005b      	lsls	r3, r3, #1
 8004e02:	633b      	str	r3, [r7, #48]	@ 0x30
 8004e04:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004e06:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004e08:	fbb2 f3f3 	udiv	r3, r2, r3
 8004e0c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004e0e:	e002      	b.n	8004e16 <HAL_RCC_GetSysClockFreq+0x172>
 8004e10:	4b05      	ldr	r3, [pc, #20]	@ (8004e28 <HAL_RCC_GetSysClockFreq+0x184>)
 8004e12:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004e14:	bf00      	nop
 8004e16:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e18:	4618      	mov	r0, r3
 8004e1a:	3740      	adds	r7, #64	@ 0x40
 8004e1c:	46bd      	mov	sp, r7
 8004e1e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004e22:	bf00      	nop
 8004e24:	40023800 	.word	0x40023800
 8004e28:	00f42400 	.word	0x00f42400
 8004e2c:	00b71b00 	.word	0x00b71b00

08004e30 <HAL_RCC_GetHCLKFreq>:
 8004e30:	b480      	push	{r7}
 8004e32:	af00      	add	r7, sp, #0
 8004e34:	4b03      	ldr	r3, [pc, #12]	@ (8004e44 <HAL_RCC_GetHCLKFreq+0x14>)
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	4618      	mov	r0, r3
 8004e3a:	46bd      	mov	sp, r7
 8004e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e40:	4770      	bx	lr
 8004e42:	bf00      	nop
 8004e44:	2000014c 	.word	0x2000014c

08004e48 <HAL_RCC_GetPCLK1Freq>:
 8004e48:	b580      	push	{r7, lr}
 8004e4a:	af00      	add	r7, sp, #0
 8004e4c:	f7ff fff0 	bl	8004e30 <HAL_RCC_GetHCLKFreq>
 8004e50:	4602      	mov	r2, r0
 8004e52:	4b05      	ldr	r3, [pc, #20]	@ (8004e68 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004e54:	689b      	ldr	r3, [r3, #8]
 8004e56:	0a9b      	lsrs	r3, r3, #10
 8004e58:	f003 0307 	and.w	r3, r3, #7
 8004e5c:	4903      	ldr	r1, [pc, #12]	@ (8004e6c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004e5e:	5ccb      	ldrb	r3, [r1, r3]
 8004e60:	fa22 f303 	lsr.w	r3, r2, r3
 8004e64:	4618      	mov	r0, r3
 8004e66:	bd80      	pop	{r7, pc}
 8004e68:	40023800 	.word	0x40023800
 8004e6c:	0800a05c 	.word	0x0800a05c

08004e70 <HAL_RCC_GetPCLK2Freq>:
 8004e70:	b580      	push	{r7, lr}
 8004e72:	af00      	add	r7, sp, #0
 8004e74:	f7ff ffdc 	bl	8004e30 <HAL_RCC_GetHCLKFreq>
 8004e78:	4602      	mov	r2, r0
 8004e7a:	4b05      	ldr	r3, [pc, #20]	@ (8004e90 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004e7c:	689b      	ldr	r3, [r3, #8]
 8004e7e:	0b5b      	lsrs	r3, r3, #13
 8004e80:	f003 0307 	and.w	r3, r3, #7
 8004e84:	4903      	ldr	r1, [pc, #12]	@ (8004e94 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004e86:	5ccb      	ldrb	r3, [r1, r3]
 8004e88:	fa22 f303 	lsr.w	r3, r2, r3
 8004e8c:	4618      	mov	r0, r3
 8004e8e:	bd80      	pop	{r7, pc}
 8004e90:	40023800 	.word	0x40023800
 8004e94:	0800a05c 	.word	0x0800a05c

08004e98 <HAL_RCC_NMI_IRQHandler>:
 8004e98:	b580      	push	{r7, lr}
 8004e9a:	af00      	add	r7, sp, #0
 8004e9c:	4b06      	ldr	r3, [pc, #24]	@ (8004eb8 <HAL_RCC_NMI_IRQHandler+0x20>)
 8004e9e:	68db      	ldr	r3, [r3, #12]
 8004ea0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004ea4:	2b80      	cmp	r3, #128	@ 0x80
 8004ea6:	d104      	bne.n	8004eb2 <HAL_RCC_NMI_IRQHandler+0x1a>
 8004ea8:	f000 f80a 	bl	8004ec0 <HAL_RCC_CSSCallback>
 8004eac:	4b03      	ldr	r3, [pc, #12]	@ (8004ebc <HAL_RCC_NMI_IRQHandler+0x24>)
 8004eae:	2280      	movs	r2, #128	@ 0x80
 8004eb0:	701a      	strb	r2, [r3, #0]
 8004eb2:	bf00      	nop
 8004eb4:	bd80      	pop	{r7, pc}
 8004eb6:	bf00      	nop
 8004eb8:	40023800 	.word	0x40023800
 8004ebc:	4002380e 	.word	0x4002380e

08004ec0 <HAL_RCC_CSSCallback>:
 8004ec0:	b480      	push	{r7}
 8004ec2:	af00      	add	r7, sp, #0
 8004ec4:	bf00      	nop
 8004ec6:	46bd      	mov	sp, r7
 8004ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ecc:	4770      	bx	lr

08004ece <HAL_SPI_Init>:
 8004ece:	b580      	push	{r7, lr}
 8004ed0:	b082      	sub	sp, #8
 8004ed2:	af00      	add	r7, sp, #0
 8004ed4:	6078      	str	r0, [r7, #4]
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d101      	bne.n	8004ee0 <HAL_SPI_Init+0x12>
 8004edc:	2301      	movs	r3, #1
 8004ede:	e07b      	b.n	8004fd8 <HAL_SPI_Init+0x10a>
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d108      	bne.n	8004efa <HAL_SPI_Init+0x2c>
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	685b      	ldr	r3, [r3, #4]
 8004eec:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004ef0:	d009      	beq.n	8004f06 <HAL_SPI_Init+0x38>
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	2200      	movs	r2, #0
 8004ef6:	61da      	str	r2, [r3, #28]
 8004ef8:	e005      	b.n	8004f06 <HAL_SPI_Init+0x38>
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	2200      	movs	r2, #0
 8004efe:	611a      	str	r2, [r3, #16]
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	2200      	movs	r2, #0
 8004f04:	615a      	str	r2, [r3, #20]
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	2200      	movs	r2, #0
 8004f0a:	629a      	str	r2, [r3, #40]	@ 0x28
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004f12:	b2db      	uxtb	r3, r3
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d106      	bne.n	8004f26 <HAL_SPI_Init+0x58>
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	2200      	movs	r2, #0
 8004f1c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004f20:	6878      	ldr	r0, [r7, #4]
 8004f22:	f7fd f9f9 	bl	8002318 <HAL_SPI_MspInit>
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	2202      	movs	r2, #2
 8004f2a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	681a      	ldr	r2, [r3, #0]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004f3c:	601a      	str	r2, [r3, #0]
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	685b      	ldr	r3, [r3, #4]
 8004f42:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	689b      	ldr	r3, [r3, #8]
 8004f4a:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8004f4e:	431a      	orrs	r2, r3
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	68db      	ldr	r3, [r3, #12]
 8004f54:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004f58:	431a      	orrs	r2, r3
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	691b      	ldr	r3, [r3, #16]
 8004f5e:	f003 0302 	and.w	r3, r3, #2
 8004f62:	431a      	orrs	r2, r3
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	695b      	ldr	r3, [r3, #20]
 8004f68:	f003 0301 	and.w	r3, r3, #1
 8004f6c:	431a      	orrs	r2, r3
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	699b      	ldr	r3, [r3, #24]
 8004f72:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004f76:	431a      	orrs	r2, r3
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	69db      	ldr	r3, [r3, #28]
 8004f7c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004f80:	431a      	orrs	r2, r3
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	6a1b      	ldr	r3, [r3, #32]
 8004f86:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f8a:	ea42 0103 	orr.w	r1, r2, r3
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004f92:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	430a      	orrs	r2, r1
 8004f9c:	601a      	str	r2, [r3, #0]
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	699b      	ldr	r3, [r3, #24]
 8004fa2:	0c1b      	lsrs	r3, r3, #16
 8004fa4:	f003 0104 	and.w	r1, r3, #4
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fac:	f003 0210 	and.w	r2, r3, #16
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	430a      	orrs	r2, r1
 8004fb6:	605a      	str	r2, [r3, #4]
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	69da      	ldr	r2, [r3, #28]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004fc6:	61da      	str	r2, [r3, #28]
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	2200      	movs	r2, #0
 8004fcc:	655a      	str	r2, [r3, #84]	@ 0x54
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	2201      	movs	r2, #1
 8004fd2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004fd6:	2300      	movs	r3, #0
 8004fd8:	4618      	mov	r0, r3
 8004fda:	3708      	adds	r7, #8
 8004fdc:	46bd      	mov	sp, r7
 8004fde:	bd80      	pop	{r7, pc}

08004fe0 <HAL_TIM_Base_Init>:
 8004fe0:	b580      	push	{r7, lr}
 8004fe2:	b082      	sub	sp, #8
 8004fe4:	af00      	add	r7, sp, #0
 8004fe6:	6078      	str	r0, [r7, #4]
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d101      	bne.n	8004ff2 <HAL_TIM_Base_Init+0x12>
 8004fee:	2301      	movs	r3, #1
 8004ff0:	e041      	b.n	8005076 <HAL_TIM_Base_Init+0x96>
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004ff8:	b2db      	uxtb	r3, r3
 8004ffa:	2b00      	cmp	r3, #0
 8004ffc:	d106      	bne.n	800500c <HAL_TIM_Base_Init+0x2c>
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	2200      	movs	r2, #0
 8005002:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005006:	6878      	ldr	r0, [r7, #4]
 8005008:	f7fd faac 	bl	8002564 <HAL_TIM_Base_MspInit>
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	2202      	movs	r2, #2
 8005010:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	681a      	ldr	r2, [r3, #0]
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	3304      	adds	r3, #4
 800501c:	4619      	mov	r1, r3
 800501e:	4610      	mov	r0, r2
 8005020:	f000 fba8 	bl	8005774 <TIM_Base_SetConfig>
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	2201      	movs	r2, #1
 8005028:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	2201      	movs	r2, #1
 8005030:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	2201      	movs	r2, #1
 8005038:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	2201      	movs	r2, #1
 8005040:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	2201      	movs	r2, #1
 8005048:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	2201      	movs	r2, #1
 8005050:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	2201      	movs	r2, #1
 8005058:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2201      	movs	r2, #1
 8005060:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	2201      	movs	r2, #1
 8005068:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	2201      	movs	r2, #1
 8005070:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005074:	2300      	movs	r3, #0
 8005076:	4618      	mov	r0, r3
 8005078:	3708      	adds	r7, #8
 800507a:	46bd      	mov	sp, r7
 800507c:	bd80      	pop	{r7, pc}
	...

08005080 <HAL_TIM_Base_Start>:
 8005080:	b480      	push	{r7}
 8005082:	b085      	sub	sp, #20
 8005084:	af00      	add	r7, sp, #0
 8005086:	6078      	str	r0, [r7, #4]
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800508e:	b2db      	uxtb	r3, r3
 8005090:	2b01      	cmp	r3, #1
 8005092:	d001      	beq.n	8005098 <HAL_TIM_Base_Start+0x18>
 8005094:	2301      	movs	r3, #1
 8005096:	e046      	b.n	8005126 <HAL_TIM_Base_Start+0xa6>
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	2202      	movs	r2, #2
 800509c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	4a23      	ldr	r2, [pc, #140]	@ (8005134 <HAL_TIM_Base_Start+0xb4>)
 80050a6:	4293      	cmp	r3, r2
 80050a8:	d022      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80050b2:	d01d      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	4a1f      	ldr	r2, [pc, #124]	@ (8005138 <HAL_TIM_Base_Start+0xb8>)
 80050ba:	4293      	cmp	r3, r2
 80050bc:	d018      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	4a1e      	ldr	r2, [pc, #120]	@ (800513c <HAL_TIM_Base_Start+0xbc>)
 80050c4:	4293      	cmp	r3, r2
 80050c6:	d013      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	4a1c      	ldr	r2, [pc, #112]	@ (8005140 <HAL_TIM_Base_Start+0xc0>)
 80050ce:	4293      	cmp	r3, r2
 80050d0:	d00e      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	4a1b      	ldr	r2, [pc, #108]	@ (8005144 <HAL_TIM_Base_Start+0xc4>)
 80050d8:	4293      	cmp	r3, r2
 80050da:	d009      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	4a19      	ldr	r2, [pc, #100]	@ (8005148 <HAL_TIM_Base_Start+0xc8>)
 80050e2:	4293      	cmp	r3, r2
 80050e4:	d004      	beq.n	80050f0 <HAL_TIM_Base_Start+0x70>
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	681b      	ldr	r3, [r3, #0]
 80050ea:	4a18      	ldr	r2, [pc, #96]	@ (800514c <HAL_TIM_Base_Start+0xcc>)
 80050ec:	4293      	cmp	r3, r2
 80050ee:	d111      	bne.n	8005114 <HAL_TIM_Base_Start+0x94>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	689b      	ldr	r3, [r3, #8]
 80050f6:	f003 0307 	and.w	r3, r3, #7
 80050fa:	60fb      	str	r3, [r7, #12]
 80050fc:	68fb      	ldr	r3, [r7, #12]
 80050fe:	2b06      	cmp	r3, #6
 8005100:	d010      	beq.n	8005124 <HAL_TIM_Base_Start+0xa4>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	681a      	ldr	r2, [r3, #0]
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	f042 0201 	orr.w	r2, r2, #1
 8005110:	601a      	str	r2, [r3, #0]
 8005112:	e007      	b.n	8005124 <HAL_TIM_Base_Start+0xa4>
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	681a      	ldr	r2, [r3, #0]
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	f042 0201 	orr.w	r2, r2, #1
 8005122:	601a      	str	r2, [r3, #0]
 8005124:	2300      	movs	r3, #0
 8005126:	4618      	mov	r0, r3
 8005128:	3714      	adds	r7, #20
 800512a:	46bd      	mov	sp, r7
 800512c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005130:	4770      	bx	lr
 8005132:	bf00      	nop
 8005134:	40010000 	.word	0x40010000
 8005138:	40000400 	.word	0x40000400
 800513c:	40000800 	.word	0x40000800
 8005140:	40000c00 	.word	0x40000c00
 8005144:	40010400 	.word	0x40010400
 8005148:	40014000 	.word	0x40014000
 800514c:	40001800 	.word	0x40001800

08005150 <HAL_TIM_PWM_Init>:
 8005150:	b580      	push	{r7, lr}
 8005152:	b082      	sub	sp, #8
 8005154:	af00      	add	r7, sp, #0
 8005156:	6078      	str	r0, [r7, #4]
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	2b00      	cmp	r3, #0
 800515c:	d101      	bne.n	8005162 <HAL_TIM_PWM_Init+0x12>
 800515e:	2301      	movs	r3, #1
 8005160:	e041      	b.n	80051e6 <HAL_TIM_PWM_Init+0x96>
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005168:	b2db      	uxtb	r3, r3
 800516a:	2b00      	cmp	r3, #0
 800516c:	d106      	bne.n	800517c <HAL_TIM_PWM_Init+0x2c>
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	2200      	movs	r2, #0
 8005172:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005176:	6878      	ldr	r0, [r7, #4]
 8005178:	f7fd f936 	bl	80023e8 <HAL_TIM_PWM_MspInit>
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	2202      	movs	r2, #2
 8005180:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	681a      	ldr	r2, [r3, #0]
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	3304      	adds	r3, #4
 800518c:	4619      	mov	r1, r3
 800518e:	4610      	mov	r0, r2
 8005190:	f000 faf0 	bl	8005774 <TIM_Base_SetConfig>
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	2201      	movs	r2, #1
 8005198:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	2201      	movs	r2, #1
 80051a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	2201      	movs	r2, #1
 80051a8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	2201      	movs	r2, #1
 80051b0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	2201      	movs	r2, #1
 80051b8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	2201      	movs	r2, #1
 80051c0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	2201      	movs	r2, #1
 80051c8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	2201      	movs	r2, #1
 80051d0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	2201      	movs	r2, #1
 80051d8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	2201      	movs	r2, #1
 80051e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80051e4:	2300      	movs	r3, #0
 80051e6:	4618      	mov	r0, r3
 80051e8:	3708      	adds	r7, #8
 80051ea:	46bd      	mov	sp, r7
 80051ec:	bd80      	pop	{r7, pc}
	...

080051f0 <HAL_TIM_PWM_Start>:
 80051f0:	b580      	push	{r7, lr}
 80051f2:	b084      	sub	sp, #16
 80051f4:	af00      	add	r7, sp, #0
 80051f6:	6078      	str	r0, [r7, #4]
 80051f8:	6039      	str	r1, [r7, #0]
 80051fa:	683b      	ldr	r3, [r7, #0]
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d109      	bne.n	8005214 <HAL_TIM_PWM_Start+0x24>
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005206:	b2db      	uxtb	r3, r3
 8005208:	2b01      	cmp	r3, #1
 800520a:	bf14      	ite	ne
 800520c:	2301      	movne	r3, #1
 800520e:	2300      	moveq	r3, #0
 8005210:	b2db      	uxtb	r3, r3
 8005212:	e022      	b.n	800525a <HAL_TIM_PWM_Start+0x6a>
 8005214:	683b      	ldr	r3, [r7, #0]
 8005216:	2b04      	cmp	r3, #4
 8005218:	d109      	bne.n	800522e <HAL_TIM_PWM_Start+0x3e>
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005220:	b2db      	uxtb	r3, r3
 8005222:	2b01      	cmp	r3, #1
 8005224:	bf14      	ite	ne
 8005226:	2301      	movne	r3, #1
 8005228:	2300      	moveq	r3, #0
 800522a:	b2db      	uxtb	r3, r3
 800522c:	e015      	b.n	800525a <HAL_TIM_PWM_Start+0x6a>
 800522e:	683b      	ldr	r3, [r7, #0]
 8005230:	2b08      	cmp	r3, #8
 8005232:	d109      	bne.n	8005248 <HAL_TIM_PWM_Start+0x58>
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800523a:	b2db      	uxtb	r3, r3
 800523c:	2b01      	cmp	r3, #1
 800523e:	bf14      	ite	ne
 8005240:	2301      	movne	r3, #1
 8005242:	2300      	moveq	r3, #0
 8005244:	b2db      	uxtb	r3, r3
 8005246:	e008      	b.n	800525a <HAL_TIM_PWM_Start+0x6a>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800524e:	b2db      	uxtb	r3, r3
 8005250:	2b01      	cmp	r3, #1
 8005252:	bf14      	ite	ne
 8005254:	2301      	movne	r3, #1
 8005256:	2300      	moveq	r3, #0
 8005258:	b2db      	uxtb	r3, r3
 800525a:	2b00      	cmp	r3, #0
 800525c:	d001      	beq.n	8005262 <HAL_TIM_PWM_Start+0x72>
 800525e:	2301      	movs	r3, #1
 8005260:	e07c      	b.n	800535c <HAL_TIM_PWM_Start+0x16c>
 8005262:	683b      	ldr	r3, [r7, #0]
 8005264:	2b00      	cmp	r3, #0
 8005266:	d104      	bne.n	8005272 <HAL_TIM_PWM_Start+0x82>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	2202      	movs	r2, #2
 800526c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005270:	e013      	b.n	800529a <HAL_TIM_PWM_Start+0xaa>
 8005272:	683b      	ldr	r3, [r7, #0]
 8005274:	2b04      	cmp	r3, #4
 8005276:	d104      	bne.n	8005282 <HAL_TIM_PWM_Start+0x92>
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	2202      	movs	r2, #2
 800527c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005280:	e00b      	b.n	800529a <HAL_TIM_PWM_Start+0xaa>
 8005282:	683b      	ldr	r3, [r7, #0]
 8005284:	2b08      	cmp	r3, #8
 8005286:	d104      	bne.n	8005292 <HAL_TIM_PWM_Start+0xa2>
 8005288:	687b      	ldr	r3, [r7, #4]
 800528a:	2202      	movs	r2, #2
 800528c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005290:	e003      	b.n	800529a <HAL_TIM_PWM_Start+0xaa>
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	2202      	movs	r2, #2
 8005296:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	2201      	movs	r2, #1
 80052a0:	6839      	ldr	r1, [r7, #0]
 80052a2:	4618      	mov	r0, r3
 80052a4:	f000 fd5c 	bl	8005d60 <TIM_CCxChannelCmd>
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	4a2d      	ldr	r2, [pc, #180]	@ (8005364 <HAL_TIM_PWM_Start+0x174>)
 80052ae:	4293      	cmp	r3, r2
 80052b0:	d004      	beq.n	80052bc <HAL_TIM_PWM_Start+0xcc>
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	4a2c      	ldr	r2, [pc, #176]	@ (8005368 <HAL_TIM_PWM_Start+0x178>)
 80052b8:	4293      	cmp	r3, r2
 80052ba:	d101      	bne.n	80052c0 <HAL_TIM_PWM_Start+0xd0>
 80052bc:	2301      	movs	r3, #1
 80052be:	e000      	b.n	80052c2 <HAL_TIM_PWM_Start+0xd2>
 80052c0:	2300      	movs	r3, #0
 80052c2:	2b00      	cmp	r3, #0
 80052c4:	d007      	beq.n	80052d6 <HAL_TIM_PWM_Start+0xe6>
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80052d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	4a22      	ldr	r2, [pc, #136]	@ (8005364 <HAL_TIM_PWM_Start+0x174>)
 80052dc:	4293      	cmp	r3, r2
 80052de:	d022      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80052e8:	d01d      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	4a1f      	ldr	r2, [pc, #124]	@ (800536c <HAL_TIM_PWM_Start+0x17c>)
 80052f0:	4293      	cmp	r3, r2
 80052f2:	d018      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	4a1d      	ldr	r2, [pc, #116]	@ (8005370 <HAL_TIM_PWM_Start+0x180>)
 80052fa:	4293      	cmp	r3, r2
 80052fc:	d013      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	4a1c      	ldr	r2, [pc, #112]	@ (8005374 <HAL_TIM_PWM_Start+0x184>)
 8005304:	4293      	cmp	r3, r2
 8005306:	d00e      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	4a16      	ldr	r2, [pc, #88]	@ (8005368 <HAL_TIM_PWM_Start+0x178>)
 800530e:	4293      	cmp	r3, r2
 8005310:	d009      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	4a18      	ldr	r2, [pc, #96]	@ (8005378 <HAL_TIM_PWM_Start+0x188>)
 8005318:	4293      	cmp	r3, r2
 800531a:	d004      	beq.n	8005326 <HAL_TIM_PWM_Start+0x136>
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	4a16      	ldr	r2, [pc, #88]	@ (800537c <HAL_TIM_PWM_Start+0x18c>)
 8005322:	4293      	cmp	r3, r2
 8005324:	d111      	bne.n	800534a <HAL_TIM_PWM_Start+0x15a>
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	689b      	ldr	r3, [r3, #8]
 800532c:	f003 0307 	and.w	r3, r3, #7
 8005330:	60fb      	str	r3, [r7, #12]
 8005332:	68fb      	ldr	r3, [r7, #12]
 8005334:	2b06      	cmp	r3, #6
 8005336:	d010      	beq.n	800535a <HAL_TIM_PWM_Start+0x16a>
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	681a      	ldr	r2, [r3, #0]
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	f042 0201 	orr.w	r2, r2, #1
 8005346:	601a      	str	r2, [r3, #0]
 8005348:	e007      	b.n	800535a <HAL_TIM_PWM_Start+0x16a>
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	681a      	ldr	r2, [r3, #0]
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	f042 0201 	orr.w	r2, r2, #1
 8005358:	601a      	str	r2, [r3, #0]
 800535a:	2300      	movs	r3, #0
 800535c:	4618      	mov	r0, r3
 800535e:	3710      	adds	r7, #16
 8005360:	46bd      	mov	sp, r7
 8005362:	bd80      	pop	{r7, pc}
 8005364:	40010000 	.word	0x40010000
 8005368:	40010400 	.word	0x40010400
 800536c:	40000400 	.word	0x40000400
 8005370:	40000800 	.word	0x40000800
 8005374:	40000c00 	.word	0x40000c00
 8005378:	40014000 	.word	0x40014000
 800537c:	40001800 	.word	0x40001800

08005380 <HAL_TIM_PWM_Stop>:
 8005380:	b580      	push	{r7, lr}
 8005382:	b082      	sub	sp, #8
 8005384:	af00      	add	r7, sp, #0
 8005386:	6078      	str	r0, [r7, #4]
 8005388:	6039      	str	r1, [r7, #0]
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	681b      	ldr	r3, [r3, #0]
 800538e:	2200      	movs	r2, #0
 8005390:	6839      	ldr	r1, [r7, #0]
 8005392:	4618      	mov	r0, r3
 8005394:	f000 fce4 	bl	8005d60 <TIM_CCxChannelCmd>
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	4a2e      	ldr	r2, [pc, #184]	@ (8005458 <HAL_TIM_PWM_Stop+0xd8>)
 800539e:	4293      	cmp	r3, r2
 80053a0:	d004      	beq.n	80053ac <HAL_TIM_PWM_Stop+0x2c>
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	4a2d      	ldr	r2, [pc, #180]	@ (800545c <HAL_TIM_PWM_Stop+0xdc>)
 80053a8:	4293      	cmp	r3, r2
 80053aa:	d101      	bne.n	80053b0 <HAL_TIM_PWM_Stop+0x30>
 80053ac:	2301      	movs	r3, #1
 80053ae:	e000      	b.n	80053b2 <HAL_TIM_PWM_Stop+0x32>
 80053b0:	2300      	movs	r3, #0
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d017      	beq.n	80053e6 <HAL_TIM_PWM_Stop+0x66>
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	6a1a      	ldr	r2, [r3, #32]
 80053bc:	f241 1311 	movw	r3, #4369	@ 0x1111
 80053c0:	4013      	ands	r3, r2
 80053c2:	2b00      	cmp	r3, #0
 80053c4:	d10f      	bne.n	80053e6 <HAL_TIM_PWM_Stop+0x66>
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	6a1a      	ldr	r2, [r3, #32]
 80053cc:	f240 4344 	movw	r3, #1092	@ 0x444
 80053d0:	4013      	ands	r3, r2
 80053d2:	2b00      	cmp	r3, #0
 80053d4:	d107      	bne.n	80053e6 <HAL_TIM_PWM_Stop+0x66>
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80053e4:	645a      	str	r2, [r3, #68]	@ 0x44
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	6a1a      	ldr	r2, [r3, #32]
 80053ec:	f241 1311 	movw	r3, #4369	@ 0x1111
 80053f0:	4013      	ands	r3, r2
 80053f2:	2b00      	cmp	r3, #0
 80053f4:	d10f      	bne.n	8005416 <HAL_TIM_PWM_Stop+0x96>
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	6a1a      	ldr	r2, [r3, #32]
 80053fc:	f240 4344 	movw	r3, #1092	@ 0x444
 8005400:	4013      	ands	r3, r2
 8005402:	2b00      	cmp	r3, #0
 8005404:	d107      	bne.n	8005416 <HAL_TIM_PWM_Stop+0x96>
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	681a      	ldr	r2, [r3, #0]
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	f022 0201 	bic.w	r2, r2, #1
 8005414:	601a      	str	r2, [r3, #0]
 8005416:	683b      	ldr	r3, [r7, #0]
 8005418:	2b00      	cmp	r3, #0
 800541a:	d104      	bne.n	8005426 <HAL_TIM_PWM_Stop+0xa6>
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	2201      	movs	r2, #1
 8005420:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005424:	e013      	b.n	800544e <HAL_TIM_PWM_Stop+0xce>
 8005426:	683b      	ldr	r3, [r7, #0]
 8005428:	2b04      	cmp	r3, #4
 800542a:	d104      	bne.n	8005436 <HAL_TIM_PWM_Stop+0xb6>
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	2201      	movs	r2, #1
 8005430:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005434:	e00b      	b.n	800544e <HAL_TIM_PWM_Stop+0xce>
 8005436:	683b      	ldr	r3, [r7, #0]
 8005438:	2b08      	cmp	r3, #8
 800543a:	d104      	bne.n	8005446 <HAL_TIM_PWM_Stop+0xc6>
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	2201      	movs	r2, #1
 8005440:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005444:	e003      	b.n	800544e <HAL_TIM_PWM_Stop+0xce>
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	2201      	movs	r2, #1
 800544a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800544e:	2300      	movs	r3, #0
 8005450:	4618      	mov	r0, r3
 8005452:	3708      	adds	r7, #8
 8005454:	46bd      	mov	sp, r7
 8005456:	bd80      	pop	{r7, pc}
 8005458:	40010000 	.word	0x40010000
 800545c:	40010400 	.word	0x40010400

08005460 <HAL_TIM_PWM_ConfigChannel>:
 8005460:	b580      	push	{r7, lr}
 8005462:	b086      	sub	sp, #24
 8005464:	af00      	add	r7, sp, #0
 8005466:	60f8      	str	r0, [r7, #12]
 8005468:	60b9      	str	r1, [r7, #8]
 800546a:	607a      	str	r2, [r7, #4]
 800546c:	2300      	movs	r3, #0
 800546e:	75fb      	strb	r3, [r7, #23]
 8005470:	68fb      	ldr	r3, [r7, #12]
 8005472:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005476:	2b01      	cmp	r3, #1
 8005478:	d101      	bne.n	800547e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800547a:	2302      	movs	r3, #2
 800547c:	e0ae      	b.n	80055dc <HAL_TIM_PWM_ConfigChannel+0x17c>
 800547e:	68fb      	ldr	r3, [r7, #12]
 8005480:	2201      	movs	r2, #1
 8005482:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	2b0c      	cmp	r3, #12
 800548a:	f200 809f 	bhi.w	80055cc <HAL_TIM_PWM_ConfigChannel+0x16c>
 800548e:	a201      	add	r2, pc, #4	@ (adr r2, 8005494 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005490:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005494:	080054c9 	.word	0x080054c9
 8005498:	080055cd 	.word	0x080055cd
 800549c:	080055cd 	.word	0x080055cd
 80054a0:	080055cd 	.word	0x080055cd
 80054a4:	08005509 	.word	0x08005509
 80054a8:	080055cd 	.word	0x080055cd
 80054ac:	080055cd 	.word	0x080055cd
 80054b0:	080055cd 	.word	0x080055cd
 80054b4:	0800554b 	.word	0x0800554b
 80054b8:	080055cd 	.word	0x080055cd
 80054bc:	080055cd 	.word	0x080055cd
 80054c0:	080055cd 	.word	0x080055cd
 80054c4:	0800558b 	.word	0x0800558b
 80054c8:	68fb      	ldr	r3, [r7, #12]
 80054ca:	681b      	ldr	r3, [r3, #0]
 80054cc:	68b9      	ldr	r1, [r7, #8]
 80054ce:	4618      	mov	r0, r3
 80054d0:	f000 f9fc 	bl	80058cc <TIM_OC1_SetConfig>
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	699a      	ldr	r2, [r3, #24]
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	681b      	ldr	r3, [r3, #0]
 80054de:	f042 0208 	orr.w	r2, r2, #8
 80054e2:	619a      	str	r2, [r3, #24]
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	699a      	ldr	r2, [r3, #24]
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	f022 0204 	bic.w	r2, r2, #4
 80054f2:	619a      	str	r2, [r3, #24]
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	6999      	ldr	r1, [r3, #24]
 80054fa:	68bb      	ldr	r3, [r7, #8]
 80054fc:	691a      	ldr	r2, [r3, #16]
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	430a      	orrs	r2, r1
 8005504:	619a      	str	r2, [r3, #24]
 8005506:	e064      	b.n	80055d2 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	68b9      	ldr	r1, [r7, #8]
 800550e:	4618      	mov	r0, r3
 8005510:	f000 fa4c 	bl	80059ac <TIM_OC2_SetConfig>
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	699a      	ldr	r2, [r3, #24]
 800551a:	68fb      	ldr	r3, [r7, #12]
 800551c:	681b      	ldr	r3, [r3, #0]
 800551e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005522:	619a      	str	r2, [r3, #24]
 8005524:	68fb      	ldr	r3, [r7, #12]
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	699a      	ldr	r2, [r3, #24]
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005532:	619a      	str	r2, [r3, #24]
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	6999      	ldr	r1, [r3, #24]
 800553a:	68bb      	ldr	r3, [r7, #8]
 800553c:	691b      	ldr	r3, [r3, #16]
 800553e:	021a      	lsls	r2, r3, #8
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	430a      	orrs	r2, r1
 8005546:	619a      	str	r2, [r3, #24]
 8005548:	e043      	b.n	80055d2 <HAL_TIM_PWM_ConfigChannel+0x172>
 800554a:	68fb      	ldr	r3, [r7, #12]
 800554c:	681b      	ldr	r3, [r3, #0]
 800554e:	68b9      	ldr	r1, [r7, #8]
 8005550:	4618      	mov	r0, r3
 8005552:	f000 faa1 	bl	8005a98 <TIM_OC3_SetConfig>
 8005556:	68fb      	ldr	r3, [r7, #12]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	69da      	ldr	r2, [r3, #28]
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	f042 0208 	orr.w	r2, r2, #8
 8005564:	61da      	str	r2, [r3, #28]
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	69da      	ldr	r2, [r3, #28]
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	f022 0204 	bic.w	r2, r2, #4
 8005574:	61da      	str	r2, [r3, #28]
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	69d9      	ldr	r1, [r3, #28]
 800557c:	68bb      	ldr	r3, [r7, #8]
 800557e:	691a      	ldr	r2, [r3, #16]
 8005580:	68fb      	ldr	r3, [r7, #12]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	430a      	orrs	r2, r1
 8005586:	61da      	str	r2, [r3, #28]
 8005588:	e023      	b.n	80055d2 <HAL_TIM_PWM_ConfigChannel+0x172>
 800558a:	68fb      	ldr	r3, [r7, #12]
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	68b9      	ldr	r1, [r7, #8]
 8005590:	4618      	mov	r0, r3
 8005592:	f000 faf5 	bl	8005b80 <TIM_OC4_SetConfig>
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	69da      	ldr	r2, [r3, #28]
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80055a4:	61da      	str	r2, [r3, #28]
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	69da      	ldr	r2, [r3, #28]
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80055b4:	61da      	str	r2, [r3, #28]
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	69d9      	ldr	r1, [r3, #28]
 80055bc:	68bb      	ldr	r3, [r7, #8]
 80055be:	691b      	ldr	r3, [r3, #16]
 80055c0:	021a      	lsls	r2, r3, #8
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	430a      	orrs	r2, r1
 80055c8:	61da      	str	r2, [r3, #28]
 80055ca:	e002      	b.n	80055d2 <HAL_TIM_PWM_ConfigChannel+0x172>
 80055cc:	2301      	movs	r3, #1
 80055ce:	75fb      	strb	r3, [r7, #23]
 80055d0:	bf00      	nop
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	2200      	movs	r2, #0
 80055d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055da:	7dfb      	ldrb	r3, [r7, #23]
 80055dc:	4618      	mov	r0, r3
 80055de:	3718      	adds	r7, #24
 80055e0:	46bd      	mov	sp, r7
 80055e2:	bd80      	pop	{r7, pc}

080055e4 <HAL_TIM_ConfigClockSource>:
 80055e4:	b580      	push	{r7, lr}
 80055e6:	b084      	sub	sp, #16
 80055e8:	af00      	add	r7, sp, #0
 80055ea:	6078      	str	r0, [r7, #4]
 80055ec:	6039      	str	r1, [r7, #0]
 80055ee:	2300      	movs	r3, #0
 80055f0:	73fb      	strb	r3, [r7, #15]
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80055f8:	2b01      	cmp	r3, #1
 80055fa:	d101      	bne.n	8005600 <HAL_TIM_ConfigClockSource+0x1c>
 80055fc:	2302      	movs	r3, #2
 80055fe:	e0b4      	b.n	800576a <HAL_TIM_ConfigClockSource+0x186>
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	2201      	movs	r2, #1
 8005604:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	2202      	movs	r2, #2
 800560c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	689b      	ldr	r3, [r3, #8]
 8005616:	60bb      	str	r3, [r7, #8]
 8005618:	68bb      	ldr	r3, [r7, #8]
 800561a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800561e:	60bb      	str	r3, [r7, #8]
 8005620:	68bb      	ldr	r3, [r7, #8]
 8005622:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005626:	60bb      	str	r3, [r7, #8]
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	68ba      	ldr	r2, [r7, #8]
 800562e:	609a      	str	r2, [r3, #8]
 8005630:	683b      	ldr	r3, [r7, #0]
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005638:	d03e      	beq.n	80056b8 <HAL_TIM_ConfigClockSource+0xd4>
 800563a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800563e:	f200 8087 	bhi.w	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005642:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005646:	f000 8086 	beq.w	8005756 <HAL_TIM_ConfigClockSource+0x172>
 800564a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800564e:	d87f      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005650:	2b70      	cmp	r3, #112	@ 0x70
 8005652:	d01a      	beq.n	800568a <HAL_TIM_ConfigClockSource+0xa6>
 8005654:	2b70      	cmp	r3, #112	@ 0x70
 8005656:	d87b      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005658:	2b60      	cmp	r3, #96	@ 0x60
 800565a:	d050      	beq.n	80056fe <HAL_TIM_ConfigClockSource+0x11a>
 800565c:	2b60      	cmp	r3, #96	@ 0x60
 800565e:	d877      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005660:	2b50      	cmp	r3, #80	@ 0x50
 8005662:	d03c      	beq.n	80056de <HAL_TIM_ConfigClockSource+0xfa>
 8005664:	2b50      	cmp	r3, #80	@ 0x50
 8005666:	d873      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005668:	2b40      	cmp	r3, #64	@ 0x40
 800566a:	d058      	beq.n	800571e <HAL_TIM_ConfigClockSource+0x13a>
 800566c:	2b40      	cmp	r3, #64	@ 0x40
 800566e:	d86f      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005670:	2b30      	cmp	r3, #48	@ 0x30
 8005672:	d064      	beq.n	800573e <HAL_TIM_ConfigClockSource+0x15a>
 8005674:	2b30      	cmp	r3, #48	@ 0x30
 8005676:	d86b      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005678:	2b20      	cmp	r3, #32
 800567a:	d060      	beq.n	800573e <HAL_TIM_ConfigClockSource+0x15a>
 800567c:	2b20      	cmp	r3, #32
 800567e:	d867      	bhi.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 8005680:	2b00      	cmp	r3, #0
 8005682:	d05c      	beq.n	800573e <HAL_TIM_ConfigClockSource+0x15a>
 8005684:	2b10      	cmp	r3, #16
 8005686:	d05a      	beq.n	800573e <HAL_TIM_ConfigClockSource+0x15a>
 8005688:	e062      	b.n	8005750 <HAL_TIM_ConfigClockSource+0x16c>
 800568a:	687b      	ldr	r3, [r7, #4]
 800568c:	6818      	ldr	r0, [r3, #0]
 800568e:	683b      	ldr	r3, [r7, #0]
 8005690:	6899      	ldr	r1, [r3, #8]
 8005692:	683b      	ldr	r3, [r7, #0]
 8005694:	685a      	ldr	r2, [r3, #4]
 8005696:	683b      	ldr	r3, [r7, #0]
 8005698:	68db      	ldr	r3, [r3, #12]
 800569a:	f000 fb41 	bl	8005d20 <TIM_ETR_SetConfig>
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	689b      	ldr	r3, [r3, #8]
 80056a4:	60bb      	str	r3, [r7, #8]
 80056a6:	68bb      	ldr	r3, [r7, #8]
 80056a8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80056ac:	60bb      	str	r3, [r7, #8]
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	68ba      	ldr	r2, [r7, #8]
 80056b4:	609a      	str	r2, [r3, #8]
 80056b6:	e04f      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	6818      	ldr	r0, [r3, #0]
 80056bc:	683b      	ldr	r3, [r7, #0]
 80056be:	6899      	ldr	r1, [r3, #8]
 80056c0:	683b      	ldr	r3, [r7, #0]
 80056c2:	685a      	ldr	r2, [r3, #4]
 80056c4:	683b      	ldr	r3, [r7, #0]
 80056c6:	68db      	ldr	r3, [r3, #12]
 80056c8:	f000 fb2a 	bl	8005d20 <TIM_ETR_SetConfig>
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	689a      	ldr	r2, [r3, #8]
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80056da:	609a      	str	r2, [r3, #8]
 80056dc:	e03c      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	6818      	ldr	r0, [r3, #0]
 80056e2:	683b      	ldr	r3, [r7, #0]
 80056e4:	6859      	ldr	r1, [r3, #4]
 80056e6:	683b      	ldr	r3, [r7, #0]
 80056e8:	68db      	ldr	r3, [r3, #12]
 80056ea:	461a      	mov	r2, r3
 80056ec:	f000 fa9e 	bl	8005c2c <TIM_TI1_ConfigInputStage>
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	2150      	movs	r1, #80	@ 0x50
 80056f6:	4618      	mov	r0, r3
 80056f8:	f000 faf7 	bl	8005cea <TIM_ITRx_SetConfig>
 80056fc:	e02c      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 80056fe:	687b      	ldr	r3, [r7, #4]
 8005700:	6818      	ldr	r0, [r3, #0]
 8005702:	683b      	ldr	r3, [r7, #0]
 8005704:	6859      	ldr	r1, [r3, #4]
 8005706:	683b      	ldr	r3, [r7, #0]
 8005708:	68db      	ldr	r3, [r3, #12]
 800570a:	461a      	mov	r2, r3
 800570c:	f000 fabd 	bl	8005c8a <TIM_TI2_ConfigInputStage>
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	681b      	ldr	r3, [r3, #0]
 8005714:	2160      	movs	r1, #96	@ 0x60
 8005716:	4618      	mov	r0, r3
 8005718:	f000 fae7 	bl	8005cea <TIM_ITRx_SetConfig>
 800571c:	e01c      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 800571e:	687b      	ldr	r3, [r7, #4]
 8005720:	6818      	ldr	r0, [r3, #0]
 8005722:	683b      	ldr	r3, [r7, #0]
 8005724:	6859      	ldr	r1, [r3, #4]
 8005726:	683b      	ldr	r3, [r7, #0]
 8005728:	68db      	ldr	r3, [r3, #12]
 800572a:	461a      	mov	r2, r3
 800572c:	f000 fa7e 	bl	8005c2c <TIM_TI1_ConfigInputStage>
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	2140      	movs	r1, #64	@ 0x40
 8005736:	4618      	mov	r0, r3
 8005738:	f000 fad7 	bl	8005cea <TIM_ITRx_SetConfig>
 800573c:	e00c      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	681a      	ldr	r2, [r3, #0]
 8005742:	683b      	ldr	r3, [r7, #0]
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	4619      	mov	r1, r3
 8005748:	4610      	mov	r0, r2
 800574a:	f000 face 	bl	8005cea <TIM_ITRx_SetConfig>
 800574e:	e003      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 8005750:	2301      	movs	r3, #1
 8005752:	73fb      	strb	r3, [r7, #15]
 8005754:	e000      	b.n	8005758 <HAL_TIM_ConfigClockSource+0x174>
 8005756:	bf00      	nop
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	2201      	movs	r2, #1
 800575c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	2200      	movs	r2, #0
 8005764:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005768:	7bfb      	ldrb	r3, [r7, #15]
 800576a:	4618      	mov	r0, r3
 800576c:	3710      	adds	r7, #16
 800576e:	46bd      	mov	sp, r7
 8005770:	bd80      	pop	{r7, pc}
	...

08005774 <TIM_Base_SetConfig>:
 8005774:	b480      	push	{r7}
 8005776:	b085      	sub	sp, #20
 8005778:	af00      	add	r7, sp, #0
 800577a:	6078      	str	r0, [r7, #4]
 800577c:	6039      	str	r1, [r7, #0]
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	681b      	ldr	r3, [r3, #0]
 8005782:	60fb      	str	r3, [r7, #12]
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	4a46      	ldr	r2, [pc, #280]	@ (80058a0 <TIM_Base_SetConfig+0x12c>)
 8005788:	4293      	cmp	r3, r2
 800578a:	d013      	beq.n	80057b4 <TIM_Base_SetConfig+0x40>
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005792:	d00f      	beq.n	80057b4 <TIM_Base_SetConfig+0x40>
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	4a43      	ldr	r2, [pc, #268]	@ (80058a4 <TIM_Base_SetConfig+0x130>)
 8005798:	4293      	cmp	r3, r2
 800579a:	d00b      	beq.n	80057b4 <TIM_Base_SetConfig+0x40>
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	4a42      	ldr	r2, [pc, #264]	@ (80058a8 <TIM_Base_SetConfig+0x134>)
 80057a0:	4293      	cmp	r3, r2
 80057a2:	d007      	beq.n	80057b4 <TIM_Base_SetConfig+0x40>
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	4a41      	ldr	r2, [pc, #260]	@ (80058ac <TIM_Base_SetConfig+0x138>)
 80057a8:	4293      	cmp	r3, r2
 80057aa:	d003      	beq.n	80057b4 <TIM_Base_SetConfig+0x40>
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	4a40      	ldr	r2, [pc, #256]	@ (80058b0 <TIM_Base_SetConfig+0x13c>)
 80057b0:	4293      	cmp	r3, r2
 80057b2:	d108      	bne.n	80057c6 <TIM_Base_SetConfig+0x52>
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80057ba:	60fb      	str	r3, [r7, #12]
 80057bc:	683b      	ldr	r3, [r7, #0]
 80057be:	685b      	ldr	r3, [r3, #4]
 80057c0:	68fa      	ldr	r2, [r7, #12]
 80057c2:	4313      	orrs	r3, r2
 80057c4:	60fb      	str	r3, [r7, #12]
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	4a35      	ldr	r2, [pc, #212]	@ (80058a0 <TIM_Base_SetConfig+0x12c>)
 80057ca:	4293      	cmp	r3, r2
 80057cc:	d02b      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80057d4:	d027      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	4a32      	ldr	r2, [pc, #200]	@ (80058a4 <TIM_Base_SetConfig+0x130>)
 80057da:	4293      	cmp	r3, r2
 80057dc:	d023      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	4a31      	ldr	r2, [pc, #196]	@ (80058a8 <TIM_Base_SetConfig+0x134>)
 80057e2:	4293      	cmp	r3, r2
 80057e4:	d01f      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	4a30      	ldr	r2, [pc, #192]	@ (80058ac <TIM_Base_SetConfig+0x138>)
 80057ea:	4293      	cmp	r3, r2
 80057ec:	d01b      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	4a2f      	ldr	r2, [pc, #188]	@ (80058b0 <TIM_Base_SetConfig+0x13c>)
 80057f2:	4293      	cmp	r3, r2
 80057f4:	d017      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	4a2e      	ldr	r2, [pc, #184]	@ (80058b4 <TIM_Base_SetConfig+0x140>)
 80057fa:	4293      	cmp	r3, r2
 80057fc:	d013      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	4a2d      	ldr	r2, [pc, #180]	@ (80058b8 <TIM_Base_SetConfig+0x144>)
 8005802:	4293      	cmp	r3, r2
 8005804:	d00f      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	4a2c      	ldr	r2, [pc, #176]	@ (80058bc <TIM_Base_SetConfig+0x148>)
 800580a:	4293      	cmp	r3, r2
 800580c:	d00b      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 800580e:	687b      	ldr	r3, [r7, #4]
 8005810:	4a2b      	ldr	r2, [pc, #172]	@ (80058c0 <TIM_Base_SetConfig+0x14c>)
 8005812:	4293      	cmp	r3, r2
 8005814:	d007      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	4a2a      	ldr	r2, [pc, #168]	@ (80058c4 <TIM_Base_SetConfig+0x150>)
 800581a:	4293      	cmp	r3, r2
 800581c:	d003      	beq.n	8005826 <TIM_Base_SetConfig+0xb2>
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	4a29      	ldr	r2, [pc, #164]	@ (80058c8 <TIM_Base_SetConfig+0x154>)
 8005822:	4293      	cmp	r3, r2
 8005824:	d108      	bne.n	8005838 <TIM_Base_SetConfig+0xc4>
 8005826:	68fb      	ldr	r3, [r7, #12]
 8005828:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800582c:	60fb      	str	r3, [r7, #12]
 800582e:	683b      	ldr	r3, [r7, #0]
 8005830:	68db      	ldr	r3, [r3, #12]
 8005832:	68fa      	ldr	r2, [r7, #12]
 8005834:	4313      	orrs	r3, r2
 8005836:	60fb      	str	r3, [r7, #12]
 8005838:	68fb      	ldr	r3, [r7, #12]
 800583a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800583e:	683b      	ldr	r3, [r7, #0]
 8005840:	695b      	ldr	r3, [r3, #20]
 8005842:	4313      	orrs	r3, r2
 8005844:	60fb      	str	r3, [r7, #12]
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	68fa      	ldr	r2, [r7, #12]
 800584a:	601a      	str	r2, [r3, #0]
 800584c:	683b      	ldr	r3, [r7, #0]
 800584e:	689a      	ldr	r2, [r3, #8]
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005854:	683b      	ldr	r3, [r7, #0]
 8005856:	681a      	ldr	r2, [r3, #0]
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	629a      	str	r2, [r3, #40]	@ 0x28
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	4a10      	ldr	r2, [pc, #64]	@ (80058a0 <TIM_Base_SetConfig+0x12c>)
 8005860:	4293      	cmp	r3, r2
 8005862:	d003      	beq.n	800586c <TIM_Base_SetConfig+0xf8>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	4a12      	ldr	r2, [pc, #72]	@ (80058b0 <TIM_Base_SetConfig+0x13c>)
 8005868:	4293      	cmp	r3, r2
 800586a:	d103      	bne.n	8005874 <TIM_Base_SetConfig+0x100>
 800586c:	683b      	ldr	r3, [r7, #0]
 800586e:	691a      	ldr	r2, [r3, #16]
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	631a      	str	r2, [r3, #48]	@ 0x30
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	2201      	movs	r2, #1
 8005878:	615a      	str	r2, [r3, #20]
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	691b      	ldr	r3, [r3, #16]
 800587e:	f003 0301 	and.w	r3, r3, #1
 8005882:	2b01      	cmp	r3, #1
 8005884:	d105      	bne.n	8005892 <TIM_Base_SetConfig+0x11e>
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	691b      	ldr	r3, [r3, #16]
 800588a:	f023 0201 	bic.w	r2, r3, #1
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	611a      	str	r2, [r3, #16]
 8005892:	bf00      	nop
 8005894:	3714      	adds	r7, #20
 8005896:	46bd      	mov	sp, r7
 8005898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800589c:	4770      	bx	lr
 800589e:	bf00      	nop
 80058a0:	40010000 	.word	0x40010000
 80058a4:	40000400 	.word	0x40000400
 80058a8:	40000800 	.word	0x40000800
 80058ac:	40000c00 	.word	0x40000c00
 80058b0:	40010400 	.word	0x40010400
 80058b4:	40014000 	.word	0x40014000
 80058b8:	40014400 	.word	0x40014400
 80058bc:	40014800 	.word	0x40014800
 80058c0:	40001800 	.word	0x40001800
 80058c4:	40001c00 	.word	0x40001c00
 80058c8:	40002000 	.word	0x40002000

080058cc <TIM_OC1_SetConfig>:
 80058cc:	b480      	push	{r7}
 80058ce:	b087      	sub	sp, #28
 80058d0:	af00      	add	r7, sp, #0
 80058d2:	6078      	str	r0, [r7, #4]
 80058d4:	6039      	str	r1, [r7, #0]
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	6a1b      	ldr	r3, [r3, #32]
 80058da:	617b      	str	r3, [r7, #20]
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	6a1b      	ldr	r3, [r3, #32]
 80058e0:	f023 0201 	bic.w	r2, r3, #1
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	621a      	str	r2, [r3, #32]
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	685b      	ldr	r3, [r3, #4]
 80058ec:	613b      	str	r3, [r7, #16]
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	699b      	ldr	r3, [r3, #24]
 80058f2:	60fb      	str	r3, [r7, #12]
 80058f4:	68fb      	ldr	r3, [r7, #12]
 80058f6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80058fa:	60fb      	str	r3, [r7, #12]
 80058fc:	68fb      	ldr	r3, [r7, #12]
 80058fe:	f023 0303 	bic.w	r3, r3, #3
 8005902:	60fb      	str	r3, [r7, #12]
 8005904:	683b      	ldr	r3, [r7, #0]
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	68fa      	ldr	r2, [r7, #12]
 800590a:	4313      	orrs	r3, r2
 800590c:	60fb      	str	r3, [r7, #12]
 800590e:	697b      	ldr	r3, [r7, #20]
 8005910:	f023 0302 	bic.w	r3, r3, #2
 8005914:	617b      	str	r3, [r7, #20]
 8005916:	683b      	ldr	r3, [r7, #0]
 8005918:	689b      	ldr	r3, [r3, #8]
 800591a:	697a      	ldr	r2, [r7, #20]
 800591c:	4313      	orrs	r3, r2
 800591e:	617b      	str	r3, [r7, #20]
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	4a20      	ldr	r2, [pc, #128]	@ (80059a4 <TIM_OC1_SetConfig+0xd8>)
 8005924:	4293      	cmp	r3, r2
 8005926:	d003      	beq.n	8005930 <TIM_OC1_SetConfig+0x64>
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	4a1f      	ldr	r2, [pc, #124]	@ (80059a8 <TIM_OC1_SetConfig+0xdc>)
 800592c:	4293      	cmp	r3, r2
 800592e:	d10c      	bne.n	800594a <TIM_OC1_SetConfig+0x7e>
 8005930:	697b      	ldr	r3, [r7, #20]
 8005932:	f023 0308 	bic.w	r3, r3, #8
 8005936:	617b      	str	r3, [r7, #20]
 8005938:	683b      	ldr	r3, [r7, #0]
 800593a:	68db      	ldr	r3, [r3, #12]
 800593c:	697a      	ldr	r2, [r7, #20]
 800593e:	4313      	orrs	r3, r2
 8005940:	617b      	str	r3, [r7, #20]
 8005942:	697b      	ldr	r3, [r7, #20]
 8005944:	f023 0304 	bic.w	r3, r3, #4
 8005948:	617b      	str	r3, [r7, #20]
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	4a15      	ldr	r2, [pc, #84]	@ (80059a4 <TIM_OC1_SetConfig+0xd8>)
 800594e:	4293      	cmp	r3, r2
 8005950:	d003      	beq.n	800595a <TIM_OC1_SetConfig+0x8e>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	4a14      	ldr	r2, [pc, #80]	@ (80059a8 <TIM_OC1_SetConfig+0xdc>)
 8005956:	4293      	cmp	r3, r2
 8005958:	d111      	bne.n	800597e <TIM_OC1_SetConfig+0xb2>
 800595a:	693b      	ldr	r3, [r7, #16]
 800595c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005960:	613b      	str	r3, [r7, #16]
 8005962:	693b      	ldr	r3, [r7, #16]
 8005964:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005968:	613b      	str	r3, [r7, #16]
 800596a:	683b      	ldr	r3, [r7, #0]
 800596c:	695b      	ldr	r3, [r3, #20]
 800596e:	693a      	ldr	r2, [r7, #16]
 8005970:	4313      	orrs	r3, r2
 8005972:	613b      	str	r3, [r7, #16]
 8005974:	683b      	ldr	r3, [r7, #0]
 8005976:	699b      	ldr	r3, [r3, #24]
 8005978:	693a      	ldr	r2, [r7, #16]
 800597a:	4313      	orrs	r3, r2
 800597c:	613b      	str	r3, [r7, #16]
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	693a      	ldr	r2, [r7, #16]
 8005982:	605a      	str	r2, [r3, #4]
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	68fa      	ldr	r2, [r7, #12]
 8005988:	619a      	str	r2, [r3, #24]
 800598a:	683b      	ldr	r3, [r7, #0]
 800598c:	685a      	ldr	r2, [r3, #4]
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	635a      	str	r2, [r3, #52]	@ 0x34
 8005992:	687b      	ldr	r3, [r7, #4]
 8005994:	697a      	ldr	r2, [r7, #20]
 8005996:	621a      	str	r2, [r3, #32]
 8005998:	bf00      	nop
 800599a:	371c      	adds	r7, #28
 800599c:	46bd      	mov	sp, r7
 800599e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059a2:	4770      	bx	lr
 80059a4:	40010000 	.word	0x40010000
 80059a8:	40010400 	.word	0x40010400

080059ac <TIM_OC2_SetConfig>:
 80059ac:	b480      	push	{r7}
 80059ae:	b087      	sub	sp, #28
 80059b0:	af00      	add	r7, sp, #0
 80059b2:	6078      	str	r0, [r7, #4]
 80059b4:	6039      	str	r1, [r7, #0]
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	6a1b      	ldr	r3, [r3, #32]
 80059ba:	617b      	str	r3, [r7, #20]
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	6a1b      	ldr	r3, [r3, #32]
 80059c0:	f023 0210 	bic.w	r2, r3, #16
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	621a      	str	r2, [r3, #32]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	685b      	ldr	r3, [r3, #4]
 80059cc:	613b      	str	r3, [r7, #16]
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	699b      	ldr	r3, [r3, #24]
 80059d2:	60fb      	str	r3, [r7, #12]
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80059da:	60fb      	str	r3, [r7, #12]
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80059e2:	60fb      	str	r3, [r7, #12]
 80059e4:	683b      	ldr	r3, [r7, #0]
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	021b      	lsls	r3, r3, #8
 80059ea:	68fa      	ldr	r2, [r7, #12]
 80059ec:	4313      	orrs	r3, r2
 80059ee:	60fb      	str	r3, [r7, #12]
 80059f0:	697b      	ldr	r3, [r7, #20]
 80059f2:	f023 0320 	bic.w	r3, r3, #32
 80059f6:	617b      	str	r3, [r7, #20]
 80059f8:	683b      	ldr	r3, [r7, #0]
 80059fa:	689b      	ldr	r3, [r3, #8]
 80059fc:	011b      	lsls	r3, r3, #4
 80059fe:	697a      	ldr	r2, [r7, #20]
 8005a00:	4313      	orrs	r3, r2
 8005a02:	617b      	str	r3, [r7, #20]
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	4a22      	ldr	r2, [pc, #136]	@ (8005a90 <TIM_OC2_SetConfig+0xe4>)
 8005a08:	4293      	cmp	r3, r2
 8005a0a:	d003      	beq.n	8005a14 <TIM_OC2_SetConfig+0x68>
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	4a21      	ldr	r2, [pc, #132]	@ (8005a94 <TIM_OC2_SetConfig+0xe8>)
 8005a10:	4293      	cmp	r3, r2
 8005a12:	d10d      	bne.n	8005a30 <TIM_OC2_SetConfig+0x84>
 8005a14:	697b      	ldr	r3, [r7, #20]
 8005a16:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005a1a:	617b      	str	r3, [r7, #20]
 8005a1c:	683b      	ldr	r3, [r7, #0]
 8005a1e:	68db      	ldr	r3, [r3, #12]
 8005a20:	011b      	lsls	r3, r3, #4
 8005a22:	697a      	ldr	r2, [r7, #20]
 8005a24:	4313      	orrs	r3, r2
 8005a26:	617b      	str	r3, [r7, #20]
 8005a28:	697b      	ldr	r3, [r7, #20]
 8005a2a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005a2e:	617b      	str	r3, [r7, #20]
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	4a17      	ldr	r2, [pc, #92]	@ (8005a90 <TIM_OC2_SetConfig+0xe4>)
 8005a34:	4293      	cmp	r3, r2
 8005a36:	d003      	beq.n	8005a40 <TIM_OC2_SetConfig+0x94>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	4a16      	ldr	r2, [pc, #88]	@ (8005a94 <TIM_OC2_SetConfig+0xe8>)
 8005a3c:	4293      	cmp	r3, r2
 8005a3e:	d113      	bne.n	8005a68 <TIM_OC2_SetConfig+0xbc>
 8005a40:	693b      	ldr	r3, [r7, #16]
 8005a42:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005a46:	613b      	str	r3, [r7, #16]
 8005a48:	693b      	ldr	r3, [r7, #16]
 8005a4a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005a4e:	613b      	str	r3, [r7, #16]
 8005a50:	683b      	ldr	r3, [r7, #0]
 8005a52:	695b      	ldr	r3, [r3, #20]
 8005a54:	009b      	lsls	r3, r3, #2
 8005a56:	693a      	ldr	r2, [r7, #16]
 8005a58:	4313      	orrs	r3, r2
 8005a5a:	613b      	str	r3, [r7, #16]
 8005a5c:	683b      	ldr	r3, [r7, #0]
 8005a5e:	699b      	ldr	r3, [r3, #24]
 8005a60:	009b      	lsls	r3, r3, #2
 8005a62:	693a      	ldr	r2, [r7, #16]
 8005a64:	4313      	orrs	r3, r2
 8005a66:	613b      	str	r3, [r7, #16]
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	693a      	ldr	r2, [r7, #16]
 8005a6c:	605a      	str	r2, [r3, #4]
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	68fa      	ldr	r2, [r7, #12]
 8005a72:	619a      	str	r2, [r3, #24]
 8005a74:	683b      	ldr	r3, [r7, #0]
 8005a76:	685a      	ldr	r2, [r3, #4]
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	639a      	str	r2, [r3, #56]	@ 0x38
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	697a      	ldr	r2, [r7, #20]
 8005a80:	621a      	str	r2, [r3, #32]
 8005a82:	bf00      	nop
 8005a84:	371c      	adds	r7, #28
 8005a86:	46bd      	mov	sp, r7
 8005a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a8c:	4770      	bx	lr
 8005a8e:	bf00      	nop
 8005a90:	40010000 	.word	0x40010000
 8005a94:	40010400 	.word	0x40010400

08005a98 <TIM_OC3_SetConfig>:
 8005a98:	b480      	push	{r7}
 8005a9a:	b087      	sub	sp, #28
 8005a9c:	af00      	add	r7, sp, #0
 8005a9e:	6078      	str	r0, [r7, #4]
 8005aa0:	6039      	str	r1, [r7, #0]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	6a1b      	ldr	r3, [r3, #32]
 8005aa6:	617b      	str	r3, [r7, #20]
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	6a1b      	ldr	r3, [r3, #32]
 8005aac:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	621a      	str	r2, [r3, #32]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	685b      	ldr	r3, [r3, #4]
 8005ab8:	613b      	str	r3, [r7, #16]
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	69db      	ldr	r3, [r3, #28]
 8005abe:	60fb      	str	r3, [r7, #12]
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005ac6:	60fb      	str	r3, [r7, #12]
 8005ac8:	68fb      	ldr	r3, [r7, #12]
 8005aca:	f023 0303 	bic.w	r3, r3, #3
 8005ace:	60fb      	str	r3, [r7, #12]
 8005ad0:	683b      	ldr	r3, [r7, #0]
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	68fa      	ldr	r2, [r7, #12]
 8005ad6:	4313      	orrs	r3, r2
 8005ad8:	60fb      	str	r3, [r7, #12]
 8005ada:	697b      	ldr	r3, [r7, #20]
 8005adc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005ae0:	617b      	str	r3, [r7, #20]
 8005ae2:	683b      	ldr	r3, [r7, #0]
 8005ae4:	689b      	ldr	r3, [r3, #8]
 8005ae6:	021b      	lsls	r3, r3, #8
 8005ae8:	697a      	ldr	r2, [r7, #20]
 8005aea:	4313      	orrs	r3, r2
 8005aec:	617b      	str	r3, [r7, #20]
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	4a21      	ldr	r2, [pc, #132]	@ (8005b78 <TIM_OC3_SetConfig+0xe0>)
 8005af2:	4293      	cmp	r3, r2
 8005af4:	d003      	beq.n	8005afe <TIM_OC3_SetConfig+0x66>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	4a20      	ldr	r2, [pc, #128]	@ (8005b7c <TIM_OC3_SetConfig+0xe4>)
 8005afa:	4293      	cmp	r3, r2
 8005afc:	d10d      	bne.n	8005b1a <TIM_OC3_SetConfig+0x82>
 8005afe:	697b      	ldr	r3, [r7, #20]
 8005b00:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005b04:	617b      	str	r3, [r7, #20]
 8005b06:	683b      	ldr	r3, [r7, #0]
 8005b08:	68db      	ldr	r3, [r3, #12]
 8005b0a:	021b      	lsls	r3, r3, #8
 8005b0c:	697a      	ldr	r2, [r7, #20]
 8005b0e:	4313      	orrs	r3, r2
 8005b10:	617b      	str	r3, [r7, #20]
 8005b12:	697b      	ldr	r3, [r7, #20]
 8005b14:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005b18:	617b      	str	r3, [r7, #20]
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	4a16      	ldr	r2, [pc, #88]	@ (8005b78 <TIM_OC3_SetConfig+0xe0>)
 8005b1e:	4293      	cmp	r3, r2
 8005b20:	d003      	beq.n	8005b2a <TIM_OC3_SetConfig+0x92>
 8005b22:	687b      	ldr	r3, [r7, #4]
 8005b24:	4a15      	ldr	r2, [pc, #84]	@ (8005b7c <TIM_OC3_SetConfig+0xe4>)
 8005b26:	4293      	cmp	r3, r2
 8005b28:	d113      	bne.n	8005b52 <TIM_OC3_SetConfig+0xba>
 8005b2a:	693b      	ldr	r3, [r7, #16]
 8005b2c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005b30:	613b      	str	r3, [r7, #16]
 8005b32:	693b      	ldr	r3, [r7, #16]
 8005b34:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005b38:	613b      	str	r3, [r7, #16]
 8005b3a:	683b      	ldr	r3, [r7, #0]
 8005b3c:	695b      	ldr	r3, [r3, #20]
 8005b3e:	011b      	lsls	r3, r3, #4
 8005b40:	693a      	ldr	r2, [r7, #16]
 8005b42:	4313      	orrs	r3, r2
 8005b44:	613b      	str	r3, [r7, #16]
 8005b46:	683b      	ldr	r3, [r7, #0]
 8005b48:	699b      	ldr	r3, [r3, #24]
 8005b4a:	011b      	lsls	r3, r3, #4
 8005b4c:	693a      	ldr	r2, [r7, #16]
 8005b4e:	4313      	orrs	r3, r2
 8005b50:	613b      	str	r3, [r7, #16]
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	693a      	ldr	r2, [r7, #16]
 8005b56:	605a      	str	r2, [r3, #4]
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	68fa      	ldr	r2, [r7, #12]
 8005b5c:	61da      	str	r2, [r3, #28]
 8005b5e:	683b      	ldr	r3, [r7, #0]
 8005b60:	685a      	ldr	r2, [r3, #4]
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	697a      	ldr	r2, [r7, #20]
 8005b6a:	621a      	str	r2, [r3, #32]
 8005b6c:	bf00      	nop
 8005b6e:	371c      	adds	r7, #28
 8005b70:	46bd      	mov	sp, r7
 8005b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b76:	4770      	bx	lr
 8005b78:	40010000 	.word	0x40010000
 8005b7c:	40010400 	.word	0x40010400

08005b80 <TIM_OC4_SetConfig>:
 8005b80:	b480      	push	{r7}
 8005b82:	b087      	sub	sp, #28
 8005b84:	af00      	add	r7, sp, #0
 8005b86:	6078      	str	r0, [r7, #4]
 8005b88:	6039      	str	r1, [r7, #0]
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	6a1b      	ldr	r3, [r3, #32]
 8005b8e:	613b      	str	r3, [r7, #16]
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	6a1b      	ldr	r3, [r3, #32]
 8005b94:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	621a      	str	r2, [r3, #32]
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	685b      	ldr	r3, [r3, #4]
 8005ba0:	617b      	str	r3, [r7, #20]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	69db      	ldr	r3, [r3, #28]
 8005ba6:	60fb      	str	r3, [r7, #12]
 8005ba8:	68fb      	ldr	r3, [r7, #12]
 8005baa:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005bae:	60fb      	str	r3, [r7, #12]
 8005bb0:	68fb      	ldr	r3, [r7, #12]
 8005bb2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005bb6:	60fb      	str	r3, [r7, #12]
 8005bb8:	683b      	ldr	r3, [r7, #0]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	021b      	lsls	r3, r3, #8
 8005bbe:	68fa      	ldr	r2, [r7, #12]
 8005bc0:	4313      	orrs	r3, r2
 8005bc2:	60fb      	str	r3, [r7, #12]
 8005bc4:	693b      	ldr	r3, [r7, #16]
 8005bc6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005bca:	613b      	str	r3, [r7, #16]
 8005bcc:	683b      	ldr	r3, [r7, #0]
 8005bce:	689b      	ldr	r3, [r3, #8]
 8005bd0:	031b      	lsls	r3, r3, #12
 8005bd2:	693a      	ldr	r2, [r7, #16]
 8005bd4:	4313      	orrs	r3, r2
 8005bd6:	613b      	str	r3, [r7, #16]
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	4a12      	ldr	r2, [pc, #72]	@ (8005c24 <TIM_OC4_SetConfig+0xa4>)
 8005bdc:	4293      	cmp	r3, r2
 8005bde:	d003      	beq.n	8005be8 <TIM_OC4_SetConfig+0x68>
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	4a11      	ldr	r2, [pc, #68]	@ (8005c28 <TIM_OC4_SetConfig+0xa8>)
 8005be4:	4293      	cmp	r3, r2
 8005be6:	d109      	bne.n	8005bfc <TIM_OC4_SetConfig+0x7c>
 8005be8:	697b      	ldr	r3, [r7, #20]
 8005bea:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005bee:	617b      	str	r3, [r7, #20]
 8005bf0:	683b      	ldr	r3, [r7, #0]
 8005bf2:	695b      	ldr	r3, [r3, #20]
 8005bf4:	019b      	lsls	r3, r3, #6
 8005bf6:	697a      	ldr	r2, [r7, #20]
 8005bf8:	4313      	orrs	r3, r2
 8005bfa:	617b      	str	r3, [r7, #20]
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	697a      	ldr	r2, [r7, #20]
 8005c00:	605a      	str	r2, [r3, #4]
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	68fa      	ldr	r2, [r7, #12]
 8005c06:	61da      	str	r2, [r3, #28]
 8005c08:	683b      	ldr	r3, [r7, #0]
 8005c0a:	685a      	ldr	r2, [r3, #4]
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	693a      	ldr	r2, [r7, #16]
 8005c14:	621a      	str	r2, [r3, #32]
 8005c16:	bf00      	nop
 8005c18:	371c      	adds	r7, #28
 8005c1a:	46bd      	mov	sp, r7
 8005c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c20:	4770      	bx	lr
 8005c22:	bf00      	nop
 8005c24:	40010000 	.word	0x40010000
 8005c28:	40010400 	.word	0x40010400

08005c2c <TIM_TI1_ConfigInputStage>:
 8005c2c:	b480      	push	{r7}
 8005c2e:	b087      	sub	sp, #28
 8005c30:	af00      	add	r7, sp, #0
 8005c32:	60f8      	str	r0, [r7, #12]
 8005c34:	60b9      	str	r1, [r7, #8]
 8005c36:	607a      	str	r2, [r7, #4]
 8005c38:	68fb      	ldr	r3, [r7, #12]
 8005c3a:	6a1b      	ldr	r3, [r3, #32]
 8005c3c:	617b      	str	r3, [r7, #20]
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	6a1b      	ldr	r3, [r3, #32]
 8005c42:	f023 0201 	bic.w	r2, r3, #1
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	621a      	str	r2, [r3, #32]
 8005c4a:	68fb      	ldr	r3, [r7, #12]
 8005c4c:	699b      	ldr	r3, [r3, #24]
 8005c4e:	613b      	str	r3, [r7, #16]
 8005c50:	693b      	ldr	r3, [r7, #16]
 8005c52:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005c56:	613b      	str	r3, [r7, #16]
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	011b      	lsls	r3, r3, #4
 8005c5c:	693a      	ldr	r2, [r7, #16]
 8005c5e:	4313      	orrs	r3, r2
 8005c60:	613b      	str	r3, [r7, #16]
 8005c62:	697b      	ldr	r3, [r7, #20]
 8005c64:	f023 030a 	bic.w	r3, r3, #10
 8005c68:	617b      	str	r3, [r7, #20]
 8005c6a:	697a      	ldr	r2, [r7, #20]
 8005c6c:	68bb      	ldr	r3, [r7, #8]
 8005c6e:	4313      	orrs	r3, r2
 8005c70:	617b      	str	r3, [r7, #20]
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	693a      	ldr	r2, [r7, #16]
 8005c76:	619a      	str	r2, [r3, #24]
 8005c78:	68fb      	ldr	r3, [r7, #12]
 8005c7a:	697a      	ldr	r2, [r7, #20]
 8005c7c:	621a      	str	r2, [r3, #32]
 8005c7e:	bf00      	nop
 8005c80:	371c      	adds	r7, #28
 8005c82:	46bd      	mov	sp, r7
 8005c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c88:	4770      	bx	lr

08005c8a <TIM_TI2_ConfigInputStage>:
 8005c8a:	b480      	push	{r7}
 8005c8c:	b087      	sub	sp, #28
 8005c8e:	af00      	add	r7, sp, #0
 8005c90:	60f8      	str	r0, [r7, #12]
 8005c92:	60b9      	str	r1, [r7, #8]
 8005c94:	607a      	str	r2, [r7, #4]
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	6a1b      	ldr	r3, [r3, #32]
 8005c9a:	617b      	str	r3, [r7, #20]
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	6a1b      	ldr	r3, [r3, #32]
 8005ca0:	f023 0210 	bic.w	r2, r3, #16
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	621a      	str	r2, [r3, #32]
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	699b      	ldr	r3, [r3, #24]
 8005cac:	613b      	str	r3, [r7, #16]
 8005cae:	693b      	ldr	r3, [r7, #16]
 8005cb0:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005cb4:	613b      	str	r3, [r7, #16]
 8005cb6:	687b      	ldr	r3, [r7, #4]
 8005cb8:	031b      	lsls	r3, r3, #12
 8005cba:	693a      	ldr	r2, [r7, #16]
 8005cbc:	4313      	orrs	r3, r2
 8005cbe:	613b      	str	r3, [r7, #16]
 8005cc0:	697b      	ldr	r3, [r7, #20]
 8005cc2:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005cc6:	617b      	str	r3, [r7, #20]
 8005cc8:	68bb      	ldr	r3, [r7, #8]
 8005cca:	011b      	lsls	r3, r3, #4
 8005ccc:	697a      	ldr	r2, [r7, #20]
 8005cce:	4313      	orrs	r3, r2
 8005cd0:	617b      	str	r3, [r7, #20]
 8005cd2:	68fb      	ldr	r3, [r7, #12]
 8005cd4:	693a      	ldr	r2, [r7, #16]
 8005cd6:	619a      	str	r2, [r3, #24]
 8005cd8:	68fb      	ldr	r3, [r7, #12]
 8005cda:	697a      	ldr	r2, [r7, #20]
 8005cdc:	621a      	str	r2, [r3, #32]
 8005cde:	bf00      	nop
 8005ce0:	371c      	adds	r7, #28
 8005ce2:	46bd      	mov	sp, r7
 8005ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ce8:	4770      	bx	lr

08005cea <TIM_ITRx_SetConfig>:
 8005cea:	b480      	push	{r7}
 8005cec:	b085      	sub	sp, #20
 8005cee:	af00      	add	r7, sp, #0
 8005cf0:	6078      	str	r0, [r7, #4]
 8005cf2:	6039      	str	r1, [r7, #0]
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	689b      	ldr	r3, [r3, #8]
 8005cf8:	60fb      	str	r3, [r7, #12]
 8005cfa:	68fb      	ldr	r3, [r7, #12]
 8005cfc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005d00:	60fb      	str	r3, [r7, #12]
 8005d02:	683a      	ldr	r2, [r7, #0]
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	4313      	orrs	r3, r2
 8005d08:	f043 0307 	orr.w	r3, r3, #7
 8005d0c:	60fb      	str	r3, [r7, #12]
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	68fa      	ldr	r2, [r7, #12]
 8005d12:	609a      	str	r2, [r3, #8]
 8005d14:	bf00      	nop
 8005d16:	3714      	adds	r7, #20
 8005d18:	46bd      	mov	sp, r7
 8005d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d1e:	4770      	bx	lr

08005d20 <TIM_ETR_SetConfig>:
 8005d20:	b480      	push	{r7}
 8005d22:	b087      	sub	sp, #28
 8005d24:	af00      	add	r7, sp, #0
 8005d26:	60f8      	str	r0, [r7, #12]
 8005d28:	60b9      	str	r1, [r7, #8]
 8005d2a:	607a      	str	r2, [r7, #4]
 8005d2c:	603b      	str	r3, [r7, #0]
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	689b      	ldr	r3, [r3, #8]
 8005d32:	617b      	str	r3, [r7, #20]
 8005d34:	697b      	ldr	r3, [r7, #20]
 8005d36:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005d3a:	617b      	str	r3, [r7, #20]
 8005d3c:	683b      	ldr	r3, [r7, #0]
 8005d3e:	021a      	lsls	r2, r3, #8
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	431a      	orrs	r2, r3
 8005d44:	68bb      	ldr	r3, [r7, #8]
 8005d46:	4313      	orrs	r3, r2
 8005d48:	697a      	ldr	r2, [r7, #20]
 8005d4a:	4313      	orrs	r3, r2
 8005d4c:	617b      	str	r3, [r7, #20]
 8005d4e:	68fb      	ldr	r3, [r7, #12]
 8005d50:	697a      	ldr	r2, [r7, #20]
 8005d52:	609a      	str	r2, [r3, #8]
 8005d54:	bf00      	nop
 8005d56:	371c      	adds	r7, #28
 8005d58:	46bd      	mov	sp, r7
 8005d5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d5e:	4770      	bx	lr

08005d60 <TIM_CCxChannelCmd>:
 8005d60:	b480      	push	{r7}
 8005d62:	b087      	sub	sp, #28
 8005d64:	af00      	add	r7, sp, #0
 8005d66:	60f8      	str	r0, [r7, #12]
 8005d68:	60b9      	str	r1, [r7, #8]
 8005d6a:	607a      	str	r2, [r7, #4]
 8005d6c:	68bb      	ldr	r3, [r7, #8]
 8005d6e:	f003 031f 	and.w	r3, r3, #31
 8005d72:	2201      	movs	r2, #1
 8005d74:	fa02 f303 	lsl.w	r3, r2, r3
 8005d78:	617b      	str	r3, [r7, #20]
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	6a1a      	ldr	r2, [r3, #32]
 8005d7e:	697b      	ldr	r3, [r7, #20]
 8005d80:	43db      	mvns	r3, r3
 8005d82:	401a      	ands	r2, r3
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	621a      	str	r2, [r3, #32]
 8005d88:	68fb      	ldr	r3, [r7, #12]
 8005d8a:	6a1a      	ldr	r2, [r3, #32]
 8005d8c:	68bb      	ldr	r3, [r7, #8]
 8005d8e:	f003 031f 	and.w	r3, r3, #31
 8005d92:	6879      	ldr	r1, [r7, #4]
 8005d94:	fa01 f303 	lsl.w	r3, r1, r3
 8005d98:	431a      	orrs	r2, r3
 8005d9a:	68fb      	ldr	r3, [r7, #12]
 8005d9c:	621a      	str	r2, [r3, #32]
 8005d9e:	bf00      	nop
 8005da0:	371c      	adds	r7, #28
 8005da2:	46bd      	mov	sp, r7
 8005da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005da8:	4770      	bx	lr
	...

08005dac <HAL_TIMEx_MasterConfigSynchronization>:
 8005dac:	b480      	push	{r7}
 8005dae:	b085      	sub	sp, #20
 8005db0:	af00      	add	r7, sp, #0
 8005db2:	6078      	str	r0, [r7, #4]
 8005db4:	6039      	str	r1, [r7, #0]
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005dbc:	2b01      	cmp	r3, #1
 8005dbe:	d101      	bne.n	8005dc4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005dc0:	2302      	movs	r3, #2
 8005dc2:	e05a      	b.n	8005e7a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	2201      	movs	r2, #1
 8005dc8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	2202      	movs	r2, #2
 8005dd0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	685b      	ldr	r3, [r3, #4]
 8005dda:	60fb      	str	r3, [r7, #12]
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	689b      	ldr	r3, [r3, #8]
 8005de2:	60bb      	str	r3, [r7, #8]
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005dea:	60fb      	str	r3, [r7, #12]
 8005dec:	683b      	ldr	r3, [r7, #0]
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	68fa      	ldr	r2, [r7, #12]
 8005df2:	4313      	orrs	r3, r2
 8005df4:	60fb      	str	r3, [r7, #12]
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	68fa      	ldr	r2, [r7, #12]
 8005dfc:	605a      	str	r2, [r3, #4]
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	681b      	ldr	r3, [r3, #0]
 8005e02:	4a21      	ldr	r2, [pc, #132]	@ (8005e88 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005e04:	4293      	cmp	r3, r2
 8005e06:	d022      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005e10:	d01d      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	4a1d      	ldr	r2, [pc, #116]	@ (8005e8c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005e18:	4293      	cmp	r3, r2
 8005e1a:	d018      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	4a1b      	ldr	r2, [pc, #108]	@ (8005e90 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005e22:	4293      	cmp	r3, r2
 8005e24:	d013      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	4a1a      	ldr	r2, [pc, #104]	@ (8005e94 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005e2c:	4293      	cmp	r3, r2
 8005e2e:	d00e      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	4a18      	ldr	r2, [pc, #96]	@ (8005e98 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005e36:	4293      	cmp	r3, r2
 8005e38:	d009      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	4a17      	ldr	r2, [pc, #92]	@ (8005e9c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005e40:	4293      	cmp	r3, r2
 8005e42:	d004      	beq.n	8005e4e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	4a15      	ldr	r2, [pc, #84]	@ (8005ea0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005e4a:	4293      	cmp	r3, r2
 8005e4c:	d10c      	bne.n	8005e68 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005e4e:	68bb      	ldr	r3, [r7, #8]
 8005e50:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005e54:	60bb      	str	r3, [r7, #8]
 8005e56:	683b      	ldr	r3, [r7, #0]
 8005e58:	685b      	ldr	r3, [r3, #4]
 8005e5a:	68ba      	ldr	r2, [r7, #8]
 8005e5c:	4313      	orrs	r3, r2
 8005e5e:	60bb      	str	r3, [r7, #8]
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	68ba      	ldr	r2, [r7, #8]
 8005e66:	609a      	str	r2, [r3, #8]
 8005e68:	687b      	ldr	r3, [r7, #4]
 8005e6a:	2201      	movs	r2, #1
 8005e6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	2200      	movs	r2, #0
 8005e74:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e78:	2300      	movs	r3, #0
 8005e7a:	4618      	mov	r0, r3
 8005e7c:	3714      	adds	r7, #20
 8005e7e:	46bd      	mov	sp, r7
 8005e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e84:	4770      	bx	lr
 8005e86:	bf00      	nop
 8005e88:	40010000 	.word	0x40010000
 8005e8c:	40000400 	.word	0x40000400
 8005e90:	40000800 	.word	0x40000800
 8005e94:	40000c00 	.word	0x40000c00
 8005e98:	40010400 	.word	0x40010400
 8005e9c:	40014000 	.word	0x40014000
 8005ea0:	40001800 	.word	0x40001800

08005ea4 <HAL_TIMEx_ConfigBreakDeadTime>:
 8005ea4:	b480      	push	{r7}
 8005ea6:	b085      	sub	sp, #20
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	6078      	str	r0, [r7, #4]
 8005eac:	6039      	str	r1, [r7, #0]
 8005eae:	2300      	movs	r3, #0
 8005eb0:	60fb      	str	r3, [r7, #12]
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005eb8:	2b01      	cmp	r3, #1
 8005eba:	d101      	bne.n	8005ec0 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8005ebc:	2302      	movs	r3, #2
 8005ebe:	e03d      	b.n	8005f3c <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8005ec0:	687b      	ldr	r3, [r7, #4]
 8005ec2:	2201      	movs	r2, #1
 8005ec4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8005ece:	683b      	ldr	r3, [r7, #0]
 8005ed0:	68db      	ldr	r3, [r3, #12]
 8005ed2:	4313      	orrs	r3, r2
 8005ed4:	60fb      	str	r3, [r7, #12]
 8005ed6:	68fb      	ldr	r3, [r7, #12]
 8005ed8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005edc:	683b      	ldr	r3, [r7, #0]
 8005ede:	689b      	ldr	r3, [r3, #8]
 8005ee0:	4313      	orrs	r3, r2
 8005ee2:	60fb      	str	r3, [r7, #12]
 8005ee4:	68fb      	ldr	r3, [r7, #12]
 8005ee6:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8005eea:	683b      	ldr	r3, [r7, #0]
 8005eec:	685b      	ldr	r3, [r3, #4]
 8005eee:	4313      	orrs	r3, r2
 8005ef0:	60fb      	str	r3, [r7, #12]
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8005ef8:	683b      	ldr	r3, [r7, #0]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	4313      	orrs	r3, r2
 8005efe:	60fb      	str	r3, [r7, #12]
 8005f00:	68fb      	ldr	r3, [r7, #12]
 8005f02:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005f06:	683b      	ldr	r3, [r7, #0]
 8005f08:	691b      	ldr	r3, [r3, #16]
 8005f0a:	4313      	orrs	r3, r2
 8005f0c:	60fb      	str	r3, [r7, #12]
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8005f14:	683b      	ldr	r3, [r7, #0]
 8005f16:	695b      	ldr	r3, [r3, #20]
 8005f18:	4313      	orrs	r3, r2
 8005f1a:	60fb      	str	r3, [r7, #12]
 8005f1c:	68fb      	ldr	r3, [r7, #12]
 8005f1e:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8005f22:	683b      	ldr	r3, [r7, #0]
 8005f24:	69db      	ldr	r3, [r3, #28]
 8005f26:	4313      	orrs	r3, r2
 8005f28:	60fb      	str	r3, [r7, #12]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	681b      	ldr	r3, [r3, #0]
 8005f2e:	68fa      	ldr	r2, [r7, #12]
 8005f30:	645a      	str	r2, [r3, #68]	@ 0x44
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	2200      	movs	r2, #0
 8005f36:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005f3a:	2300      	movs	r3, #0
 8005f3c:	4618      	mov	r0, r3
 8005f3e:	3714      	adds	r7, #20
 8005f40:	46bd      	mov	sp, r7
 8005f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f46:	4770      	bx	lr

08005f48 <HAL_UART_Init>:
 8005f48:	b580      	push	{r7, lr}
 8005f4a:	b082      	sub	sp, #8
 8005f4c:	af00      	add	r7, sp, #0
 8005f4e:	6078      	str	r0, [r7, #4]
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	2b00      	cmp	r3, #0
 8005f54:	d101      	bne.n	8005f5a <HAL_UART_Init+0x12>
 8005f56:	2301      	movs	r3, #1
 8005f58:	e042      	b.n	8005fe0 <HAL_UART_Init+0x98>
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005f60:	b2db      	uxtb	r3, r3
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d106      	bne.n	8005f74 <HAL_UART_Init+0x2c>
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	2200      	movs	r2, #0
 8005f6a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005f6e:	6878      	ldr	r0, [r7, #4]
 8005f70:	f7fc fc5e 	bl	8002830 <HAL_UART_MspInit>
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	2224      	movs	r2, #36	@ 0x24
 8005f78:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	681b      	ldr	r3, [r3, #0]
 8005f80:	68da      	ldr	r2, [r3, #12]
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005f8a:	60da      	str	r2, [r3, #12]
 8005f8c:	6878      	ldr	r0, [r7, #4]
 8005f8e:	f000 fea1 	bl	8006cd4 <UART_SetConfig>
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	691a      	ldr	r2, [r3, #16]
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005fa0:	611a      	str	r2, [r3, #16]
 8005fa2:	687b      	ldr	r3, [r7, #4]
 8005fa4:	681b      	ldr	r3, [r3, #0]
 8005fa6:	695a      	ldr	r2, [r3, #20]
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005fb0:	615a      	str	r2, [r3, #20]
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	68da      	ldr	r2, [r3, #12]
 8005fb8:	687b      	ldr	r3, [r7, #4]
 8005fba:	681b      	ldr	r3, [r3, #0]
 8005fbc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005fc0:	60da      	str	r2, [r3, #12]
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	2200      	movs	r2, #0
 8005fc6:	645a      	str	r2, [r3, #68]	@ 0x44
 8005fc8:	687b      	ldr	r3, [r7, #4]
 8005fca:	2220      	movs	r2, #32
 8005fcc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	2220      	movs	r2, #32
 8005fd4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	2200      	movs	r2, #0
 8005fdc:	635a      	str	r2, [r3, #52]	@ 0x34
 8005fde:	2300      	movs	r3, #0
 8005fe0:	4618      	mov	r0, r3
 8005fe2:	3708      	adds	r7, #8
 8005fe4:	46bd      	mov	sp, r7
 8005fe6:	bd80      	pop	{r7, pc}

08005fe8 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8005fe8:	b580      	push	{r7, lr}
 8005fea:	b08c      	sub	sp, #48	@ 0x30
 8005fec:	af00      	add	r7, sp, #0
 8005fee:	60f8      	str	r0, [r7, #12]
 8005ff0:	60b9      	str	r1, [r7, #8]
 8005ff2:	4613      	mov	r3, r2
 8005ff4:	80fb      	strh	r3, [r7, #6]
 8005ff6:	68fb      	ldr	r3, [r7, #12]
 8005ff8:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005ffc:	b2db      	uxtb	r3, r3
 8005ffe:	2b20      	cmp	r3, #32
 8006000:	d14a      	bne.n	8006098 <HAL_UARTEx_ReceiveToIdle_DMA+0xb0>
 8006002:	68bb      	ldr	r3, [r7, #8]
 8006004:	2b00      	cmp	r3, #0
 8006006:	d002      	beq.n	800600e <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8006008:	88fb      	ldrh	r3, [r7, #6]
 800600a:	2b00      	cmp	r3, #0
 800600c:	d101      	bne.n	8006012 <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 800600e:	2301      	movs	r3, #1
 8006010:	e043      	b.n	800609a <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
 8006012:	68fb      	ldr	r3, [r7, #12]
 8006014:	2201      	movs	r2, #1
 8006016:	631a      	str	r2, [r3, #48]	@ 0x30
 8006018:	68fb      	ldr	r3, [r7, #12]
 800601a:	2200      	movs	r2, #0
 800601c:	635a      	str	r2, [r3, #52]	@ 0x34
 800601e:	88fb      	ldrh	r3, [r7, #6]
 8006020:	461a      	mov	r2, r3
 8006022:	68b9      	ldr	r1, [r7, #8]
 8006024:	68f8      	ldr	r0, [r7, #12]
 8006026:	f000 fbf5 	bl	8006814 <UART_Start_Receive_DMA>
 800602a:	4603      	mov	r3, r0
 800602c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8006030:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8006034:	2b00      	cmp	r3, #0
 8006036:	d12c      	bne.n	8006092 <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800603c:	2b01      	cmp	r3, #1
 800603e:	d125      	bne.n	800608c <HAL_UARTEx_ReceiveToIdle_DMA+0xa4>
 8006040:	2300      	movs	r3, #0
 8006042:	613b      	str	r3, [r7, #16]
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	613b      	str	r3, [r7, #16]
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	685b      	ldr	r3, [r3, #4]
 8006052:	613b      	str	r3, [r7, #16]
 8006054:	693b      	ldr	r3, [r7, #16]
 8006056:	68fb      	ldr	r3, [r7, #12]
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	330c      	adds	r3, #12
 800605c:	61bb      	str	r3, [r7, #24]
 800605e:	69bb      	ldr	r3, [r7, #24]
 8006060:	e853 3f00 	ldrex	r3, [r3]
 8006064:	617b      	str	r3, [r7, #20]
 8006066:	697b      	ldr	r3, [r7, #20]
 8006068:	f043 0310 	orr.w	r3, r3, #16
 800606c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	330c      	adds	r3, #12
 8006074:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006076:	627a      	str	r2, [r7, #36]	@ 0x24
 8006078:	623b      	str	r3, [r7, #32]
 800607a:	6a39      	ldr	r1, [r7, #32]
 800607c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800607e:	e841 2300 	strex	r3, r2, [r1]
 8006082:	61fb      	str	r3, [r7, #28]
 8006084:	69fb      	ldr	r3, [r7, #28]
 8006086:	2b00      	cmp	r3, #0
 8006088:	d1e5      	bne.n	8006056 <HAL_UARTEx_ReceiveToIdle_DMA+0x6e>
 800608a:	e002      	b.n	8006092 <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
 800608c:	2301      	movs	r3, #1
 800608e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8006092:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8006096:	e000      	b.n	800609a <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
 8006098:	2302      	movs	r3, #2
 800609a:	4618      	mov	r0, r3
 800609c:	3730      	adds	r7, #48	@ 0x30
 800609e:	46bd      	mov	sp, r7
 80060a0:	bd80      	pop	{r7, pc}
	...

080060a4 <HAL_UART_IRQHandler>:
 80060a4:	b580      	push	{r7, lr}
 80060a6:	b0ba      	sub	sp, #232	@ 0xe8
 80060a8:	af00      	add	r7, sp, #0
 80060aa:	6078      	str	r0, [r7, #4]
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	68db      	ldr	r3, [r3, #12]
 80060bc:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	681b      	ldr	r3, [r3, #0]
 80060c4:	695b      	ldr	r3, [r3, #20]
 80060c6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80060ca:	2300      	movs	r3, #0
 80060cc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80060d0:	2300      	movs	r3, #0
 80060d2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80060d6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80060da:	f003 030f 	and.w	r3, r3, #15
 80060de:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80060e2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80060e6:	2b00      	cmp	r3, #0
 80060e8:	d10f      	bne.n	800610a <HAL_UART_IRQHandler+0x66>
 80060ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80060ee:	f003 0320 	and.w	r3, r3, #32
 80060f2:	2b00      	cmp	r3, #0
 80060f4:	d009      	beq.n	800610a <HAL_UART_IRQHandler+0x66>
 80060f6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80060fa:	f003 0320 	and.w	r3, r3, #32
 80060fe:	2b00      	cmp	r3, #0
 8006100:	d003      	beq.n	800610a <HAL_UART_IRQHandler+0x66>
 8006102:	6878      	ldr	r0, [r7, #4]
 8006104:	f000 fd27 	bl	8006b56 <UART_Receive_IT>
 8006108:	e25b      	b.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 800610a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800610e:	2b00      	cmp	r3, #0
 8006110:	f000 80de 	beq.w	80062d0 <HAL_UART_IRQHandler+0x22c>
 8006114:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006118:	f003 0301 	and.w	r3, r3, #1
 800611c:	2b00      	cmp	r3, #0
 800611e:	d106      	bne.n	800612e <HAL_UART_IRQHandler+0x8a>
 8006120:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006124:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8006128:	2b00      	cmp	r3, #0
 800612a:	f000 80d1 	beq.w	80062d0 <HAL_UART_IRQHandler+0x22c>
 800612e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006132:	f003 0301 	and.w	r3, r3, #1
 8006136:	2b00      	cmp	r3, #0
 8006138:	d00b      	beq.n	8006152 <HAL_UART_IRQHandler+0xae>
 800613a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800613e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006142:	2b00      	cmp	r3, #0
 8006144:	d005      	beq.n	8006152 <HAL_UART_IRQHandler+0xae>
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800614a:	f043 0201 	orr.w	r2, r3, #1
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	645a      	str	r2, [r3, #68]	@ 0x44
 8006152:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006156:	f003 0304 	and.w	r3, r3, #4
 800615a:	2b00      	cmp	r3, #0
 800615c:	d00b      	beq.n	8006176 <HAL_UART_IRQHandler+0xd2>
 800615e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006162:	f003 0301 	and.w	r3, r3, #1
 8006166:	2b00      	cmp	r3, #0
 8006168:	d005      	beq.n	8006176 <HAL_UART_IRQHandler+0xd2>
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800616e:	f043 0202 	orr.w	r2, r3, #2
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	645a      	str	r2, [r3, #68]	@ 0x44
 8006176:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800617a:	f003 0302 	and.w	r3, r3, #2
 800617e:	2b00      	cmp	r3, #0
 8006180:	d00b      	beq.n	800619a <HAL_UART_IRQHandler+0xf6>
 8006182:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006186:	f003 0301 	and.w	r3, r3, #1
 800618a:	2b00      	cmp	r3, #0
 800618c:	d005      	beq.n	800619a <HAL_UART_IRQHandler+0xf6>
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006192:	f043 0204 	orr.w	r2, r3, #4
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	645a      	str	r2, [r3, #68]	@ 0x44
 800619a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800619e:	f003 0308 	and.w	r3, r3, #8
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d011      	beq.n	80061ca <HAL_UART_IRQHandler+0x126>
 80061a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80061aa:	f003 0320 	and.w	r3, r3, #32
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d105      	bne.n	80061be <HAL_UART_IRQHandler+0x11a>
 80061b2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80061b6:	f003 0301 	and.w	r3, r3, #1
 80061ba:	2b00      	cmp	r3, #0
 80061bc:	d005      	beq.n	80061ca <HAL_UART_IRQHandler+0x126>
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061c2:	f043 0208 	orr.w	r2, r3, #8
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	645a      	str	r2, [r3, #68]	@ 0x44
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061ce:	2b00      	cmp	r3, #0
 80061d0:	f000 81f2 	beq.w	80065b8 <HAL_UART_IRQHandler+0x514>
 80061d4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80061d8:	f003 0320 	and.w	r3, r3, #32
 80061dc:	2b00      	cmp	r3, #0
 80061de:	d008      	beq.n	80061f2 <HAL_UART_IRQHandler+0x14e>
 80061e0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80061e4:	f003 0320 	and.w	r3, r3, #32
 80061e8:	2b00      	cmp	r3, #0
 80061ea:	d002      	beq.n	80061f2 <HAL_UART_IRQHandler+0x14e>
 80061ec:	6878      	ldr	r0, [r7, #4]
 80061ee:	f000 fcb2 	bl	8006b56 <UART_Receive_IT>
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	695b      	ldr	r3, [r3, #20]
 80061f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80061fc:	2b40      	cmp	r3, #64	@ 0x40
 80061fe:	bf0c      	ite	eq
 8006200:	2301      	moveq	r3, #1
 8006202:	2300      	movne	r3, #0
 8006204:	b2db      	uxtb	r3, r3
 8006206:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800620e:	f003 0308 	and.w	r3, r3, #8
 8006212:	2b00      	cmp	r3, #0
 8006214:	d103      	bne.n	800621e <HAL_UART_IRQHandler+0x17a>
 8006216:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800621a:	2b00      	cmp	r3, #0
 800621c:	d04f      	beq.n	80062be <HAL_UART_IRQHandler+0x21a>
 800621e:	6878      	ldr	r0, [r7, #4]
 8006220:	f000 fbba 	bl	8006998 <UART_EndRxTransfer>
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	695b      	ldr	r3, [r3, #20]
 800622a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800622e:	2b40      	cmp	r3, #64	@ 0x40
 8006230:	d141      	bne.n	80062b6 <HAL_UART_IRQHandler+0x212>
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	3314      	adds	r3, #20
 8006238:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800623c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8006240:	e853 3f00 	ldrex	r3, [r3]
 8006244:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006248:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800624c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006250:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	3314      	adds	r3, #20
 800625a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800625e:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8006262:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8006266:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800626a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800626e:	e841 2300 	strex	r3, r2, [r1]
 8006272:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006276:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800627a:	2b00      	cmp	r3, #0
 800627c:	d1d9      	bne.n	8006232 <HAL_UART_IRQHandler+0x18e>
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006282:	2b00      	cmp	r3, #0
 8006284:	d013      	beq.n	80062ae <HAL_UART_IRQHandler+0x20a>
 8006286:	687b      	ldr	r3, [r7, #4]
 8006288:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800628a:	4a7e      	ldr	r2, [pc, #504]	@ (8006484 <HAL_UART_IRQHandler+0x3e0>)
 800628c:	651a      	str	r2, [r3, #80]	@ 0x50
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006292:	4618      	mov	r0, r3
 8006294:	f7fd fbda 	bl	8003a4c <HAL_DMA_Abort_IT>
 8006298:	4603      	mov	r3, r0
 800629a:	2b00      	cmp	r3, #0
 800629c:	d016      	beq.n	80062cc <HAL_UART_IRQHandler+0x228>
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80062a2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80062a4:	687a      	ldr	r2, [r7, #4]
 80062a6:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80062a8:	4610      	mov	r0, r2
 80062aa:	4798      	blx	r3
 80062ac:	e00e      	b.n	80062cc <HAL_UART_IRQHandler+0x228>
 80062ae:	6878      	ldr	r0, [r7, #4]
 80062b0:	f000 f9a8 	bl	8006604 <HAL_UART_ErrorCallback>
 80062b4:	e00a      	b.n	80062cc <HAL_UART_IRQHandler+0x228>
 80062b6:	6878      	ldr	r0, [r7, #4]
 80062b8:	f000 f9a4 	bl	8006604 <HAL_UART_ErrorCallback>
 80062bc:	e006      	b.n	80062cc <HAL_UART_IRQHandler+0x228>
 80062be:	6878      	ldr	r0, [r7, #4]
 80062c0:	f000 f9a0 	bl	8006604 <HAL_UART_ErrorCallback>
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	2200      	movs	r2, #0
 80062c8:	645a      	str	r2, [r3, #68]	@ 0x44
 80062ca:	e175      	b.n	80065b8 <HAL_UART_IRQHandler+0x514>
 80062cc:	bf00      	nop
 80062ce:	e173      	b.n	80065b8 <HAL_UART_IRQHandler+0x514>
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80062d4:	2b01      	cmp	r3, #1
 80062d6:	f040 814f 	bne.w	8006578 <HAL_UART_IRQHandler+0x4d4>
 80062da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80062de:	f003 0310 	and.w	r3, r3, #16
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	f000 8148 	beq.w	8006578 <HAL_UART_IRQHandler+0x4d4>
 80062e8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80062ec:	f003 0310 	and.w	r3, r3, #16
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	f000 8141 	beq.w	8006578 <HAL_UART_IRQHandler+0x4d4>
 80062f6:	2300      	movs	r3, #0
 80062f8:	60bb      	str	r3, [r7, #8]
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	681b      	ldr	r3, [r3, #0]
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	60bb      	str	r3, [r7, #8]
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	685b      	ldr	r3, [r3, #4]
 8006308:	60bb      	str	r3, [r7, #8]
 800630a:	68bb      	ldr	r3, [r7, #8]
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	695b      	ldr	r3, [r3, #20]
 8006312:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006316:	2b40      	cmp	r3, #64	@ 0x40
 8006318:	f040 80b6 	bne.w	8006488 <HAL_UART_IRQHandler+0x3e4>
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006320:	681b      	ldr	r3, [r3, #0]
 8006322:	685b      	ldr	r3, [r3, #4]
 8006324:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006328:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800632c:	2b00      	cmp	r3, #0
 800632e:	f000 8145 	beq.w	80065bc <HAL_UART_IRQHandler+0x518>
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006336:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800633a:	429a      	cmp	r2, r3
 800633c:	f080 813e 	bcs.w	80065bc <HAL_UART_IRQHandler+0x518>
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006346:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800634c:	69db      	ldr	r3, [r3, #28]
 800634e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006352:	f000 8088 	beq.w	8006466 <HAL_UART_IRQHandler+0x3c2>
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	681b      	ldr	r3, [r3, #0]
 800635a:	330c      	adds	r3, #12
 800635c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006360:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006364:	e853 3f00 	ldrex	r3, [r3]
 8006368:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800636c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006370:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006374:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	330c      	adds	r3, #12
 800637e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8006382:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006386:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800638a:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800638e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006392:	e841 2300 	strex	r3, r2, [r1]
 8006396:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800639a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800639e:	2b00      	cmp	r3, #0
 80063a0:	d1d9      	bne.n	8006356 <HAL_UART_IRQHandler+0x2b2>
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	681b      	ldr	r3, [r3, #0]
 80063a6:	3314      	adds	r3, #20
 80063a8:	677b      	str	r3, [r7, #116]	@ 0x74
 80063aa:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80063ac:	e853 3f00 	ldrex	r3, [r3]
 80063b0:	673b      	str	r3, [r7, #112]	@ 0x70
 80063b2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80063b4:	f023 0301 	bic.w	r3, r3, #1
 80063b8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80063bc:	687b      	ldr	r3, [r7, #4]
 80063be:	681b      	ldr	r3, [r3, #0]
 80063c0:	3314      	adds	r3, #20
 80063c2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80063c6:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80063ca:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80063cc:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80063ce:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80063d2:	e841 2300 	strex	r3, r2, [r1]
 80063d6:	67bb      	str	r3, [r7, #120]	@ 0x78
 80063d8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80063da:	2b00      	cmp	r3, #0
 80063dc:	d1e1      	bne.n	80063a2 <HAL_UART_IRQHandler+0x2fe>
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	681b      	ldr	r3, [r3, #0]
 80063e2:	3314      	adds	r3, #20
 80063e4:	663b      	str	r3, [r7, #96]	@ 0x60
 80063e6:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80063e8:	e853 3f00 	ldrex	r3, [r3]
 80063ec:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80063ee:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80063f0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80063f4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	3314      	adds	r3, #20
 80063fe:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8006402:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006404:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006406:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006408:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800640a:	e841 2300 	strex	r3, r2, [r1]
 800640e:	667b      	str	r3, [r7, #100]	@ 0x64
 8006410:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006412:	2b00      	cmp	r3, #0
 8006414:	d1e3      	bne.n	80063de <HAL_UART_IRQHandler+0x33a>
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	2220      	movs	r2, #32
 800641a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	2200      	movs	r2, #0
 8006422:	631a      	str	r2, [r3, #48]	@ 0x30
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	330c      	adds	r3, #12
 800642a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800642c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800642e:	e853 3f00 	ldrex	r3, [r3]
 8006432:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006434:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006436:	f023 0310 	bic.w	r3, r3, #16
 800643a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	681b      	ldr	r3, [r3, #0]
 8006442:	330c      	adds	r3, #12
 8006444:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8006448:	65ba      	str	r2, [r7, #88]	@ 0x58
 800644a:	657b      	str	r3, [r7, #84]	@ 0x54
 800644c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800644e:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006450:	e841 2300 	strex	r3, r2, [r1]
 8006454:	653b      	str	r3, [r7, #80]	@ 0x50
 8006456:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006458:	2b00      	cmp	r3, #0
 800645a:	d1e3      	bne.n	8006424 <HAL_UART_IRQHandler+0x380>
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006460:	4618      	mov	r0, r3
 8006462:	f7fd fa83 	bl	800396c <HAL_DMA_Abort>
 8006466:	687b      	ldr	r3, [r7, #4]
 8006468:	2202      	movs	r2, #2
 800646a:	635a      	str	r2, [r3, #52]	@ 0x34
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006474:	b29b      	uxth	r3, r3
 8006476:	1ad3      	subs	r3, r2, r3
 8006478:	b29b      	uxth	r3, r3
 800647a:	4619      	mov	r1, r3
 800647c:	6878      	ldr	r0, [r7, #4]
 800647e:	f7fa f837 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006482:	e09b      	b.n	80065bc <HAL_UART_IRQHandler+0x518>
 8006484:	08006a5f 	.word	0x08006a5f
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006490:	b29b      	uxth	r3, r3
 8006492:	1ad3      	subs	r3, r2, r3
 8006494:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800649c:	b29b      	uxth	r3, r3
 800649e:	2b00      	cmp	r3, #0
 80064a0:	f000 808e 	beq.w	80065c0 <HAL_UART_IRQHandler+0x51c>
 80064a4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80064a8:	2b00      	cmp	r3, #0
 80064aa:	f000 8089 	beq.w	80065c0 <HAL_UART_IRQHandler+0x51c>
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	681b      	ldr	r3, [r3, #0]
 80064b2:	330c      	adds	r3, #12
 80064b4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80064b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80064b8:	e853 3f00 	ldrex	r3, [r3]
 80064bc:	637b      	str	r3, [r7, #52]	@ 0x34
 80064be:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80064c0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80064c4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	330c      	adds	r3, #12
 80064ce:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80064d2:	647a      	str	r2, [r7, #68]	@ 0x44
 80064d4:	643b      	str	r3, [r7, #64]	@ 0x40
 80064d6:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80064d8:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80064da:	e841 2300 	strex	r3, r2, [r1]
 80064de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80064e0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80064e2:	2b00      	cmp	r3, #0
 80064e4:	d1e3      	bne.n	80064ae <HAL_UART_IRQHandler+0x40a>
 80064e6:	687b      	ldr	r3, [r7, #4]
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	3314      	adds	r3, #20
 80064ec:	627b      	str	r3, [r7, #36]	@ 0x24
 80064ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80064f0:	e853 3f00 	ldrex	r3, [r3]
 80064f4:	623b      	str	r3, [r7, #32]
 80064f6:	6a3b      	ldr	r3, [r7, #32]
 80064f8:	f023 0301 	bic.w	r3, r3, #1
 80064fc:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	3314      	adds	r3, #20
 8006506:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800650a:	633a      	str	r2, [r7, #48]	@ 0x30
 800650c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800650e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006510:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006512:	e841 2300 	strex	r3, r2, [r1]
 8006516:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006518:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800651a:	2b00      	cmp	r3, #0
 800651c:	d1e3      	bne.n	80064e6 <HAL_UART_IRQHandler+0x442>
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	2220      	movs	r2, #32
 8006522:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	2200      	movs	r2, #0
 800652a:	631a      	str	r2, [r3, #48]	@ 0x30
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	330c      	adds	r3, #12
 8006532:	613b      	str	r3, [r7, #16]
 8006534:	693b      	ldr	r3, [r7, #16]
 8006536:	e853 3f00 	ldrex	r3, [r3]
 800653a:	60fb      	str	r3, [r7, #12]
 800653c:	68fb      	ldr	r3, [r7, #12]
 800653e:	f023 0310 	bic.w	r3, r3, #16
 8006542:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	681b      	ldr	r3, [r3, #0]
 800654a:	330c      	adds	r3, #12
 800654c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8006550:	61fa      	str	r2, [r7, #28]
 8006552:	61bb      	str	r3, [r7, #24]
 8006554:	69b9      	ldr	r1, [r7, #24]
 8006556:	69fa      	ldr	r2, [r7, #28]
 8006558:	e841 2300 	strex	r3, r2, [r1]
 800655c:	617b      	str	r3, [r7, #20]
 800655e:	697b      	ldr	r3, [r7, #20]
 8006560:	2b00      	cmp	r3, #0
 8006562:	d1e3      	bne.n	800652c <HAL_UART_IRQHandler+0x488>
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	2202      	movs	r2, #2
 8006568:	635a      	str	r2, [r3, #52]	@ 0x34
 800656a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800656e:	4619      	mov	r1, r3
 8006570:	6878      	ldr	r0, [r7, #4]
 8006572:	f7f9 ffbd 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006576:	e023      	b.n	80065c0 <HAL_UART_IRQHandler+0x51c>
 8006578:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800657c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006580:	2b00      	cmp	r3, #0
 8006582:	d009      	beq.n	8006598 <HAL_UART_IRQHandler+0x4f4>
 8006584:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006588:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800658c:	2b00      	cmp	r3, #0
 800658e:	d003      	beq.n	8006598 <HAL_UART_IRQHandler+0x4f4>
 8006590:	6878      	ldr	r0, [r7, #4]
 8006592:	f000 fa78 	bl	8006a86 <UART_Transmit_IT>
 8006596:	e014      	b.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 8006598:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800659c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80065a0:	2b00      	cmp	r3, #0
 80065a2:	d00e      	beq.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 80065a4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80065a8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80065ac:	2b00      	cmp	r3, #0
 80065ae:	d008      	beq.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 80065b0:	6878      	ldr	r0, [r7, #4]
 80065b2:	f000 fab8 	bl	8006b26 <UART_EndTransmit_IT>
 80065b6:	e004      	b.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 80065b8:	bf00      	nop
 80065ba:	e002      	b.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 80065bc:	bf00      	nop
 80065be:	e000      	b.n	80065c2 <HAL_UART_IRQHandler+0x51e>
 80065c0:	bf00      	nop
 80065c2:	37e8      	adds	r7, #232	@ 0xe8
 80065c4:	46bd      	mov	sp, r7
 80065c6:	bd80      	pop	{r7, pc}

080065c8 <HAL_UART_TxCpltCallback>:
 80065c8:	b480      	push	{r7}
 80065ca:	b083      	sub	sp, #12
 80065cc:	af00      	add	r7, sp, #0
 80065ce:	6078      	str	r0, [r7, #4]
 80065d0:	bf00      	nop
 80065d2:	370c      	adds	r7, #12
 80065d4:	46bd      	mov	sp, r7
 80065d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065da:	4770      	bx	lr

080065dc <HAL_UART_RxCpltCallback>:
 80065dc:	b480      	push	{r7}
 80065de:	b083      	sub	sp, #12
 80065e0:	af00      	add	r7, sp, #0
 80065e2:	6078      	str	r0, [r7, #4]
 80065e4:	bf00      	nop
 80065e6:	370c      	adds	r7, #12
 80065e8:	46bd      	mov	sp, r7
 80065ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ee:	4770      	bx	lr

080065f0 <HAL_UART_RxHalfCpltCallback>:
 80065f0:	b480      	push	{r7}
 80065f2:	b083      	sub	sp, #12
 80065f4:	af00      	add	r7, sp, #0
 80065f6:	6078      	str	r0, [r7, #4]
 80065f8:	bf00      	nop
 80065fa:	370c      	adds	r7, #12
 80065fc:	46bd      	mov	sp, r7
 80065fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006602:	4770      	bx	lr

08006604 <HAL_UART_ErrorCallback>:
 8006604:	b480      	push	{r7}
 8006606:	b083      	sub	sp, #12
 8006608:	af00      	add	r7, sp, #0
 800660a:	6078      	str	r0, [r7, #4]
 800660c:	bf00      	nop
 800660e:	370c      	adds	r7, #12
 8006610:	46bd      	mov	sp, r7
 8006612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006616:	4770      	bx	lr

08006618 <UART_DMAReceiveCplt>:
 8006618:	b580      	push	{r7, lr}
 800661a:	b09c      	sub	sp, #112	@ 0x70
 800661c:	af00      	add	r7, sp, #0
 800661e:	6078      	str	r0, [r7, #4]
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006624:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	681b      	ldr	r3, [r3, #0]
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006630:	2b00      	cmp	r3, #0
 8006632:	d172      	bne.n	800671a <UART_DMAReceiveCplt+0x102>
 8006634:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006636:	2200      	movs	r2, #0
 8006638:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800663a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800663c:	681b      	ldr	r3, [r3, #0]
 800663e:	330c      	adds	r3, #12
 8006640:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006642:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006644:	e853 3f00 	ldrex	r3, [r3]
 8006648:	64bb      	str	r3, [r7, #72]	@ 0x48
 800664a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800664c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006650:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006652:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006654:	681b      	ldr	r3, [r3, #0]
 8006656:	330c      	adds	r3, #12
 8006658:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 800665a:	65ba      	str	r2, [r7, #88]	@ 0x58
 800665c:	657b      	str	r3, [r7, #84]	@ 0x54
 800665e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006660:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006662:	e841 2300 	strex	r3, r2, [r1]
 8006666:	653b      	str	r3, [r7, #80]	@ 0x50
 8006668:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800666a:	2b00      	cmp	r3, #0
 800666c:	d1e5      	bne.n	800663a <UART_DMAReceiveCplt+0x22>
 800666e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	3314      	adds	r3, #20
 8006674:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006676:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006678:	e853 3f00 	ldrex	r3, [r3]
 800667c:	637b      	str	r3, [r7, #52]	@ 0x34
 800667e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006680:	f023 0301 	bic.w	r3, r3, #1
 8006684:	667b      	str	r3, [r7, #100]	@ 0x64
 8006686:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	3314      	adds	r3, #20
 800668c:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800668e:	647a      	str	r2, [r7, #68]	@ 0x44
 8006690:	643b      	str	r3, [r7, #64]	@ 0x40
 8006692:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006694:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006696:	e841 2300 	strex	r3, r2, [r1]
 800669a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800669c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800669e:	2b00      	cmp	r3, #0
 80066a0:	d1e5      	bne.n	800666e <UART_DMAReceiveCplt+0x56>
 80066a2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	3314      	adds	r3, #20
 80066a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80066aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066ac:	e853 3f00 	ldrex	r3, [r3]
 80066b0:	623b      	str	r3, [r7, #32]
 80066b2:	6a3b      	ldr	r3, [r7, #32]
 80066b4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80066b8:	663b      	str	r3, [r7, #96]	@ 0x60
 80066ba:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	3314      	adds	r3, #20
 80066c0:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 80066c2:	633a      	str	r2, [r7, #48]	@ 0x30
 80066c4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80066c6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80066c8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80066ca:	e841 2300 	strex	r3, r2, [r1]
 80066ce:	62bb      	str	r3, [r7, #40]	@ 0x28
 80066d0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80066d2:	2b00      	cmp	r3, #0
 80066d4:	d1e5      	bne.n	80066a2 <UART_DMAReceiveCplt+0x8a>
 80066d6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80066d8:	2220      	movs	r2, #32
 80066da:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80066de:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80066e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066e2:	2b01      	cmp	r3, #1
 80066e4:	d119      	bne.n	800671a <UART_DMAReceiveCplt+0x102>
 80066e6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	330c      	adds	r3, #12
 80066ec:	613b      	str	r3, [r7, #16]
 80066ee:	693b      	ldr	r3, [r7, #16]
 80066f0:	e853 3f00 	ldrex	r3, [r3]
 80066f4:	60fb      	str	r3, [r7, #12]
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	f023 0310 	bic.w	r3, r3, #16
 80066fc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80066fe:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006700:	681b      	ldr	r3, [r3, #0]
 8006702:	330c      	adds	r3, #12
 8006704:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8006706:	61fa      	str	r2, [r7, #28]
 8006708:	61bb      	str	r3, [r7, #24]
 800670a:	69b9      	ldr	r1, [r7, #24]
 800670c:	69fa      	ldr	r2, [r7, #28]
 800670e:	e841 2300 	strex	r3, r2, [r1]
 8006712:	617b      	str	r3, [r7, #20]
 8006714:	697b      	ldr	r3, [r7, #20]
 8006716:	2b00      	cmp	r3, #0
 8006718:	d1e5      	bne.n	80066e6 <UART_DMAReceiveCplt+0xce>
 800671a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800671c:	2200      	movs	r2, #0
 800671e:	635a      	str	r2, [r3, #52]	@ 0x34
 8006720:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006722:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006724:	2b01      	cmp	r3, #1
 8006726:	d106      	bne.n	8006736 <UART_DMAReceiveCplt+0x11e>
 8006728:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800672a:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800672c:	4619      	mov	r1, r3
 800672e:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8006730:	f7f9 fede 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006734:	e002      	b.n	800673c <UART_DMAReceiveCplt+0x124>
 8006736:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8006738:	f7ff ff50 	bl	80065dc <HAL_UART_RxCpltCallback>
 800673c:	bf00      	nop
 800673e:	3770      	adds	r7, #112	@ 0x70
 8006740:	46bd      	mov	sp, r7
 8006742:	bd80      	pop	{r7, pc}

08006744 <UART_DMARxHalfCplt>:
 8006744:	b580      	push	{r7, lr}
 8006746:	b084      	sub	sp, #16
 8006748:	af00      	add	r7, sp, #0
 800674a:	6078      	str	r0, [r7, #4]
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006750:	60fb      	str	r3, [r7, #12]
 8006752:	68fb      	ldr	r3, [r7, #12]
 8006754:	2201      	movs	r2, #1
 8006756:	635a      	str	r2, [r3, #52]	@ 0x34
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800675c:	2b01      	cmp	r3, #1
 800675e:	d108      	bne.n	8006772 <UART_DMARxHalfCplt+0x2e>
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006764:	085b      	lsrs	r3, r3, #1
 8006766:	b29b      	uxth	r3, r3
 8006768:	4619      	mov	r1, r3
 800676a:	68f8      	ldr	r0, [r7, #12]
 800676c:	f7f9 fec0 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006770:	e002      	b.n	8006778 <UART_DMARxHalfCplt+0x34>
 8006772:	68f8      	ldr	r0, [r7, #12]
 8006774:	f7ff ff3c 	bl	80065f0 <HAL_UART_RxHalfCpltCallback>
 8006778:	bf00      	nop
 800677a:	3710      	adds	r7, #16
 800677c:	46bd      	mov	sp, r7
 800677e:	bd80      	pop	{r7, pc}

08006780 <UART_DMAError>:
 8006780:	b580      	push	{r7, lr}
 8006782:	b084      	sub	sp, #16
 8006784:	af00      	add	r7, sp, #0
 8006786:	6078      	str	r0, [r7, #4]
 8006788:	2300      	movs	r3, #0
 800678a:	60fb      	str	r3, [r7, #12]
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006790:	60bb      	str	r3, [r7, #8]
 8006792:	68bb      	ldr	r3, [r7, #8]
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	695b      	ldr	r3, [r3, #20]
 8006798:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800679c:	2b80      	cmp	r3, #128	@ 0x80
 800679e:	bf0c      	ite	eq
 80067a0:	2301      	moveq	r3, #1
 80067a2:	2300      	movne	r3, #0
 80067a4:	b2db      	uxtb	r3, r3
 80067a6:	60fb      	str	r3, [r7, #12]
 80067a8:	68bb      	ldr	r3, [r7, #8]
 80067aa:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80067ae:	b2db      	uxtb	r3, r3
 80067b0:	2b21      	cmp	r3, #33	@ 0x21
 80067b2:	d108      	bne.n	80067c6 <UART_DMAError+0x46>
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	2b00      	cmp	r3, #0
 80067b8:	d005      	beq.n	80067c6 <UART_DMAError+0x46>
 80067ba:	68bb      	ldr	r3, [r7, #8]
 80067bc:	2200      	movs	r2, #0
 80067be:	84da      	strh	r2, [r3, #38]	@ 0x26
 80067c0:	68b8      	ldr	r0, [r7, #8]
 80067c2:	f000 f8c1 	bl	8006948 <UART_EndTxTransfer>
 80067c6:	68bb      	ldr	r3, [r7, #8]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	695b      	ldr	r3, [r3, #20]
 80067cc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067d0:	2b40      	cmp	r3, #64	@ 0x40
 80067d2:	bf0c      	ite	eq
 80067d4:	2301      	moveq	r3, #1
 80067d6:	2300      	movne	r3, #0
 80067d8:	b2db      	uxtb	r3, r3
 80067da:	60fb      	str	r3, [r7, #12]
 80067dc:	68bb      	ldr	r3, [r7, #8]
 80067de:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80067e2:	b2db      	uxtb	r3, r3
 80067e4:	2b22      	cmp	r3, #34	@ 0x22
 80067e6:	d108      	bne.n	80067fa <UART_DMAError+0x7a>
 80067e8:	68fb      	ldr	r3, [r7, #12]
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d005      	beq.n	80067fa <UART_DMAError+0x7a>
 80067ee:	68bb      	ldr	r3, [r7, #8]
 80067f0:	2200      	movs	r2, #0
 80067f2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80067f4:	68b8      	ldr	r0, [r7, #8]
 80067f6:	f000 f8cf 	bl	8006998 <UART_EndRxTransfer>
 80067fa:	68bb      	ldr	r3, [r7, #8]
 80067fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80067fe:	f043 0210 	orr.w	r2, r3, #16
 8006802:	68bb      	ldr	r3, [r7, #8]
 8006804:	645a      	str	r2, [r3, #68]	@ 0x44
 8006806:	68b8      	ldr	r0, [r7, #8]
 8006808:	f7ff fefc 	bl	8006604 <HAL_UART_ErrorCallback>
 800680c:	bf00      	nop
 800680e:	3710      	adds	r7, #16
 8006810:	46bd      	mov	sp, r7
 8006812:	bd80      	pop	{r7, pc}

08006814 <UART_Start_Receive_DMA>:
 8006814:	b580      	push	{r7, lr}
 8006816:	b098      	sub	sp, #96	@ 0x60
 8006818:	af00      	add	r7, sp, #0
 800681a:	60f8      	str	r0, [r7, #12]
 800681c:	60b9      	str	r1, [r7, #8]
 800681e:	4613      	mov	r3, r2
 8006820:	80fb      	strh	r3, [r7, #6]
 8006822:	68ba      	ldr	r2, [r7, #8]
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	629a      	str	r2, [r3, #40]	@ 0x28
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	88fa      	ldrh	r2, [r7, #6]
 800682c:	859a      	strh	r2, [r3, #44]	@ 0x2c
 800682e:	68fb      	ldr	r3, [r7, #12]
 8006830:	2200      	movs	r2, #0
 8006832:	645a      	str	r2, [r3, #68]	@ 0x44
 8006834:	68fb      	ldr	r3, [r7, #12]
 8006836:	2222      	movs	r2, #34	@ 0x22
 8006838:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800683c:	68fb      	ldr	r3, [r7, #12]
 800683e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006840:	4a3e      	ldr	r2, [pc, #248]	@ (800693c <UART_Start_Receive_DMA+0x128>)
 8006842:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006844:	68fb      	ldr	r3, [r7, #12]
 8006846:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006848:	4a3d      	ldr	r2, [pc, #244]	@ (8006940 <UART_Start_Receive_DMA+0x12c>)
 800684a:	641a      	str	r2, [r3, #64]	@ 0x40
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006850:	4a3c      	ldr	r2, [pc, #240]	@ (8006944 <UART_Start_Receive_DMA+0x130>)
 8006852:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006854:	68fb      	ldr	r3, [r7, #12]
 8006856:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006858:	2200      	movs	r2, #0
 800685a:	651a      	str	r2, [r3, #80]	@ 0x50
 800685c:	f107 0308 	add.w	r3, r7, #8
 8006860:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006862:	68fb      	ldr	r3, [r7, #12]
 8006864:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8006866:	68fb      	ldr	r3, [r7, #12]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	3304      	adds	r3, #4
 800686c:	4619      	mov	r1, r3
 800686e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006870:	681a      	ldr	r2, [r3, #0]
 8006872:	88fb      	ldrh	r3, [r7, #6]
 8006874:	f7fd f822 	bl	80038bc <HAL_DMA_Start_IT>
 8006878:	2300      	movs	r3, #0
 800687a:	613b      	str	r3, [r7, #16]
 800687c:	68fb      	ldr	r3, [r7, #12]
 800687e:	681b      	ldr	r3, [r3, #0]
 8006880:	681b      	ldr	r3, [r3, #0]
 8006882:	613b      	str	r3, [r7, #16]
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	685b      	ldr	r3, [r3, #4]
 800688a:	613b      	str	r3, [r7, #16]
 800688c:	693b      	ldr	r3, [r7, #16]
 800688e:	68fb      	ldr	r3, [r7, #12]
 8006890:	691b      	ldr	r3, [r3, #16]
 8006892:	2b00      	cmp	r3, #0
 8006894:	d019      	beq.n	80068ca <UART_Start_Receive_DMA+0xb6>
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	330c      	adds	r3, #12
 800689c:	643b      	str	r3, [r7, #64]	@ 0x40
 800689e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80068a0:	e853 3f00 	ldrex	r3, [r3]
 80068a4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068a6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80068a8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80068ac:	65bb      	str	r3, [r7, #88]	@ 0x58
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	330c      	adds	r3, #12
 80068b4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80068b6:	64fa      	str	r2, [r7, #76]	@ 0x4c
 80068b8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80068ba:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80068bc:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80068be:	e841 2300 	strex	r3, r2, [r1]
 80068c2:	647b      	str	r3, [r7, #68]	@ 0x44
 80068c4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80068c6:	2b00      	cmp	r3, #0
 80068c8:	d1e5      	bne.n	8006896 <UART_Start_Receive_DMA+0x82>
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	3314      	adds	r3, #20
 80068d0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80068d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80068d4:	e853 3f00 	ldrex	r3, [r3]
 80068d8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80068da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80068dc:	f043 0301 	orr.w	r3, r3, #1
 80068e0:	657b      	str	r3, [r7, #84]	@ 0x54
 80068e2:	68fb      	ldr	r3, [r7, #12]
 80068e4:	681b      	ldr	r3, [r3, #0]
 80068e6:	3314      	adds	r3, #20
 80068e8:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80068ea:	63ba      	str	r2, [r7, #56]	@ 0x38
 80068ec:	637b      	str	r3, [r7, #52]	@ 0x34
 80068ee:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 80068f0:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80068f2:	e841 2300 	strex	r3, r2, [r1]
 80068f6:	633b      	str	r3, [r7, #48]	@ 0x30
 80068f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	d1e5      	bne.n	80068ca <UART_Start_Receive_DMA+0xb6>
 80068fe:	68fb      	ldr	r3, [r7, #12]
 8006900:	681b      	ldr	r3, [r3, #0]
 8006902:	3314      	adds	r3, #20
 8006904:	61bb      	str	r3, [r7, #24]
 8006906:	69bb      	ldr	r3, [r7, #24]
 8006908:	e853 3f00 	ldrex	r3, [r3]
 800690c:	617b      	str	r3, [r7, #20]
 800690e:	697b      	ldr	r3, [r7, #20]
 8006910:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006914:	653b      	str	r3, [r7, #80]	@ 0x50
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	681b      	ldr	r3, [r3, #0]
 800691a:	3314      	adds	r3, #20
 800691c:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800691e:	627a      	str	r2, [r7, #36]	@ 0x24
 8006920:	623b      	str	r3, [r7, #32]
 8006922:	6a39      	ldr	r1, [r7, #32]
 8006924:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006926:	e841 2300 	strex	r3, r2, [r1]
 800692a:	61fb      	str	r3, [r7, #28]
 800692c:	69fb      	ldr	r3, [r7, #28]
 800692e:	2b00      	cmp	r3, #0
 8006930:	d1e5      	bne.n	80068fe <UART_Start_Receive_DMA+0xea>
 8006932:	2300      	movs	r3, #0
 8006934:	4618      	mov	r0, r3
 8006936:	3760      	adds	r7, #96	@ 0x60
 8006938:	46bd      	mov	sp, r7
 800693a:	bd80      	pop	{r7, pc}
 800693c:	08006619 	.word	0x08006619
 8006940:	08006745 	.word	0x08006745
 8006944:	08006781 	.word	0x08006781

08006948 <UART_EndTxTransfer>:
 8006948:	b480      	push	{r7}
 800694a:	b089      	sub	sp, #36	@ 0x24
 800694c:	af00      	add	r7, sp, #0
 800694e:	6078      	str	r0, [r7, #4]
 8006950:	687b      	ldr	r3, [r7, #4]
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	330c      	adds	r3, #12
 8006956:	60fb      	str	r3, [r7, #12]
 8006958:	68fb      	ldr	r3, [r7, #12]
 800695a:	e853 3f00 	ldrex	r3, [r3]
 800695e:	60bb      	str	r3, [r7, #8]
 8006960:	68bb      	ldr	r3, [r7, #8]
 8006962:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8006966:	61fb      	str	r3, [r7, #28]
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	330c      	adds	r3, #12
 800696e:	69fa      	ldr	r2, [r7, #28]
 8006970:	61ba      	str	r2, [r7, #24]
 8006972:	617b      	str	r3, [r7, #20]
 8006974:	6979      	ldr	r1, [r7, #20]
 8006976:	69ba      	ldr	r2, [r7, #24]
 8006978:	e841 2300 	strex	r3, r2, [r1]
 800697c:	613b      	str	r3, [r7, #16]
 800697e:	693b      	ldr	r3, [r7, #16]
 8006980:	2b00      	cmp	r3, #0
 8006982:	d1e5      	bne.n	8006950 <UART_EndTxTransfer+0x8>
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	2220      	movs	r2, #32
 8006988:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800698c:	bf00      	nop
 800698e:	3724      	adds	r7, #36	@ 0x24
 8006990:	46bd      	mov	sp, r7
 8006992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006996:	4770      	bx	lr

08006998 <UART_EndRxTransfer>:
 8006998:	b480      	push	{r7}
 800699a:	b095      	sub	sp, #84	@ 0x54
 800699c:	af00      	add	r7, sp, #0
 800699e:	6078      	str	r0, [r7, #4]
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	330c      	adds	r3, #12
 80069a6:	637b      	str	r3, [r7, #52]	@ 0x34
 80069a8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80069aa:	e853 3f00 	ldrex	r3, [r3]
 80069ae:	633b      	str	r3, [r7, #48]	@ 0x30
 80069b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80069b2:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80069b6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	330c      	adds	r3, #12
 80069be:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80069c0:	643a      	str	r2, [r7, #64]	@ 0x40
 80069c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80069c4:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80069c6:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80069c8:	e841 2300 	strex	r3, r2, [r1]
 80069cc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80069ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80069d0:	2b00      	cmp	r3, #0
 80069d2:	d1e5      	bne.n	80069a0 <UART_EndRxTransfer+0x8>
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	681b      	ldr	r3, [r3, #0]
 80069d8:	3314      	adds	r3, #20
 80069da:	623b      	str	r3, [r7, #32]
 80069dc:	6a3b      	ldr	r3, [r7, #32]
 80069de:	e853 3f00 	ldrex	r3, [r3]
 80069e2:	61fb      	str	r3, [r7, #28]
 80069e4:	69fb      	ldr	r3, [r7, #28]
 80069e6:	f023 0301 	bic.w	r3, r3, #1
 80069ea:	64bb      	str	r3, [r7, #72]	@ 0x48
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	3314      	adds	r3, #20
 80069f2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80069f4:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80069f6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80069f8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80069fa:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80069fc:	e841 2300 	strex	r3, r2, [r1]
 8006a00:	627b      	str	r3, [r7, #36]	@ 0x24
 8006a02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	d1e5      	bne.n	80069d4 <UART_EndRxTransfer+0x3c>
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006a0c:	2b01      	cmp	r3, #1
 8006a0e:	d119      	bne.n	8006a44 <UART_EndRxTransfer+0xac>
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	330c      	adds	r3, #12
 8006a16:	60fb      	str	r3, [r7, #12]
 8006a18:	68fb      	ldr	r3, [r7, #12]
 8006a1a:	e853 3f00 	ldrex	r3, [r3]
 8006a1e:	60bb      	str	r3, [r7, #8]
 8006a20:	68bb      	ldr	r3, [r7, #8]
 8006a22:	f023 0310 	bic.w	r3, r3, #16
 8006a26:	647b      	str	r3, [r7, #68]	@ 0x44
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	330c      	adds	r3, #12
 8006a2e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006a30:	61ba      	str	r2, [r7, #24]
 8006a32:	617b      	str	r3, [r7, #20]
 8006a34:	6979      	ldr	r1, [r7, #20]
 8006a36:	69ba      	ldr	r2, [r7, #24]
 8006a38:	e841 2300 	strex	r3, r2, [r1]
 8006a3c:	613b      	str	r3, [r7, #16]
 8006a3e:	693b      	ldr	r3, [r7, #16]
 8006a40:	2b00      	cmp	r3, #0
 8006a42:	d1e5      	bne.n	8006a10 <UART_EndRxTransfer+0x78>
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	2220      	movs	r2, #32
 8006a48:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	2200      	movs	r2, #0
 8006a50:	631a      	str	r2, [r3, #48]	@ 0x30
 8006a52:	bf00      	nop
 8006a54:	3754      	adds	r7, #84	@ 0x54
 8006a56:	46bd      	mov	sp, r7
 8006a58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a5c:	4770      	bx	lr

08006a5e <UART_DMAAbortOnError>:
 8006a5e:	b580      	push	{r7, lr}
 8006a60:	b084      	sub	sp, #16
 8006a62:	af00      	add	r7, sp, #0
 8006a64:	6078      	str	r0, [r7, #4]
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a6a:	60fb      	str	r3, [r7, #12]
 8006a6c:	68fb      	ldr	r3, [r7, #12]
 8006a6e:	2200      	movs	r2, #0
 8006a70:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	2200      	movs	r2, #0
 8006a76:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006a78:	68f8      	ldr	r0, [r7, #12]
 8006a7a:	f7ff fdc3 	bl	8006604 <HAL_UART_ErrorCallback>
 8006a7e:	bf00      	nop
 8006a80:	3710      	adds	r7, #16
 8006a82:	46bd      	mov	sp, r7
 8006a84:	bd80      	pop	{r7, pc}

08006a86 <UART_Transmit_IT>:
 8006a86:	b480      	push	{r7}
 8006a88:	b085      	sub	sp, #20
 8006a8a:	af00      	add	r7, sp, #0
 8006a8c:	6078      	str	r0, [r7, #4]
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006a94:	b2db      	uxtb	r3, r3
 8006a96:	2b21      	cmp	r3, #33	@ 0x21
 8006a98:	d13e      	bne.n	8006b18 <UART_Transmit_IT+0x92>
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	689b      	ldr	r3, [r3, #8]
 8006a9e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006aa2:	d114      	bne.n	8006ace <UART_Transmit_IT+0x48>
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	691b      	ldr	r3, [r3, #16]
 8006aa8:	2b00      	cmp	r3, #0
 8006aaa:	d110      	bne.n	8006ace <UART_Transmit_IT+0x48>
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	6a1b      	ldr	r3, [r3, #32]
 8006ab0:	60fb      	str	r3, [r7, #12]
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	881b      	ldrh	r3, [r3, #0]
 8006ab6:	461a      	mov	r2, r3
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006ac0:	605a      	str	r2, [r3, #4]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	6a1b      	ldr	r3, [r3, #32]
 8006ac6:	1c9a      	adds	r2, r3, #2
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	621a      	str	r2, [r3, #32]
 8006acc:	e008      	b.n	8006ae0 <UART_Transmit_IT+0x5a>
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	6a1b      	ldr	r3, [r3, #32]
 8006ad2:	1c59      	adds	r1, r3, #1
 8006ad4:	687a      	ldr	r2, [r7, #4]
 8006ad6:	6211      	str	r1, [r2, #32]
 8006ad8:	781a      	ldrb	r2, [r3, #0]
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	681b      	ldr	r3, [r3, #0]
 8006ade:	605a      	str	r2, [r3, #4]
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006ae4:	b29b      	uxth	r3, r3
 8006ae6:	3b01      	subs	r3, #1
 8006ae8:	b29b      	uxth	r3, r3
 8006aea:	687a      	ldr	r2, [r7, #4]
 8006aec:	4619      	mov	r1, r3
 8006aee:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	d10f      	bne.n	8006b14 <UART_Transmit_IT+0x8e>
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	68da      	ldr	r2, [r3, #12]
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8006b02:	60da      	str	r2, [r3, #12]
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	68da      	ldr	r2, [r3, #12]
 8006b0a:	687b      	ldr	r3, [r7, #4]
 8006b0c:	681b      	ldr	r3, [r3, #0]
 8006b0e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006b12:	60da      	str	r2, [r3, #12]
 8006b14:	2300      	movs	r3, #0
 8006b16:	e000      	b.n	8006b1a <UART_Transmit_IT+0x94>
 8006b18:	2302      	movs	r3, #2
 8006b1a:	4618      	mov	r0, r3
 8006b1c:	3714      	adds	r7, #20
 8006b1e:	46bd      	mov	sp, r7
 8006b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b24:	4770      	bx	lr

08006b26 <UART_EndTransmit_IT>:
 8006b26:	b580      	push	{r7, lr}
 8006b28:	b082      	sub	sp, #8
 8006b2a:	af00      	add	r7, sp, #0
 8006b2c:	6078      	str	r0, [r7, #4]
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	681b      	ldr	r3, [r3, #0]
 8006b32:	68da      	ldr	r2, [r3, #12]
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	681b      	ldr	r3, [r3, #0]
 8006b38:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b3c:	60da      	str	r2, [r3, #12]
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	2220      	movs	r2, #32
 8006b42:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006b46:	6878      	ldr	r0, [r7, #4]
 8006b48:	f7ff fd3e 	bl	80065c8 <HAL_UART_TxCpltCallback>
 8006b4c:	2300      	movs	r3, #0
 8006b4e:	4618      	mov	r0, r3
 8006b50:	3708      	adds	r7, #8
 8006b52:	46bd      	mov	sp, r7
 8006b54:	bd80      	pop	{r7, pc}

08006b56 <UART_Receive_IT>:
 8006b56:	b580      	push	{r7, lr}
 8006b58:	b08c      	sub	sp, #48	@ 0x30
 8006b5a:	af00      	add	r7, sp, #0
 8006b5c:	6078      	str	r0, [r7, #4]
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006b64:	b2db      	uxtb	r3, r3
 8006b66:	2b22      	cmp	r3, #34	@ 0x22
 8006b68:	f040 80ae 	bne.w	8006cc8 <UART_Receive_IT+0x172>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	689b      	ldr	r3, [r3, #8]
 8006b70:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006b74:	d117      	bne.n	8006ba6 <UART_Receive_IT+0x50>
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	691b      	ldr	r3, [r3, #16]
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d113      	bne.n	8006ba6 <UART_Receive_IT+0x50>
 8006b7e:	2300      	movs	r3, #0
 8006b80:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b86:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	681b      	ldr	r3, [r3, #0]
 8006b8c:	685b      	ldr	r3, [r3, #4]
 8006b8e:	b29b      	uxth	r3, r3
 8006b90:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006b94:	b29a      	uxth	r2, r3
 8006b96:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006b98:	801a      	strh	r2, [r3, #0]
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b9e:	1c9a      	adds	r2, r3, #2
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	629a      	str	r2, [r3, #40]	@ 0x28
 8006ba4:	e026      	b.n	8006bf4 <UART_Receive_IT+0x9e>
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006baa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006bac:	2300      	movs	r3, #0
 8006bae:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	689b      	ldr	r3, [r3, #8]
 8006bb4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006bb8:	d007      	beq.n	8006bca <UART_Receive_IT+0x74>
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	689b      	ldr	r3, [r3, #8]
 8006bbe:	2b00      	cmp	r3, #0
 8006bc0:	d10a      	bne.n	8006bd8 <UART_Receive_IT+0x82>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	691b      	ldr	r3, [r3, #16]
 8006bc6:	2b00      	cmp	r3, #0
 8006bc8:	d106      	bne.n	8006bd8 <UART_Receive_IT+0x82>
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	685b      	ldr	r3, [r3, #4]
 8006bd0:	b2da      	uxtb	r2, r3
 8006bd2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006bd4:	701a      	strb	r2, [r3, #0]
 8006bd6:	e008      	b.n	8006bea <UART_Receive_IT+0x94>
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	685b      	ldr	r3, [r3, #4]
 8006bde:	b2db      	uxtb	r3, r3
 8006be0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006be4:	b2da      	uxtb	r2, r3
 8006be6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006be8:	701a      	strb	r2, [r3, #0]
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006bee:	1c5a      	adds	r2, r3, #1
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	629a      	str	r2, [r3, #40]	@ 0x28
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006bf8:	b29b      	uxth	r3, r3
 8006bfa:	3b01      	subs	r3, #1
 8006bfc:	b29b      	uxth	r3, r3
 8006bfe:	687a      	ldr	r2, [r7, #4]
 8006c00:	4619      	mov	r1, r3
 8006c02:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d15d      	bne.n	8006cc4 <UART_Receive_IT+0x16e>
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	681b      	ldr	r3, [r3, #0]
 8006c0c:	68da      	ldr	r2, [r3, #12]
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	681b      	ldr	r3, [r3, #0]
 8006c12:	f022 0220 	bic.w	r2, r2, #32
 8006c16:	60da      	str	r2, [r3, #12]
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	68da      	ldr	r2, [r3, #12]
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8006c26:	60da      	str	r2, [r3, #12]
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	695a      	ldr	r2, [r3, #20]
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	f022 0201 	bic.w	r2, r2, #1
 8006c36:	615a      	str	r2, [r3, #20]
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	2220      	movs	r2, #32
 8006c3c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	2200      	movs	r2, #0
 8006c44:	635a      	str	r2, [r3, #52]	@ 0x34
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006c4a:	2b01      	cmp	r3, #1
 8006c4c:	d135      	bne.n	8006cba <UART_Receive_IT+0x164>
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	2200      	movs	r2, #0
 8006c52:	631a      	str	r2, [r3, #48]	@ 0x30
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	330c      	adds	r3, #12
 8006c5a:	617b      	str	r3, [r7, #20]
 8006c5c:	697b      	ldr	r3, [r7, #20]
 8006c5e:	e853 3f00 	ldrex	r3, [r3]
 8006c62:	613b      	str	r3, [r7, #16]
 8006c64:	693b      	ldr	r3, [r7, #16]
 8006c66:	f023 0310 	bic.w	r3, r3, #16
 8006c6a:	627b      	str	r3, [r7, #36]	@ 0x24
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	330c      	adds	r3, #12
 8006c72:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006c74:	623a      	str	r2, [r7, #32]
 8006c76:	61fb      	str	r3, [r7, #28]
 8006c78:	69f9      	ldr	r1, [r7, #28]
 8006c7a:	6a3a      	ldr	r2, [r7, #32]
 8006c7c:	e841 2300 	strex	r3, r2, [r1]
 8006c80:	61bb      	str	r3, [r7, #24]
 8006c82:	69bb      	ldr	r3, [r7, #24]
 8006c84:	2b00      	cmp	r3, #0
 8006c86:	d1e5      	bne.n	8006c54 <UART_Receive_IT+0xfe>
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	f003 0310 	and.w	r3, r3, #16
 8006c92:	2b10      	cmp	r3, #16
 8006c94:	d10a      	bne.n	8006cac <UART_Receive_IT+0x156>
 8006c96:	2300      	movs	r3, #0
 8006c98:	60fb      	str	r3, [r7, #12]
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	681b      	ldr	r3, [r3, #0]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	60fb      	str	r3, [r7, #12]
 8006ca2:	687b      	ldr	r3, [r7, #4]
 8006ca4:	681b      	ldr	r3, [r3, #0]
 8006ca6:	685b      	ldr	r3, [r3, #4]
 8006ca8:	60fb      	str	r3, [r7, #12]
 8006caa:	68fb      	ldr	r3, [r7, #12]
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006cb0:	4619      	mov	r1, r3
 8006cb2:	6878      	ldr	r0, [r7, #4]
 8006cb4:	f7f9 fc1c 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006cb8:	e002      	b.n	8006cc0 <UART_Receive_IT+0x16a>
 8006cba:	6878      	ldr	r0, [r7, #4]
 8006cbc:	f7ff fc8e 	bl	80065dc <HAL_UART_RxCpltCallback>
 8006cc0:	2300      	movs	r3, #0
 8006cc2:	e002      	b.n	8006cca <UART_Receive_IT+0x174>
 8006cc4:	2300      	movs	r3, #0
 8006cc6:	e000      	b.n	8006cca <UART_Receive_IT+0x174>
 8006cc8:	2302      	movs	r3, #2
 8006cca:	4618      	mov	r0, r3
 8006ccc:	3730      	adds	r7, #48	@ 0x30
 8006cce:	46bd      	mov	sp, r7
 8006cd0:	bd80      	pop	{r7, pc}
	...

08006cd4 <UART_SetConfig>:
 8006cd4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006cd8:	b0c0      	sub	sp, #256	@ 0x100
 8006cda:	af00      	add	r7, sp, #0
 8006cdc:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8006ce0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	691b      	ldr	r3, [r3, #16]
 8006ce8:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8006cec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006cf0:	68d9      	ldr	r1, [r3, #12]
 8006cf2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006cf6:	681a      	ldr	r2, [r3, #0]
 8006cf8:	ea40 0301 	orr.w	r3, r0, r1
 8006cfc:	6113      	str	r3, [r2, #16]
 8006cfe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d02:	689a      	ldr	r2, [r3, #8]
 8006d04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d08:	691b      	ldr	r3, [r3, #16]
 8006d0a:	431a      	orrs	r2, r3
 8006d0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d10:	695b      	ldr	r3, [r3, #20]
 8006d12:	431a      	orrs	r2, r3
 8006d14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d18:	69db      	ldr	r3, [r3, #28]
 8006d1a:	4313      	orrs	r3, r2
 8006d1c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8006d20:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d24:	681b      	ldr	r3, [r3, #0]
 8006d26:	68db      	ldr	r3, [r3, #12]
 8006d28:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8006d2c:	f021 010c 	bic.w	r1, r1, #12
 8006d30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d34:	681a      	ldr	r2, [r3, #0]
 8006d36:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8006d3a:	430b      	orrs	r3, r1
 8006d3c:	60d3      	str	r3, [r2, #12]
 8006d3e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	695b      	ldr	r3, [r3, #20]
 8006d46:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8006d4a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d4e:	6999      	ldr	r1, [r3, #24]
 8006d50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d54:	681a      	ldr	r2, [r3, #0]
 8006d56:	ea40 0301 	orr.w	r3, r0, r1
 8006d5a:	6153      	str	r3, [r2, #20]
 8006d5c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d60:	681a      	ldr	r2, [r3, #0]
 8006d62:	4b8f      	ldr	r3, [pc, #572]	@ (8006fa0 <UART_SetConfig+0x2cc>)
 8006d64:	429a      	cmp	r2, r3
 8006d66:	d005      	beq.n	8006d74 <UART_SetConfig+0xa0>
 8006d68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d6c:	681a      	ldr	r2, [r3, #0]
 8006d6e:	4b8d      	ldr	r3, [pc, #564]	@ (8006fa4 <UART_SetConfig+0x2d0>)
 8006d70:	429a      	cmp	r2, r3
 8006d72:	d104      	bne.n	8006d7e <UART_SetConfig+0xaa>
 8006d74:	f7fe f87c 	bl	8004e70 <HAL_RCC_GetPCLK2Freq>
 8006d78:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006d7c:	e003      	b.n	8006d86 <UART_SetConfig+0xb2>
 8006d7e:	f7fe f863 	bl	8004e48 <HAL_RCC_GetPCLK1Freq>
 8006d82:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006d86:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d8a:	69db      	ldr	r3, [r3, #28]
 8006d8c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006d90:	f040 810c 	bne.w	8006fac <UART_SetConfig+0x2d8>
 8006d94:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006d98:	2200      	movs	r2, #0
 8006d9a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8006d9e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8006da2:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8006da6:	4622      	mov	r2, r4
 8006da8:	462b      	mov	r3, r5
 8006daa:	1891      	adds	r1, r2, r2
 8006dac:	65b9      	str	r1, [r7, #88]	@ 0x58
 8006dae:	415b      	adcs	r3, r3
 8006db0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006db2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8006db6:	4621      	mov	r1, r4
 8006db8:	eb12 0801 	adds.w	r8, r2, r1
 8006dbc:	4629      	mov	r1, r5
 8006dbe:	eb43 0901 	adc.w	r9, r3, r1
 8006dc2:	f04f 0200 	mov.w	r2, #0
 8006dc6:	f04f 0300 	mov.w	r3, #0
 8006dca:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006dce:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006dd2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006dd6:	4690      	mov	r8, r2
 8006dd8:	4699      	mov	r9, r3
 8006dda:	4623      	mov	r3, r4
 8006ddc:	eb18 0303 	adds.w	r3, r8, r3
 8006de0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006de4:	462b      	mov	r3, r5
 8006de6:	eb49 0303 	adc.w	r3, r9, r3
 8006dea:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006dee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006df2:	685b      	ldr	r3, [r3, #4]
 8006df4:	2200      	movs	r2, #0
 8006df6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006dfa:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8006dfe:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8006e02:	460b      	mov	r3, r1
 8006e04:	18db      	adds	r3, r3, r3
 8006e06:	653b      	str	r3, [r7, #80]	@ 0x50
 8006e08:	4613      	mov	r3, r2
 8006e0a:	eb42 0303 	adc.w	r3, r2, r3
 8006e0e:	657b      	str	r3, [r7, #84]	@ 0x54
 8006e10:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8006e14:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8006e18:	f7f9 f9da 	bl	80001d0 <__aeabi_uldivmod>
 8006e1c:	4602      	mov	r2, r0
 8006e1e:	460b      	mov	r3, r1
 8006e20:	4b61      	ldr	r3, [pc, #388]	@ (8006fa8 <UART_SetConfig+0x2d4>)
 8006e22:	fba3 2302 	umull	r2, r3, r3, r2
 8006e26:	095b      	lsrs	r3, r3, #5
 8006e28:	011c      	lsls	r4, r3, #4
 8006e2a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006e2e:	2200      	movs	r2, #0
 8006e30:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006e34:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8006e38:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8006e3c:	4642      	mov	r2, r8
 8006e3e:	464b      	mov	r3, r9
 8006e40:	1891      	adds	r1, r2, r2
 8006e42:	64b9      	str	r1, [r7, #72]	@ 0x48
 8006e44:	415b      	adcs	r3, r3
 8006e46:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006e48:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006e4c:	4641      	mov	r1, r8
 8006e4e:	eb12 0a01 	adds.w	sl, r2, r1
 8006e52:	4649      	mov	r1, r9
 8006e54:	eb43 0b01 	adc.w	fp, r3, r1
 8006e58:	f04f 0200 	mov.w	r2, #0
 8006e5c:	f04f 0300 	mov.w	r3, #0
 8006e60:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006e64:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006e68:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006e6c:	4692      	mov	sl, r2
 8006e6e:	469b      	mov	fp, r3
 8006e70:	4643      	mov	r3, r8
 8006e72:	eb1a 0303 	adds.w	r3, sl, r3
 8006e76:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006e7a:	464b      	mov	r3, r9
 8006e7c:	eb4b 0303 	adc.w	r3, fp, r3
 8006e80:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006e84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006e88:	685b      	ldr	r3, [r3, #4]
 8006e8a:	2200      	movs	r2, #0
 8006e8c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006e90:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8006e94:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8006e98:	460b      	mov	r3, r1
 8006e9a:	18db      	adds	r3, r3, r3
 8006e9c:	643b      	str	r3, [r7, #64]	@ 0x40
 8006e9e:	4613      	mov	r3, r2
 8006ea0:	eb42 0303 	adc.w	r3, r2, r3
 8006ea4:	647b      	str	r3, [r7, #68]	@ 0x44
 8006ea6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006eaa:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8006eae:	f7f9 f98f 	bl	80001d0 <__aeabi_uldivmod>
 8006eb2:	4602      	mov	r2, r0
 8006eb4:	460b      	mov	r3, r1
 8006eb6:	4611      	mov	r1, r2
 8006eb8:	4b3b      	ldr	r3, [pc, #236]	@ (8006fa8 <UART_SetConfig+0x2d4>)
 8006eba:	fba3 2301 	umull	r2, r3, r3, r1
 8006ebe:	095b      	lsrs	r3, r3, #5
 8006ec0:	2264      	movs	r2, #100	@ 0x64
 8006ec2:	fb02 f303 	mul.w	r3, r2, r3
 8006ec6:	1acb      	subs	r3, r1, r3
 8006ec8:	00db      	lsls	r3, r3, #3
 8006eca:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8006ece:	4b36      	ldr	r3, [pc, #216]	@ (8006fa8 <UART_SetConfig+0x2d4>)
 8006ed0:	fba3 2302 	umull	r2, r3, r3, r2
 8006ed4:	095b      	lsrs	r3, r3, #5
 8006ed6:	005b      	lsls	r3, r3, #1
 8006ed8:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006edc:	441c      	add	r4, r3
 8006ede:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006ee2:	2200      	movs	r2, #0
 8006ee4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006ee8:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8006eec:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8006ef0:	4642      	mov	r2, r8
 8006ef2:	464b      	mov	r3, r9
 8006ef4:	1891      	adds	r1, r2, r2
 8006ef6:	63b9      	str	r1, [r7, #56]	@ 0x38
 8006ef8:	415b      	adcs	r3, r3
 8006efa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006efc:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006f00:	4641      	mov	r1, r8
 8006f02:	1851      	adds	r1, r2, r1
 8006f04:	6339      	str	r1, [r7, #48]	@ 0x30
 8006f06:	4649      	mov	r1, r9
 8006f08:	414b      	adcs	r3, r1
 8006f0a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006f0c:	f04f 0200 	mov.w	r2, #0
 8006f10:	f04f 0300 	mov.w	r3, #0
 8006f14:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8006f18:	4659      	mov	r1, fp
 8006f1a:	00cb      	lsls	r3, r1, #3
 8006f1c:	4651      	mov	r1, sl
 8006f1e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006f22:	4651      	mov	r1, sl
 8006f24:	00ca      	lsls	r2, r1, #3
 8006f26:	4610      	mov	r0, r2
 8006f28:	4619      	mov	r1, r3
 8006f2a:	4603      	mov	r3, r0
 8006f2c:	4642      	mov	r2, r8
 8006f2e:	189b      	adds	r3, r3, r2
 8006f30:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006f34:	464b      	mov	r3, r9
 8006f36:	460a      	mov	r2, r1
 8006f38:	eb42 0303 	adc.w	r3, r2, r3
 8006f3c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006f40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006f44:	685b      	ldr	r3, [r3, #4]
 8006f46:	2200      	movs	r2, #0
 8006f48:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8006f4c:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006f50:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006f54:	460b      	mov	r3, r1
 8006f56:	18db      	adds	r3, r3, r3
 8006f58:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006f5a:	4613      	mov	r3, r2
 8006f5c:	eb42 0303 	adc.w	r3, r2, r3
 8006f60:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006f62:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006f66:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8006f6a:	f7f9 f931 	bl	80001d0 <__aeabi_uldivmod>
 8006f6e:	4602      	mov	r2, r0
 8006f70:	460b      	mov	r3, r1
 8006f72:	4b0d      	ldr	r3, [pc, #52]	@ (8006fa8 <UART_SetConfig+0x2d4>)
 8006f74:	fba3 1302 	umull	r1, r3, r3, r2
 8006f78:	095b      	lsrs	r3, r3, #5
 8006f7a:	2164      	movs	r1, #100	@ 0x64
 8006f7c:	fb01 f303 	mul.w	r3, r1, r3
 8006f80:	1ad3      	subs	r3, r2, r3
 8006f82:	00db      	lsls	r3, r3, #3
 8006f84:	3332      	adds	r3, #50	@ 0x32
 8006f86:	4a08      	ldr	r2, [pc, #32]	@ (8006fa8 <UART_SetConfig+0x2d4>)
 8006f88:	fba2 2303 	umull	r2, r3, r2, r3
 8006f8c:	095b      	lsrs	r3, r3, #5
 8006f8e:	f003 0207 	and.w	r2, r3, #7
 8006f92:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006f96:	681b      	ldr	r3, [r3, #0]
 8006f98:	4422      	add	r2, r4
 8006f9a:	609a      	str	r2, [r3, #8]
 8006f9c:	e106      	b.n	80071ac <UART_SetConfig+0x4d8>
 8006f9e:	bf00      	nop
 8006fa0:	40011000 	.word	0x40011000
 8006fa4:	40011400 	.word	0x40011400
 8006fa8:	51eb851f 	.word	0x51eb851f
 8006fac:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006fb0:	2200      	movs	r2, #0
 8006fb2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006fb6:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8006fba:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8006fbe:	4642      	mov	r2, r8
 8006fc0:	464b      	mov	r3, r9
 8006fc2:	1891      	adds	r1, r2, r2
 8006fc4:	6239      	str	r1, [r7, #32]
 8006fc6:	415b      	adcs	r3, r3
 8006fc8:	627b      	str	r3, [r7, #36]	@ 0x24
 8006fca:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006fce:	4641      	mov	r1, r8
 8006fd0:	1854      	adds	r4, r2, r1
 8006fd2:	4649      	mov	r1, r9
 8006fd4:	eb43 0501 	adc.w	r5, r3, r1
 8006fd8:	f04f 0200 	mov.w	r2, #0
 8006fdc:	f04f 0300 	mov.w	r3, #0
 8006fe0:	00eb      	lsls	r3, r5, #3
 8006fe2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006fe6:	00e2      	lsls	r2, r4, #3
 8006fe8:	4614      	mov	r4, r2
 8006fea:	461d      	mov	r5, r3
 8006fec:	4643      	mov	r3, r8
 8006fee:	18e3      	adds	r3, r4, r3
 8006ff0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006ff4:	464b      	mov	r3, r9
 8006ff6:	eb45 0303 	adc.w	r3, r5, r3
 8006ffa:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006ffe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007002:	685b      	ldr	r3, [r3, #4]
 8007004:	2200      	movs	r2, #0
 8007006:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800700a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800700e:	f04f 0200 	mov.w	r2, #0
 8007012:	f04f 0300 	mov.w	r3, #0
 8007016:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800701a:	4629      	mov	r1, r5
 800701c:	008b      	lsls	r3, r1, #2
 800701e:	4621      	mov	r1, r4
 8007020:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007024:	4621      	mov	r1, r4
 8007026:	008a      	lsls	r2, r1, #2
 8007028:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800702c:	f7f9 f8d0 	bl	80001d0 <__aeabi_uldivmod>
 8007030:	4602      	mov	r2, r0
 8007032:	460b      	mov	r3, r1
 8007034:	4b60      	ldr	r3, [pc, #384]	@ (80071b8 <UART_SetConfig+0x4e4>)
 8007036:	fba3 2302 	umull	r2, r3, r3, r2
 800703a:	095b      	lsrs	r3, r3, #5
 800703c:	011c      	lsls	r4, r3, #4
 800703e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007042:	2200      	movs	r2, #0
 8007044:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007048:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 800704c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8007050:	4642      	mov	r2, r8
 8007052:	464b      	mov	r3, r9
 8007054:	1891      	adds	r1, r2, r2
 8007056:	61b9      	str	r1, [r7, #24]
 8007058:	415b      	adcs	r3, r3
 800705a:	61fb      	str	r3, [r7, #28]
 800705c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007060:	4641      	mov	r1, r8
 8007062:	1851      	adds	r1, r2, r1
 8007064:	6139      	str	r1, [r7, #16]
 8007066:	4649      	mov	r1, r9
 8007068:	414b      	adcs	r3, r1
 800706a:	617b      	str	r3, [r7, #20]
 800706c:	f04f 0200 	mov.w	r2, #0
 8007070:	f04f 0300 	mov.w	r3, #0
 8007074:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007078:	4659      	mov	r1, fp
 800707a:	00cb      	lsls	r3, r1, #3
 800707c:	4651      	mov	r1, sl
 800707e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007082:	4651      	mov	r1, sl
 8007084:	00ca      	lsls	r2, r1, #3
 8007086:	4610      	mov	r0, r2
 8007088:	4619      	mov	r1, r3
 800708a:	4603      	mov	r3, r0
 800708c:	4642      	mov	r2, r8
 800708e:	189b      	adds	r3, r3, r2
 8007090:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8007094:	464b      	mov	r3, r9
 8007096:	460a      	mov	r2, r1
 8007098:	eb42 0303 	adc.w	r3, r2, r3
 800709c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80070a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80070a4:	685b      	ldr	r3, [r3, #4]
 80070a6:	2200      	movs	r2, #0
 80070a8:	67bb      	str	r3, [r7, #120]	@ 0x78
 80070aa:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80070ac:	f04f 0200 	mov.w	r2, #0
 80070b0:	f04f 0300 	mov.w	r3, #0
 80070b4:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80070b8:	4649      	mov	r1, r9
 80070ba:	008b      	lsls	r3, r1, #2
 80070bc:	4641      	mov	r1, r8
 80070be:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80070c2:	4641      	mov	r1, r8
 80070c4:	008a      	lsls	r2, r1, #2
 80070c6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80070ca:	f7f9 f881 	bl	80001d0 <__aeabi_uldivmod>
 80070ce:	4602      	mov	r2, r0
 80070d0:	460b      	mov	r3, r1
 80070d2:	4611      	mov	r1, r2
 80070d4:	4b38      	ldr	r3, [pc, #224]	@ (80071b8 <UART_SetConfig+0x4e4>)
 80070d6:	fba3 2301 	umull	r2, r3, r3, r1
 80070da:	095b      	lsrs	r3, r3, #5
 80070dc:	2264      	movs	r2, #100	@ 0x64
 80070de:	fb02 f303 	mul.w	r3, r2, r3
 80070e2:	1acb      	subs	r3, r1, r3
 80070e4:	011b      	lsls	r3, r3, #4
 80070e6:	3332      	adds	r3, #50	@ 0x32
 80070e8:	4a33      	ldr	r2, [pc, #204]	@ (80071b8 <UART_SetConfig+0x4e4>)
 80070ea:	fba2 2303 	umull	r2, r3, r2, r3
 80070ee:	095b      	lsrs	r3, r3, #5
 80070f0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80070f4:	441c      	add	r4, r3
 80070f6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80070fa:	2200      	movs	r2, #0
 80070fc:	673b      	str	r3, [r7, #112]	@ 0x70
 80070fe:	677a      	str	r2, [r7, #116]	@ 0x74
 8007100:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8007104:	4642      	mov	r2, r8
 8007106:	464b      	mov	r3, r9
 8007108:	1891      	adds	r1, r2, r2
 800710a:	60b9      	str	r1, [r7, #8]
 800710c:	415b      	adcs	r3, r3
 800710e:	60fb      	str	r3, [r7, #12]
 8007110:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007114:	4641      	mov	r1, r8
 8007116:	1851      	adds	r1, r2, r1
 8007118:	6039      	str	r1, [r7, #0]
 800711a:	4649      	mov	r1, r9
 800711c:	414b      	adcs	r3, r1
 800711e:	607b      	str	r3, [r7, #4]
 8007120:	f04f 0200 	mov.w	r2, #0
 8007124:	f04f 0300 	mov.w	r3, #0
 8007128:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800712c:	4659      	mov	r1, fp
 800712e:	00cb      	lsls	r3, r1, #3
 8007130:	4651      	mov	r1, sl
 8007132:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007136:	4651      	mov	r1, sl
 8007138:	00ca      	lsls	r2, r1, #3
 800713a:	4610      	mov	r0, r2
 800713c:	4619      	mov	r1, r3
 800713e:	4603      	mov	r3, r0
 8007140:	4642      	mov	r2, r8
 8007142:	189b      	adds	r3, r3, r2
 8007144:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007146:	464b      	mov	r3, r9
 8007148:	460a      	mov	r2, r1
 800714a:	eb42 0303 	adc.w	r3, r2, r3
 800714e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8007150:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007154:	685b      	ldr	r3, [r3, #4]
 8007156:	2200      	movs	r2, #0
 8007158:	663b      	str	r3, [r7, #96]	@ 0x60
 800715a:	667a      	str	r2, [r7, #100]	@ 0x64
 800715c:	f04f 0200 	mov.w	r2, #0
 8007160:	f04f 0300 	mov.w	r3, #0
 8007164:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8007168:	4649      	mov	r1, r9
 800716a:	008b      	lsls	r3, r1, #2
 800716c:	4641      	mov	r1, r8
 800716e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007172:	4641      	mov	r1, r8
 8007174:	008a      	lsls	r2, r1, #2
 8007176:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800717a:	f7f9 f829 	bl	80001d0 <__aeabi_uldivmod>
 800717e:	4602      	mov	r2, r0
 8007180:	460b      	mov	r3, r1
 8007182:	4b0d      	ldr	r3, [pc, #52]	@ (80071b8 <UART_SetConfig+0x4e4>)
 8007184:	fba3 1302 	umull	r1, r3, r3, r2
 8007188:	095b      	lsrs	r3, r3, #5
 800718a:	2164      	movs	r1, #100	@ 0x64
 800718c:	fb01 f303 	mul.w	r3, r1, r3
 8007190:	1ad3      	subs	r3, r2, r3
 8007192:	011b      	lsls	r3, r3, #4
 8007194:	3332      	adds	r3, #50	@ 0x32
 8007196:	4a08      	ldr	r2, [pc, #32]	@ (80071b8 <UART_SetConfig+0x4e4>)
 8007198:	fba2 2303 	umull	r2, r3, r2, r3
 800719c:	095b      	lsrs	r3, r3, #5
 800719e:	f003 020f 	and.w	r2, r3, #15
 80071a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	4422      	add	r2, r4
 80071aa:	609a      	str	r2, [r3, #8]
 80071ac:	bf00      	nop
 80071ae:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80071b2:	46bd      	mov	sp, r7
 80071b4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80071b8:	51eb851f 	.word	0x51eb851f

080071bc <__NVIC_SetPriority>:
 80071bc:	b480      	push	{r7}
 80071be:	b083      	sub	sp, #12
 80071c0:	af00      	add	r7, sp, #0
 80071c2:	4603      	mov	r3, r0
 80071c4:	6039      	str	r1, [r7, #0]
 80071c6:	71fb      	strb	r3, [r7, #7]
 80071c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80071cc:	2b00      	cmp	r3, #0
 80071ce:	db0a      	blt.n	80071e6 <__NVIC_SetPriority+0x2a>
 80071d0:	683b      	ldr	r3, [r7, #0]
 80071d2:	b2da      	uxtb	r2, r3
 80071d4:	490c      	ldr	r1, [pc, #48]	@ (8007208 <__NVIC_SetPriority+0x4c>)
 80071d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80071da:	0112      	lsls	r2, r2, #4
 80071dc:	b2d2      	uxtb	r2, r2
 80071de:	440b      	add	r3, r1
 80071e0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80071e4:	e00a      	b.n	80071fc <__NVIC_SetPriority+0x40>
 80071e6:	683b      	ldr	r3, [r7, #0]
 80071e8:	b2da      	uxtb	r2, r3
 80071ea:	4908      	ldr	r1, [pc, #32]	@ (800720c <__NVIC_SetPriority+0x50>)
 80071ec:	79fb      	ldrb	r3, [r7, #7]
 80071ee:	f003 030f 	and.w	r3, r3, #15
 80071f2:	3b04      	subs	r3, #4
 80071f4:	0112      	lsls	r2, r2, #4
 80071f6:	b2d2      	uxtb	r2, r2
 80071f8:	440b      	add	r3, r1
 80071fa:	761a      	strb	r2, [r3, #24]
 80071fc:	bf00      	nop
 80071fe:	370c      	adds	r7, #12
 8007200:	46bd      	mov	sp, r7
 8007202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007206:	4770      	bx	lr
 8007208:	e000e100 	.word	0xe000e100
 800720c:	e000ed00 	.word	0xe000ed00

08007210 <SVC_Setup>:
 8007210:	b580      	push	{r7, lr}
 8007212:	af00      	add	r7, sp, #0
 8007214:	2100      	movs	r1, #0
 8007216:	f06f 0004 	mvn.w	r0, #4
 800721a:	f7ff ffcf 	bl	80071bc <__NVIC_SetPriority>
 800721e:	bf00      	nop
 8007220:	bd80      	pop	{r7, pc}
	...

08007224 <osKernelInitialize>:
 8007224:	b480      	push	{r7}
 8007226:	b083      	sub	sp, #12
 8007228:	af00      	add	r7, sp, #0
 800722a:	f3ef 8305 	mrs	r3, IPSR
 800722e:	603b      	str	r3, [r7, #0]
 8007230:	683b      	ldr	r3, [r7, #0]
 8007232:	2b00      	cmp	r3, #0
 8007234:	d003      	beq.n	800723e <osKernelInitialize+0x1a>
 8007236:	f06f 0305 	mvn.w	r3, #5
 800723a:	607b      	str	r3, [r7, #4]
 800723c:	e00c      	b.n	8007258 <osKernelInitialize+0x34>
 800723e:	4b0a      	ldr	r3, [pc, #40]	@ (8007268 <osKernelInitialize+0x44>)
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	2b00      	cmp	r3, #0
 8007244:	d105      	bne.n	8007252 <osKernelInitialize+0x2e>
 8007246:	4b08      	ldr	r3, [pc, #32]	@ (8007268 <osKernelInitialize+0x44>)
 8007248:	2201      	movs	r2, #1
 800724a:	601a      	str	r2, [r3, #0]
 800724c:	2300      	movs	r3, #0
 800724e:	607b      	str	r3, [r7, #4]
 8007250:	e002      	b.n	8007258 <osKernelInitialize+0x34>
 8007252:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8007256:	607b      	str	r3, [r7, #4]
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	4618      	mov	r0, r3
 800725c:	370c      	adds	r7, #12
 800725e:	46bd      	mov	sp, r7
 8007260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007264:	4770      	bx	lr
 8007266:	bf00      	nop
 8007268:	20000ad0 	.word	0x20000ad0

0800726c <osKernelStart>:
 800726c:	b580      	push	{r7, lr}
 800726e:	b082      	sub	sp, #8
 8007270:	af00      	add	r7, sp, #0
 8007272:	f3ef 8305 	mrs	r3, IPSR
 8007276:	603b      	str	r3, [r7, #0]
 8007278:	683b      	ldr	r3, [r7, #0]
 800727a:	2b00      	cmp	r3, #0
 800727c:	d003      	beq.n	8007286 <osKernelStart+0x1a>
 800727e:	f06f 0305 	mvn.w	r3, #5
 8007282:	607b      	str	r3, [r7, #4]
 8007284:	e010      	b.n	80072a8 <osKernelStart+0x3c>
 8007286:	4b0b      	ldr	r3, [pc, #44]	@ (80072b4 <osKernelStart+0x48>)
 8007288:	681b      	ldr	r3, [r3, #0]
 800728a:	2b01      	cmp	r3, #1
 800728c:	d109      	bne.n	80072a2 <osKernelStart+0x36>
 800728e:	f7ff ffbf 	bl	8007210 <SVC_Setup>
 8007292:	4b08      	ldr	r3, [pc, #32]	@ (80072b4 <osKernelStart+0x48>)
 8007294:	2202      	movs	r2, #2
 8007296:	601a      	str	r2, [r3, #0]
 8007298:	f001 f892 	bl	80083c0 <vTaskStartScheduler>
 800729c:	2300      	movs	r3, #0
 800729e:	607b      	str	r3, [r7, #4]
 80072a0:	e002      	b.n	80072a8 <osKernelStart+0x3c>
 80072a2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80072a6:	607b      	str	r3, [r7, #4]
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	4618      	mov	r0, r3
 80072ac:	3708      	adds	r7, #8
 80072ae:	46bd      	mov	sp, r7
 80072b0:	bd80      	pop	{r7, pc}
 80072b2:	bf00      	nop
 80072b4:	20000ad0 	.word	0x20000ad0

080072b8 <osThreadNew>:
 80072b8:	b580      	push	{r7, lr}
 80072ba:	b08e      	sub	sp, #56	@ 0x38
 80072bc:	af04      	add	r7, sp, #16
 80072be:	60f8      	str	r0, [r7, #12]
 80072c0:	60b9      	str	r1, [r7, #8]
 80072c2:	607a      	str	r2, [r7, #4]
 80072c4:	2300      	movs	r3, #0
 80072c6:	613b      	str	r3, [r7, #16]
 80072c8:	f3ef 8305 	mrs	r3, IPSR
 80072cc:	617b      	str	r3, [r7, #20]
 80072ce:	697b      	ldr	r3, [r7, #20]
 80072d0:	2b00      	cmp	r3, #0
 80072d2:	d17e      	bne.n	80073d2 <osThreadNew+0x11a>
 80072d4:	68fb      	ldr	r3, [r7, #12]
 80072d6:	2b00      	cmp	r3, #0
 80072d8:	d07b      	beq.n	80073d2 <osThreadNew+0x11a>
 80072da:	2380      	movs	r3, #128	@ 0x80
 80072dc:	623b      	str	r3, [r7, #32]
 80072de:	2318      	movs	r3, #24
 80072e0:	61fb      	str	r3, [r7, #28]
 80072e2:	2300      	movs	r3, #0
 80072e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80072e6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80072ea:	61bb      	str	r3, [r7, #24]
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	2b00      	cmp	r3, #0
 80072f0:	d045      	beq.n	800737e <osThreadNew+0xc6>
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d002      	beq.n	8007300 <osThreadNew+0x48>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	699b      	ldr	r3, [r3, #24]
 8007304:	2b00      	cmp	r3, #0
 8007306:	d002      	beq.n	800730e <osThreadNew+0x56>
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	699b      	ldr	r3, [r3, #24]
 800730c:	61fb      	str	r3, [r7, #28]
 800730e:	69fb      	ldr	r3, [r7, #28]
 8007310:	2b00      	cmp	r3, #0
 8007312:	d008      	beq.n	8007326 <osThreadNew+0x6e>
 8007314:	69fb      	ldr	r3, [r7, #28]
 8007316:	2b38      	cmp	r3, #56	@ 0x38
 8007318:	d805      	bhi.n	8007326 <osThreadNew+0x6e>
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	685b      	ldr	r3, [r3, #4]
 800731e:	f003 0301 	and.w	r3, r3, #1
 8007322:	2b00      	cmp	r3, #0
 8007324:	d001      	beq.n	800732a <osThreadNew+0x72>
 8007326:	2300      	movs	r3, #0
 8007328:	e054      	b.n	80073d4 <osThreadNew+0x11c>
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	695b      	ldr	r3, [r3, #20]
 800732e:	2b00      	cmp	r3, #0
 8007330:	d003      	beq.n	800733a <osThreadNew+0x82>
 8007332:	687b      	ldr	r3, [r7, #4]
 8007334:	695b      	ldr	r3, [r3, #20]
 8007336:	089b      	lsrs	r3, r3, #2
 8007338:	623b      	str	r3, [r7, #32]
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	689b      	ldr	r3, [r3, #8]
 800733e:	2b00      	cmp	r3, #0
 8007340:	d00e      	beq.n	8007360 <osThreadNew+0xa8>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	68db      	ldr	r3, [r3, #12]
 8007346:	2ba7      	cmp	r3, #167	@ 0xa7
 8007348:	d90a      	bls.n	8007360 <osThreadNew+0xa8>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	691b      	ldr	r3, [r3, #16]
 800734e:	2b00      	cmp	r3, #0
 8007350:	d006      	beq.n	8007360 <osThreadNew+0xa8>
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	695b      	ldr	r3, [r3, #20]
 8007356:	2b00      	cmp	r3, #0
 8007358:	d002      	beq.n	8007360 <osThreadNew+0xa8>
 800735a:	2301      	movs	r3, #1
 800735c:	61bb      	str	r3, [r7, #24]
 800735e:	e010      	b.n	8007382 <osThreadNew+0xca>
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	689b      	ldr	r3, [r3, #8]
 8007364:	2b00      	cmp	r3, #0
 8007366:	d10c      	bne.n	8007382 <osThreadNew+0xca>
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	68db      	ldr	r3, [r3, #12]
 800736c:	2b00      	cmp	r3, #0
 800736e:	d108      	bne.n	8007382 <osThreadNew+0xca>
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	691b      	ldr	r3, [r3, #16]
 8007374:	2b00      	cmp	r3, #0
 8007376:	d104      	bne.n	8007382 <osThreadNew+0xca>
 8007378:	2300      	movs	r3, #0
 800737a:	61bb      	str	r3, [r7, #24]
 800737c:	e001      	b.n	8007382 <osThreadNew+0xca>
 800737e:	2300      	movs	r3, #0
 8007380:	61bb      	str	r3, [r7, #24]
 8007382:	69bb      	ldr	r3, [r7, #24]
 8007384:	2b01      	cmp	r3, #1
 8007386:	d110      	bne.n	80073aa <osThreadNew+0xf2>
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	691b      	ldr	r3, [r3, #16]
 800738c:	687a      	ldr	r2, [r7, #4]
 800738e:	6892      	ldr	r2, [r2, #8]
 8007390:	9202      	str	r2, [sp, #8]
 8007392:	9301      	str	r3, [sp, #4]
 8007394:	69fb      	ldr	r3, [r7, #28]
 8007396:	9300      	str	r3, [sp, #0]
 8007398:	68bb      	ldr	r3, [r7, #8]
 800739a:	6a3a      	ldr	r2, [r7, #32]
 800739c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800739e:	68f8      	ldr	r0, [r7, #12]
 80073a0:	f000 fe1a 	bl	8007fd8 <xTaskCreateStatic>
 80073a4:	4603      	mov	r3, r0
 80073a6:	613b      	str	r3, [r7, #16]
 80073a8:	e013      	b.n	80073d2 <osThreadNew+0x11a>
 80073aa:	69bb      	ldr	r3, [r7, #24]
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	d110      	bne.n	80073d2 <osThreadNew+0x11a>
 80073b0:	6a3b      	ldr	r3, [r7, #32]
 80073b2:	b29a      	uxth	r2, r3
 80073b4:	f107 0310 	add.w	r3, r7, #16
 80073b8:	9301      	str	r3, [sp, #4]
 80073ba:	69fb      	ldr	r3, [r7, #28]
 80073bc:	9300      	str	r3, [sp, #0]
 80073be:	68bb      	ldr	r3, [r7, #8]
 80073c0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80073c2:	68f8      	ldr	r0, [r7, #12]
 80073c4:	f000 fe68 	bl	8008098 <xTaskCreate>
 80073c8:	4603      	mov	r3, r0
 80073ca:	2b01      	cmp	r3, #1
 80073cc:	d001      	beq.n	80073d2 <osThreadNew+0x11a>
 80073ce:	2300      	movs	r3, #0
 80073d0:	613b      	str	r3, [r7, #16]
 80073d2:	693b      	ldr	r3, [r7, #16]
 80073d4:	4618      	mov	r0, r3
 80073d6:	3728      	adds	r7, #40	@ 0x28
 80073d8:	46bd      	mov	sp, r7
 80073da:	bd80      	pop	{r7, pc}

080073dc <osDelay>:
 80073dc:	b580      	push	{r7, lr}
 80073de:	b084      	sub	sp, #16
 80073e0:	af00      	add	r7, sp, #0
 80073e2:	6078      	str	r0, [r7, #4]
 80073e4:	f3ef 8305 	mrs	r3, IPSR
 80073e8:	60bb      	str	r3, [r7, #8]
 80073ea:	68bb      	ldr	r3, [r7, #8]
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d003      	beq.n	80073f8 <osDelay+0x1c>
 80073f0:	f06f 0305 	mvn.w	r3, #5
 80073f4:	60fb      	str	r3, [r7, #12]
 80073f6:	e007      	b.n	8007408 <osDelay+0x2c>
 80073f8:	2300      	movs	r3, #0
 80073fa:	60fb      	str	r3, [r7, #12]
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	2b00      	cmp	r3, #0
 8007400:	d002      	beq.n	8007408 <osDelay+0x2c>
 8007402:	6878      	ldr	r0, [r7, #4]
 8007404:	f000 ffa6 	bl	8008354 <vTaskDelay>
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	4618      	mov	r0, r3
 800740c:	3710      	adds	r7, #16
 800740e:	46bd      	mov	sp, r7
 8007410:	bd80      	pop	{r7, pc}
	...

08007414 <vApplicationGetIdleTaskMemory>:
 8007414:	b480      	push	{r7}
 8007416:	b085      	sub	sp, #20
 8007418:	af00      	add	r7, sp, #0
 800741a:	60f8      	str	r0, [r7, #12]
 800741c:	60b9      	str	r1, [r7, #8]
 800741e:	607a      	str	r2, [r7, #4]
 8007420:	68fb      	ldr	r3, [r7, #12]
 8007422:	4a07      	ldr	r2, [pc, #28]	@ (8007440 <vApplicationGetIdleTaskMemory+0x2c>)
 8007424:	601a      	str	r2, [r3, #0]
 8007426:	68bb      	ldr	r3, [r7, #8]
 8007428:	4a06      	ldr	r2, [pc, #24]	@ (8007444 <vApplicationGetIdleTaskMemory+0x30>)
 800742a:	601a      	str	r2, [r3, #0]
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	2280      	movs	r2, #128	@ 0x80
 8007430:	601a      	str	r2, [r3, #0]
 8007432:	bf00      	nop
 8007434:	3714      	adds	r7, #20
 8007436:	46bd      	mov	sp, r7
 8007438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800743c:	4770      	bx	lr
 800743e:	bf00      	nop
 8007440:	20000ad4 	.word	0x20000ad4
 8007444:	20000b7c 	.word	0x20000b7c

08007448 <vApplicationGetTimerTaskMemory>:
 8007448:	b480      	push	{r7}
 800744a:	b085      	sub	sp, #20
 800744c:	af00      	add	r7, sp, #0
 800744e:	60f8      	str	r0, [r7, #12]
 8007450:	60b9      	str	r1, [r7, #8]
 8007452:	607a      	str	r2, [r7, #4]
 8007454:	68fb      	ldr	r3, [r7, #12]
 8007456:	4a07      	ldr	r2, [pc, #28]	@ (8007474 <vApplicationGetTimerTaskMemory+0x2c>)
 8007458:	601a      	str	r2, [r3, #0]
 800745a:	68bb      	ldr	r3, [r7, #8]
 800745c:	4a06      	ldr	r2, [pc, #24]	@ (8007478 <vApplicationGetTimerTaskMemory+0x30>)
 800745e:	601a      	str	r2, [r3, #0]
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8007466:	601a      	str	r2, [r3, #0]
 8007468:	bf00      	nop
 800746a:	3714      	adds	r7, #20
 800746c:	46bd      	mov	sp, r7
 800746e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007472:	4770      	bx	lr
 8007474:	20000d7c 	.word	0x20000d7c
 8007478:	20000e24 	.word	0x20000e24

0800747c <vListInitialise>:
 800747c:	b480      	push	{r7}
 800747e:	b083      	sub	sp, #12
 8007480:	af00      	add	r7, sp, #0
 8007482:	6078      	str	r0, [r7, #4]
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	f103 0208 	add.w	r2, r3, #8
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	605a      	str	r2, [r3, #4]
 800748e:	687b      	ldr	r3, [r7, #4]
 8007490:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8007494:	609a      	str	r2, [r3, #8]
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	f103 0208 	add.w	r2, r3, #8
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	60da      	str	r2, [r3, #12]
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	f103 0208 	add.w	r2, r3, #8
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	611a      	str	r2, [r3, #16]
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	2200      	movs	r2, #0
 80074ae:	601a      	str	r2, [r3, #0]
 80074b0:	bf00      	nop
 80074b2:	370c      	adds	r7, #12
 80074b4:	46bd      	mov	sp, r7
 80074b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ba:	4770      	bx	lr

080074bc <vListInitialiseItem>:
 80074bc:	b480      	push	{r7}
 80074be:	b083      	sub	sp, #12
 80074c0:	af00      	add	r7, sp, #0
 80074c2:	6078      	str	r0, [r7, #4]
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	2200      	movs	r2, #0
 80074c8:	611a      	str	r2, [r3, #16]
 80074ca:	bf00      	nop
 80074cc:	370c      	adds	r7, #12
 80074ce:	46bd      	mov	sp, r7
 80074d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074d4:	4770      	bx	lr

080074d6 <vListInsertEnd>:
 80074d6:	b480      	push	{r7}
 80074d8:	b085      	sub	sp, #20
 80074da:	af00      	add	r7, sp, #0
 80074dc:	6078      	str	r0, [r7, #4]
 80074de:	6039      	str	r1, [r7, #0]
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	685b      	ldr	r3, [r3, #4]
 80074e4:	60fb      	str	r3, [r7, #12]
 80074e6:	683b      	ldr	r3, [r7, #0]
 80074e8:	68fa      	ldr	r2, [r7, #12]
 80074ea:	605a      	str	r2, [r3, #4]
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	689a      	ldr	r2, [r3, #8]
 80074f0:	683b      	ldr	r3, [r7, #0]
 80074f2:	609a      	str	r2, [r3, #8]
 80074f4:	68fb      	ldr	r3, [r7, #12]
 80074f6:	689b      	ldr	r3, [r3, #8]
 80074f8:	683a      	ldr	r2, [r7, #0]
 80074fa:	605a      	str	r2, [r3, #4]
 80074fc:	68fb      	ldr	r3, [r7, #12]
 80074fe:	683a      	ldr	r2, [r7, #0]
 8007500:	609a      	str	r2, [r3, #8]
 8007502:	683b      	ldr	r3, [r7, #0]
 8007504:	687a      	ldr	r2, [r7, #4]
 8007506:	611a      	str	r2, [r3, #16]
 8007508:	687b      	ldr	r3, [r7, #4]
 800750a:	681b      	ldr	r3, [r3, #0]
 800750c:	1c5a      	adds	r2, r3, #1
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	601a      	str	r2, [r3, #0]
 8007512:	bf00      	nop
 8007514:	3714      	adds	r7, #20
 8007516:	46bd      	mov	sp, r7
 8007518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800751c:	4770      	bx	lr

0800751e <vListInsert>:
 800751e:	b480      	push	{r7}
 8007520:	b085      	sub	sp, #20
 8007522:	af00      	add	r7, sp, #0
 8007524:	6078      	str	r0, [r7, #4]
 8007526:	6039      	str	r1, [r7, #0]
 8007528:	683b      	ldr	r3, [r7, #0]
 800752a:	681b      	ldr	r3, [r3, #0]
 800752c:	60bb      	str	r3, [r7, #8]
 800752e:	68bb      	ldr	r3, [r7, #8]
 8007530:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007534:	d103      	bne.n	800753e <vListInsert+0x20>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	691b      	ldr	r3, [r3, #16]
 800753a:	60fb      	str	r3, [r7, #12]
 800753c:	e00c      	b.n	8007558 <vListInsert+0x3a>
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	3308      	adds	r3, #8
 8007542:	60fb      	str	r3, [r7, #12]
 8007544:	e002      	b.n	800754c <vListInsert+0x2e>
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	685b      	ldr	r3, [r3, #4]
 800754a:	60fb      	str	r3, [r7, #12]
 800754c:	68fb      	ldr	r3, [r7, #12]
 800754e:	685b      	ldr	r3, [r3, #4]
 8007550:	681b      	ldr	r3, [r3, #0]
 8007552:	68ba      	ldr	r2, [r7, #8]
 8007554:	429a      	cmp	r2, r3
 8007556:	d2f6      	bcs.n	8007546 <vListInsert+0x28>
 8007558:	68fb      	ldr	r3, [r7, #12]
 800755a:	685a      	ldr	r2, [r3, #4]
 800755c:	683b      	ldr	r3, [r7, #0]
 800755e:	605a      	str	r2, [r3, #4]
 8007560:	683b      	ldr	r3, [r7, #0]
 8007562:	685b      	ldr	r3, [r3, #4]
 8007564:	683a      	ldr	r2, [r7, #0]
 8007566:	609a      	str	r2, [r3, #8]
 8007568:	683b      	ldr	r3, [r7, #0]
 800756a:	68fa      	ldr	r2, [r7, #12]
 800756c:	609a      	str	r2, [r3, #8]
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	683a      	ldr	r2, [r7, #0]
 8007572:	605a      	str	r2, [r3, #4]
 8007574:	683b      	ldr	r3, [r7, #0]
 8007576:	687a      	ldr	r2, [r7, #4]
 8007578:	611a      	str	r2, [r3, #16]
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	681b      	ldr	r3, [r3, #0]
 800757e:	1c5a      	adds	r2, r3, #1
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	601a      	str	r2, [r3, #0]
 8007584:	bf00      	nop
 8007586:	3714      	adds	r7, #20
 8007588:	46bd      	mov	sp, r7
 800758a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800758e:	4770      	bx	lr

08007590 <uxListRemove>:
 8007590:	b480      	push	{r7}
 8007592:	b085      	sub	sp, #20
 8007594:	af00      	add	r7, sp, #0
 8007596:	6078      	str	r0, [r7, #4]
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	691b      	ldr	r3, [r3, #16]
 800759c:	60fb      	str	r3, [r7, #12]
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	685b      	ldr	r3, [r3, #4]
 80075a2:	687a      	ldr	r2, [r7, #4]
 80075a4:	6892      	ldr	r2, [r2, #8]
 80075a6:	609a      	str	r2, [r3, #8]
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	689b      	ldr	r3, [r3, #8]
 80075ac:	687a      	ldr	r2, [r7, #4]
 80075ae:	6852      	ldr	r2, [r2, #4]
 80075b0:	605a      	str	r2, [r3, #4]
 80075b2:	68fb      	ldr	r3, [r7, #12]
 80075b4:	685b      	ldr	r3, [r3, #4]
 80075b6:	687a      	ldr	r2, [r7, #4]
 80075b8:	429a      	cmp	r2, r3
 80075ba:	d103      	bne.n	80075c4 <uxListRemove+0x34>
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	689a      	ldr	r2, [r3, #8]
 80075c0:	68fb      	ldr	r3, [r7, #12]
 80075c2:	605a      	str	r2, [r3, #4]
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	2200      	movs	r2, #0
 80075c8:	611a      	str	r2, [r3, #16]
 80075ca:	68fb      	ldr	r3, [r7, #12]
 80075cc:	681b      	ldr	r3, [r3, #0]
 80075ce:	1e5a      	subs	r2, r3, #1
 80075d0:	68fb      	ldr	r3, [r7, #12]
 80075d2:	601a      	str	r2, [r3, #0]
 80075d4:	68fb      	ldr	r3, [r7, #12]
 80075d6:	681b      	ldr	r3, [r3, #0]
 80075d8:	4618      	mov	r0, r3
 80075da:	3714      	adds	r7, #20
 80075dc:	46bd      	mov	sp, r7
 80075de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e2:	4770      	bx	lr

080075e4 <xQueueGenericReset>:
 80075e4:	b580      	push	{r7, lr}
 80075e6:	b084      	sub	sp, #16
 80075e8:	af00      	add	r7, sp, #0
 80075ea:	6078      	str	r0, [r7, #4]
 80075ec:	6039      	str	r1, [r7, #0]
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	60fb      	str	r3, [r7, #12]
 80075f2:	68fb      	ldr	r3, [r7, #12]
 80075f4:	2b00      	cmp	r3, #0
 80075f6:	d10b      	bne.n	8007610 <xQueueGenericReset+0x2c>
 80075f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075fc:	f383 8811 	msr	BASEPRI, r3
 8007600:	f3bf 8f6f 	isb	sy
 8007604:	f3bf 8f4f 	dsb	sy
 8007608:	60bb      	str	r3, [r7, #8]
 800760a:	bf00      	nop
 800760c:	bf00      	nop
 800760e:	e7fd      	b.n	800760c <xQueueGenericReset+0x28>
 8007610:	f002 f8aa 	bl	8009768 <vPortEnterCritical>
 8007614:	68fb      	ldr	r3, [r7, #12]
 8007616:	681a      	ldr	r2, [r3, #0]
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800761c:	68f9      	ldr	r1, [r7, #12]
 800761e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8007620:	fb01 f303 	mul.w	r3, r1, r3
 8007624:	441a      	add	r2, r3
 8007626:	68fb      	ldr	r3, [r7, #12]
 8007628:	609a      	str	r2, [r3, #8]
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	2200      	movs	r2, #0
 800762e:	639a      	str	r2, [r3, #56]	@ 0x38
 8007630:	68fb      	ldr	r3, [r7, #12]
 8007632:	681a      	ldr	r2, [r3, #0]
 8007634:	68fb      	ldr	r3, [r7, #12]
 8007636:	605a      	str	r2, [r3, #4]
 8007638:	68fb      	ldr	r3, [r7, #12]
 800763a:	681a      	ldr	r2, [r3, #0]
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007640:	3b01      	subs	r3, #1
 8007642:	68f9      	ldr	r1, [r7, #12]
 8007644:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8007646:	fb01 f303 	mul.w	r3, r1, r3
 800764a:	441a      	add	r2, r3
 800764c:	68fb      	ldr	r3, [r7, #12]
 800764e:	60da      	str	r2, [r3, #12]
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	22ff      	movs	r2, #255	@ 0xff
 8007654:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	22ff      	movs	r2, #255	@ 0xff
 800765c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007660:	683b      	ldr	r3, [r7, #0]
 8007662:	2b00      	cmp	r3, #0
 8007664:	d114      	bne.n	8007690 <xQueueGenericReset+0xac>
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	691b      	ldr	r3, [r3, #16]
 800766a:	2b00      	cmp	r3, #0
 800766c:	d01a      	beq.n	80076a4 <xQueueGenericReset+0xc0>
 800766e:	68fb      	ldr	r3, [r7, #12]
 8007670:	3310      	adds	r3, #16
 8007672:	4618      	mov	r0, r3
 8007674:	f001 f942 	bl	80088fc <xTaskRemoveFromEventList>
 8007678:	4603      	mov	r3, r0
 800767a:	2b00      	cmp	r3, #0
 800767c:	d012      	beq.n	80076a4 <xQueueGenericReset+0xc0>
 800767e:	4b0d      	ldr	r3, [pc, #52]	@ (80076b4 <xQueueGenericReset+0xd0>)
 8007680:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007684:	601a      	str	r2, [r3, #0]
 8007686:	f3bf 8f4f 	dsb	sy
 800768a:	f3bf 8f6f 	isb	sy
 800768e:	e009      	b.n	80076a4 <xQueueGenericReset+0xc0>
 8007690:	68fb      	ldr	r3, [r7, #12]
 8007692:	3310      	adds	r3, #16
 8007694:	4618      	mov	r0, r3
 8007696:	f7ff fef1 	bl	800747c <vListInitialise>
 800769a:	68fb      	ldr	r3, [r7, #12]
 800769c:	3324      	adds	r3, #36	@ 0x24
 800769e:	4618      	mov	r0, r3
 80076a0:	f7ff feec 	bl	800747c <vListInitialise>
 80076a4:	f002 f892 	bl	80097cc <vPortExitCritical>
 80076a8:	2301      	movs	r3, #1
 80076aa:	4618      	mov	r0, r3
 80076ac:	3710      	adds	r7, #16
 80076ae:	46bd      	mov	sp, r7
 80076b0:	bd80      	pop	{r7, pc}
 80076b2:	bf00      	nop
 80076b4:	e000ed04 	.word	0xe000ed04

080076b8 <xQueueGenericCreateStatic>:
 80076b8:	b580      	push	{r7, lr}
 80076ba:	b08e      	sub	sp, #56	@ 0x38
 80076bc:	af02      	add	r7, sp, #8
 80076be:	60f8      	str	r0, [r7, #12]
 80076c0:	60b9      	str	r1, [r7, #8]
 80076c2:	607a      	str	r2, [r7, #4]
 80076c4:	603b      	str	r3, [r7, #0]
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	2b00      	cmp	r3, #0
 80076ca:	d10b      	bne.n	80076e4 <xQueueGenericCreateStatic+0x2c>
 80076cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076d0:	f383 8811 	msr	BASEPRI, r3
 80076d4:	f3bf 8f6f 	isb	sy
 80076d8:	f3bf 8f4f 	dsb	sy
 80076dc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80076de:	bf00      	nop
 80076e0:	bf00      	nop
 80076e2:	e7fd      	b.n	80076e0 <xQueueGenericCreateStatic+0x28>
 80076e4:	683b      	ldr	r3, [r7, #0]
 80076e6:	2b00      	cmp	r3, #0
 80076e8:	d10b      	bne.n	8007702 <xQueueGenericCreateStatic+0x4a>
 80076ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076ee:	f383 8811 	msr	BASEPRI, r3
 80076f2:	f3bf 8f6f 	isb	sy
 80076f6:	f3bf 8f4f 	dsb	sy
 80076fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80076fc:	bf00      	nop
 80076fe:	bf00      	nop
 8007700:	e7fd      	b.n	80076fe <xQueueGenericCreateStatic+0x46>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	2b00      	cmp	r3, #0
 8007706:	d002      	beq.n	800770e <xQueueGenericCreateStatic+0x56>
 8007708:	68bb      	ldr	r3, [r7, #8]
 800770a:	2b00      	cmp	r3, #0
 800770c:	d001      	beq.n	8007712 <xQueueGenericCreateStatic+0x5a>
 800770e:	2301      	movs	r3, #1
 8007710:	e000      	b.n	8007714 <xQueueGenericCreateStatic+0x5c>
 8007712:	2300      	movs	r3, #0
 8007714:	2b00      	cmp	r3, #0
 8007716:	d10b      	bne.n	8007730 <xQueueGenericCreateStatic+0x78>
 8007718:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800771c:	f383 8811 	msr	BASEPRI, r3
 8007720:	f3bf 8f6f 	isb	sy
 8007724:	f3bf 8f4f 	dsb	sy
 8007728:	623b      	str	r3, [r7, #32]
 800772a:	bf00      	nop
 800772c:	bf00      	nop
 800772e:	e7fd      	b.n	800772c <xQueueGenericCreateStatic+0x74>
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	2b00      	cmp	r3, #0
 8007734:	d102      	bne.n	800773c <xQueueGenericCreateStatic+0x84>
 8007736:	68bb      	ldr	r3, [r7, #8]
 8007738:	2b00      	cmp	r3, #0
 800773a:	d101      	bne.n	8007740 <xQueueGenericCreateStatic+0x88>
 800773c:	2301      	movs	r3, #1
 800773e:	e000      	b.n	8007742 <xQueueGenericCreateStatic+0x8a>
 8007740:	2300      	movs	r3, #0
 8007742:	2b00      	cmp	r3, #0
 8007744:	d10b      	bne.n	800775e <xQueueGenericCreateStatic+0xa6>
 8007746:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800774a:	f383 8811 	msr	BASEPRI, r3
 800774e:	f3bf 8f6f 	isb	sy
 8007752:	f3bf 8f4f 	dsb	sy
 8007756:	61fb      	str	r3, [r7, #28]
 8007758:	bf00      	nop
 800775a:	bf00      	nop
 800775c:	e7fd      	b.n	800775a <xQueueGenericCreateStatic+0xa2>
 800775e:	2350      	movs	r3, #80	@ 0x50
 8007760:	617b      	str	r3, [r7, #20]
 8007762:	697b      	ldr	r3, [r7, #20]
 8007764:	2b50      	cmp	r3, #80	@ 0x50
 8007766:	d00b      	beq.n	8007780 <xQueueGenericCreateStatic+0xc8>
 8007768:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800776c:	f383 8811 	msr	BASEPRI, r3
 8007770:	f3bf 8f6f 	isb	sy
 8007774:	f3bf 8f4f 	dsb	sy
 8007778:	61bb      	str	r3, [r7, #24]
 800777a:	bf00      	nop
 800777c:	bf00      	nop
 800777e:	e7fd      	b.n	800777c <xQueueGenericCreateStatic+0xc4>
 8007780:	697b      	ldr	r3, [r7, #20]
 8007782:	683b      	ldr	r3, [r7, #0]
 8007784:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007786:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007788:	2b00      	cmp	r3, #0
 800778a:	d00d      	beq.n	80077a8 <xQueueGenericCreateStatic+0xf0>
 800778c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800778e:	2201      	movs	r2, #1
 8007790:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007794:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8007798:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800779a:	9300      	str	r3, [sp, #0]
 800779c:	4613      	mov	r3, r2
 800779e:	687a      	ldr	r2, [r7, #4]
 80077a0:	68b9      	ldr	r1, [r7, #8]
 80077a2:	68f8      	ldr	r0, [r7, #12]
 80077a4:	f000 f805 	bl	80077b2 <prvInitialiseNewQueue>
 80077a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80077aa:	4618      	mov	r0, r3
 80077ac:	3730      	adds	r7, #48	@ 0x30
 80077ae:	46bd      	mov	sp, r7
 80077b0:	bd80      	pop	{r7, pc}

080077b2 <prvInitialiseNewQueue>:
 80077b2:	b580      	push	{r7, lr}
 80077b4:	b084      	sub	sp, #16
 80077b6:	af00      	add	r7, sp, #0
 80077b8:	60f8      	str	r0, [r7, #12]
 80077ba:	60b9      	str	r1, [r7, #8]
 80077bc:	607a      	str	r2, [r7, #4]
 80077be:	70fb      	strb	r3, [r7, #3]
 80077c0:	68bb      	ldr	r3, [r7, #8]
 80077c2:	2b00      	cmp	r3, #0
 80077c4:	d103      	bne.n	80077ce <prvInitialiseNewQueue+0x1c>
 80077c6:	69bb      	ldr	r3, [r7, #24]
 80077c8:	69ba      	ldr	r2, [r7, #24]
 80077ca:	601a      	str	r2, [r3, #0]
 80077cc:	e002      	b.n	80077d4 <prvInitialiseNewQueue+0x22>
 80077ce:	69bb      	ldr	r3, [r7, #24]
 80077d0:	687a      	ldr	r2, [r7, #4]
 80077d2:	601a      	str	r2, [r3, #0]
 80077d4:	69bb      	ldr	r3, [r7, #24]
 80077d6:	68fa      	ldr	r2, [r7, #12]
 80077d8:	63da      	str	r2, [r3, #60]	@ 0x3c
 80077da:	69bb      	ldr	r3, [r7, #24]
 80077dc:	68ba      	ldr	r2, [r7, #8]
 80077de:	641a      	str	r2, [r3, #64]	@ 0x40
 80077e0:	2101      	movs	r1, #1
 80077e2:	69b8      	ldr	r0, [r7, #24]
 80077e4:	f7ff fefe 	bl	80075e4 <xQueueGenericReset>
 80077e8:	69bb      	ldr	r3, [r7, #24]
 80077ea:	78fa      	ldrb	r2, [r7, #3]
 80077ec:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 80077f0:	bf00      	nop
 80077f2:	3710      	adds	r7, #16
 80077f4:	46bd      	mov	sp, r7
 80077f6:	bd80      	pop	{r7, pc}

080077f8 <xQueueGenericSend>:
 80077f8:	b580      	push	{r7, lr}
 80077fa:	b08e      	sub	sp, #56	@ 0x38
 80077fc:	af00      	add	r7, sp, #0
 80077fe:	60f8      	str	r0, [r7, #12]
 8007800:	60b9      	str	r1, [r7, #8]
 8007802:	607a      	str	r2, [r7, #4]
 8007804:	603b      	str	r3, [r7, #0]
 8007806:	2300      	movs	r3, #0
 8007808:	637b      	str	r3, [r7, #52]	@ 0x34
 800780a:	68fb      	ldr	r3, [r7, #12]
 800780c:	633b      	str	r3, [r7, #48]	@ 0x30
 800780e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007810:	2b00      	cmp	r3, #0
 8007812:	d10b      	bne.n	800782c <xQueueGenericSend+0x34>
 8007814:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007818:	f383 8811 	msr	BASEPRI, r3
 800781c:	f3bf 8f6f 	isb	sy
 8007820:	f3bf 8f4f 	dsb	sy
 8007824:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007826:	bf00      	nop
 8007828:	bf00      	nop
 800782a:	e7fd      	b.n	8007828 <xQueueGenericSend+0x30>
 800782c:	68bb      	ldr	r3, [r7, #8]
 800782e:	2b00      	cmp	r3, #0
 8007830:	d103      	bne.n	800783a <xQueueGenericSend+0x42>
 8007832:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007834:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007836:	2b00      	cmp	r3, #0
 8007838:	d101      	bne.n	800783e <xQueueGenericSend+0x46>
 800783a:	2301      	movs	r3, #1
 800783c:	e000      	b.n	8007840 <xQueueGenericSend+0x48>
 800783e:	2300      	movs	r3, #0
 8007840:	2b00      	cmp	r3, #0
 8007842:	d10b      	bne.n	800785c <xQueueGenericSend+0x64>
 8007844:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007848:	f383 8811 	msr	BASEPRI, r3
 800784c:	f3bf 8f6f 	isb	sy
 8007850:	f3bf 8f4f 	dsb	sy
 8007854:	627b      	str	r3, [r7, #36]	@ 0x24
 8007856:	bf00      	nop
 8007858:	bf00      	nop
 800785a:	e7fd      	b.n	8007858 <xQueueGenericSend+0x60>
 800785c:	683b      	ldr	r3, [r7, #0]
 800785e:	2b02      	cmp	r3, #2
 8007860:	d103      	bne.n	800786a <xQueueGenericSend+0x72>
 8007862:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007864:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007866:	2b01      	cmp	r3, #1
 8007868:	d101      	bne.n	800786e <xQueueGenericSend+0x76>
 800786a:	2301      	movs	r3, #1
 800786c:	e000      	b.n	8007870 <xQueueGenericSend+0x78>
 800786e:	2300      	movs	r3, #0
 8007870:	2b00      	cmp	r3, #0
 8007872:	d10b      	bne.n	800788c <xQueueGenericSend+0x94>
 8007874:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007878:	f383 8811 	msr	BASEPRI, r3
 800787c:	f3bf 8f6f 	isb	sy
 8007880:	f3bf 8f4f 	dsb	sy
 8007884:	623b      	str	r3, [r7, #32]
 8007886:	bf00      	nop
 8007888:	bf00      	nop
 800788a:	e7fd      	b.n	8007888 <xQueueGenericSend+0x90>
 800788c:	f001 f9fc 	bl	8008c88 <xTaskGetSchedulerState>
 8007890:	4603      	mov	r3, r0
 8007892:	2b00      	cmp	r3, #0
 8007894:	d102      	bne.n	800789c <xQueueGenericSend+0xa4>
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	2b00      	cmp	r3, #0
 800789a:	d101      	bne.n	80078a0 <xQueueGenericSend+0xa8>
 800789c:	2301      	movs	r3, #1
 800789e:	e000      	b.n	80078a2 <xQueueGenericSend+0xaa>
 80078a0:	2300      	movs	r3, #0
 80078a2:	2b00      	cmp	r3, #0
 80078a4:	d10b      	bne.n	80078be <xQueueGenericSend+0xc6>
 80078a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078aa:	f383 8811 	msr	BASEPRI, r3
 80078ae:	f3bf 8f6f 	isb	sy
 80078b2:	f3bf 8f4f 	dsb	sy
 80078b6:	61fb      	str	r3, [r7, #28]
 80078b8:	bf00      	nop
 80078ba:	bf00      	nop
 80078bc:	e7fd      	b.n	80078ba <xQueueGenericSend+0xc2>
 80078be:	f001 ff53 	bl	8009768 <vPortEnterCritical>
 80078c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078c4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80078c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80078ca:	429a      	cmp	r2, r3
 80078cc:	d302      	bcc.n	80078d4 <xQueueGenericSend+0xdc>
 80078ce:	683b      	ldr	r3, [r7, #0]
 80078d0:	2b02      	cmp	r3, #2
 80078d2:	d129      	bne.n	8007928 <xQueueGenericSend+0x130>
 80078d4:	683a      	ldr	r2, [r7, #0]
 80078d6:	68b9      	ldr	r1, [r7, #8]
 80078d8:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80078da:	f000 fa0f 	bl	8007cfc <prvCopyDataToQueue>
 80078de:	62f8      	str	r0, [r7, #44]	@ 0x2c
 80078e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80078e4:	2b00      	cmp	r3, #0
 80078e6:	d010      	beq.n	800790a <xQueueGenericSend+0x112>
 80078e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078ea:	3324      	adds	r3, #36	@ 0x24
 80078ec:	4618      	mov	r0, r3
 80078ee:	f001 f805 	bl	80088fc <xTaskRemoveFromEventList>
 80078f2:	4603      	mov	r3, r0
 80078f4:	2b00      	cmp	r3, #0
 80078f6:	d013      	beq.n	8007920 <xQueueGenericSend+0x128>
 80078f8:	4b3f      	ldr	r3, [pc, #252]	@ (80079f8 <xQueueGenericSend+0x200>)
 80078fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80078fe:	601a      	str	r2, [r3, #0]
 8007900:	f3bf 8f4f 	dsb	sy
 8007904:	f3bf 8f6f 	isb	sy
 8007908:	e00a      	b.n	8007920 <xQueueGenericSend+0x128>
 800790a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800790c:	2b00      	cmp	r3, #0
 800790e:	d007      	beq.n	8007920 <xQueueGenericSend+0x128>
 8007910:	4b39      	ldr	r3, [pc, #228]	@ (80079f8 <xQueueGenericSend+0x200>)
 8007912:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007916:	601a      	str	r2, [r3, #0]
 8007918:	f3bf 8f4f 	dsb	sy
 800791c:	f3bf 8f6f 	isb	sy
 8007920:	f001 ff54 	bl	80097cc <vPortExitCritical>
 8007924:	2301      	movs	r3, #1
 8007926:	e063      	b.n	80079f0 <xQueueGenericSend+0x1f8>
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	2b00      	cmp	r3, #0
 800792c:	d103      	bne.n	8007936 <xQueueGenericSend+0x13e>
 800792e:	f001 ff4d 	bl	80097cc <vPortExitCritical>
 8007932:	2300      	movs	r3, #0
 8007934:	e05c      	b.n	80079f0 <xQueueGenericSend+0x1f8>
 8007936:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007938:	2b00      	cmp	r3, #0
 800793a:	d106      	bne.n	800794a <xQueueGenericSend+0x152>
 800793c:	f107 0314 	add.w	r3, r7, #20
 8007940:	4618      	mov	r0, r3
 8007942:	f001 f83f 	bl	80089c4 <vTaskInternalSetTimeOutState>
 8007946:	2301      	movs	r3, #1
 8007948:	637b      	str	r3, [r7, #52]	@ 0x34
 800794a:	f001 ff3f 	bl	80097cc <vPortExitCritical>
 800794e:	f000 fda7 	bl	80084a0 <vTaskSuspendAll>
 8007952:	f001 ff09 	bl	8009768 <vPortEnterCritical>
 8007956:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007958:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800795c:	b25b      	sxtb	r3, r3
 800795e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007962:	d103      	bne.n	800796c <xQueueGenericSend+0x174>
 8007964:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007966:	2200      	movs	r2, #0
 8007968:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800796c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800796e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007972:	b25b      	sxtb	r3, r3
 8007974:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007978:	d103      	bne.n	8007982 <xQueueGenericSend+0x18a>
 800797a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800797c:	2200      	movs	r2, #0
 800797e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007982:	f001 ff23 	bl	80097cc <vPortExitCritical>
 8007986:	1d3a      	adds	r2, r7, #4
 8007988:	f107 0314 	add.w	r3, r7, #20
 800798c:	4611      	mov	r1, r2
 800798e:	4618      	mov	r0, r3
 8007990:	f001 f82e 	bl	80089f0 <xTaskCheckForTimeOut>
 8007994:	4603      	mov	r3, r0
 8007996:	2b00      	cmp	r3, #0
 8007998:	d124      	bne.n	80079e4 <xQueueGenericSend+0x1ec>
 800799a:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800799c:	f000 faa6 	bl	8007eec <prvIsQueueFull>
 80079a0:	4603      	mov	r3, r0
 80079a2:	2b00      	cmp	r3, #0
 80079a4:	d018      	beq.n	80079d8 <xQueueGenericSend+0x1e0>
 80079a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80079a8:	3310      	adds	r3, #16
 80079aa:	687a      	ldr	r2, [r7, #4]
 80079ac:	4611      	mov	r1, r2
 80079ae:	4618      	mov	r0, r3
 80079b0:	f000 ff52 	bl	8008858 <vTaskPlaceOnEventList>
 80079b4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80079b6:	f000 fa31 	bl	8007e1c <prvUnlockQueue>
 80079ba:	f000 fd7f 	bl	80084bc <xTaskResumeAll>
 80079be:	4603      	mov	r3, r0
 80079c0:	2b00      	cmp	r3, #0
 80079c2:	f47f af7c 	bne.w	80078be <xQueueGenericSend+0xc6>
 80079c6:	4b0c      	ldr	r3, [pc, #48]	@ (80079f8 <xQueueGenericSend+0x200>)
 80079c8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80079cc:	601a      	str	r2, [r3, #0]
 80079ce:	f3bf 8f4f 	dsb	sy
 80079d2:	f3bf 8f6f 	isb	sy
 80079d6:	e772      	b.n	80078be <xQueueGenericSend+0xc6>
 80079d8:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80079da:	f000 fa1f 	bl	8007e1c <prvUnlockQueue>
 80079de:	f000 fd6d 	bl	80084bc <xTaskResumeAll>
 80079e2:	e76c      	b.n	80078be <xQueueGenericSend+0xc6>
 80079e4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80079e6:	f000 fa19 	bl	8007e1c <prvUnlockQueue>
 80079ea:	f000 fd67 	bl	80084bc <xTaskResumeAll>
 80079ee:	2300      	movs	r3, #0
 80079f0:	4618      	mov	r0, r3
 80079f2:	3738      	adds	r7, #56	@ 0x38
 80079f4:	46bd      	mov	sp, r7
 80079f6:	bd80      	pop	{r7, pc}
 80079f8:	e000ed04 	.word	0xe000ed04

080079fc <xQueueGenericSendFromISR>:
 80079fc:	b580      	push	{r7, lr}
 80079fe:	b090      	sub	sp, #64	@ 0x40
 8007a00:	af00      	add	r7, sp, #0
 8007a02:	60f8      	str	r0, [r7, #12]
 8007a04:	60b9      	str	r1, [r7, #8]
 8007a06:	607a      	str	r2, [r7, #4]
 8007a08:	603b      	str	r3, [r7, #0]
 8007a0a:	68fb      	ldr	r3, [r7, #12]
 8007a0c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007a0e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007a10:	2b00      	cmp	r3, #0
 8007a12:	d10b      	bne.n	8007a2c <xQueueGenericSendFromISR+0x30>
 8007a14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a18:	f383 8811 	msr	BASEPRI, r3
 8007a1c:	f3bf 8f6f 	isb	sy
 8007a20:	f3bf 8f4f 	dsb	sy
 8007a24:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007a26:	bf00      	nop
 8007a28:	bf00      	nop
 8007a2a:	e7fd      	b.n	8007a28 <xQueueGenericSendFromISR+0x2c>
 8007a2c:	68bb      	ldr	r3, [r7, #8]
 8007a2e:	2b00      	cmp	r3, #0
 8007a30:	d103      	bne.n	8007a3a <xQueueGenericSendFromISR+0x3e>
 8007a32:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007a34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007a36:	2b00      	cmp	r3, #0
 8007a38:	d101      	bne.n	8007a3e <xQueueGenericSendFromISR+0x42>
 8007a3a:	2301      	movs	r3, #1
 8007a3c:	e000      	b.n	8007a40 <xQueueGenericSendFromISR+0x44>
 8007a3e:	2300      	movs	r3, #0
 8007a40:	2b00      	cmp	r3, #0
 8007a42:	d10b      	bne.n	8007a5c <xQueueGenericSendFromISR+0x60>
 8007a44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a48:	f383 8811 	msr	BASEPRI, r3
 8007a4c:	f3bf 8f6f 	isb	sy
 8007a50:	f3bf 8f4f 	dsb	sy
 8007a54:	627b      	str	r3, [r7, #36]	@ 0x24
 8007a56:	bf00      	nop
 8007a58:	bf00      	nop
 8007a5a:	e7fd      	b.n	8007a58 <xQueueGenericSendFromISR+0x5c>
 8007a5c:	683b      	ldr	r3, [r7, #0]
 8007a5e:	2b02      	cmp	r3, #2
 8007a60:	d103      	bne.n	8007a6a <xQueueGenericSendFromISR+0x6e>
 8007a62:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007a64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007a66:	2b01      	cmp	r3, #1
 8007a68:	d101      	bne.n	8007a6e <xQueueGenericSendFromISR+0x72>
 8007a6a:	2301      	movs	r3, #1
 8007a6c:	e000      	b.n	8007a70 <xQueueGenericSendFromISR+0x74>
 8007a6e:	2300      	movs	r3, #0
 8007a70:	2b00      	cmp	r3, #0
 8007a72:	d10b      	bne.n	8007a8c <xQueueGenericSendFromISR+0x90>
 8007a74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a78:	f383 8811 	msr	BASEPRI, r3
 8007a7c:	f3bf 8f6f 	isb	sy
 8007a80:	f3bf 8f4f 	dsb	sy
 8007a84:	623b      	str	r3, [r7, #32]
 8007a86:	bf00      	nop
 8007a88:	bf00      	nop
 8007a8a:	e7fd      	b.n	8007a88 <xQueueGenericSendFromISR+0x8c>
 8007a8c:	f001 ff4c 	bl	8009928 <vPortValidateInterruptPriority>
 8007a90:	f3ef 8211 	mrs	r2, BASEPRI
 8007a94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a98:	f383 8811 	msr	BASEPRI, r3
 8007a9c:	f3bf 8f6f 	isb	sy
 8007aa0:	f3bf 8f4f 	dsb	sy
 8007aa4:	61fa      	str	r2, [r7, #28]
 8007aa6:	61bb      	str	r3, [r7, #24]
 8007aa8:	69fb      	ldr	r3, [r7, #28]
 8007aaa:	637b      	str	r3, [r7, #52]	@ 0x34
 8007aac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007aae:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007ab0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ab2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007ab4:	429a      	cmp	r2, r3
 8007ab6:	d302      	bcc.n	8007abe <xQueueGenericSendFromISR+0xc2>
 8007ab8:	683b      	ldr	r3, [r7, #0]
 8007aba:	2b02      	cmp	r3, #2
 8007abc:	d12f      	bne.n	8007b1e <xQueueGenericSendFromISR+0x122>
 8007abe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ac0:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007ac4:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8007ac8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007aca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007acc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007ace:	683a      	ldr	r2, [r7, #0]
 8007ad0:	68b9      	ldr	r1, [r7, #8]
 8007ad2:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8007ad4:	f000 f912 	bl	8007cfc <prvCopyDataToQueue>
 8007ad8:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 8007adc:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007ae0:	d112      	bne.n	8007b08 <xQueueGenericSendFromISR+0x10c>
 8007ae2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ae4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	d016      	beq.n	8007b18 <xQueueGenericSendFromISR+0x11c>
 8007aea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007aec:	3324      	adds	r3, #36	@ 0x24
 8007aee:	4618      	mov	r0, r3
 8007af0:	f000 ff04 	bl	80088fc <xTaskRemoveFromEventList>
 8007af4:	4603      	mov	r3, r0
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d00e      	beq.n	8007b18 <xQueueGenericSendFromISR+0x11c>
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	2b00      	cmp	r3, #0
 8007afe:	d00b      	beq.n	8007b18 <xQueueGenericSendFromISR+0x11c>
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	2201      	movs	r2, #1
 8007b04:	601a      	str	r2, [r3, #0]
 8007b06:	e007      	b.n	8007b18 <xQueueGenericSendFromISR+0x11c>
 8007b08:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8007b0c:	3301      	adds	r3, #1
 8007b0e:	b2db      	uxtb	r3, r3
 8007b10:	b25a      	sxtb	r2, r3
 8007b12:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007b14:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007b18:	2301      	movs	r3, #1
 8007b1a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007b1c:	e001      	b.n	8007b22 <xQueueGenericSendFromISR+0x126>
 8007b1e:	2300      	movs	r3, #0
 8007b20:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007b22:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007b24:	617b      	str	r3, [r7, #20]
 8007b26:	697b      	ldr	r3, [r7, #20]
 8007b28:	f383 8811 	msr	BASEPRI, r3
 8007b2c:	bf00      	nop
 8007b2e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007b30:	4618      	mov	r0, r3
 8007b32:	3740      	adds	r7, #64	@ 0x40
 8007b34:	46bd      	mov	sp, r7
 8007b36:	bd80      	pop	{r7, pc}

08007b38 <xQueueReceive>:
 8007b38:	b580      	push	{r7, lr}
 8007b3a:	b08c      	sub	sp, #48	@ 0x30
 8007b3c:	af00      	add	r7, sp, #0
 8007b3e:	60f8      	str	r0, [r7, #12]
 8007b40:	60b9      	str	r1, [r7, #8]
 8007b42:	607a      	str	r2, [r7, #4]
 8007b44:	2300      	movs	r3, #0
 8007b46:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007b48:	68fb      	ldr	r3, [r7, #12]
 8007b4a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007b4c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007b4e:	2b00      	cmp	r3, #0
 8007b50:	d10b      	bne.n	8007b6a <xQueueReceive+0x32>
 8007b52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b56:	f383 8811 	msr	BASEPRI, r3
 8007b5a:	f3bf 8f6f 	isb	sy
 8007b5e:	f3bf 8f4f 	dsb	sy
 8007b62:	623b      	str	r3, [r7, #32]
 8007b64:	bf00      	nop
 8007b66:	bf00      	nop
 8007b68:	e7fd      	b.n	8007b66 <xQueueReceive+0x2e>
 8007b6a:	68bb      	ldr	r3, [r7, #8]
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	d103      	bne.n	8007b78 <xQueueReceive+0x40>
 8007b70:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007b72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007b74:	2b00      	cmp	r3, #0
 8007b76:	d101      	bne.n	8007b7c <xQueueReceive+0x44>
 8007b78:	2301      	movs	r3, #1
 8007b7a:	e000      	b.n	8007b7e <xQueueReceive+0x46>
 8007b7c:	2300      	movs	r3, #0
 8007b7e:	2b00      	cmp	r3, #0
 8007b80:	d10b      	bne.n	8007b9a <xQueueReceive+0x62>
 8007b82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b86:	f383 8811 	msr	BASEPRI, r3
 8007b8a:	f3bf 8f6f 	isb	sy
 8007b8e:	f3bf 8f4f 	dsb	sy
 8007b92:	61fb      	str	r3, [r7, #28]
 8007b94:	bf00      	nop
 8007b96:	bf00      	nop
 8007b98:	e7fd      	b.n	8007b96 <xQueueReceive+0x5e>
 8007b9a:	f001 f875 	bl	8008c88 <xTaskGetSchedulerState>
 8007b9e:	4603      	mov	r3, r0
 8007ba0:	2b00      	cmp	r3, #0
 8007ba2:	d102      	bne.n	8007baa <xQueueReceive+0x72>
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	2b00      	cmp	r3, #0
 8007ba8:	d101      	bne.n	8007bae <xQueueReceive+0x76>
 8007baa:	2301      	movs	r3, #1
 8007bac:	e000      	b.n	8007bb0 <xQueueReceive+0x78>
 8007bae:	2300      	movs	r3, #0
 8007bb0:	2b00      	cmp	r3, #0
 8007bb2:	d10b      	bne.n	8007bcc <xQueueReceive+0x94>
 8007bb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bb8:	f383 8811 	msr	BASEPRI, r3
 8007bbc:	f3bf 8f6f 	isb	sy
 8007bc0:	f3bf 8f4f 	dsb	sy
 8007bc4:	61bb      	str	r3, [r7, #24]
 8007bc6:	bf00      	nop
 8007bc8:	bf00      	nop
 8007bca:	e7fd      	b.n	8007bc8 <xQueueReceive+0x90>
 8007bcc:	f001 fdcc 	bl	8009768 <vPortEnterCritical>
 8007bd0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007bd2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007bd4:	627b      	str	r3, [r7, #36]	@ 0x24
 8007bd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007bd8:	2b00      	cmp	r3, #0
 8007bda:	d01f      	beq.n	8007c1c <xQueueReceive+0xe4>
 8007bdc:	68b9      	ldr	r1, [r7, #8]
 8007bde:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007be0:	f000 f8f6 	bl	8007dd0 <prvCopyDataFromQueue>
 8007be4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007be6:	1e5a      	subs	r2, r3, #1
 8007be8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007bea:	639a      	str	r2, [r3, #56]	@ 0x38
 8007bec:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007bee:	691b      	ldr	r3, [r3, #16]
 8007bf0:	2b00      	cmp	r3, #0
 8007bf2:	d00f      	beq.n	8007c14 <xQueueReceive+0xdc>
 8007bf4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007bf6:	3310      	adds	r3, #16
 8007bf8:	4618      	mov	r0, r3
 8007bfa:	f000 fe7f 	bl	80088fc <xTaskRemoveFromEventList>
 8007bfe:	4603      	mov	r3, r0
 8007c00:	2b00      	cmp	r3, #0
 8007c02:	d007      	beq.n	8007c14 <xQueueReceive+0xdc>
 8007c04:	4b3c      	ldr	r3, [pc, #240]	@ (8007cf8 <xQueueReceive+0x1c0>)
 8007c06:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007c0a:	601a      	str	r2, [r3, #0]
 8007c0c:	f3bf 8f4f 	dsb	sy
 8007c10:	f3bf 8f6f 	isb	sy
 8007c14:	f001 fdda 	bl	80097cc <vPortExitCritical>
 8007c18:	2301      	movs	r3, #1
 8007c1a:	e069      	b.n	8007cf0 <xQueueReceive+0x1b8>
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	2b00      	cmp	r3, #0
 8007c20:	d103      	bne.n	8007c2a <xQueueReceive+0xf2>
 8007c22:	f001 fdd3 	bl	80097cc <vPortExitCritical>
 8007c26:	2300      	movs	r3, #0
 8007c28:	e062      	b.n	8007cf0 <xQueueReceive+0x1b8>
 8007c2a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	d106      	bne.n	8007c3e <xQueueReceive+0x106>
 8007c30:	f107 0310 	add.w	r3, r7, #16
 8007c34:	4618      	mov	r0, r3
 8007c36:	f000 fec5 	bl	80089c4 <vTaskInternalSetTimeOutState>
 8007c3a:	2301      	movs	r3, #1
 8007c3c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007c3e:	f001 fdc5 	bl	80097cc <vPortExitCritical>
 8007c42:	f000 fc2d 	bl	80084a0 <vTaskSuspendAll>
 8007c46:	f001 fd8f 	bl	8009768 <vPortEnterCritical>
 8007c4a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007c4c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8007c50:	b25b      	sxtb	r3, r3
 8007c52:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007c56:	d103      	bne.n	8007c60 <xQueueReceive+0x128>
 8007c58:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007c5a:	2200      	movs	r2, #0
 8007c5c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007c60:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007c62:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007c66:	b25b      	sxtb	r3, r3
 8007c68:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007c6c:	d103      	bne.n	8007c76 <xQueueReceive+0x13e>
 8007c6e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007c70:	2200      	movs	r2, #0
 8007c72:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007c76:	f001 fda9 	bl	80097cc <vPortExitCritical>
 8007c7a:	1d3a      	adds	r2, r7, #4
 8007c7c:	f107 0310 	add.w	r3, r7, #16
 8007c80:	4611      	mov	r1, r2
 8007c82:	4618      	mov	r0, r3
 8007c84:	f000 feb4 	bl	80089f0 <xTaskCheckForTimeOut>
 8007c88:	4603      	mov	r3, r0
 8007c8a:	2b00      	cmp	r3, #0
 8007c8c:	d123      	bne.n	8007cd6 <xQueueReceive+0x19e>
 8007c8e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007c90:	f000 f916 	bl	8007ec0 <prvIsQueueEmpty>
 8007c94:	4603      	mov	r3, r0
 8007c96:	2b00      	cmp	r3, #0
 8007c98:	d017      	beq.n	8007cca <xQueueReceive+0x192>
 8007c9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007c9c:	3324      	adds	r3, #36	@ 0x24
 8007c9e:	687a      	ldr	r2, [r7, #4]
 8007ca0:	4611      	mov	r1, r2
 8007ca2:	4618      	mov	r0, r3
 8007ca4:	f000 fdd8 	bl	8008858 <vTaskPlaceOnEventList>
 8007ca8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007caa:	f000 f8b7 	bl	8007e1c <prvUnlockQueue>
 8007cae:	f000 fc05 	bl	80084bc <xTaskResumeAll>
 8007cb2:	4603      	mov	r3, r0
 8007cb4:	2b00      	cmp	r3, #0
 8007cb6:	d189      	bne.n	8007bcc <xQueueReceive+0x94>
 8007cb8:	4b0f      	ldr	r3, [pc, #60]	@ (8007cf8 <xQueueReceive+0x1c0>)
 8007cba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007cbe:	601a      	str	r2, [r3, #0]
 8007cc0:	f3bf 8f4f 	dsb	sy
 8007cc4:	f3bf 8f6f 	isb	sy
 8007cc8:	e780      	b.n	8007bcc <xQueueReceive+0x94>
 8007cca:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007ccc:	f000 f8a6 	bl	8007e1c <prvUnlockQueue>
 8007cd0:	f000 fbf4 	bl	80084bc <xTaskResumeAll>
 8007cd4:	e77a      	b.n	8007bcc <xQueueReceive+0x94>
 8007cd6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007cd8:	f000 f8a0 	bl	8007e1c <prvUnlockQueue>
 8007cdc:	f000 fbee 	bl	80084bc <xTaskResumeAll>
 8007ce0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007ce2:	f000 f8ed 	bl	8007ec0 <prvIsQueueEmpty>
 8007ce6:	4603      	mov	r3, r0
 8007ce8:	2b00      	cmp	r3, #0
 8007cea:	f43f af6f 	beq.w	8007bcc <xQueueReceive+0x94>
 8007cee:	2300      	movs	r3, #0
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	3730      	adds	r7, #48	@ 0x30
 8007cf4:	46bd      	mov	sp, r7
 8007cf6:	bd80      	pop	{r7, pc}
 8007cf8:	e000ed04 	.word	0xe000ed04

08007cfc <prvCopyDataToQueue>:
 8007cfc:	b580      	push	{r7, lr}
 8007cfe:	b086      	sub	sp, #24
 8007d00:	af00      	add	r7, sp, #0
 8007d02:	60f8      	str	r0, [r7, #12]
 8007d04:	60b9      	str	r1, [r7, #8]
 8007d06:	607a      	str	r2, [r7, #4]
 8007d08:	2300      	movs	r3, #0
 8007d0a:	617b      	str	r3, [r7, #20]
 8007d0c:	68fb      	ldr	r3, [r7, #12]
 8007d0e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007d10:	613b      	str	r3, [r7, #16]
 8007d12:	68fb      	ldr	r3, [r7, #12]
 8007d14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d16:	2b00      	cmp	r3, #0
 8007d18:	d10d      	bne.n	8007d36 <prvCopyDataToQueue+0x3a>
 8007d1a:	68fb      	ldr	r3, [r7, #12]
 8007d1c:	681b      	ldr	r3, [r3, #0]
 8007d1e:	2b00      	cmp	r3, #0
 8007d20:	d14d      	bne.n	8007dbe <prvCopyDataToQueue+0xc2>
 8007d22:	68fb      	ldr	r3, [r7, #12]
 8007d24:	689b      	ldr	r3, [r3, #8]
 8007d26:	4618      	mov	r0, r3
 8007d28:	f000 ffcc 	bl	8008cc4 <xTaskPriorityDisinherit>
 8007d2c:	6178      	str	r0, [r7, #20]
 8007d2e:	68fb      	ldr	r3, [r7, #12]
 8007d30:	2200      	movs	r2, #0
 8007d32:	609a      	str	r2, [r3, #8]
 8007d34:	e043      	b.n	8007dbe <prvCopyDataToQueue+0xc2>
 8007d36:	687b      	ldr	r3, [r7, #4]
 8007d38:	2b00      	cmp	r3, #0
 8007d3a:	d119      	bne.n	8007d70 <prvCopyDataToQueue+0x74>
 8007d3c:	68fb      	ldr	r3, [r7, #12]
 8007d3e:	6858      	ldr	r0, [r3, #4]
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d44:	461a      	mov	r2, r3
 8007d46:	68b9      	ldr	r1, [r7, #8]
 8007d48:	f002 f8a2 	bl	8009e90 <memcpy>
 8007d4c:	68fb      	ldr	r3, [r7, #12]
 8007d4e:	685a      	ldr	r2, [r3, #4]
 8007d50:	68fb      	ldr	r3, [r7, #12]
 8007d52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d54:	441a      	add	r2, r3
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	605a      	str	r2, [r3, #4]
 8007d5a:	68fb      	ldr	r3, [r7, #12]
 8007d5c:	685a      	ldr	r2, [r3, #4]
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	689b      	ldr	r3, [r3, #8]
 8007d62:	429a      	cmp	r2, r3
 8007d64:	d32b      	bcc.n	8007dbe <prvCopyDataToQueue+0xc2>
 8007d66:	68fb      	ldr	r3, [r7, #12]
 8007d68:	681a      	ldr	r2, [r3, #0]
 8007d6a:	68fb      	ldr	r3, [r7, #12]
 8007d6c:	605a      	str	r2, [r3, #4]
 8007d6e:	e026      	b.n	8007dbe <prvCopyDataToQueue+0xc2>
 8007d70:	68fb      	ldr	r3, [r7, #12]
 8007d72:	68d8      	ldr	r0, [r3, #12]
 8007d74:	68fb      	ldr	r3, [r7, #12]
 8007d76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d78:	461a      	mov	r2, r3
 8007d7a:	68b9      	ldr	r1, [r7, #8]
 8007d7c:	f002 f888 	bl	8009e90 <memcpy>
 8007d80:	68fb      	ldr	r3, [r7, #12]
 8007d82:	68da      	ldr	r2, [r3, #12]
 8007d84:	68fb      	ldr	r3, [r7, #12]
 8007d86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d88:	425b      	negs	r3, r3
 8007d8a:	441a      	add	r2, r3
 8007d8c:	68fb      	ldr	r3, [r7, #12]
 8007d8e:	60da      	str	r2, [r3, #12]
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	68da      	ldr	r2, [r3, #12]
 8007d94:	68fb      	ldr	r3, [r7, #12]
 8007d96:	681b      	ldr	r3, [r3, #0]
 8007d98:	429a      	cmp	r2, r3
 8007d9a:	d207      	bcs.n	8007dac <prvCopyDataToQueue+0xb0>
 8007d9c:	68fb      	ldr	r3, [r7, #12]
 8007d9e:	689a      	ldr	r2, [r3, #8]
 8007da0:	68fb      	ldr	r3, [r7, #12]
 8007da2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007da4:	425b      	negs	r3, r3
 8007da6:	441a      	add	r2, r3
 8007da8:	68fb      	ldr	r3, [r7, #12]
 8007daa:	60da      	str	r2, [r3, #12]
 8007dac:	687b      	ldr	r3, [r7, #4]
 8007dae:	2b02      	cmp	r3, #2
 8007db0:	d105      	bne.n	8007dbe <prvCopyDataToQueue+0xc2>
 8007db2:	693b      	ldr	r3, [r7, #16]
 8007db4:	2b00      	cmp	r3, #0
 8007db6:	d002      	beq.n	8007dbe <prvCopyDataToQueue+0xc2>
 8007db8:	693b      	ldr	r3, [r7, #16]
 8007dba:	3b01      	subs	r3, #1
 8007dbc:	613b      	str	r3, [r7, #16]
 8007dbe:	693b      	ldr	r3, [r7, #16]
 8007dc0:	1c5a      	adds	r2, r3, #1
 8007dc2:	68fb      	ldr	r3, [r7, #12]
 8007dc4:	639a      	str	r2, [r3, #56]	@ 0x38
 8007dc6:	697b      	ldr	r3, [r7, #20]
 8007dc8:	4618      	mov	r0, r3
 8007dca:	3718      	adds	r7, #24
 8007dcc:	46bd      	mov	sp, r7
 8007dce:	bd80      	pop	{r7, pc}

08007dd0 <prvCopyDataFromQueue>:
 8007dd0:	b580      	push	{r7, lr}
 8007dd2:	b082      	sub	sp, #8
 8007dd4:	af00      	add	r7, sp, #0
 8007dd6:	6078      	str	r0, [r7, #4]
 8007dd8:	6039      	str	r1, [r7, #0]
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007dde:	2b00      	cmp	r3, #0
 8007de0:	d018      	beq.n	8007e14 <prvCopyDataFromQueue+0x44>
 8007de2:	687b      	ldr	r3, [r7, #4]
 8007de4:	68da      	ldr	r2, [r3, #12]
 8007de6:	687b      	ldr	r3, [r7, #4]
 8007de8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007dea:	441a      	add	r2, r3
 8007dec:	687b      	ldr	r3, [r7, #4]
 8007dee:	60da      	str	r2, [r3, #12]
 8007df0:	687b      	ldr	r3, [r7, #4]
 8007df2:	68da      	ldr	r2, [r3, #12]
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	689b      	ldr	r3, [r3, #8]
 8007df8:	429a      	cmp	r2, r3
 8007dfa:	d303      	bcc.n	8007e04 <prvCopyDataFromQueue+0x34>
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	681a      	ldr	r2, [r3, #0]
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	60da      	str	r2, [r3, #12]
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	68d9      	ldr	r1, [r3, #12]
 8007e08:	687b      	ldr	r3, [r7, #4]
 8007e0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007e0c:	461a      	mov	r2, r3
 8007e0e:	6838      	ldr	r0, [r7, #0]
 8007e10:	f002 f83e 	bl	8009e90 <memcpy>
 8007e14:	bf00      	nop
 8007e16:	3708      	adds	r7, #8
 8007e18:	46bd      	mov	sp, r7
 8007e1a:	bd80      	pop	{r7, pc}

08007e1c <prvUnlockQueue>:
 8007e1c:	b580      	push	{r7, lr}
 8007e1e:	b084      	sub	sp, #16
 8007e20:	af00      	add	r7, sp, #0
 8007e22:	6078      	str	r0, [r7, #4]
 8007e24:	f001 fca0 	bl	8009768 <vPortEnterCritical>
 8007e28:	687b      	ldr	r3, [r7, #4]
 8007e2a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007e2e:	73fb      	strb	r3, [r7, #15]
 8007e30:	e011      	b.n	8007e56 <prvUnlockQueue+0x3a>
 8007e32:	687b      	ldr	r3, [r7, #4]
 8007e34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007e36:	2b00      	cmp	r3, #0
 8007e38:	d012      	beq.n	8007e60 <prvUnlockQueue+0x44>
 8007e3a:	687b      	ldr	r3, [r7, #4]
 8007e3c:	3324      	adds	r3, #36	@ 0x24
 8007e3e:	4618      	mov	r0, r3
 8007e40:	f000 fd5c 	bl	80088fc <xTaskRemoveFromEventList>
 8007e44:	4603      	mov	r3, r0
 8007e46:	2b00      	cmp	r3, #0
 8007e48:	d001      	beq.n	8007e4e <prvUnlockQueue+0x32>
 8007e4a:	f000 fe35 	bl	8008ab8 <vTaskMissedYield>
 8007e4e:	7bfb      	ldrb	r3, [r7, #15]
 8007e50:	3b01      	subs	r3, #1
 8007e52:	b2db      	uxtb	r3, r3
 8007e54:	73fb      	strb	r3, [r7, #15]
 8007e56:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8007e5a:	2b00      	cmp	r3, #0
 8007e5c:	dce9      	bgt.n	8007e32 <prvUnlockQueue+0x16>
 8007e5e:	e000      	b.n	8007e62 <prvUnlockQueue+0x46>
 8007e60:	bf00      	nop
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	22ff      	movs	r2, #255	@ 0xff
 8007e66:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007e6a:	f001 fcaf 	bl	80097cc <vPortExitCritical>
 8007e6e:	f001 fc7b 	bl	8009768 <vPortEnterCritical>
 8007e72:	687b      	ldr	r3, [r7, #4]
 8007e74:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8007e78:	73bb      	strb	r3, [r7, #14]
 8007e7a:	e011      	b.n	8007ea0 <prvUnlockQueue+0x84>
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	691b      	ldr	r3, [r3, #16]
 8007e80:	2b00      	cmp	r3, #0
 8007e82:	d012      	beq.n	8007eaa <prvUnlockQueue+0x8e>
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	3310      	adds	r3, #16
 8007e88:	4618      	mov	r0, r3
 8007e8a:	f000 fd37 	bl	80088fc <xTaskRemoveFromEventList>
 8007e8e:	4603      	mov	r3, r0
 8007e90:	2b00      	cmp	r3, #0
 8007e92:	d001      	beq.n	8007e98 <prvUnlockQueue+0x7c>
 8007e94:	f000 fe10 	bl	8008ab8 <vTaskMissedYield>
 8007e98:	7bbb      	ldrb	r3, [r7, #14]
 8007e9a:	3b01      	subs	r3, #1
 8007e9c:	b2db      	uxtb	r3, r3
 8007e9e:	73bb      	strb	r3, [r7, #14]
 8007ea0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	dce9      	bgt.n	8007e7c <prvUnlockQueue+0x60>
 8007ea8:	e000      	b.n	8007eac <prvUnlockQueue+0x90>
 8007eaa:	bf00      	nop
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	22ff      	movs	r2, #255	@ 0xff
 8007eb0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007eb4:	f001 fc8a 	bl	80097cc <vPortExitCritical>
 8007eb8:	bf00      	nop
 8007eba:	3710      	adds	r7, #16
 8007ebc:	46bd      	mov	sp, r7
 8007ebe:	bd80      	pop	{r7, pc}

08007ec0 <prvIsQueueEmpty>:
 8007ec0:	b580      	push	{r7, lr}
 8007ec2:	b084      	sub	sp, #16
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	6078      	str	r0, [r7, #4]
 8007ec8:	f001 fc4e 	bl	8009768 <vPortEnterCritical>
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007ed0:	2b00      	cmp	r3, #0
 8007ed2:	d102      	bne.n	8007eda <prvIsQueueEmpty+0x1a>
 8007ed4:	2301      	movs	r3, #1
 8007ed6:	60fb      	str	r3, [r7, #12]
 8007ed8:	e001      	b.n	8007ede <prvIsQueueEmpty+0x1e>
 8007eda:	2300      	movs	r3, #0
 8007edc:	60fb      	str	r3, [r7, #12]
 8007ede:	f001 fc75 	bl	80097cc <vPortExitCritical>
 8007ee2:	68fb      	ldr	r3, [r7, #12]
 8007ee4:	4618      	mov	r0, r3
 8007ee6:	3710      	adds	r7, #16
 8007ee8:	46bd      	mov	sp, r7
 8007eea:	bd80      	pop	{r7, pc}

08007eec <prvIsQueueFull>:
 8007eec:	b580      	push	{r7, lr}
 8007eee:	b084      	sub	sp, #16
 8007ef0:	af00      	add	r7, sp, #0
 8007ef2:	6078      	str	r0, [r7, #4]
 8007ef4:	f001 fc38 	bl	8009768 <vPortEnterCritical>
 8007ef8:	687b      	ldr	r3, [r7, #4]
 8007efa:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007f00:	429a      	cmp	r2, r3
 8007f02:	d102      	bne.n	8007f0a <prvIsQueueFull+0x1e>
 8007f04:	2301      	movs	r3, #1
 8007f06:	60fb      	str	r3, [r7, #12]
 8007f08:	e001      	b.n	8007f0e <prvIsQueueFull+0x22>
 8007f0a:	2300      	movs	r3, #0
 8007f0c:	60fb      	str	r3, [r7, #12]
 8007f0e:	f001 fc5d 	bl	80097cc <vPortExitCritical>
 8007f12:	68fb      	ldr	r3, [r7, #12]
 8007f14:	4618      	mov	r0, r3
 8007f16:	3710      	adds	r7, #16
 8007f18:	46bd      	mov	sp, r7
 8007f1a:	bd80      	pop	{r7, pc}

08007f1c <vQueueAddToRegistry>:
 8007f1c:	b480      	push	{r7}
 8007f1e:	b085      	sub	sp, #20
 8007f20:	af00      	add	r7, sp, #0
 8007f22:	6078      	str	r0, [r7, #4]
 8007f24:	6039      	str	r1, [r7, #0]
 8007f26:	2300      	movs	r3, #0
 8007f28:	60fb      	str	r3, [r7, #12]
 8007f2a:	e014      	b.n	8007f56 <vQueueAddToRegistry+0x3a>
 8007f2c:	4a0f      	ldr	r2, [pc, #60]	@ (8007f6c <vQueueAddToRegistry+0x50>)
 8007f2e:	68fb      	ldr	r3, [r7, #12]
 8007f30:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8007f34:	2b00      	cmp	r3, #0
 8007f36:	d10b      	bne.n	8007f50 <vQueueAddToRegistry+0x34>
 8007f38:	490c      	ldr	r1, [pc, #48]	@ (8007f6c <vQueueAddToRegistry+0x50>)
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	683a      	ldr	r2, [r7, #0]
 8007f3e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8007f42:	4a0a      	ldr	r2, [pc, #40]	@ (8007f6c <vQueueAddToRegistry+0x50>)
 8007f44:	68fb      	ldr	r3, [r7, #12]
 8007f46:	00db      	lsls	r3, r3, #3
 8007f48:	4413      	add	r3, r2
 8007f4a:	687a      	ldr	r2, [r7, #4]
 8007f4c:	605a      	str	r2, [r3, #4]
 8007f4e:	e006      	b.n	8007f5e <vQueueAddToRegistry+0x42>
 8007f50:	68fb      	ldr	r3, [r7, #12]
 8007f52:	3301      	adds	r3, #1
 8007f54:	60fb      	str	r3, [r7, #12]
 8007f56:	68fb      	ldr	r3, [r7, #12]
 8007f58:	2b07      	cmp	r3, #7
 8007f5a:	d9e7      	bls.n	8007f2c <vQueueAddToRegistry+0x10>
 8007f5c:	bf00      	nop
 8007f5e:	bf00      	nop
 8007f60:	3714      	adds	r7, #20
 8007f62:	46bd      	mov	sp, r7
 8007f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f68:	4770      	bx	lr
 8007f6a:	bf00      	nop
 8007f6c:	20001224 	.word	0x20001224

08007f70 <vQueueWaitForMessageRestricted>:
 8007f70:	b580      	push	{r7, lr}
 8007f72:	b086      	sub	sp, #24
 8007f74:	af00      	add	r7, sp, #0
 8007f76:	60f8      	str	r0, [r7, #12]
 8007f78:	60b9      	str	r1, [r7, #8]
 8007f7a:	607a      	str	r2, [r7, #4]
 8007f7c:	68fb      	ldr	r3, [r7, #12]
 8007f7e:	617b      	str	r3, [r7, #20]
 8007f80:	f001 fbf2 	bl	8009768 <vPortEnterCritical>
 8007f84:	697b      	ldr	r3, [r7, #20]
 8007f86:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8007f8a:	b25b      	sxtb	r3, r3
 8007f8c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007f90:	d103      	bne.n	8007f9a <vQueueWaitForMessageRestricted+0x2a>
 8007f92:	697b      	ldr	r3, [r7, #20]
 8007f94:	2200      	movs	r2, #0
 8007f96:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007f9a:	697b      	ldr	r3, [r7, #20]
 8007f9c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007fa0:	b25b      	sxtb	r3, r3
 8007fa2:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007fa6:	d103      	bne.n	8007fb0 <vQueueWaitForMessageRestricted+0x40>
 8007fa8:	697b      	ldr	r3, [r7, #20]
 8007faa:	2200      	movs	r2, #0
 8007fac:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007fb0:	f001 fc0c 	bl	80097cc <vPortExitCritical>
 8007fb4:	697b      	ldr	r3, [r7, #20]
 8007fb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007fb8:	2b00      	cmp	r3, #0
 8007fba:	d106      	bne.n	8007fca <vQueueWaitForMessageRestricted+0x5a>
 8007fbc:	697b      	ldr	r3, [r7, #20]
 8007fbe:	3324      	adds	r3, #36	@ 0x24
 8007fc0:	687a      	ldr	r2, [r7, #4]
 8007fc2:	68b9      	ldr	r1, [r7, #8]
 8007fc4:	4618      	mov	r0, r3
 8007fc6:	f000 fc6d 	bl	80088a4 <vTaskPlaceOnEventListRestricted>
 8007fca:	6978      	ldr	r0, [r7, #20]
 8007fcc:	f7ff ff26 	bl	8007e1c <prvUnlockQueue>
 8007fd0:	bf00      	nop
 8007fd2:	3718      	adds	r7, #24
 8007fd4:	46bd      	mov	sp, r7
 8007fd6:	bd80      	pop	{r7, pc}

08007fd8 <xTaskCreateStatic>:
 8007fd8:	b580      	push	{r7, lr}
 8007fda:	b08e      	sub	sp, #56	@ 0x38
 8007fdc:	af04      	add	r7, sp, #16
 8007fde:	60f8      	str	r0, [r7, #12]
 8007fe0:	60b9      	str	r1, [r7, #8]
 8007fe2:	607a      	str	r2, [r7, #4]
 8007fe4:	603b      	str	r3, [r7, #0]
 8007fe6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007fe8:	2b00      	cmp	r3, #0
 8007fea:	d10b      	bne.n	8008004 <xTaskCreateStatic+0x2c>
 8007fec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ff0:	f383 8811 	msr	BASEPRI, r3
 8007ff4:	f3bf 8f6f 	isb	sy
 8007ff8:	f3bf 8f4f 	dsb	sy
 8007ffc:	623b      	str	r3, [r7, #32]
 8007ffe:	bf00      	nop
 8008000:	bf00      	nop
 8008002:	e7fd      	b.n	8008000 <xTaskCreateStatic+0x28>
 8008004:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008006:	2b00      	cmp	r3, #0
 8008008:	d10b      	bne.n	8008022 <xTaskCreateStatic+0x4a>
 800800a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800800e:	f383 8811 	msr	BASEPRI, r3
 8008012:	f3bf 8f6f 	isb	sy
 8008016:	f3bf 8f4f 	dsb	sy
 800801a:	61fb      	str	r3, [r7, #28]
 800801c:	bf00      	nop
 800801e:	bf00      	nop
 8008020:	e7fd      	b.n	800801e <xTaskCreateStatic+0x46>
 8008022:	23a8      	movs	r3, #168	@ 0xa8
 8008024:	613b      	str	r3, [r7, #16]
 8008026:	693b      	ldr	r3, [r7, #16]
 8008028:	2ba8      	cmp	r3, #168	@ 0xa8
 800802a:	d00b      	beq.n	8008044 <xTaskCreateStatic+0x6c>
 800802c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008030:	f383 8811 	msr	BASEPRI, r3
 8008034:	f3bf 8f6f 	isb	sy
 8008038:	f3bf 8f4f 	dsb	sy
 800803c:	61bb      	str	r3, [r7, #24]
 800803e:	bf00      	nop
 8008040:	bf00      	nop
 8008042:	e7fd      	b.n	8008040 <xTaskCreateStatic+0x68>
 8008044:	693b      	ldr	r3, [r7, #16]
 8008046:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008048:	2b00      	cmp	r3, #0
 800804a:	d01e      	beq.n	800808a <xTaskCreateStatic+0xb2>
 800804c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800804e:	2b00      	cmp	r3, #0
 8008050:	d01b      	beq.n	800808a <xTaskCreateStatic+0xb2>
 8008052:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008054:	627b      	str	r3, [r7, #36]	@ 0x24
 8008056:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008058:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800805a:	631a      	str	r2, [r3, #48]	@ 0x30
 800805c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800805e:	2202      	movs	r2, #2
 8008060:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8008064:	2300      	movs	r3, #0
 8008066:	9303      	str	r3, [sp, #12]
 8008068:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800806a:	9302      	str	r3, [sp, #8]
 800806c:	f107 0314 	add.w	r3, r7, #20
 8008070:	9301      	str	r3, [sp, #4]
 8008072:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008074:	9300      	str	r3, [sp, #0]
 8008076:	683b      	ldr	r3, [r7, #0]
 8008078:	687a      	ldr	r2, [r7, #4]
 800807a:	68b9      	ldr	r1, [r7, #8]
 800807c:	68f8      	ldr	r0, [r7, #12]
 800807e:	f000 f851 	bl	8008124 <prvInitialiseNewTask>
 8008082:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8008084:	f000 f8f6 	bl	8008274 <prvAddNewTaskToReadyList>
 8008088:	e001      	b.n	800808e <xTaskCreateStatic+0xb6>
 800808a:	2300      	movs	r3, #0
 800808c:	617b      	str	r3, [r7, #20]
 800808e:	697b      	ldr	r3, [r7, #20]
 8008090:	4618      	mov	r0, r3
 8008092:	3728      	adds	r7, #40	@ 0x28
 8008094:	46bd      	mov	sp, r7
 8008096:	bd80      	pop	{r7, pc}

08008098 <xTaskCreate>:
 8008098:	b580      	push	{r7, lr}
 800809a:	b08c      	sub	sp, #48	@ 0x30
 800809c:	af04      	add	r7, sp, #16
 800809e:	60f8      	str	r0, [r7, #12]
 80080a0:	60b9      	str	r1, [r7, #8]
 80080a2:	603b      	str	r3, [r7, #0]
 80080a4:	4613      	mov	r3, r2
 80080a6:	80fb      	strh	r3, [r7, #6]
 80080a8:	88fb      	ldrh	r3, [r7, #6]
 80080aa:	009b      	lsls	r3, r3, #2
 80080ac:	4618      	mov	r0, r3
 80080ae:	f001 fc7d 	bl	80099ac <pvPortMalloc>
 80080b2:	6178      	str	r0, [r7, #20]
 80080b4:	697b      	ldr	r3, [r7, #20]
 80080b6:	2b00      	cmp	r3, #0
 80080b8:	d00e      	beq.n	80080d8 <xTaskCreate+0x40>
 80080ba:	20a8      	movs	r0, #168	@ 0xa8
 80080bc:	f001 fc76 	bl	80099ac <pvPortMalloc>
 80080c0:	61f8      	str	r0, [r7, #28]
 80080c2:	69fb      	ldr	r3, [r7, #28]
 80080c4:	2b00      	cmp	r3, #0
 80080c6:	d003      	beq.n	80080d0 <xTaskCreate+0x38>
 80080c8:	69fb      	ldr	r3, [r7, #28]
 80080ca:	697a      	ldr	r2, [r7, #20]
 80080cc:	631a      	str	r2, [r3, #48]	@ 0x30
 80080ce:	e005      	b.n	80080dc <xTaskCreate+0x44>
 80080d0:	6978      	ldr	r0, [r7, #20]
 80080d2:	f001 fd39 	bl	8009b48 <vPortFree>
 80080d6:	e001      	b.n	80080dc <xTaskCreate+0x44>
 80080d8:	2300      	movs	r3, #0
 80080da:	61fb      	str	r3, [r7, #28]
 80080dc:	69fb      	ldr	r3, [r7, #28]
 80080de:	2b00      	cmp	r3, #0
 80080e0:	d017      	beq.n	8008112 <xTaskCreate+0x7a>
 80080e2:	69fb      	ldr	r3, [r7, #28]
 80080e4:	2200      	movs	r2, #0
 80080e6:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 80080ea:	88fa      	ldrh	r2, [r7, #6]
 80080ec:	2300      	movs	r3, #0
 80080ee:	9303      	str	r3, [sp, #12]
 80080f0:	69fb      	ldr	r3, [r7, #28]
 80080f2:	9302      	str	r3, [sp, #8]
 80080f4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80080f6:	9301      	str	r3, [sp, #4]
 80080f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80080fa:	9300      	str	r3, [sp, #0]
 80080fc:	683b      	ldr	r3, [r7, #0]
 80080fe:	68b9      	ldr	r1, [r7, #8]
 8008100:	68f8      	ldr	r0, [r7, #12]
 8008102:	f000 f80f 	bl	8008124 <prvInitialiseNewTask>
 8008106:	69f8      	ldr	r0, [r7, #28]
 8008108:	f000 f8b4 	bl	8008274 <prvAddNewTaskToReadyList>
 800810c:	2301      	movs	r3, #1
 800810e:	61bb      	str	r3, [r7, #24]
 8008110:	e002      	b.n	8008118 <xTaskCreate+0x80>
 8008112:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8008116:	61bb      	str	r3, [r7, #24]
 8008118:	69bb      	ldr	r3, [r7, #24]
 800811a:	4618      	mov	r0, r3
 800811c:	3720      	adds	r7, #32
 800811e:	46bd      	mov	sp, r7
 8008120:	bd80      	pop	{r7, pc}
	...

08008124 <prvInitialiseNewTask>:
 8008124:	b580      	push	{r7, lr}
 8008126:	b088      	sub	sp, #32
 8008128:	af00      	add	r7, sp, #0
 800812a:	60f8      	str	r0, [r7, #12]
 800812c:	60b9      	str	r1, [r7, #8]
 800812e:	607a      	str	r2, [r7, #4]
 8008130:	603b      	str	r3, [r7, #0]
 8008132:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008134:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	009b      	lsls	r3, r3, #2
 800813a:	461a      	mov	r2, r3
 800813c:	21a5      	movs	r1, #165	@ 0xa5
 800813e:	f001 fe23 	bl	8009d88 <memset>
 8008142:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008144:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8008146:	687b      	ldr	r3, [r7, #4]
 8008148:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800814c:	3b01      	subs	r3, #1
 800814e:	009b      	lsls	r3, r3, #2
 8008150:	4413      	add	r3, r2
 8008152:	61bb      	str	r3, [r7, #24]
 8008154:	69bb      	ldr	r3, [r7, #24]
 8008156:	f023 0307 	bic.w	r3, r3, #7
 800815a:	61bb      	str	r3, [r7, #24]
 800815c:	69bb      	ldr	r3, [r7, #24]
 800815e:	f003 0307 	and.w	r3, r3, #7
 8008162:	2b00      	cmp	r3, #0
 8008164:	d00b      	beq.n	800817e <prvInitialiseNewTask+0x5a>
 8008166:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800816a:	f383 8811 	msr	BASEPRI, r3
 800816e:	f3bf 8f6f 	isb	sy
 8008172:	f3bf 8f4f 	dsb	sy
 8008176:	617b      	str	r3, [r7, #20]
 8008178:	bf00      	nop
 800817a:	bf00      	nop
 800817c:	e7fd      	b.n	800817a <prvInitialiseNewTask+0x56>
 800817e:	68bb      	ldr	r3, [r7, #8]
 8008180:	2b00      	cmp	r3, #0
 8008182:	d01f      	beq.n	80081c4 <prvInitialiseNewTask+0xa0>
 8008184:	2300      	movs	r3, #0
 8008186:	61fb      	str	r3, [r7, #28]
 8008188:	e012      	b.n	80081b0 <prvInitialiseNewTask+0x8c>
 800818a:	68ba      	ldr	r2, [r7, #8]
 800818c:	69fb      	ldr	r3, [r7, #28]
 800818e:	4413      	add	r3, r2
 8008190:	7819      	ldrb	r1, [r3, #0]
 8008192:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008194:	69fb      	ldr	r3, [r7, #28]
 8008196:	4413      	add	r3, r2
 8008198:	3334      	adds	r3, #52	@ 0x34
 800819a:	460a      	mov	r2, r1
 800819c:	701a      	strb	r2, [r3, #0]
 800819e:	68ba      	ldr	r2, [r7, #8]
 80081a0:	69fb      	ldr	r3, [r7, #28]
 80081a2:	4413      	add	r3, r2
 80081a4:	781b      	ldrb	r3, [r3, #0]
 80081a6:	2b00      	cmp	r3, #0
 80081a8:	d006      	beq.n	80081b8 <prvInitialiseNewTask+0x94>
 80081aa:	69fb      	ldr	r3, [r7, #28]
 80081ac:	3301      	adds	r3, #1
 80081ae:	61fb      	str	r3, [r7, #28]
 80081b0:	69fb      	ldr	r3, [r7, #28]
 80081b2:	2b0f      	cmp	r3, #15
 80081b4:	d9e9      	bls.n	800818a <prvInitialiseNewTask+0x66>
 80081b6:	e000      	b.n	80081ba <prvInitialiseNewTask+0x96>
 80081b8:	bf00      	nop
 80081ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081bc:	2200      	movs	r2, #0
 80081be:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80081c2:	e003      	b.n	80081cc <prvInitialiseNewTask+0xa8>
 80081c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081c6:	2200      	movs	r2, #0
 80081c8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80081cc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80081ce:	2b37      	cmp	r3, #55	@ 0x37
 80081d0:	d901      	bls.n	80081d6 <prvInitialiseNewTask+0xb2>
 80081d2:	2337      	movs	r3, #55	@ 0x37
 80081d4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80081d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081d8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80081da:	62da      	str	r2, [r3, #44]	@ 0x2c
 80081dc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081de:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80081e0:	64da      	str	r2, [r3, #76]	@ 0x4c
 80081e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081e4:	2200      	movs	r2, #0
 80081e6:	651a      	str	r2, [r3, #80]	@ 0x50
 80081e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081ea:	3304      	adds	r3, #4
 80081ec:	4618      	mov	r0, r3
 80081ee:	f7ff f965 	bl	80074bc <vListInitialiseItem>
 80081f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081f4:	3318      	adds	r3, #24
 80081f6:	4618      	mov	r0, r3
 80081f8:	f7ff f960 	bl	80074bc <vListInitialiseItem>
 80081fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081fe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008200:	611a      	str	r2, [r3, #16]
 8008202:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008204:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8008208:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800820a:	619a      	str	r2, [r3, #24]
 800820c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800820e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008210:	625a      	str	r2, [r3, #36]	@ 0x24
 8008212:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008214:	2200      	movs	r2, #0
 8008216:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800821a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800821c:	2200      	movs	r2, #0
 800821e:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 8008222:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008224:	3354      	adds	r3, #84	@ 0x54
 8008226:	224c      	movs	r2, #76	@ 0x4c
 8008228:	2100      	movs	r1, #0
 800822a:	4618      	mov	r0, r3
 800822c:	f001 fdac 	bl	8009d88 <memset>
 8008230:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008232:	4a0d      	ldr	r2, [pc, #52]	@ (8008268 <prvInitialiseNewTask+0x144>)
 8008234:	659a      	str	r2, [r3, #88]	@ 0x58
 8008236:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008238:	4a0c      	ldr	r2, [pc, #48]	@ (800826c <prvInitialiseNewTask+0x148>)
 800823a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800823c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800823e:	4a0c      	ldr	r2, [pc, #48]	@ (8008270 <prvInitialiseNewTask+0x14c>)
 8008240:	661a      	str	r2, [r3, #96]	@ 0x60
 8008242:	683a      	ldr	r2, [r7, #0]
 8008244:	68f9      	ldr	r1, [r7, #12]
 8008246:	69b8      	ldr	r0, [r7, #24]
 8008248:	f001 f95a 	bl	8009500 <pxPortInitialiseStack>
 800824c:	4602      	mov	r2, r0
 800824e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008250:	601a      	str	r2, [r3, #0]
 8008252:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008254:	2b00      	cmp	r3, #0
 8008256:	d002      	beq.n	800825e <prvInitialiseNewTask+0x13a>
 8008258:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800825a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800825c:	601a      	str	r2, [r3, #0]
 800825e:	bf00      	nop
 8008260:	3720      	adds	r7, #32
 8008262:	46bd      	mov	sp, r7
 8008264:	bd80      	pop	{r7, pc}
 8008266:	bf00      	nop
 8008268:	200054b8 	.word	0x200054b8
 800826c:	20005520 	.word	0x20005520
 8008270:	20005588 	.word	0x20005588

08008274 <prvAddNewTaskToReadyList>:
 8008274:	b580      	push	{r7, lr}
 8008276:	b082      	sub	sp, #8
 8008278:	af00      	add	r7, sp, #0
 800827a:	6078      	str	r0, [r7, #4]
 800827c:	f001 fa74 	bl	8009768 <vPortEnterCritical>
 8008280:	4b2d      	ldr	r3, [pc, #180]	@ (8008338 <prvAddNewTaskToReadyList+0xc4>)
 8008282:	681b      	ldr	r3, [r3, #0]
 8008284:	3301      	adds	r3, #1
 8008286:	4a2c      	ldr	r2, [pc, #176]	@ (8008338 <prvAddNewTaskToReadyList+0xc4>)
 8008288:	6013      	str	r3, [r2, #0]
 800828a:	4b2c      	ldr	r3, [pc, #176]	@ (800833c <prvAddNewTaskToReadyList+0xc8>)
 800828c:	681b      	ldr	r3, [r3, #0]
 800828e:	2b00      	cmp	r3, #0
 8008290:	d109      	bne.n	80082a6 <prvAddNewTaskToReadyList+0x32>
 8008292:	4a2a      	ldr	r2, [pc, #168]	@ (800833c <prvAddNewTaskToReadyList+0xc8>)
 8008294:	687b      	ldr	r3, [r7, #4]
 8008296:	6013      	str	r3, [r2, #0]
 8008298:	4b27      	ldr	r3, [pc, #156]	@ (8008338 <prvAddNewTaskToReadyList+0xc4>)
 800829a:	681b      	ldr	r3, [r3, #0]
 800829c:	2b01      	cmp	r3, #1
 800829e:	d110      	bne.n	80082c2 <prvAddNewTaskToReadyList+0x4e>
 80082a0:	f000 fc2e 	bl	8008b00 <prvInitialiseTaskLists>
 80082a4:	e00d      	b.n	80082c2 <prvAddNewTaskToReadyList+0x4e>
 80082a6:	4b26      	ldr	r3, [pc, #152]	@ (8008340 <prvAddNewTaskToReadyList+0xcc>)
 80082a8:	681b      	ldr	r3, [r3, #0]
 80082aa:	2b00      	cmp	r3, #0
 80082ac:	d109      	bne.n	80082c2 <prvAddNewTaskToReadyList+0x4e>
 80082ae:	4b23      	ldr	r3, [pc, #140]	@ (800833c <prvAddNewTaskToReadyList+0xc8>)
 80082b0:	681b      	ldr	r3, [r3, #0]
 80082b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80082b8:	429a      	cmp	r2, r3
 80082ba:	d802      	bhi.n	80082c2 <prvAddNewTaskToReadyList+0x4e>
 80082bc:	4a1f      	ldr	r2, [pc, #124]	@ (800833c <prvAddNewTaskToReadyList+0xc8>)
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	6013      	str	r3, [r2, #0]
 80082c2:	4b20      	ldr	r3, [pc, #128]	@ (8008344 <prvAddNewTaskToReadyList+0xd0>)
 80082c4:	681b      	ldr	r3, [r3, #0]
 80082c6:	3301      	adds	r3, #1
 80082c8:	4a1e      	ldr	r2, [pc, #120]	@ (8008344 <prvAddNewTaskToReadyList+0xd0>)
 80082ca:	6013      	str	r3, [r2, #0]
 80082cc:	4b1d      	ldr	r3, [pc, #116]	@ (8008344 <prvAddNewTaskToReadyList+0xd0>)
 80082ce:	681a      	ldr	r2, [r3, #0]
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	645a      	str	r2, [r3, #68]	@ 0x44
 80082d4:	687b      	ldr	r3, [r7, #4]
 80082d6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80082d8:	4b1b      	ldr	r3, [pc, #108]	@ (8008348 <prvAddNewTaskToReadyList+0xd4>)
 80082da:	681b      	ldr	r3, [r3, #0]
 80082dc:	429a      	cmp	r2, r3
 80082de:	d903      	bls.n	80082e8 <prvAddNewTaskToReadyList+0x74>
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80082e4:	4a18      	ldr	r2, [pc, #96]	@ (8008348 <prvAddNewTaskToReadyList+0xd4>)
 80082e6:	6013      	str	r3, [r2, #0]
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80082ec:	4613      	mov	r3, r2
 80082ee:	009b      	lsls	r3, r3, #2
 80082f0:	4413      	add	r3, r2
 80082f2:	009b      	lsls	r3, r3, #2
 80082f4:	4a15      	ldr	r2, [pc, #84]	@ (800834c <prvAddNewTaskToReadyList+0xd8>)
 80082f6:	441a      	add	r2, r3
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	3304      	adds	r3, #4
 80082fc:	4619      	mov	r1, r3
 80082fe:	4610      	mov	r0, r2
 8008300:	f7ff f8e9 	bl	80074d6 <vListInsertEnd>
 8008304:	f001 fa62 	bl	80097cc <vPortExitCritical>
 8008308:	4b0d      	ldr	r3, [pc, #52]	@ (8008340 <prvAddNewTaskToReadyList+0xcc>)
 800830a:	681b      	ldr	r3, [r3, #0]
 800830c:	2b00      	cmp	r3, #0
 800830e:	d00e      	beq.n	800832e <prvAddNewTaskToReadyList+0xba>
 8008310:	4b0a      	ldr	r3, [pc, #40]	@ (800833c <prvAddNewTaskToReadyList+0xc8>)
 8008312:	681b      	ldr	r3, [r3, #0]
 8008314:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800831a:	429a      	cmp	r2, r3
 800831c:	d207      	bcs.n	800832e <prvAddNewTaskToReadyList+0xba>
 800831e:	4b0c      	ldr	r3, [pc, #48]	@ (8008350 <prvAddNewTaskToReadyList+0xdc>)
 8008320:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008324:	601a      	str	r2, [r3, #0]
 8008326:	f3bf 8f4f 	dsb	sy
 800832a:	f3bf 8f6f 	isb	sy
 800832e:	bf00      	nop
 8008330:	3708      	adds	r7, #8
 8008332:	46bd      	mov	sp, r7
 8008334:	bd80      	pop	{r7, pc}
 8008336:	bf00      	nop
 8008338:	20001738 	.word	0x20001738
 800833c:	20001264 	.word	0x20001264
 8008340:	20001744 	.word	0x20001744
 8008344:	20001754 	.word	0x20001754
 8008348:	20001740 	.word	0x20001740
 800834c:	20001268 	.word	0x20001268
 8008350:	e000ed04 	.word	0xe000ed04

08008354 <vTaskDelay>:
 8008354:	b580      	push	{r7, lr}
 8008356:	b084      	sub	sp, #16
 8008358:	af00      	add	r7, sp, #0
 800835a:	6078      	str	r0, [r7, #4]
 800835c:	2300      	movs	r3, #0
 800835e:	60fb      	str	r3, [r7, #12]
 8008360:	687b      	ldr	r3, [r7, #4]
 8008362:	2b00      	cmp	r3, #0
 8008364:	d018      	beq.n	8008398 <vTaskDelay+0x44>
 8008366:	4b14      	ldr	r3, [pc, #80]	@ (80083b8 <vTaskDelay+0x64>)
 8008368:	681b      	ldr	r3, [r3, #0]
 800836a:	2b00      	cmp	r3, #0
 800836c:	d00b      	beq.n	8008386 <vTaskDelay+0x32>
 800836e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008372:	f383 8811 	msr	BASEPRI, r3
 8008376:	f3bf 8f6f 	isb	sy
 800837a:	f3bf 8f4f 	dsb	sy
 800837e:	60bb      	str	r3, [r7, #8]
 8008380:	bf00      	nop
 8008382:	bf00      	nop
 8008384:	e7fd      	b.n	8008382 <vTaskDelay+0x2e>
 8008386:	f000 f88b 	bl	80084a0 <vTaskSuspendAll>
 800838a:	2100      	movs	r1, #0
 800838c:	6878      	ldr	r0, [r7, #4]
 800838e:	f000 fd09 	bl	8008da4 <prvAddCurrentTaskToDelayedList>
 8008392:	f000 f893 	bl	80084bc <xTaskResumeAll>
 8008396:	60f8      	str	r0, [r7, #12]
 8008398:	68fb      	ldr	r3, [r7, #12]
 800839a:	2b00      	cmp	r3, #0
 800839c:	d107      	bne.n	80083ae <vTaskDelay+0x5a>
 800839e:	4b07      	ldr	r3, [pc, #28]	@ (80083bc <vTaskDelay+0x68>)
 80083a0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80083a4:	601a      	str	r2, [r3, #0]
 80083a6:	f3bf 8f4f 	dsb	sy
 80083aa:	f3bf 8f6f 	isb	sy
 80083ae:	bf00      	nop
 80083b0:	3710      	adds	r7, #16
 80083b2:	46bd      	mov	sp, r7
 80083b4:	bd80      	pop	{r7, pc}
 80083b6:	bf00      	nop
 80083b8:	20001760 	.word	0x20001760
 80083bc:	e000ed04 	.word	0xe000ed04

080083c0 <vTaskStartScheduler>:
 80083c0:	b580      	push	{r7, lr}
 80083c2:	b08a      	sub	sp, #40	@ 0x28
 80083c4:	af04      	add	r7, sp, #16
 80083c6:	2300      	movs	r3, #0
 80083c8:	60bb      	str	r3, [r7, #8]
 80083ca:	2300      	movs	r3, #0
 80083cc:	607b      	str	r3, [r7, #4]
 80083ce:	463a      	mov	r2, r7
 80083d0:	1d39      	adds	r1, r7, #4
 80083d2:	f107 0308 	add.w	r3, r7, #8
 80083d6:	4618      	mov	r0, r3
 80083d8:	f7ff f81c 	bl	8007414 <vApplicationGetIdleTaskMemory>
 80083dc:	6839      	ldr	r1, [r7, #0]
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	68ba      	ldr	r2, [r7, #8]
 80083e2:	9202      	str	r2, [sp, #8]
 80083e4:	9301      	str	r3, [sp, #4]
 80083e6:	2300      	movs	r3, #0
 80083e8:	9300      	str	r3, [sp, #0]
 80083ea:	2300      	movs	r3, #0
 80083ec:	460a      	mov	r2, r1
 80083ee:	4924      	ldr	r1, [pc, #144]	@ (8008480 <vTaskStartScheduler+0xc0>)
 80083f0:	4824      	ldr	r0, [pc, #144]	@ (8008484 <vTaskStartScheduler+0xc4>)
 80083f2:	f7ff fdf1 	bl	8007fd8 <xTaskCreateStatic>
 80083f6:	4603      	mov	r3, r0
 80083f8:	4a23      	ldr	r2, [pc, #140]	@ (8008488 <vTaskStartScheduler+0xc8>)
 80083fa:	6013      	str	r3, [r2, #0]
 80083fc:	4b22      	ldr	r3, [pc, #136]	@ (8008488 <vTaskStartScheduler+0xc8>)
 80083fe:	681b      	ldr	r3, [r3, #0]
 8008400:	2b00      	cmp	r3, #0
 8008402:	d002      	beq.n	800840a <vTaskStartScheduler+0x4a>
 8008404:	2301      	movs	r3, #1
 8008406:	617b      	str	r3, [r7, #20]
 8008408:	e001      	b.n	800840e <vTaskStartScheduler+0x4e>
 800840a:	2300      	movs	r3, #0
 800840c:	617b      	str	r3, [r7, #20]
 800840e:	697b      	ldr	r3, [r7, #20]
 8008410:	2b01      	cmp	r3, #1
 8008412:	d102      	bne.n	800841a <vTaskStartScheduler+0x5a>
 8008414:	f000 fd1a 	bl	8008e4c <xTimerCreateTimerTask>
 8008418:	6178      	str	r0, [r7, #20]
 800841a:	697b      	ldr	r3, [r7, #20]
 800841c:	2b01      	cmp	r3, #1
 800841e:	d11b      	bne.n	8008458 <vTaskStartScheduler+0x98>
 8008420:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008424:	f383 8811 	msr	BASEPRI, r3
 8008428:	f3bf 8f6f 	isb	sy
 800842c:	f3bf 8f4f 	dsb	sy
 8008430:	613b      	str	r3, [r7, #16]
 8008432:	bf00      	nop
 8008434:	4b15      	ldr	r3, [pc, #84]	@ (800848c <vTaskStartScheduler+0xcc>)
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	3354      	adds	r3, #84	@ 0x54
 800843a:	4a15      	ldr	r2, [pc, #84]	@ (8008490 <vTaskStartScheduler+0xd0>)
 800843c:	6013      	str	r3, [r2, #0]
 800843e:	4b15      	ldr	r3, [pc, #84]	@ (8008494 <vTaskStartScheduler+0xd4>)
 8008440:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8008444:	601a      	str	r2, [r3, #0]
 8008446:	4b14      	ldr	r3, [pc, #80]	@ (8008498 <vTaskStartScheduler+0xd8>)
 8008448:	2201      	movs	r2, #1
 800844a:	601a      	str	r2, [r3, #0]
 800844c:	4b13      	ldr	r3, [pc, #76]	@ (800849c <vTaskStartScheduler+0xdc>)
 800844e:	2200      	movs	r2, #0
 8008450:	601a      	str	r2, [r3, #0]
 8008452:	f001 f8e5 	bl	8009620 <xPortStartScheduler>
 8008456:	e00f      	b.n	8008478 <vTaskStartScheduler+0xb8>
 8008458:	697b      	ldr	r3, [r7, #20]
 800845a:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800845e:	d10b      	bne.n	8008478 <vTaskStartScheduler+0xb8>
 8008460:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008464:	f383 8811 	msr	BASEPRI, r3
 8008468:	f3bf 8f6f 	isb	sy
 800846c:	f3bf 8f4f 	dsb	sy
 8008470:	60fb      	str	r3, [r7, #12]
 8008472:	bf00      	nop
 8008474:	bf00      	nop
 8008476:	e7fd      	b.n	8008474 <vTaskStartScheduler+0xb4>
 8008478:	bf00      	nop
 800847a:	3718      	adds	r7, #24
 800847c:	46bd      	mov	sp, r7
 800847e:	bd80      	pop	{r7, pc}
 8008480:	08009fa4 	.word	0x08009fa4
 8008484:	08008ad1 	.word	0x08008ad1
 8008488:	2000175c 	.word	0x2000175c
 800848c:	20001264 	.word	0x20001264
 8008490:	2000015c 	.word	0x2000015c
 8008494:	20001758 	.word	0x20001758
 8008498:	20001744 	.word	0x20001744
 800849c:	2000173c 	.word	0x2000173c

080084a0 <vTaskSuspendAll>:
 80084a0:	b480      	push	{r7}
 80084a2:	af00      	add	r7, sp, #0
 80084a4:	4b04      	ldr	r3, [pc, #16]	@ (80084b8 <vTaskSuspendAll+0x18>)
 80084a6:	681b      	ldr	r3, [r3, #0]
 80084a8:	3301      	adds	r3, #1
 80084aa:	4a03      	ldr	r2, [pc, #12]	@ (80084b8 <vTaskSuspendAll+0x18>)
 80084ac:	6013      	str	r3, [r2, #0]
 80084ae:	bf00      	nop
 80084b0:	46bd      	mov	sp, r7
 80084b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b6:	4770      	bx	lr
 80084b8:	20001760 	.word	0x20001760

080084bc <xTaskResumeAll>:
 80084bc:	b580      	push	{r7, lr}
 80084be:	b084      	sub	sp, #16
 80084c0:	af00      	add	r7, sp, #0
 80084c2:	2300      	movs	r3, #0
 80084c4:	60fb      	str	r3, [r7, #12]
 80084c6:	2300      	movs	r3, #0
 80084c8:	60bb      	str	r3, [r7, #8]
 80084ca:	4b42      	ldr	r3, [pc, #264]	@ (80085d4 <xTaskResumeAll+0x118>)
 80084cc:	681b      	ldr	r3, [r3, #0]
 80084ce:	2b00      	cmp	r3, #0
 80084d0:	d10b      	bne.n	80084ea <xTaskResumeAll+0x2e>
 80084d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084d6:	f383 8811 	msr	BASEPRI, r3
 80084da:	f3bf 8f6f 	isb	sy
 80084de:	f3bf 8f4f 	dsb	sy
 80084e2:	603b      	str	r3, [r7, #0]
 80084e4:	bf00      	nop
 80084e6:	bf00      	nop
 80084e8:	e7fd      	b.n	80084e6 <xTaskResumeAll+0x2a>
 80084ea:	f001 f93d 	bl	8009768 <vPortEnterCritical>
 80084ee:	4b39      	ldr	r3, [pc, #228]	@ (80085d4 <xTaskResumeAll+0x118>)
 80084f0:	681b      	ldr	r3, [r3, #0]
 80084f2:	3b01      	subs	r3, #1
 80084f4:	4a37      	ldr	r2, [pc, #220]	@ (80085d4 <xTaskResumeAll+0x118>)
 80084f6:	6013      	str	r3, [r2, #0]
 80084f8:	4b36      	ldr	r3, [pc, #216]	@ (80085d4 <xTaskResumeAll+0x118>)
 80084fa:	681b      	ldr	r3, [r3, #0]
 80084fc:	2b00      	cmp	r3, #0
 80084fe:	d162      	bne.n	80085c6 <xTaskResumeAll+0x10a>
 8008500:	4b35      	ldr	r3, [pc, #212]	@ (80085d8 <xTaskResumeAll+0x11c>)
 8008502:	681b      	ldr	r3, [r3, #0]
 8008504:	2b00      	cmp	r3, #0
 8008506:	d05e      	beq.n	80085c6 <xTaskResumeAll+0x10a>
 8008508:	e02f      	b.n	800856a <xTaskResumeAll+0xae>
 800850a:	4b34      	ldr	r3, [pc, #208]	@ (80085dc <xTaskResumeAll+0x120>)
 800850c:	68db      	ldr	r3, [r3, #12]
 800850e:	68db      	ldr	r3, [r3, #12]
 8008510:	60fb      	str	r3, [r7, #12]
 8008512:	68fb      	ldr	r3, [r7, #12]
 8008514:	3318      	adds	r3, #24
 8008516:	4618      	mov	r0, r3
 8008518:	f7ff f83a 	bl	8007590 <uxListRemove>
 800851c:	68fb      	ldr	r3, [r7, #12]
 800851e:	3304      	adds	r3, #4
 8008520:	4618      	mov	r0, r3
 8008522:	f7ff f835 	bl	8007590 <uxListRemove>
 8008526:	68fb      	ldr	r3, [r7, #12]
 8008528:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800852a:	4b2d      	ldr	r3, [pc, #180]	@ (80085e0 <xTaskResumeAll+0x124>)
 800852c:	681b      	ldr	r3, [r3, #0]
 800852e:	429a      	cmp	r2, r3
 8008530:	d903      	bls.n	800853a <xTaskResumeAll+0x7e>
 8008532:	68fb      	ldr	r3, [r7, #12]
 8008534:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008536:	4a2a      	ldr	r2, [pc, #168]	@ (80085e0 <xTaskResumeAll+0x124>)
 8008538:	6013      	str	r3, [r2, #0]
 800853a:	68fb      	ldr	r3, [r7, #12]
 800853c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800853e:	4613      	mov	r3, r2
 8008540:	009b      	lsls	r3, r3, #2
 8008542:	4413      	add	r3, r2
 8008544:	009b      	lsls	r3, r3, #2
 8008546:	4a27      	ldr	r2, [pc, #156]	@ (80085e4 <xTaskResumeAll+0x128>)
 8008548:	441a      	add	r2, r3
 800854a:	68fb      	ldr	r3, [r7, #12]
 800854c:	3304      	adds	r3, #4
 800854e:	4619      	mov	r1, r3
 8008550:	4610      	mov	r0, r2
 8008552:	f7fe ffc0 	bl	80074d6 <vListInsertEnd>
 8008556:	68fb      	ldr	r3, [r7, #12]
 8008558:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800855a:	4b23      	ldr	r3, [pc, #140]	@ (80085e8 <xTaskResumeAll+0x12c>)
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008560:	429a      	cmp	r2, r3
 8008562:	d302      	bcc.n	800856a <xTaskResumeAll+0xae>
 8008564:	4b21      	ldr	r3, [pc, #132]	@ (80085ec <xTaskResumeAll+0x130>)
 8008566:	2201      	movs	r2, #1
 8008568:	601a      	str	r2, [r3, #0]
 800856a:	4b1c      	ldr	r3, [pc, #112]	@ (80085dc <xTaskResumeAll+0x120>)
 800856c:	681b      	ldr	r3, [r3, #0]
 800856e:	2b00      	cmp	r3, #0
 8008570:	d1cb      	bne.n	800850a <xTaskResumeAll+0x4e>
 8008572:	68fb      	ldr	r3, [r7, #12]
 8008574:	2b00      	cmp	r3, #0
 8008576:	d001      	beq.n	800857c <xTaskResumeAll+0xc0>
 8008578:	f000 fb66 	bl	8008c48 <prvResetNextTaskUnblockTime>
 800857c:	4b1c      	ldr	r3, [pc, #112]	@ (80085f0 <xTaskResumeAll+0x134>)
 800857e:	681b      	ldr	r3, [r3, #0]
 8008580:	607b      	str	r3, [r7, #4]
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	2b00      	cmp	r3, #0
 8008586:	d010      	beq.n	80085aa <xTaskResumeAll+0xee>
 8008588:	f000 f846 	bl	8008618 <xTaskIncrementTick>
 800858c:	4603      	mov	r3, r0
 800858e:	2b00      	cmp	r3, #0
 8008590:	d002      	beq.n	8008598 <xTaskResumeAll+0xdc>
 8008592:	4b16      	ldr	r3, [pc, #88]	@ (80085ec <xTaskResumeAll+0x130>)
 8008594:	2201      	movs	r2, #1
 8008596:	601a      	str	r2, [r3, #0]
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	3b01      	subs	r3, #1
 800859c:	607b      	str	r3, [r7, #4]
 800859e:	687b      	ldr	r3, [r7, #4]
 80085a0:	2b00      	cmp	r3, #0
 80085a2:	d1f1      	bne.n	8008588 <xTaskResumeAll+0xcc>
 80085a4:	4b12      	ldr	r3, [pc, #72]	@ (80085f0 <xTaskResumeAll+0x134>)
 80085a6:	2200      	movs	r2, #0
 80085a8:	601a      	str	r2, [r3, #0]
 80085aa:	4b10      	ldr	r3, [pc, #64]	@ (80085ec <xTaskResumeAll+0x130>)
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	2b00      	cmp	r3, #0
 80085b0:	d009      	beq.n	80085c6 <xTaskResumeAll+0x10a>
 80085b2:	2301      	movs	r3, #1
 80085b4:	60bb      	str	r3, [r7, #8]
 80085b6:	4b0f      	ldr	r3, [pc, #60]	@ (80085f4 <xTaskResumeAll+0x138>)
 80085b8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80085bc:	601a      	str	r2, [r3, #0]
 80085be:	f3bf 8f4f 	dsb	sy
 80085c2:	f3bf 8f6f 	isb	sy
 80085c6:	f001 f901 	bl	80097cc <vPortExitCritical>
 80085ca:	68bb      	ldr	r3, [r7, #8]
 80085cc:	4618      	mov	r0, r3
 80085ce:	3710      	adds	r7, #16
 80085d0:	46bd      	mov	sp, r7
 80085d2:	bd80      	pop	{r7, pc}
 80085d4:	20001760 	.word	0x20001760
 80085d8:	20001738 	.word	0x20001738
 80085dc:	200016f8 	.word	0x200016f8
 80085e0:	20001740 	.word	0x20001740
 80085e4:	20001268 	.word	0x20001268
 80085e8:	20001264 	.word	0x20001264
 80085ec:	2000174c 	.word	0x2000174c
 80085f0:	20001748 	.word	0x20001748
 80085f4:	e000ed04 	.word	0xe000ed04

080085f8 <xTaskGetTickCount>:
 80085f8:	b480      	push	{r7}
 80085fa:	b083      	sub	sp, #12
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	4b05      	ldr	r3, [pc, #20]	@ (8008614 <xTaskGetTickCount+0x1c>)
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	607b      	str	r3, [r7, #4]
 8008604:	687b      	ldr	r3, [r7, #4]
 8008606:	4618      	mov	r0, r3
 8008608:	370c      	adds	r7, #12
 800860a:	46bd      	mov	sp, r7
 800860c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008610:	4770      	bx	lr
 8008612:	bf00      	nop
 8008614:	2000173c 	.word	0x2000173c

08008618 <xTaskIncrementTick>:
 8008618:	b580      	push	{r7, lr}
 800861a:	b086      	sub	sp, #24
 800861c:	af00      	add	r7, sp, #0
 800861e:	2300      	movs	r3, #0
 8008620:	617b      	str	r3, [r7, #20]
 8008622:	4b4f      	ldr	r3, [pc, #316]	@ (8008760 <xTaskIncrementTick+0x148>)
 8008624:	681b      	ldr	r3, [r3, #0]
 8008626:	2b00      	cmp	r3, #0
 8008628:	f040 8090 	bne.w	800874c <xTaskIncrementTick+0x134>
 800862c:	4b4d      	ldr	r3, [pc, #308]	@ (8008764 <xTaskIncrementTick+0x14c>)
 800862e:	681b      	ldr	r3, [r3, #0]
 8008630:	3301      	adds	r3, #1
 8008632:	613b      	str	r3, [r7, #16]
 8008634:	4a4b      	ldr	r2, [pc, #300]	@ (8008764 <xTaskIncrementTick+0x14c>)
 8008636:	693b      	ldr	r3, [r7, #16]
 8008638:	6013      	str	r3, [r2, #0]
 800863a:	693b      	ldr	r3, [r7, #16]
 800863c:	2b00      	cmp	r3, #0
 800863e:	d121      	bne.n	8008684 <xTaskIncrementTick+0x6c>
 8008640:	4b49      	ldr	r3, [pc, #292]	@ (8008768 <xTaskIncrementTick+0x150>)
 8008642:	681b      	ldr	r3, [r3, #0]
 8008644:	681b      	ldr	r3, [r3, #0]
 8008646:	2b00      	cmp	r3, #0
 8008648:	d00b      	beq.n	8008662 <xTaskIncrementTick+0x4a>
 800864a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800864e:	f383 8811 	msr	BASEPRI, r3
 8008652:	f3bf 8f6f 	isb	sy
 8008656:	f3bf 8f4f 	dsb	sy
 800865a:	603b      	str	r3, [r7, #0]
 800865c:	bf00      	nop
 800865e:	bf00      	nop
 8008660:	e7fd      	b.n	800865e <xTaskIncrementTick+0x46>
 8008662:	4b41      	ldr	r3, [pc, #260]	@ (8008768 <xTaskIncrementTick+0x150>)
 8008664:	681b      	ldr	r3, [r3, #0]
 8008666:	60fb      	str	r3, [r7, #12]
 8008668:	4b40      	ldr	r3, [pc, #256]	@ (800876c <xTaskIncrementTick+0x154>)
 800866a:	681b      	ldr	r3, [r3, #0]
 800866c:	4a3e      	ldr	r2, [pc, #248]	@ (8008768 <xTaskIncrementTick+0x150>)
 800866e:	6013      	str	r3, [r2, #0]
 8008670:	4a3e      	ldr	r2, [pc, #248]	@ (800876c <xTaskIncrementTick+0x154>)
 8008672:	68fb      	ldr	r3, [r7, #12]
 8008674:	6013      	str	r3, [r2, #0]
 8008676:	4b3e      	ldr	r3, [pc, #248]	@ (8008770 <xTaskIncrementTick+0x158>)
 8008678:	681b      	ldr	r3, [r3, #0]
 800867a:	3301      	adds	r3, #1
 800867c:	4a3c      	ldr	r2, [pc, #240]	@ (8008770 <xTaskIncrementTick+0x158>)
 800867e:	6013      	str	r3, [r2, #0]
 8008680:	f000 fae2 	bl	8008c48 <prvResetNextTaskUnblockTime>
 8008684:	4b3b      	ldr	r3, [pc, #236]	@ (8008774 <xTaskIncrementTick+0x15c>)
 8008686:	681b      	ldr	r3, [r3, #0]
 8008688:	693a      	ldr	r2, [r7, #16]
 800868a:	429a      	cmp	r2, r3
 800868c:	d349      	bcc.n	8008722 <xTaskIncrementTick+0x10a>
 800868e:	4b36      	ldr	r3, [pc, #216]	@ (8008768 <xTaskIncrementTick+0x150>)
 8008690:	681b      	ldr	r3, [r3, #0]
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	2b00      	cmp	r3, #0
 8008696:	d104      	bne.n	80086a2 <xTaskIncrementTick+0x8a>
 8008698:	4b36      	ldr	r3, [pc, #216]	@ (8008774 <xTaskIncrementTick+0x15c>)
 800869a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800869e:	601a      	str	r2, [r3, #0]
 80086a0:	e03f      	b.n	8008722 <xTaskIncrementTick+0x10a>
 80086a2:	4b31      	ldr	r3, [pc, #196]	@ (8008768 <xTaskIncrementTick+0x150>)
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	68db      	ldr	r3, [r3, #12]
 80086a8:	68db      	ldr	r3, [r3, #12]
 80086aa:	60bb      	str	r3, [r7, #8]
 80086ac:	68bb      	ldr	r3, [r7, #8]
 80086ae:	685b      	ldr	r3, [r3, #4]
 80086b0:	607b      	str	r3, [r7, #4]
 80086b2:	693a      	ldr	r2, [r7, #16]
 80086b4:	687b      	ldr	r3, [r7, #4]
 80086b6:	429a      	cmp	r2, r3
 80086b8:	d203      	bcs.n	80086c2 <xTaskIncrementTick+0xaa>
 80086ba:	4a2e      	ldr	r2, [pc, #184]	@ (8008774 <xTaskIncrementTick+0x15c>)
 80086bc:	687b      	ldr	r3, [r7, #4]
 80086be:	6013      	str	r3, [r2, #0]
 80086c0:	e02f      	b.n	8008722 <xTaskIncrementTick+0x10a>
 80086c2:	68bb      	ldr	r3, [r7, #8]
 80086c4:	3304      	adds	r3, #4
 80086c6:	4618      	mov	r0, r3
 80086c8:	f7fe ff62 	bl	8007590 <uxListRemove>
 80086cc:	68bb      	ldr	r3, [r7, #8]
 80086ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80086d0:	2b00      	cmp	r3, #0
 80086d2:	d004      	beq.n	80086de <xTaskIncrementTick+0xc6>
 80086d4:	68bb      	ldr	r3, [r7, #8]
 80086d6:	3318      	adds	r3, #24
 80086d8:	4618      	mov	r0, r3
 80086da:	f7fe ff59 	bl	8007590 <uxListRemove>
 80086de:	68bb      	ldr	r3, [r7, #8]
 80086e0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80086e2:	4b25      	ldr	r3, [pc, #148]	@ (8008778 <xTaskIncrementTick+0x160>)
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	429a      	cmp	r2, r3
 80086e8:	d903      	bls.n	80086f2 <xTaskIncrementTick+0xda>
 80086ea:	68bb      	ldr	r3, [r7, #8]
 80086ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80086ee:	4a22      	ldr	r2, [pc, #136]	@ (8008778 <xTaskIncrementTick+0x160>)
 80086f0:	6013      	str	r3, [r2, #0]
 80086f2:	68bb      	ldr	r3, [r7, #8]
 80086f4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80086f6:	4613      	mov	r3, r2
 80086f8:	009b      	lsls	r3, r3, #2
 80086fa:	4413      	add	r3, r2
 80086fc:	009b      	lsls	r3, r3, #2
 80086fe:	4a1f      	ldr	r2, [pc, #124]	@ (800877c <xTaskIncrementTick+0x164>)
 8008700:	441a      	add	r2, r3
 8008702:	68bb      	ldr	r3, [r7, #8]
 8008704:	3304      	adds	r3, #4
 8008706:	4619      	mov	r1, r3
 8008708:	4610      	mov	r0, r2
 800870a:	f7fe fee4 	bl	80074d6 <vListInsertEnd>
 800870e:	68bb      	ldr	r3, [r7, #8]
 8008710:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008712:	4b1b      	ldr	r3, [pc, #108]	@ (8008780 <xTaskIncrementTick+0x168>)
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008718:	429a      	cmp	r2, r3
 800871a:	d3b8      	bcc.n	800868e <xTaskIncrementTick+0x76>
 800871c:	2301      	movs	r3, #1
 800871e:	617b      	str	r3, [r7, #20]
 8008720:	e7b5      	b.n	800868e <xTaskIncrementTick+0x76>
 8008722:	4b17      	ldr	r3, [pc, #92]	@ (8008780 <xTaskIncrementTick+0x168>)
 8008724:	681b      	ldr	r3, [r3, #0]
 8008726:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008728:	4914      	ldr	r1, [pc, #80]	@ (800877c <xTaskIncrementTick+0x164>)
 800872a:	4613      	mov	r3, r2
 800872c:	009b      	lsls	r3, r3, #2
 800872e:	4413      	add	r3, r2
 8008730:	009b      	lsls	r3, r3, #2
 8008732:	440b      	add	r3, r1
 8008734:	681b      	ldr	r3, [r3, #0]
 8008736:	2b01      	cmp	r3, #1
 8008738:	d901      	bls.n	800873e <xTaskIncrementTick+0x126>
 800873a:	2301      	movs	r3, #1
 800873c:	617b      	str	r3, [r7, #20]
 800873e:	4b11      	ldr	r3, [pc, #68]	@ (8008784 <xTaskIncrementTick+0x16c>)
 8008740:	681b      	ldr	r3, [r3, #0]
 8008742:	2b00      	cmp	r3, #0
 8008744:	d007      	beq.n	8008756 <xTaskIncrementTick+0x13e>
 8008746:	2301      	movs	r3, #1
 8008748:	617b      	str	r3, [r7, #20]
 800874a:	e004      	b.n	8008756 <xTaskIncrementTick+0x13e>
 800874c:	4b0e      	ldr	r3, [pc, #56]	@ (8008788 <xTaskIncrementTick+0x170>)
 800874e:	681b      	ldr	r3, [r3, #0]
 8008750:	3301      	adds	r3, #1
 8008752:	4a0d      	ldr	r2, [pc, #52]	@ (8008788 <xTaskIncrementTick+0x170>)
 8008754:	6013      	str	r3, [r2, #0]
 8008756:	697b      	ldr	r3, [r7, #20]
 8008758:	4618      	mov	r0, r3
 800875a:	3718      	adds	r7, #24
 800875c:	46bd      	mov	sp, r7
 800875e:	bd80      	pop	{r7, pc}
 8008760:	20001760 	.word	0x20001760
 8008764:	2000173c 	.word	0x2000173c
 8008768:	200016f0 	.word	0x200016f0
 800876c:	200016f4 	.word	0x200016f4
 8008770:	20001750 	.word	0x20001750
 8008774:	20001758 	.word	0x20001758
 8008778:	20001740 	.word	0x20001740
 800877c:	20001268 	.word	0x20001268
 8008780:	20001264 	.word	0x20001264
 8008784:	2000174c 	.word	0x2000174c
 8008788:	20001748 	.word	0x20001748

0800878c <vTaskSwitchContext>:
 800878c:	b480      	push	{r7}
 800878e:	b085      	sub	sp, #20
 8008790:	af00      	add	r7, sp, #0
 8008792:	4b2b      	ldr	r3, [pc, #172]	@ (8008840 <vTaskSwitchContext+0xb4>)
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	2b00      	cmp	r3, #0
 8008798:	d003      	beq.n	80087a2 <vTaskSwitchContext+0x16>
 800879a:	4b2a      	ldr	r3, [pc, #168]	@ (8008844 <vTaskSwitchContext+0xb8>)
 800879c:	2201      	movs	r2, #1
 800879e:	601a      	str	r2, [r3, #0]
 80087a0:	e047      	b.n	8008832 <vTaskSwitchContext+0xa6>
 80087a2:	4b28      	ldr	r3, [pc, #160]	@ (8008844 <vTaskSwitchContext+0xb8>)
 80087a4:	2200      	movs	r2, #0
 80087a6:	601a      	str	r2, [r3, #0]
 80087a8:	4b27      	ldr	r3, [pc, #156]	@ (8008848 <vTaskSwitchContext+0xbc>)
 80087aa:	681b      	ldr	r3, [r3, #0]
 80087ac:	60fb      	str	r3, [r7, #12]
 80087ae:	e011      	b.n	80087d4 <vTaskSwitchContext+0x48>
 80087b0:	68fb      	ldr	r3, [r7, #12]
 80087b2:	2b00      	cmp	r3, #0
 80087b4:	d10b      	bne.n	80087ce <vTaskSwitchContext+0x42>
 80087b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087ba:	f383 8811 	msr	BASEPRI, r3
 80087be:	f3bf 8f6f 	isb	sy
 80087c2:	f3bf 8f4f 	dsb	sy
 80087c6:	607b      	str	r3, [r7, #4]
 80087c8:	bf00      	nop
 80087ca:	bf00      	nop
 80087cc:	e7fd      	b.n	80087ca <vTaskSwitchContext+0x3e>
 80087ce:	68fb      	ldr	r3, [r7, #12]
 80087d0:	3b01      	subs	r3, #1
 80087d2:	60fb      	str	r3, [r7, #12]
 80087d4:	491d      	ldr	r1, [pc, #116]	@ (800884c <vTaskSwitchContext+0xc0>)
 80087d6:	68fa      	ldr	r2, [r7, #12]
 80087d8:	4613      	mov	r3, r2
 80087da:	009b      	lsls	r3, r3, #2
 80087dc:	4413      	add	r3, r2
 80087de:	009b      	lsls	r3, r3, #2
 80087e0:	440b      	add	r3, r1
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	d0e3      	beq.n	80087b0 <vTaskSwitchContext+0x24>
 80087e8:	68fa      	ldr	r2, [r7, #12]
 80087ea:	4613      	mov	r3, r2
 80087ec:	009b      	lsls	r3, r3, #2
 80087ee:	4413      	add	r3, r2
 80087f0:	009b      	lsls	r3, r3, #2
 80087f2:	4a16      	ldr	r2, [pc, #88]	@ (800884c <vTaskSwitchContext+0xc0>)
 80087f4:	4413      	add	r3, r2
 80087f6:	60bb      	str	r3, [r7, #8]
 80087f8:	68bb      	ldr	r3, [r7, #8]
 80087fa:	685b      	ldr	r3, [r3, #4]
 80087fc:	685a      	ldr	r2, [r3, #4]
 80087fe:	68bb      	ldr	r3, [r7, #8]
 8008800:	605a      	str	r2, [r3, #4]
 8008802:	68bb      	ldr	r3, [r7, #8]
 8008804:	685a      	ldr	r2, [r3, #4]
 8008806:	68bb      	ldr	r3, [r7, #8]
 8008808:	3308      	adds	r3, #8
 800880a:	429a      	cmp	r2, r3
 800880c:	d104      	bne.n	8008818 <vTaskSwitchContext+0x8c>
 800880e:	68bb      	ldr	r3, [r7, #8]
 8008810:	685b      	ldr	r3, [r3, #4]
 8008812:	685a      	ldr	r2, [r3, #4]
 8008814:	68bb      	ldr	r3, [r7, #8]
 8008816:	605a      	str	r2, [r3, #4]
 8008818:	68bb      	ldr	r3, [r7, #8]
 800881a:	685b      	ldr	r3, [r3, #4]
 800881c:	68db      	ldr	r3, [r3, #12]
 800881e:	4a0c      	ldr	r2, [pc, #48]	@ (8008850 <vTaskSwitchContext+0xc4>)
 8008820:	6013      	str	r3, [r2, #0]
 8008822:	4a09      	ldr	r2, [pc, #36]	@ (8008848 <vTaskSwitchContext+0xbc>)
 8008824:	68fb      	ldr	r3, [r7, #12]
 8008826:	6013      	str	r3, [r2, #0]
 8008828:	4b09      	ldr	r3, [pc, #36]	@ (8008850 <vTaskSwitchContext+0xc4>)
 800882a:	681b      	ldr	r3, [r3, #0]
 800882c:	3354      	adds	r3, #84	@ 0x54
 800882e:	4a09      	ldr	r2, [pc, #36]	@ (8008854 <vTaskSwitchContext+0xc8>)
 8008830:	6013      	str	r3, [r2, #0]
 8008832:	bf00      	nop
 8008834:	3714      	adds	r7, #20
 8008836:	46bd      	mov	sp, r7
 8008838:	f85d 7b04 	ldr.w	r7, [sp], #4
 800883c:	4770      	bx	lr
 800883e:	bf00      	nop
 8008840:	20001760 	.word	0x20001760
 8008844:	2000174c 	.word	0x2000174c
 8008848:	20001740 	.word	0x20001740
 800884c:	20001268 	.word	0x20001268
 8008850:	20001264 	.word	0x20001264
 8008854:	2000015c 	.word	0x2000015c

08008858 <vTaskPlaceOnEventList>:
 8008858:	b580      	push	{r7, lr}
 800885a:	b084      	sub	sp, #16
 800885c:	af00      	add	r7, sp, #0
 800885e:	6078      	str	r0, [r7, #4]
 8008860:	6039      	str	r1, [r7, #0]
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	2b00      	cmp	r3, #0
 8008866:	d10b      	bne.n	8008880 <vTaskPlaceOnEventList+0x28>
 8008868:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800886c:	f383 8811 	msr	BASEPRI, r3
 8008870:	f3bf 8f6f 	isb	sy
 8008874:	f3bf 8f4f 	dsb	sy
 8008878:	60fb      	str	r3, [r7, #12]
 800887a:	bf00      	nop
 800887c:	bf00      	nop
 800887e:	e7fd      	b.n	800887c <vTaskPlaceOnEventList+0x24>
 8008880:	4b07      	ldr	r3, [pc, #28]	@ (80088a0 <vTaskPlaceOnEventList+0x48>)
 8008882:	681b      	ldr	r3, [r3, #0]
 8008884:	3318      	adds	r3, #24
 8008886:	4619      	mov	r1, r3
 8008888:	6878      	ldr	r0, [r7, #4]
 800888a:	f7fe fe48 	bl	800751e <vListInsert>
 800888e:	2101      	movs	r1, #1
 8008890:	6838      	ldr	r0, [r7, #0]
 8008892:	f000 fa87 	bl	8008da4 <prvAddCurrentTaskToDelayedList>
 8008896:	bf00      	nop
 8008898:	3710      	adds	r7, #16
 800889a:	46bd      	mov	sp, r7
 800889c:	bd80      	pop	{r7, pc}
 800889e:	bf00      	nop
 80088a0:	20001264 	.word	0x20001264

080088a4 <vTaskPlaceOnEventListRestricted>:
 80088a4:	b580      	push	{r7, lr}
 80088a6:	b086      	sub	sp, #24
 80088a8:	af00      	add	r7, sp, #0
 80088aa:	60f8      	str	r0, [r7, #12]
 80088ac:	60b9      	str	r1, [r7, #8]
 80088ae:	607a      	str	r2, [r7, #4]
 80088b0:	68fb      	ldr	r3, [r7, #12]
 80088b2:	2b00      	cmp	r3, #0
 80088b4:	d10b      	bne.n	80088ce <vTaskPlaceOnEventListRestricted+0x2a>
 80088b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088ba:	f383 8811 	msr	BASEPRI, r3
 80088be:	f3bf 8f6f 	isb	sy
 80088c2:	f3bf 8f4f 	dsb	sy
 80088c6:	617b      	str	r3, [r7, #20]
 80088c8:	bf00      	nop
 80088ca:	bf00      	nop
 80088cc:	e7fd      	b.n	80088ca <vTaskPlaceOnEventListRestricted+0x26>
 80088ce:	4b0a      	ldr	r3, [pc, #40]	@ (80088f8 <vTaskPlaceOnEventListRestricted+0x54>)
 80088d0:	681b      	ldr	r3, [r3, #0]
 80088d2:	3318      	adds	r3, #24
 80088d4:	4619      	mov	r1, r3
 80088d6:	68f8      	ldr	r0, [r7, #12]
 80088d8:	f7fe fdfd 	bl	80074d6 <vListInsertEnd>
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	2b00      	cmp	r3, #0
 80088e0:	d002      	beq.n	80088e8 <vTaskPlaceOnEventListRestricted+0x44>
 80088e2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80088e6:	60bb      	str	r3, [r7, #8]
 80088e8:	6879      	ldr	r1, [r7, #4]
 80088ea:	68b8      	ldr	r0, [r7, #8]
 80088ec:	f000 fa5a 	bl	8008da4 <prvAddCurrentTaskToDelayedList>
 80088f0:	bf00      	nop
 80088f2:	3718      	adds	r7, #24
 80088f4:	46bd      	mov	sp, r7
 80088f6:	bd80      	pop	{r7, pc}
 80088f8:	20001264 	.word	0x20001264

080088fc <xTaskRemoveFromEventList>:
 80088fc:	b580      	push	{r7, lr}
 80088fe:	b086      	sub	sp, #24
 8008900:	af00      	add	r7, sp, #0
 8008902:	6078      	str	r0, [r7, #4]
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	68db      	ldr	r3, [r3, #12]
 8008908:	68db      	ldr	r3, [r3, #12]
 800890a:	613b      	str	r3, [r7, #16]
 800890c:	693b      	ldr	r3, [r7, #16]
 800890e:	2b00      	cmp	r3, #0
 8008910:	d10b      	bne.n	800892a <xTaskRemoveFromEventList+0x2e>
 8008912:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008916:	f383 8811 	msr	BASEPRI, r3
 800891a:	f3bf 8f6f 	isb	sy
 800891e:	f3bf 8f4f 	dsb	sy
 8008922:	60fb      	str	r3, [r7, #12]
 8008924:	bf00      	nop
 8008926:	bf00      	nop
 8008928:	e7fd      	b.n	8008926 <xTaskRemoveFromEventList+0x2a>
 800892a:	693b      	ldr	r3, [r7, #16]
 800892c:	3318      	adds	r3, #24
 800892e:	4618      	mov	r0, r3
 8008930:	f7fe fe2e 	bl	8007590 <uxListRemove>
 8008934:	4b1d      	ldr	r3, [pc, #116]	@ (80089ac <xTaskRemoveFromEventList+0xb0>)
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	2b00      	cmp	r3, #0
 800893a:	d11d      	bne.n	8008978 <xTaskRemoveFromEventList+0x7c>
 800893c:	693b      	ldr	r3, [r7, #16]
 800893e:	3304      	adds	r3, #4
 8008940:	4618      	mov	r0, r3
 8008942:	f7fe fe25 	bl	8007590 <uxListRemove>
 8008946:	693b      	ldr	r3, [r7, #16]
 8008948:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800894a:	4b19      	ldr	r3, [pc, #100]	@ (80089b0 <xTaskRemoveFromEventList+0xb4>)
 800894c:	681b      	ldr	r3, [r3, #0]
 800894e:	429a      	cmp	r2, r3
 8008950:	d903      	bls.n	800895a <xTaskRemoveFromEventList+0x5e>
 8008952:	693b      	ldr	r3, [r7, #16]
 8008954:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008956:	4a16      	ldr	r2, [pc, #88]	@ (80089b0 <xTaskRemoveFromEventList+0xb4>)
 8008958:	6013      	str	r3, [r2, #0]
 800895a:	693b      	ldr	r3, [r7, #16]
 800895c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800895e:	4613      	mov	r3, r2
 8008960:	009b      	lsls	r3, r3, #2
 8008962:	4413      	add	r3, r2
 8008964:	009b      	lsls	r3, r3, #2
 8008966:	4a13      	ldr	r2, [pc, #76]	@ (80089b4 <xTaskRemoveFromEventList+0xb8>)
 8008968:	441a      	add	r2, r3
 800896a:	693b      	ldr	r3, [r7, #16]
 800896c:	3304      	adds	r3, #4
 800896e:	4619      	mov	r1, r3
 8008970:	4610      	mov	r0, r2
 8008972:	f7fe fdb0 	bl	80074d6 <vListInsertEnd>
 8008976:	e005      	b.n	8008984 <xTaskRemoveFromEventList+0x88>
 8008978:	693b      	ldr	r3, [r7, #16]
 800897a:	3318      	adds	r3, #24
 800897c:	4619      	mov	r1, r3
 800897e:	480e      	ldr	r0, [pc, #56]	@ (80089b8 <xTaskRemoveFromEventList+0xbc>)
 8008980:	f7fe fda9 	bl	80074d6 <vListInsertEnd>
 8008984:	693b      	ldr	r3, [r7, #16]
 8008986:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008988:	4b0c      	ldr	r3, [pc, #48]	@ (80089bc <xTaskRemoveFromEventList+0xc0>)
 800898a:	681b      	ldr	r3, [r3, #0]
 800898c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800898e:	429a      	cmp	r2, r3
 8008990:	d905      	bls.n	800899e <xTaskRemoveFromEventList+0xa2>
 8008992:	2301      	movs	r3, #1
 8008994:	617b      	str	r3, [r7, #20]
 8008996:	4b0a      	ldr	r3, [pc, #40]	@ (80089c0 <xTaskRemoveFromEventList+0xc4>)
 8008998:	2201      	movs	r2, #1
 800899a:	601a      	str	r2, [r3, #0]
 800899c:	e001      	b.n	80089a2 <xTaskRemoveFromEventList+0xa6>
 800899e:	2300      	movs	r3, #0
 80089a0:	617b      	str	r3, [r7, #20]
 80089a2:	697b      	ldr	r3, [r7, #20]
 80089a4:	4618      	mov	r0, r3
 80089a6:	3718      	adds	r7, #24
 80089a8:	46bd      	mov	sp, r7
 80089aa:	bd80      	pop	{r7, pc}
 80089ac:	20001760 	.word	0x20001760
 80089b0:	20001740 	.word	0x20001740
 80089b4:	20001268 	.word	0x20001268
 80089b8:	200016f8 	.word	0x200016f8
 80089bc:	20001264 	.word	0x20001264
 80089c0:	2000174c 	.word	0x2000174c

080089c4 <vTaskInternalSetTimeOutState>:
 80089c4:	b480      	push	{r7}
 80089c6:	b083      	sub	sp, #12
 80089c8:	af00      	add	r7, sp, #0
 80089ca:	6078      	str	r0, [r7, #4]
 80089cc:	4b06      	ldr	r3, [pc, #24]	@ (80089e8 <vTaskInternalSetTimeOutState+0x24>)
 80089ce:	681a      	ldr	r2, [r3, #0]
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	601a      	str	r2, [r3, #0]
 80089d4:	4b05      	ldr	r3, [pc, #20]	@ (80089ec <vTaskInternalSetTimeOutState+0x28>)
 80089d6:	681a      	ldr	r2, [r3, #0]
 80089d8:	687b      	ldr	r3, [r7, #4]
 80089da:	605a      	str	r2, [r3, #4]
 80089dc:	bf00      	nop
 80089de:	370c      	adds	r7, #12
 80089e0:	46bd      	mov	sp, r7
 80089e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089e6:	4770      	bx	lr
 80089e8:	20001750 	.word	0x20001750
 80089ec:	2000173c 	.word	0x2000173c

080089f0 <xTaskCheckForTimeOut>:
 80089f0:	b580      	push	{r7, lr}
 80089f2:	b088      	sub	sp, #32
 80089f4:	af00      	add	r7, sp, #0
 80089f6:	6078      	str	r0, [r7, #4]
 80089f8:	6039      	str	r1, [r7, #0]
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	2b00      	cmp	r3, #0
 80089fe:	d10b      	bne.n	8008a18 <xTaskCheckForTimeOut+0x28>
 8008a00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a04:	f383 8811 	msr	BASEPRI, r3
 8008a08:	f3bf 8f6f 	isb	sy
 8008a0c:	f3bf 8f4f 	dsb	sy
 8008a10:	613b      	str	r3, [r7, #16]
 8008a12:	bf00      	nop
 8008a14:	bf00      	nop
 8008a16:	e7fd      	b.n	8008a14 <xTaskCheckForTimeOut+0x24>
 8008a18:	683b      	ldr	r3, [r7, #0]
 8008a1a:	2b00      	cmp	r3, #0
 8008a1c:	d10b      	bne.n	8008a36 <xTaskCheckForTimeOut+0x46>
 8008a1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a22:	f383 8811 	msr	BASEPRI, r3
 8008a26:	f3bf 8f6f 	isb	sy
 8008a2a:	f3bf 8f4f 	dsb	sy
 8008a2e:	60fb      	str	r3, [r7, #12]
 8008a30:	bf00      	nop
 8008a32:	bf00      	nop
 8008a34:	e7fd      	b.n	8008a32 <xTaskCheckForTimeOut+0x42>
 8008a36:	f000 fe97 	bl	8009768 <vPortEnterCritical>
 8008a3a:	4b1d      	ldr	r3, [pc, #116]	@ (8008ab0 <xTaskCheckForTimeOut+0xc0>)
 8008a3c:	681b      	ldr	r3, [r3, #0]
 8008a3e:	61bb      	str	r3, [r7, #24]
 8008a40:	687b      	ldr	r3, [r7, #4]
 8008a42:	685b      	ldr	r3, [r3, #4]
 8008a44:	69ba      	ldr	r2, [r7, #24]
 8008a46:	1ad3      	subs	r3, r2, r3
 8008a48:	617b      	str	r3, [r7, #20]
 8008a4a:	683b      	ldr	r3, [r7, #0]
 8008a4c:	681b      	ldr	r3, [r3, #0]
 8008a4e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008a52:	d102      	bne.n	8008a5a <xTaskCheckForTimeOut+0x6a>
 8008a54:	2300      	movs	r3, #0
 8008a56:	61fb      	str	r3, [r7, #28]
 8008a58:	e023      	b.n	8008aa2 <xTaskCheckForTimeOut+0xb2>
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	681a      	ldr	r2, [r3, #0]
 8008a5e:	4b15      	ldr	r3, [pc, #84]	@ (8008ab4 <xTaskCheckForTimeOut+0xc4>)
 8008a60:	681b      	ldr	r3, [r3, #0]
 8008a62:	429a      	cmp	r2, r3
 8008a64:	d007      	beq.n	8008a76 <xTaskCheckForTimeOut+0x86>
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	685b      	ldr	r3, [r3, #4]
 8008a6a:	69ba      	ldr	r2, [r7, #24]
 8008a6c:	429a      	cmp	r2, r3
 8008a6e:	d302      	bcc.n	8008a76 <xTaskCheckForTimeOut+0x86>
 8008a70:	2301      	movs	r3, #1
 8008a72:	61fb      	str	r3, [r7, #28]
 8008a74:	e015      	b.n	8008aa2 <xTaskCheckForTimeOut+0xb2>
 8008a76:	683b      	ldr	r3, [r7, #0]
 8008a78:	681b      	ldr	r3, [r3, #0]
 8008a7a:	697a      	ldr	r2, [r7, #20]
 8008a7c:	429a      	cmp	r2, r3
 8008a7e:	d20b      	bcs.n	8008a98 <xTaskCheckForTimeOut+0xa8>
 8008a80:	683b      	ldr	r3, [r7, #0]
 8008a82:	681a      	ldr	r2, [r3, #0]
 8008a84:	697b      	ldr	r3, [r7, #20]
 8008a86:	1ad2      	subs	r2, r2, r3
 8008a88:	683b      	ldr	r3, [r7, #0]
 8008a8a:	601a      	str	r2, [r3, #0]
 8008a8c:	6878      	ldr	r0, [r7, #4]
 8008a8e:	f7ff ff99 	bl	80089c4 <vTaskInternalSetTimeOutState>
 8008a92:	2300      	movs	r3, #0
 8008a94:	61fb      	str	r3, [r7, #28]
 8008a96:	e004      	b.n	8008aa2 <xTaskCheckForTimeOut+0xb2>
 8008a98:	683b      	ldr	r3, [r7, #0]
 8008a9a:	2200      	movs	r2, #0
 8008a9c:	601a      	str	r2, [r3, #0]
 8008a9e:	2301      	movs	r3, #1
 8008aa0:	61fb      	str	r3, [r7, #28]
 8008aa2:	f000 fe93 	bl	80097cc <vPortExitCritical>
 8008aa6:	69fb      	ldr	r3, [r7, #28]
 8008aa8:	4618      	mov	r0, r3
 8008aaa:	3720      	adds	r7, #32
 8008aac:	46bd      	mov	sp, r7
 8008aae:	bd80      	pop	{r7, pc}
 8008ab0:	2000173c 	.word	0x2000173c
 8008ab4:	20001750 	.word	0x20001750

08008ab8 <vTaskMissedYield>:
 8008ab8:	b480      	push	{r7}
 8008aba:	af00      	add	r7, sp, #0
 8008abc:	4b03      	ldr	r3, [pc, #12]	@ (8008acc <vTaskMissedYield+0x14>)
 8008abe:	2201      	movs	r2, #1
 8008ac0:	601a      	str	r2, [r3, #0]
 8008ac2:	bf00      	nop
 8008ac4:	46bd      	mov	sp, r7
 8008ac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aca:	4770      	bx	lr
 8008acc:	2000174c 	.word	0x2000174c

08008ad0 <prvIdleTask>:
 8008ad0:	b580      	push	{r7, lr}
 8008ad2:	b082      	sub	sp, #8
 8008ad4:	af00      	add	r7, sp, #0
 8008ad6:	6078      	str	r0, [r7, #4]
 8008ad8:	f000 f852 	bl	8008b80 <prvCheckTasksWaitingTermination>
 8008adc:	4b06      	ldr	r3, [pc, #24]	@ (8008af8 <prvIdleTask+0x28>)
 8008ade:	681b      	ldr	r3, [r3, #0]
 8008ae0:	2b01      	cmp	r3, #1
 8008ae2:	d9f9      	bls.n	8008ad8 <prvIdleTask+0x8>
 8008ae4:	4b05      	ldr	r3, [pc, #20]	@ (8008afc <prvIdleTask+0x2c>)
 8008ae6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008aea:	601a      	str	r2, [r3, #0]
 8008aec:	f3bf 8f4f 	dsb	sy
 8008af0:	f3bf 8f6f 	isb	sy
 8008af4:	e7f0      	b.n	8008ad8 <prvIdleTask+0x8>
 8008af6:	bf00      	nop
 8008af8:	20001268 	.word	0x20001268
 8008afc:	e000ed04 	.word	0xe000ed04

08008b00 <prvInitialiseTaskLists>:
 8008b00:	b580      	push	{r7, lr}
 8008b02:	b082      	sub	sp, #8
 8008b04:	af00      	add	r7, sp, #0
 8008b06:	2300      	movs	r3, #0
 8008b08:	607b      	str	r3, [r7, #4]
 8008b0a:	e00c      	b.n	8008b26 <prvInitialiseTaskLists+0x26>
 8008b0c:	687a      	ldr	r2, [r7, #4]
 8008b0e:	4613      	mov	r3, r2
 8008b10:	009b      	lsls	r3, r3, #2
 8008b12:	4413      	add	r3, r2
 8008b14:	009b      	lsls	r3, r3, #2
 8008b16:	4a12      	ldr	r2, [pc, #72]	@ (8008b60 <prvInitialiseTaskLists+0x60>)
 8008b18:	4413      	add	r3, r2
 8008b1a:	4618      	mov	r0, r3
 8008b1c:	f7fe fcae 	bl	800747c <vListInitialise>
 8008b20:	687b      	ldr	r3, [r7, #4]
 8008b22:	3301      	adds	r3, #1
 8008b24:	607b      	str	r3, [r7, #4]
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	2b37      	cmp	r3, #55	@ 0x37
 8008b2a:	d9ef      	bls.n	8008b0c <prvInitialiseTaskLists+0xc>
 8008b2c:	480d      	ldr	r0, [pc, #52]	@ (8008b64 <prvInitialiseTaskLists+0x64>)
 8008b2e:	f7fe fca5 	bl	800747c <vListInitialise>
 8008b32:	480d      	ldr	r0, [pc, #52]	@ (8008b68 <prvInitialiseTaskLists+0x68>)
 8008b34:	f7fe fca2 	bl	800747c <vListInitialise>
 8008b38:	480c      	ldr	r0, [pc, #48]	@ (8008b6c <prvInitialiseTaskLists+0x6c>)
 8008b3a:	f7fe fc9f 	bl	800747c <vListInitialise>
 8008b3e:	480c      	ldr	r0, [pc, #48]	@ (8008b70 <prvInitialiseTaskLists+0x70>)
 8008b40:	f7fe fc9c 	bl	800747c <vListInitialise>
 8008b44:	480b      	ldr	r0, [pc, #44]	@ (8008b74 <prvInitialiseTaskLists+0x74>)
 8008b46:	f7fe fc99 	bl	800747c <vListInitialise>
 8008b4a:	4b0b      	ldr	r3, [pc, #44]	@ (8008b78 <prvInitialiseTaskLists+0x78>)
 8008b4c:	4a05      	ldr	r2, [pc, #20]	@ (8008b64 <prvInitialiseTaskLists+0x64>)
 8008b4e:	601a      	str	r2, [r3, #0]
 8008b50:	4b0a      	ldr	r3, [pc, #40]	@ (8008b7c <prvInitialiseTaskLists+0x7c>)
 8008b52:	4a05      	ldr	r2, [pc, #20]	@ (8008b68 <prvInitialiseTaskLists+0x68>)
 8008b54:	601a      	str	r2, [r3, #0]
 8008b56:	bf00      	nop
 8008b58:	3708      	adds	r7, #8
 8008b5a:	46bd      	mov	sp, r7
 8008b5c:	bd80      	pop	{r7, pc}
 8008b5e:	bf00      	nop
 8008b60:	20001268 	.word	0x20001268
 8008b64:	200016c8 	.word	0x200016c8
 8008b68:	200016dc 	.word	0x200016dc
 8008b6c:	200016f8 	.word	0x200016f8
 8008b70:	2000170c 	.word	0x2000170c
 8008b74:	20001724 	.word	0x20001724
 8008b78:	200016f0 	.word	0x200016f0
 8008b7c:	200016f4 	.word	0x200016f4

08008b80 <prvCheckTasksWaitingTermination>:
 8008b80:	b580      	push	{r7, lr}
 8008b82:	b082      	sub	sp, #8
 8008b84:	af00      	add	r7, sp, #0
 8008b86:	e019      	b.n	8008bbc <prvCheckTasksWaitingTermination+0x3c>
 8008b88:	f000 fdee 	bl	8009768 <vPortEnterCritical>
 8008b8c:	4b10      	ldr	r3, [pc, #64]	@ (8008bd0 <prvCheckTasksWaitingTermination+0x50>)
 8008b8e:	68db      	ldr	r3, [r3, #12]
 8008b90:	68db      	ldr	r3, [r3, #12]
 8008b92:	607b      	str	r3, [r7, #4]
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	3304      	adds	r3, #4
 8008b98:	4618      	mov	r0, r3
 8008b9a:	f7fe fcf9 	bl	8007590 <uxListRemove>
 8008b9e:	4b0d      	ldr	r3, [pc, #52]	@ (8008bd4 <prvCheckTasksWaitingTermination+0x54>)
 8008ba0:	681b      	ldr	r3, [r3, #0]
 8008ba2:	3b01      	subs	r3, #1
 8008ba4:	4a0b      	ldr	r2, [pc, #44]	@ (8008bd4 <prvCheckTasksWaitingTermination+0x54>)
 8008ba6:	6013      	str	r3, [r2, #0]
 8008ba8:	4b0b      	ldr	r3, [pc, #44]	@ (8008bd8 <prvCheckTasksWaitingTermination+0x58>)
 8008baa:	681b      	ldr	r3, [r3, #0]
 8008bac:	3b01      	subs	r3, #1
 8008bae:	4a0a      	ldr	r2, [pc, #40]	@ (8008bd8 <prvCheckTasksWaitingTermination+0x58>)
 8008bb0:	6013      	str	r3, [r2, #0]
 8008bb2:	f000 fe0b 	bl	80097cc <vPortExitCritical>
 8008bb6:	6878      	ldr	r0, [r7, #4]
 8008bb8:	f000 f810 	bl	8008bdc <prvDeleteTCB>
 8008bbc:	4b06      	ldr	r3, [pc, #24]	@ (8008bd8 <prvCheckTasksWaitingTermination+0x58>)
 8008bbe:	681b      	ldr	r3, [r3, #0]
 8008bc0:	2b00      	cmp	r3, #0
 8008bc2:	d1e1      	bne.n	8008b88 <prvCheckTasksWaitingTermination+0x8>
 8008bc4:	bf00      	nop
 8008bc6:	bf00      	nop
 8008bc8:	3708      	adds	r7, #8
 8008bca:	46bd      	mov	sp, r7
 8008bcc:	bd80      	pop	{r7, pc}
 8008bce:	bf00      	nop
 8008bd0:	2000170c 	.word	0x2000170c
 8008bd4:	20001738 	.word	0x20001738
 8008bd8:	20001720 	.word	0x20001720

08008bdc <prvDeleteTCB>:
 8008bdc:	b580      	push	{r7, lr}
 8008bde:	b084      	sub	sp, #16
 8008be0:	af00      	add	r7, sp, #0
 8008be2:	6078      	str	r0, [r7, #4]
 8008be4:	687b      	ldr	r3, [r7, #4]
 8008be6:	3354      	adds	r3, #84	@ 0x54
 8008be8:	4618      	mov	r0, r3
 8008bea:	f001 f8d5 	bl	8009d98 <_reclaim_reent>
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8008bf4:	2b00      	cmp	r3, #0
 8008bf6:	d108      	bne.n	8008c0a <prvDeleteTCB+0x2e>
 8008bf8:	687b      	ldr	r3, [r7, #4]
 8008bfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008bfc:	4618      	mov	r0, r3
 8008bfe:	f000 ffa3 	bl	8009b48 <vPortFree>
 8008c02:	6878      	ldr	r0, [r7, #4]
 8008c04:	f000 ffa0 	bl	8009b48 <vPortFree>
 8008c08:	e019      	b.n	8008c3e <prvDeleteTCB+0x62>
 8008c0a:	687b      	ldr	r3, [r7, #4]
 8008c0c:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8008c10:	2b01      	cmp	r3, #1
 8008c12:	d103      	bne.n	8008c1c <prvDeleteTCB+0x40>
 8008c14:	6878      	ldr	r0, [r7, #4]
 8008c16:	f000 ff97 	bl	8009b48 <vPortFree>
 8008c1a:	e010      	b.n	8008c3e <prvDeleteTCB+0x62>
 8008c1c:	687b      	ldr	r3, [r7, #4]
 8008c1e:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8008c22:	2b02      	cmp	r3, #2
 8008c24:	d00b      	beq.n	8008c3e <prvDeleteTCB+0x62>
 8008c26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c2a:	f383 8811 	msr	BASEPRI, r3
 8008c2e:	f3bf 8f6f 	isb	sy
 8008c32:	f3bf 8f4f 	dsb	sy
 8008c36:	60fb      	str	r3, [r7, #12]
 8008c38:	bf00      	nop
 8008c3a:	bf00      	nop
 8008c3c:	e7fd      	b.n	8008c3a <prvDeleteTCB+0x5e>
 8008c3e:	bf00      	nop
 8008c40:	3710      	adds	r7, #16
 8008c42:	46bd      	mov	sp, r7
 8008c44:	bd80      	pop	{r7, pc}
	...

08008c48 <prvResetNextTaskUnblockTime>:
 8008c48:	b480      	push	{r7}
 8008c4a:	b083      	sub	sp, #12
 8008c4c:	af00      	add	r7, sp, #0
 8008c4e:	4b0c      	ldr	r3, [pc, #48]	@ (8008c80 <prvResetNextTaskUnblockTime+0x38>)
 8008c50:	681b      	ldr	r3, [r3, #0]
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	2b00      	cmp	r3, #0
 8008c56:	d104      	bne.n	8008c62 <prvResetNextTaskUnblockTime+0x1a>
 8008c58:	4b0a      	ldr	r3, [pc, #40]	@ (8008c84 <prvResetNextTaskUnblockTime+0x3c>)
 8008c5a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8008c5e:	601a      	str	r2, [r3, #0]
 8008c60:	e008      	b.n	8008c74 <prvResetNextTaskUnblockTime+0x2c>
 8008c62:	4b07      	ldr	r3, [pc, #28]	@ (8008c80 <prvResetNextTaskUnblockTime+0x38>)
 8008c64:	681b      	ldr	r3, [r3, #0]
 8008c66:	68db      	ldr	r3, [r3, #12]
 8008c68:	68db      	ldr	r3, [r3, #12]
 8008c6a:	607b      	str	r3, [r7, #4]
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	685b      	ldr	r3, [r3, #4]
 8008c70:	4a04      	ldr	r2, [pc, #16]	@ (8008c84 <prvResetNextTaskUnblockTime+0x3c>)
 8008c72:	6013      	str	r3, [r2, #0]
 8008c74:	bf00      	nop
 8008c76:	370c      	adds	r7, #12
 8008c78:	46bd      	mov	sp, r7
 8008c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c7e:	4770      	bx	lr
 8008c80:	200016f0 	.word	0x200016f0
 8008c84:	20001758 	.word	0x20001758

08008c88 <xTaskGetSchedulerState>:
 8008c88:	b480      	push	{r7}
 8008c8a:	b083      	sub	sp, #12
 8008c8c:	af00      	add	r7, sp, #0
 8008c8e:	4b0b      	ldr	r3, [pc, #44]	@ (8008cbc <xTaskGetSchedulerState+0x34>)
 8008c90:	681b      	ldr	r3, [r3, #0]
 8008c92:	2b00      	cmp	r3, #0
 8008c94:	d102      	bne.n	8008c9c <xTaskGetSchedulerState+0x14>
 8008c96:	2301      	movs	r3, #1
 8008c98:	607b      	str	r3, [r7, #4]
 8008c9a:	e008      	b.n	8008cae <xTaskGetSchedulerState+0x26>
 8008c9c:	4b08      	ldr	r3, [pc, #32]	@ (8008cc0 <xTaskGetSchedulerState+0x38>)
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	2b00      	cmp	r3, #0
 8008ca2:	d102      	bne.n	8008caa <xTaskGetSchedulerState+0x22>
 8008ca4:	2302      	movs	r3, #2
 8008ca6:	607b      	str	r3, [r7, #4]
 8008ca8:	e001      	b.n	8008cae <xTaskGetSchedulerState+0x26>
 8008caa:	2300      	movs	r3, #0
 8008cac:	607b      	str	r3, [r7, #4]
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	4618      	mov	r0, r3
 8008cb2:	370c      	adds	r7, #12
 8008cb4:	46bd      	mov	sp, r7
 8008cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cba:	4770      	bx	lr
 8008cbc:	20001744 	.word	0x20001744
 8008cc0:	20001760 	.word	0x20001760

08008cc4 <xTaskPriorityDisinherit>:
 8008cc4:	b580      	push	{r7, lr}
 8008cc6:	b086      	sub	sp, #24
 8008cc8:	af00      	add	r7, sp, #0
 8008cca:	6078      	str	r0, [r7, #4]
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	613b      	str	r3, [r7, #16]
 8008cd0:	2300      	movs	r3, #0
 8008cd2:	617b      	str	r3, [r7, #20]
 8008cd4:	687b      	ldr	r3, [r7, #4]
 8008cd6:	2b00      	cmp	r3, #0
 8008cd8:	d058      	beq.n	8008d8c <xTaskPriorityDisinherit+0xc8>
 8008cda:	4b2f      	ldr	r3, [pc, #188]	@ (8008d98 <xTaskPriorityDisinherit+0xd4>)
 8008cdc:	681b      	ldr	r3, [r3, #0]
 8008cde:	693a      	ldr	r2, [r7, #16]
 8008ce0:	429a      	cmp	r2, r3
 8008ce2:	d00b      	beq.n	8008cfc <xTaskPriorityDisinherit+0x38>
 8008ce4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ce8:	f383 8811 	msr	BASEPRI, r3
 8008cec:	f3bf 8f6f 	isb	sy
 8008cf0:	f3bf 8f4f 	dsb	sy
 8008cf4:	60fb      	str	r3, [r7, #12]
 8008cf6:	bf00      	nop
 8008cf8:	bf00      	nop
 8008cfa:	e7fd      	b.n	8008cf8 <xTaskPriorityDisinherit+0x34>
 8008cfc:	693b      	ldr	r3, [r7, #16]
 8008cfe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008d00:	2b00      	cmp	r3, #0
 8008d02:	d10b      	bne.n	8008d1c <xTaskPriorityDisinherit+0x58>
 8008d04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d08:	f383 8811 	msr	BASEPRI, r3
 8008d0c:	f3bf 8f6f 	isb	sy
 8008d10:	f3bf 8f4f 	dsb	sy
 8008d14:	60bb      	str	r3, [r7, #8]
 8008d16:	bf00      	nop
 8008d18:	bf00      	nop
 8008d1a:	e7fd      	b.n	8008d18 <xTaskPriorityDisinherit+0x54>
 8008d1c:	693b      	ldr	r3, [r7, #16]
 8008d1e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008d20:	1e5a      	subs	r2, r3, #1
 8008d22:	693b      	ldr	r3, [r7, #16]
 8008d24:	651a      	str	r2, [r3, #80]	@ 0x50
 8008d26:	693b      	ldr	r3, [r7, #16]
 8008d28:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008d2a:	693b      	ldr	r3, [r7, #16]
 8008d2c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008d2e:	429a      	cmp	r2, r3
 8008d30:	d02c      	beq.n	8008d8c <xTaskPriorityDisinherit+0xc8>
 8008d32:	693b      	ldr	r3, [r7, #16]
 8008d34:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	d128      	bne.n	8008d8c <xTaskPriorityDisinherit+0xc8>
 8008d3a:	693b      	ldr	r3, [r7, #16]
 8008d3c:	3304      	adds	r3, #4
 8008d3e:	4618      	mov	r0, r3
 8008d40:	f7fe fc26 	bl	8007590 <uxListRemove>
 8008d44:	693b      	ldr	r3, [r7, #16]
 8008d46:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8008d48:	693b      	ldr	r3, [r7, #16]
 8008d4a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008d4c:	693b      	ldr	r3, [r7, #16]
 8008d4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008d50:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8008d54:	693b      	ldr	r3, [r7, #16]
 8008d56:	619a      	str	r2, [r3, #24]
 8008d58:	693b      	ldr	r3, [r7, #16]
 8008d5a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008d5c:	4b0f      	ldr	r3, [pc, #60]	@ (8008d9c <xTaskPriorityDisinherit+0xd8>)
 8008d5e:	681b      	ldr	r3, [r3, #0]
 8008d60:	429a      	cmp	r2, r3
 8008d62:	d903      	bls.n	8008d6c <xTaskPriorityDisinherit+0xa8>
 8008d64:	693b      	ldr	r3, [r7, #16]
 8008d66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008d68:	4a0c      	ldr	r2, [pc, #48]	@ (8008d9c <xTaskPriorityDisinherit+0xd8>)
 8008d6a:	6013      	str	r3, [r2, #0]
 8008d6c:	693b      	ldr	r3, [r7, #16]
 8008d6e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008d70:	4613      	mov	r3, r2
 8008d72:	009b      	lsls	r3, r3, #2
 8008d74:	4413      	add	r3, r2
 8008d76:	009b      	lsls	r3, r3, #2
 8008d78:	4a09      	ldr	r2, [pc, #36]	@ (8008da0 <xTaskPriorityDisinherit+0xdc>)
 8008d7a:	441a      	add	r2, r3
 8008d7c:	693b      	ldr	r3, [r7, #16]
 8008d7e:	3304      	adds	r3, #4
 8008d80:	4619      	mov	r1, r3
 8008d82:	4610      	mov	r0, r2
 8008d84:	f7fe fba7 	bl	80074d6 <vListInsertEnd>
 8008d88:	2301      	movs	r3, #1
 8008d8a:	617b      	str	r3, [r7, #20]
 8008d8c:	697b      	ldr	r3, [r7, #20]
 8008d8e:	4618      	mov	r0, r3
 8008d90:	3718      	adds	r7, #24
 8008d92:	46bd      	mov	sp, r7
 8008d94:	bd80      	pop	{r7, pc}
 8008d96:	bf00      	nop
 8008d98:	20001264 	.word	0x20001264
 8008d9c:	20001740 	.word	0x20001740
 8008da0:	20001268 	.word	0x20001268

08008da4 <prvAddCurrentTaskToDelayedList>:
 8008da4:	b580      	push	{r7, lr}
 8008da6:	b084      	sub	sp, #16
 8008da8:	af00      	add	r7, sp, #0
 8008daa:	6078      	str	r0, [r7, #4]
 8008dac:	6039      	str	r1, [r7, #0]
 8008dae:	4b21      	ldr	r3, [pc, #132]	@ (8008e34 <prvAddCurrentTaskToDelayedList+0x90>)
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	60fb      	str	r3, [r7, #12]
 8008db4:	4b20      	ldr	r3, [pc, #128]	@ (8008e38 <prvAddCurrentTaskToDelayedList+0x94>)
 8008db6:	681b      	ldr	r3, [r3, #0]
 8008db8:	3304      	adds	r3, #4
 8008dba:	4618      	mov	r0, r3
 8008dbc:	f7fe fbe8 	bl	8007590 <uxListRemove>
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008dc6:	d10a      	bne.n	8008dde <prvAddCurrentTaskToDelayedList+0x3a>
 8008dc8:	683b      	ldr	r3, [r7, #0]
 8008dca:	2b00      	cmp	r3, #0
 8008dcc:	d007      	beq.n	8008dde <prvAddCurrentTaskToDelayedList+0x3a>
 8008dce:	4b1a      	ldr	r3, [pc, #104]	@ (8008e38 <prvAddCurrentTaskToDelayedList+0x94>)
 8008dd0:	681b      	ldr	r3, [r3, #0]
 8008dd2:	3304      	adds	r3, #4
 8008dd4:	4619      	mov	r1, r3
 8008dd6:	4819      	ldr	r0, [pc, #100]	@ (8008e3c <prvAddCurrentTaskToDelayedList+0x98>)
 8008dd8:	f7fe fb7d 	bl	80074d6 <vListInsertEnd>
 8008ddc:	e026      	b.n	8008e2c <prvAddCurrentTaskToDelayedList+0x88>
 8008dde:	68fa      	ldr	r2, [r7, #12]
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	4413      	add	r3, r2
 8008de4:	60bb      	str	r3, [r7, #8]
 8008de6:	4b14      	ldr	r3, [pc, #80]	@ (8008e38 <prvAddCurrentTaskToDelayedList+0x94>)
 8008de8:	681b      	ldr	r3, [r3, #0]
 8008dea:	68ba      	ldr	r2, [r7, #8]
 8008dec:	605a      	str	r2, [r3, #4]
 8008dee:	68ba      	ldr	r2, [r7, #8]
 8008df0:	68fb      	ldr	r3, [r7, #12]
 8008df2:	429a      	cmp	r2, r3
 8008df4:	d209      	bcs.n	8008e0a <prvAddCurrentTaskToDelayedList+0x66>
 8008df6:	4b12      	ldr	r3, [pc, #72]	@ (8008e40 <prvAddCurrentTaskToDelayedList+0x9c>)
 8008df8:	681a      	ldr	r2, [r3, #0]
 8008dfa:	4b0f      	ldr	r3, [pc, #60]	@ (8008e38 <prvAddCurrentTaskToDelayedList+0x94>)
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	3304      	adds	r3, #4
 8008e00:	4619      	mov	r1, r3
 8008e02:	4610      	mov	r0, r2
 8008e04:	f7fe fb8b 	bl	800751e <vListInsert>
 8008e08:	e010      	b.n	8008e2c <prvAddCurrentTaskToDelayedList+0x88>
 8008e0a:	4b0e      	ldr	r3, [pc, #56]	@ (8008e44 <prvAddCurrentTaskToDelayedList+0xa0>)
 8008e0c:	681a      	ldr	r2, [r3, #0]
 8008e0e:	4b0a      	ldr	r3, [pc, #40]	@ (8008e38 <prvAddCurrentTaskToDelayedList+0x94>)
 8008e10:	681b      	ldr	r3, [r3, #0]
 8008e12:	3304      	adds	r3, #4
 8008e14:	4619      	mov	r1, r3
 8008e16:	4610      	mov	r0, r2
 8008e18:	f7fe fb81 	bl	800751e <vListInsert>
 8008e1c:	4b0a      	ldr	r3, [pc, #40]	@ (8008e48 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008e1e:	681b      	ldr	r3, [r3, #0]
 8008e20:	68ba      	ldr	r2, [r7, #8]
 8008e22:	429a      	cmp	r2, r3
 8008e24:	d202      	bcs.n	8008e2c <prvAddCurrentTaskToDelayedList+0x88>
 8008e26:	4a08      	ldr	r2, [pc, #32]	@ (8008e48 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008e28:	68bb      	ldr	r3, [r7, #8]
 8008e2a:	6013      	str	r3, [r2, #0]
 8008e2c:	bf00      	nop
 8008e2e:	3710      	adds	r7, #16
 8008e30:	46bd      	mov	sp, r7
 8008e32:	bd80      	pop	{r7, pc}
 8008e34:	2000173c 	.word	0x2000173c
 8008e38:	20001264 	.word	0x20001264
 8008e3c:	20001724 	.word	0x20001724
 8008e40:	200016f4 	.word	0x200016f4
 8008e44:	200016f0 	.word	0x200016f0
 8008e48:	20001758 	.word	0x20001758

08008e4c <xTimerCreateTimerTask>:
 8008e4c:	b580      	push	{r7, lr}
 8008e4e:	b08a      	sub	sp, #40	@ 0x28
 8008e50:	af04      	add	r7, sp, #16
 8008e52:	2300      	movs	r3, #0
 8008e54:	617b      	str	r3, [r7, #20]
 8008e56:	f000 fb13 	bl	8009480 <prvCheckForValidListAndQueue>
 8008e5a:	4b1d      	ldr	r3, [pc, #116]	@ (8008ed0 <xTimerCreateTimerTask+0x84>)
 8008e5c:	681b      	ldr	r3, [r3, #0]
 8008e5e:	2b00      	cmp	r3, #0
 8008e60:	d021      	beq.n	8008ea6 <xTimerCreateTimerTask+0x5a>
 8008e62:	2300      	movs	r3, #0
 8008e64:	60fb      	str	r3, [r7, #12]
 8008e66:	2300      	movs	r3, #0
 8008e68:	60bb      	str	r3, [r7, #8]
 8008e6a:	1d3a      	adds	r2, r7, #4
 8008e6c:	f107 0108 	add.w	r1, r7, #8
 8008e70:	f107 030c 	add.w	r3, r7, #12
 8008e74:	4618      	mov	r0, r3
 8008e76:	f7fe fae7 	bl	8007448 <vApplicationGetTimerTaskMemory>
 8008e7a:	6879      	ldr	r1, [r7, #4]
 8008e7c:	68bb      	ldr	r3, [r7, #8]
 8008e7e:	68fa      	ldr	r2, [r7, #12]
 8008e80:	9202      	str	r2, [sp, #8]
 8008e82:	9301      	str	r3, [sp, #4]
 8008e84:	2302      	movs	r3, #2
 8008e86:	9300      	str	r3, [sp, #0]
 8008e88:	2300      	movs	r3, #0
 8008e8a:	460a      	mov	r2, r1
 8008e8c:	4911      	ldr	r1, [pc, #68]	@ (8008ed4 <xTimerCreateTimerTask+0x88>)
 8008e8e:	4812      	ldr	r0, [pc, #72]	@ (8008ed8 <xTimerCreateTimerTask+0x8c>)
 8008e90:	f7ff f8a2 	bl	8007fd8 <xTaskCreateStatic>
 8008e94:	4603      	mov	r3, r0
 8008e96:	4a11      	ldr	r2, [pc, #68]	@ (8008edc <xTimerCreateTimerTask+0x90>)
 8008e98:	6013      	str	r3, [r2, #0]
 8008e9a:	4b10      	ldr	r3, [pc, #64]	@ (8008edc <xTimerCreateTimerTask+0x90>)
 8008e9c:	681b      	ldr	r3, [r3, #0]
 8008e9e:	2b00      	cmp	r3, #0
 8008ea0:	d001      	beq.n	8008ea6 <xTimerCreateTimerTask+0x5a>
 8008ea2:	2301      	movs	r3, #1
 8008ea4:	617b      	str	r3, [r7, #20]
 8008ea6:	697b      	ldr	r3, [r7, #20]
 8008ea8:	2b00      	cmp	r3, #0
 8008eaa:	d10b      	bne.n	8008ec4 <xTimerCreateTimerTask+0x78>
 8008eac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eb0:	f383 8811 	msr	BASEPRI, r3
 8008eb4:	f3bf 8f6f 	isb	sy
 8008eb8:	f3bf 8f4f 	dsb	sy
 8008ebc:	613b      	str	r3, [r7, #16]
 8008ebe:	bf00      	nop
 8008ec0:	bf00      	nop
 8008ec2:	e7fd      	b.n	8008ec0 <xTimerCreateTimerTask+0x74>
 8008ec4:	697b      	ldr	r3, [r7, #20]
 8008ec6:	4618      	mov	r0, r3
 8008ec8:	3718      	adds	r7, #24
 8008eca:	46bd      	mov	sp, r7
 8008ecc:	bd80      	pop	{r7, pc}
 8008ece:	bf00      	nop
 8008ed0:	20001794 	.word	0x20001794
 8008ed4:	08009fac 	.word	0x08009fac
 8008ed8:	08009019 	.word	0x08009019
 8008edc:	20001798 	.word	0x20001798

08008ee0 <xTimerGenericCommand>:
 8008ee0:	b580      	push	{r7, lr}
 8008ee2:	b08a      	sub	sp, #40	@ 0x28
 8008ee4:	af00      	add	r7, sp, #0
 8008ee6:	60f8      	str	r0, [r7, #12]
 8008ee8:	60b9      	str	r1, [r7, #8]
 8008eea:	607a      	str	r2, [r7, #4]
 8008eec:	603b      	str	r3, [r7, #0]
 8008eee:	2300      	movs	r3, #0
 8008ef0:	627b      	str	r3, [r7, #36]	@ 0x24
 8008ef2:	68fb      	ldr	r3, [r7, #12]
 8008ef4:	2b00      	cmp	r3, #0
 8008ef6:	d10b      	bne.n	8008f10 <xTimerGenericCommand+0x30>
 8008ef8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008efc:	f383 8811 	msr	BASEPRI, r3
 8008f00:	f3bf 8f6f 	isb	sy
 8008f04:	f3bf 8f4f 	dsb	sy
 8008f08:	623b      	str	r3, [r7, #32]
 8008f0a:	bf00      	nop
 8008f0c:	bf00      	nop
 8008f0e:	e7fd      	b.n	8008f0c <xTimerGenericCommand+0x2c>
 8008f10:	4b19      	ldr	r3, [pc, #100]	@ (8008f78 <xTimerGenericCommand+0x98>)
 8008f12:	681b      	ldr	r3, [r3, #0]
 8008f14:	2b00      	cmp	r3, #0
 8008f16:	d02a      	beq.n	8008f6e <xTimerGenericCommand+0x8e>
 8008f18:	68bb      	ldr	r3, [r7, #8]
 8008f1a:	613b      	str	r3, [r7, #16]
 8008f1c:	687b      	ldr	r3, [r7, #4]
 8008f1e:	617b      	str	r3, [r7, #20]
 8008f20:	68fb      	ldr	r3, [r7, #12]
 8008f22:	61bb      	str	r3, [r7, #24]
 8008f24:	68bb      	ldr	r3, [r7, #8]
 8008f26:	2b05      	cmp	r3, #5
 8008f28:	dc18      	bgt.n	8008f5c <xTimerGenericCommand+0x7c>
 8008f2a:	f7ff fead 	bl	8008c88 <xTaskGetSchedulerState>
 8008f2e:	4603      	mov	r3, r0
 8008f30:	2b02      	cmp	r3, #2
 8008f32:	d109      	bne.n	8008f48 <xTimerGenericCommand+0x68>
 8008f34:	4b10      	ldr	r3, [pc, #64]	@ (8008f78 <xTimerGenericCommand+0x98>)
 8008f36:	6818      	ldr	r0, [r3, #0]
 8008f38:	f107 0110 	add.w	r1, r7, #16
 8008f3c:	2300      	movs	r3, #0
 8008f3e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008f40:	f7fe fc5a 	bl	80077f8 <xQueueGenericSend>
 8008f44:	6278      	str	r0, [r7, #36]	@ 0x24
 8008f46:	e012      	b.n	8008f6e <xTimerGenericCommand+0x8e>
 8008f48:	4b0b      	ldr	r3, [pc, #44]	@ (8008f78 <xTimerGenericCommand+0x98>)
 8008f4a:	6818      	ldr	r0, [r3, #0]
 8008f4c:	f107 0110 	add.w	r1, r7, #16
 8008f50:	2300      	movs	r3, #0
 8008f52:	2200      	movs	r2, #0
 8008f54:	f7fe fc50 	bl	80077f8 <xQueueGenericSend>
 8008f58:	6278      	str	r0, [r7, #36]	@ 0x24
 8008f5a:	e008      	b.n	8008f6e <xTimerGenericCommand+0x8e>
 8008f5c:	4b06      	ldr	r3, [pc, #24]	@ (8008f78 <xTimerGenericCommand+0x98>)
 8008f5e:	6818      	ldr	r0, [r3, #0]
 8008f60:	f107 0110 	add.w	r1, r7, #16
 8008f64:	2300      	movs	r3, #0
 8008f66:	683a      	ldr	r2, [r7, #0]
 8008f68:	f7fe fd48 	bl	80079fc <xQueueGenericSendFromISR>
 8008f6c:	6278      	str	r0, [r7, #36]	@ 0x24
 8008f6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f70:	4618      	mov	r0, r3
 8008f72:	3728      	adds	r7, #40	@ 0x28
 8008f74:	46bd      	mov	sp, r7
 8008f76:	bd80      	pop	{r7, pc}
 8008f78:	20001794 	.word	0x20001794

08008f7c <prvProcessExpiredTimer>:
 8008f7c:	b580      	push	{r7, lr}
 8008f7e:	b088      	sub	sp, #32
 8008f80:	af02      	add	r7, sp, #8
 8008f82:	6078      	str	r0, [r7, #4]
 8008f84:	6039      	str	r1, [r7, #0]
 8008f86:	4b23      	ldr	r3, [pc, #140]	@ (8009014 <prvProcessExpiredTimer+0x98>)
 8008f88:	681b      	ldr	r3, [r3, #0]
 8008f8a:	68db      	ldr	r3, [r3, #12]
 8008f8c:	68db      	ldr	r3, [r3, #12]
 8008f8e:	617b      	str	r3, [r7, #20]
 8008f90:	697b      	ldr	r3, [r7, #20]
 8008f92:	3304      	adds	r3, #4
 8008f94:	4618      	mov	r0, r3
 8008f96:	f7fe fafb 	bl	8007590 <uxListRemove>
 8008f9a:	697b      	ldr	r3, [r7, #20]
 8008f9c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8008fa0:	f003 0304 	and.w	r3, r3, #4
 8008fa4:	2b00      	cmp	r3, #0
 8008fa6:	d023      	beq.n	8008ff0 <prvProcessExpiredTimer+0x74>
 8008fa8:	697b      	ldr	r3, [r7, #20]
 8008faa:	699a      	ldr	r2, [r3, #24]
 8008fac:	687b      	ldr	r3, [r7, #4]
 8008fae:	18d1      	adds	r1, r2, r3
 8008fb0:	687b      	ldr	r3, [r7, #4]
 8008fb2:	683a      	ldr	r2, [r7, #0]
 8008fb4:	6978      	ldr	r0, [r7, #20]
 8008fb6:	f000 f8d5 	bl	8009164 <prvInsertTimerInActiveList>
 8008fba:	4603      	mov	r3, r0
 8008fbc:	2b00      	cmp	r3, #0
 8008fbe:	d020      	beq.n	8009002 <prvProcessExpiredTimer+0x86>
 8008fc0:	2300      	movs	r3, #0
 8008fc2:	9300      	str	r3, [sp, #0]
 8008fc4:	2300      	movs	r3, #0
 8008fc6:	687a      	ldr	r2, [r7, #4]
 8008fc8:	2100      	movs	r1, #0
 8008fca:	6978      	ldr	r0, [r7, #20]
 8008fcc:	f7ff ff88 	bl	8008ee0 <xTimerGenericCommand>
 8008fd0:	6138      	str	r0, [r7, #16]
 8008fd2:	693b      	ldr	r3, [r7, #16]
 8008fd4:	2b00      	cmp	r3, #0
 8008fd6:	d114      	bne.n	8009002 <prvProcessExpiredTimer+0x86>
 8008fd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fdc:	f383 8811 	msr	BASEPRI, r3
 8008fe0:	f3bf 8f6f 	isb	sy
 8008fe4:	f3bf 8f4f 	dsb	sy
 8008fe8:	60fb      	str	r3, [r7, #12]
 8008fea:	bf00      	nop
 8008fec:	bf00      	nop
 8008fee:	e7fd      	b.n	8008fec <prvProcessExpiredTimer+0x70>
 8008ff0:	697b      	ldr	r3, [r7, #20]
 8008ff2:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8008ff6:	f023 0301 	bic.w	r3, r3, #1
 8008ffa:	b2da      	uxtb	r2, r3
 8008ffc:	697b      	ldr	r3, [r7, #20]
 8008ffe:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8009002:	697b      	ldr	r3, [r7, #20]
 8009004:	6a1b      	ldr	r3, [r3, #32]
 8009006:	6978      	ldr	r0, [r7, #20]
 8009008:	4798      	blx	r3
 800900a:	bf00      	nop
 800900c:	3718      	adds	r7, #24
 800900e:	46bd      	mov	sp, r7
 8009010:	bd80      	pop	{r7, pc}
 8009012:	bf00      	nop
 8009014:	2000178c 	.word	0x2000178c

08009018 <prvTimerTask>:
 8009018:	b580      	push	{r7, lr}
 800901a:	b084      	sub	sp, #16
 800901c:	af00      	add	r7, sp, #0
 800901e:	6078      	str	r0, [r7, #4]
 8009020:	f107 0308 	add.w	r3, r7, #8
 8009024:	4618      	mov	r0, r3
 8009026:	f000 f859 	bl	80090dc <prvGetNextExpireTime>
 800902a:	60f8      	str	r0, [r7, #12]
 800902c:	68bb      	ldr	r3, [r7, #8]
 800902e:	4619      	mov	r1, r3
 8009030:	68f8      	ldr	r0, [r7, #12]
 8009032:	f000 f805 	bl	8009040 <prvProcessTimerOrBlockTask>
 8009036:	f000 f8d7 	bl	80091e8 <prvProcessReceivedCommands>
 800903a:	bf00      	nop
 800903c:	e7f0      	b.n	8009020 <prvTimerTask+0x8>
	...

08009040 <prvProcessTimerOrBlockTask>:
 8009040:	b580      	push	{r7, lr}
 8009042:	b084      	sub	sp, #16
 8009044:	af00      	add	r7, sp, #0
 8009046:	6078      	str	r0, [r7, #4]
 8009048:	6039      	str	r1, [r7, #0]
 800904a:	f7ff fa29 	bl	80084a0 <vTaskSuspendAll>
 800904e:	f107 0308 	add.w	r3, r7, #8
 8009052:	4618      	mov	r0, r3
 8009054:	f000 f866 	bl	8009124 <prvSampleTimeNow>
 8009058:	60f8      	str	r0, [r7, #12]
 800905a:	68bb      	ldr	r3, [r7, #8]
 800905c:	2b00      	cmp	r3, #0
 800905e:	d130      	bne.n	80090c2 <prvProcessTimerOrBlockTask+0x82>
 8009060:	683b      	ldr	r3, [r7, #0]
 8009062:	2b00      	cmp	r3, #0
 8009064:	d10a      	bne.n	800907c <prvProcessTimerOrBlockTask+0x3c>
 8009066:	687a      	ldr	r2, [r7, #4]
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	429a      	cmp	r2, r3
 800906c:	d806      	bhi.n	800907c <prvProcessTimerOrBlockTask+0x3c>
 800906e:	f7ff fa25 	bl	80084bc <xTaskResumeAll>
 8009072:	68f9      	ldr	r1, [r7, #12]
 8009074:	6878      	ldr	r0, [r7, #4]
 8009076:	f7ff ff81 	bl	8008f7c <prvProcessExpiredTimer>
 800907a:	e024      	b.n	80090c6 <prvProcessTimerOrBlockTask+0x86>
 800907c:	683b      	ldr	r3, [r7, #0]
 800907e:	2b00      	cmp	r3, #0
 8009080:	d008      	beq.n	8009094 <prvProcessTimerOrBlockTask+0x54>
 8009082:	4b13      	ldr	r3, [pc, #76]	@ (80090d0 <prvProcessTimerOrBlockTask+0x90>)
 8009084:	681b      	ldr	r3, [r3, #0]
 8009086:	681b      	ldr	r3, [r3, #0]
 8009088:	2b00      	cmp	r3, #0
 800908a:	d101      	bne.n	8009090 <prvProcessTimerOrBlockTask+0x50>
 800908c:	2301      	movs	r3, #1
 800908e:	e000      	b.n	8009092 <prvProcessTimerOrBlockTask+0x52>
 8009090:	2300      	movs	r3, #0
 8009092:	603b      	str	r3, [r7, #0]
 8009094:	4b0f      	ldr	r3, [pc, #60]	@ (80090d4 <prvProcessTimerOrBlockTask+0x94>)
 8009096:	6818      	ldr	r0, [r3, #0]
 8009098:	687a      	ldr	r2, [r7, #4]
 800909a:	68fb      	ldr	r3, [r7, #12]
 800909c:	1ad3      	subs	r3, r2, r3
 800909e:	683a      	ldr	r2, [r7, #0]
 80090a0:	4619      	mov	r1, r3
 80090a2:	f7fe ff65 	bl	8007f70 <vQueueWaitForMessageRestricted>
 80090a6:	f7ff fa09 	bl	80084bc <xTaskResumeAll>
 80090aa:	4603      	mov	r3, r0
 80090ac:	2b00      	cmp	r3, #0
 80090ae:	d10a      	bne.n	80090c6 <prvProcessTimerOrBlockTask+0x86>
 80090b0:	4b09      	ldr	r3, [pc, #36]	@ (80090d8 <prvProcessTimerOrBlockTask+0x98>)
 80090b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80090b6:	601a      	str	r2, [r3, #0]
 80090b8:	f3bf 8f4f 	dsb	sy
 80090bc:	f3bf 8f6f 	isb	sy
 80090c0:	e001      	b.n	80090c6 <prvProcessTimerOrBlockTask+0x86>
 80090c2:	f7ff f9fb 	bl	80084bc <xTaskResumeAll>
 80090c6:	bf00      	nop
 80090c8:	3710      	adds	r7, #16
 80090ca:	46bd      	mov	sp, r7
 80090cc:	bd80      	pop	{r7, pc}
 80090ce:	bf00      	nop
 80090d0:	20001790 	.word	0x20001790
 80090d4:	20001794 	.word	0x20001794
 80090d8:	e000ed04 	.word	0xe000ed04

080090dc <prvGetNextExpireTime>:
 80090dc:	b480      	push	{r7}
 80090de:	b085      	sub	sp, #20
 80090e0:	af00      	add	r7, sp, #0
 80090e2:	6078      	str	r0, [r7, #4]
 80090e4:	4b0e      	ldr	r3, [pc, #56]	@ (8009120 <prvGetNextExpireTime+0x44>)
 80090e6:	681b      	ldr	r3, [r3, #0]
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	2b00      	cmp	r3, #0
 80090ec:	d101      	bne.n	80090f2 <prvGetNextExpireTime+0x16>
 80090ee:	2201      	movs	r2, #1
 80090f0:	e000      	b.n	80090f4 <prvGetNextExpireTime+0x18>
 80090f2:	2200      	movs	r2, #0
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	601a      	str	r2, [r3, #0]
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	2b00      	cmp	r3, #0
 80090fe:	d105      	bne.n	800910c <prvGetNextExpireTime+0x30>
 8009100:	4b07      	ldr	r3, [pc, #28]	@ (8009120 <prvGetNextExpireTime+0x44>)
 8009102:	681b      	ldr	r3, [r3, #0]
 8009104:	68db      	ldr	r3, [r3, #12]
 8009106:	681b      	ldr	r3, [r3, #0]
 8009108:	60fb      	str	r3, [r7, #12]
 800910a:	e001      	b.n	8009110 <prvGetNextExpireTime+0x34>
 800910c:	2300      	movs	r3, #0
 800910e:	60fb      	str	r3, [r7, #12]
 8009110:	68fb      	ldr	r3, [r7, #12]
 8009112:	4618      	mov	r0, r3
 8009114:	3714      	adds	r7, #20
 8009116:	46bd      	mov	sp, r7
 8009118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800911c:	4770      	bx	lr
 800911e:	bf00      	nop
 8009120:	2000178c 	.word	0x2000178c

08009124 <prvSampleTimeNow>:
 8009124:	b580      	push	{r7, lr}
 8009126:	b084      	sub	sp, #16
 8009128:	af00      	add	r7, sp, #0
 800912a:	6078      	str	r0, [r7, #4]
 800912c:	f7ff fa64 	bl	80085f8 <xTaskGetTickCount>
 8009130:	60f8      	str	r0, [r7, #12]
 8009132:	4b0b      	ldr	r3, [pc, #44]	@ (8009160 <prvSampleTimeNow+0x3c>)
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	68fa      	ldr	r2, [r7, #12]
 8009138:	429a      	cmp	r2, r3
 800913a:	d205      	bcs.n	8009148 <prvSampleTimeNow+0x24>
 800913c:	f000 f93a 	bl	80093b4 <prvSwitchTimerLists>
 8009140:	687b      	ldr	r3, [r7, #4]
 8009142:	2201      	movs	r2, #1
 8009144:	601a      	str	r2, [r3, #0]
 8009146:	e002      	b.n	800914e <prvSampleTimeNow+0x2a>
 8009148:	687b      	ldr	r3, [r7, #4]
 800914a:	2200      	movs	r2, #0
 800914c:	601a      	str	r2, [r3, #0]
 800914e:	4a04      	ldr	r2, [pc, #16]	@ (8009160 <prvSampleTimeNow+0x3c>)
 8009150:	68fb      	ldr	r3, [r7, #12]
 8009152:	6013      	str	r3, [r2, #0]
 8009154:	68fb      	ldr	r3, [r7, #12]
 8009156:	4618      	mov	r0, r3
 8009158:	3710      	adds	r7, #16
 800915a:	46bd      	mov	sp, r7
 800915c:	bd80      	pop	{r7, pc}
 800915e:	bf00      	nop
 8009160:	2000179c 	.word	0x2000179c

08009164 <prvInsertTimerInActiveList>:
 8009164:	b580      	push	{r7, lr}
 8009166:	b086      	sub	sp, #24
 8009168:	af00      	add	r7, sp, #0
 800916a:	60f8      	str	r0, [r7, #12]
 800916c:	60b9      	str	r1, [r7, #8]
 800916e:	607a      	str	r2, [r7, #4]
 8009170:	603b      	str	r3, [r7, #0]
 8009172:	2300      	movs	r3, #0
 8009174:	617b      	str	r3, [r7, #20]
 8009176:	68fb      	ldr	r3, [r7, #12]
 8009178:	68ba      	ldr	r2, [r7, #8]
 800917a:	605a      	str	r2, [r3, #4]
 800917c:	68fb      	ldr	r3, [r7, #12]
 800917e:	68fa      	ldr	r2, [r7, #12]
 8009180:	611a      	str	r2, [r3, #16]
 8009182:	68ba      	ldr	r2, [r7, #8]
 8009184:	687b      	ldr	r3, [r7, #4]
 8009186:	429a      	cmp	r2, r3
 8009188:	d812      	bhi.n	80091b0 <prvInsertTimerInActiveList+0x4c>
 800918a:	687a      	ldr	r2, [r7, #4]
 800918c:	683b      	ldr	r3, [r7, #0]
 800918e:	1ad2      	subs	r2, r2, r3
 8009190:	68fb      	ldr	r3, [r7, #12]
 8009192:	699b      	ldr	r3, [r3, #24]
 8009194:	429a      	cmp	r2, r3
 8009196:	d302      	bcc.n	800919e <prvInsertTimerInActiveList+0x3a>
 8009198:	2301      	movs	r3, #1
 800919a:	617b      	str	r3, [r7, #20]
 800919c:	e01b      	b.n	80091d6 <prvInsertTimerInActiveList+0x72>
 800919e:	4b10      	ldr	r3, [pc, #64]	@ (80091e0 <prvInsertTimerInActiveList+0x7c>)
 80091a0:	681a      	ldr	r2, [r3, #0]
 80091a2:	68fb      	ldr	r3, [r7, #12]
 80091a4:	3304      	adds	r3, #4
 80091a6:	4619      	mov	r1, r3
 80091a8:	4610      	mov	r0, r2
 80091aa:	f7fe f9b8 	bl	800751e <vListInsert>
 80091ae:	e012      	b.n	80091d6 <prvInsertTimerInActiveList+0x72>
 80091b0:	687a      	ldr	r2, [r7, #4]
 80091b2:	683b      	ldr	r3, [r7, #0]
 80091b4:	429a      	cmp	r2, r3
 80091b6:	d206      	bcs.n	80091c6 <prvInsertTimerInActiveList+0x62>
 80091b8:	68ba      	ldr	r2, [r7, #8]
 80091ba:	683b      	ldr	r3, [r7, #0]
 80091bc:	429a      	cmp	r2, r3
 80091be:	d302      	bcc.n	80091c6 <prvInsertTimerInActiveList+0x62>
 80091c0:	2301      	movs	r3, #1
 80091c2:	617b      	str	r3, [r7, #20]
 80091c4:	e007      	b.n	80091d6 <prvInsertTimerInActiveList+0x72>
 80091c6:	4b07      	ldr	r3, [pc, #28]	@ (80091e4 <prvInsertTimerInActiveList+0x80>)
 80091c8:	681a      	ldr	r2, [r3, #0]
 80091ca:	68fb      	ldr	r3, [r7, #12]
 80091cc:	3304      	adds	r3, #4
 80091ce:	4619      	mov	r1, r3
 80091d0:	4610      	mov	r0, r2
 80091d2:	f7fe f9a4 	bl	800751e <vListInsert>
 80091d6:	697b      	ldr	r3, [r7, #20]
 80091d8:	4618      	mov	r0, r3
 80091da:	3718      	adds	r7, #24
 80091dc:	46bd      	mov	sp, r7
 80091de:	bd80      	pop	{r7, pc}
 80091e0:	20001790 	.word	0x20001790
 80091e4:	2000178c 	.word	0x2000178c

080091e8 <prvProcessReceivedCommands>:
 80091e8:	b580      	push	{r7, lr}
 80091ea:	b08e      	sub	sp, #56	@ 0x38
 80091ec:	af02      	add	r7, sp, #8
 80091ee:	e0ce      	b.n	800938e <prvProcessReceivedCommands+0x1a6>
 80091f0:	687b      	ldr	r3, [r7, #4]
 80091f2:	2b00      	cmp	r3, #0
 80091f4:	da19      	bge.n	800922a <prvProcessReceivedCommands+0x42>
 80091f6:	1d3b      	adds	r3, r7, #4
 80091f8:	3304      	adds	r3, #4
 80091fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80091fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80091fe:	2b00      	cmp	r3, #0
 8009200:	d10b      	bne.n	800921a <prvProcessReceivedCommands+0x32>
 8009202:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009206:	f383 8811 	msr	BASEPRI, r3
 800920a:	f3bf 8f6f 	isb	sy
 800920e:	f3bf 8f4f 	dsb	sy
 8009212:	61fb      	str	r3, [r7, #28]
 8009214:	bf00      	nop
 8009216:	bf00      	nop
 8009218:	e7fd      	b.n	8009216 <prvProcessReceivedCommands+0x2e>
 800921a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800921c:	681b      	ldr	r3, [r3, #0]
 800921e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009220:	6850      	ldr	r0, [r2, #4]
 8009222:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009224:	6892      	ldr	r2, [r2, #8]
 8009226:	4611      	mov	r1, r2
 8009228:	4798      	blx	r3
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	2b00      	cmp	r3, #0
 800922e:	f2c0 80ae 	blt.w	800938e <prvProcessReceivedCommands+0x1a6>
 8009232:	68fb      	ldr	r3, [r7, #12]
 8009234:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009236:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009238:	695b      	ldr	r3, [r3, #20]
 800923a:	2b00      	cmp	r3, #0
 800923c:	d004      	beq.n	8009248 <prvProcessReceivedCommands+0x60>
 800923e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009240:	3304      	adds	r3, #4
 8009242:	4618      	mov	r0, r3
 8009244:	f7fe f9a4 	bl	8007590 <uxListRemove>
 8009248:	463b      	mov	r3, r7
 800924a:	4618      	mov	r0, r3
 800924c:	f7ff ff6a 	bl	8009124 <prvSampleTimeNow>
 8009250:	6278      	str	r0, [r7, #36]	@ 0x24
 8009252:	687b      	ldr	r3, [r7, #4]
 8009254:	2b09      	cmp	r3, #9
 8009256:	f200 8097 	bhi.w	8009388 <prvProcessReceivedCommands+0x1a0>
 800925a:	a201      	add	r2, pc, #4	@ (adr r2, 8009260 <prvProcessReceivedCommands+0x78>)
 800925c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009260:	08009289 	.word	0x08009289
 8009264:	08009289 	.word	0x08009289
 8009268:	08009289 	.word	0x08009289
 800926c:	080092ff 	.word	0x080092ff
 8009270:	08009313 	.word	0x08009313
 8009274:	0800935f 	.word	0x0800935f
 8009278:	08009289 	.word	0x08009289
 800927c:	08009289 	.word	0x08009289
 8009280:	080092ff 	.word	0x080092ff
 8009284:	08009313 	.word	0x08009313
 8009288:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800928a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800928e:	f043 0301 	orr.w	r3, r3, #1
 8009292:	b2da      	uxtb	r2, r3
 8009294:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009296:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800929a:	68ba      	ldr	r2, [r7, #8]
 800929c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800929e:	699b      	ldr	r3, [r3, #24]
 80092a0:	18d1      	adds	r1, r2, r3
 80092a2:	68bb      	ldr	r3, [r7, #8]
 80092a4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80092a6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80092a8:	f7ff ff5c 	bl	8009164 <prvInsertTimerInActiveList>
 80092ac:	4603      	mov	r3, r0
 80092ae:	2b00      	cmp	r3, #0
 80092b0:	d06c      	beq.n	800938c <prvProcessReceivedCommands+0x1a4>
 80092b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80092b4:	6a1b      	ldr	r3, [r3, #32]
 80092b6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80092b8:	4798      	blx	r3
 80092ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80092bc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80092c0:	f003 0304 	and.w	r3, r3, #4
 80092c4:	2b00      	cmp	r3, #0
 80092c6:	d061      	beq.n	800938c <prvProcessReceivedCommands+0x1a4>
 80092c8:	68ba      	ldr	r2, [r7, #8]
 80092ca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80092cc:	699b      	ldr	r3, [r3, #24]
 80092ce:	441a      	add	r2, r3
 80092d0:	2300      	movs	r3, #0
 80092d2:	9300      	str	r3, [sp, #0]
 80092d4:	2300      	movs	r3, #0
 80092d6:	2100      	movs	r1, #0
 80092d8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80092da:	f7ff fe01 	bl	8008ee0 <xTimerGenericCommand>
 80092de:	6238      	str	r0, [r7, #32]
 80092e0:	6a3b      	ldr	r3, [r7, #32]
 80092e2:	2b00      	cmp	r3, #0
 80092e4:	d152      	bne.n	800938c <prvProcessReceivedCommands+0x1a4>
 80092e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092ea:	f383 8811 	msr	BASEPRI, r3
 80092ee:	f3bf 8f6f 	isb	sy
 80092f2:	f3bf 8f4f 	dsb	sy
 80092f6:	61bb      	str	r3, [r7, #24]
 80092f8:	bf00      	nop
 80092fa:	bf00      	nop
 80092fc:	e7fd      	b.n	80092fa <prvProcessReceivedCommands+0x112>
 80092fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009300:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009304:	f023 0301 	bic.w	r3, r3, #1
 8009308:	b2da      	uxtb	r2, r3
 800930a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800930c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8009310:	e03d      	b.n	800938e <prvProcessReceivedCommands+0x1a6>
 8009312:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009314:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009318:	f043 0301 	orr.w	r3, r3, #1
 800931c:	b2da      	uxtb	r2, r3
 800931e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009320:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8009324:	68ba      	ldr	r2, [r7, #8]
 8009326:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009328:	619a      	str	r2, [r3, #24]
 800932a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800932c:	699b      	ldr	r3, [r3, #24]
 800932e:	2b00      	cmp	r3, #0
 8009330:	d10b      	bne.n	800934a <prvProcessReceivedCommands+0x162>
 8009332:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009336:	f383 8811 	msr	BASEPRI, r3
 800933a:	f3bf 8f6f 	isb	sy
 800933e:	f3bf 8f4f 	dsb	sy
 8009342:	617b      	str	r3, [r7, #20]
 8009344:	bf00      	nop
 8009346:	bf00      	nop
 8009348:	e7fd      	b.n	8009346 <prvProcessReceivedCommands+0x15e>
 800934a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800934c:	699a      	ldr	r2, [r3, #24]
 800934e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009350:	18d1      	adds	r1, r2, r3
 8009352:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009354:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009356:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8009358:	f7ff ff04 	bl	8009164 <prvInsertTimerInActiveList>
 800935c:	e017      	b.n	800938e <prvProcessReceivedCommands+0x1a6>
 800935e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009360:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009364:	f003 0302 	and.w	r3, r3, #2
 8009368:	2b00      	cmp	r3, #0
 800936a:	d103      	bne.n	8009374 <prvProcessReceivedCommands+0x18c>
 800936c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800936e:	f000 fbeb 	bl	8009b48 <vPortFree>
 8009372:	e00c      	b.n	800938e <prvProcessReceivedCommands+0x1a6>
 8009374:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009376:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800937a:	f023 0301 	bic.w	r3, r3, #1
 800937e:	b2da      	uxtb	r2, r3
 8009380:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009382:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8009386:	e002      	b.n	800938e <prvProcessReceivedCommands+0x1a6>
 8009388:	bf00      	nop
 800938a:	e000      	b.n	800938e <prvProcessReceivedCommands+0x1a6>
 800938c:	bf00      	nop
 800938e:	4b08      	ldr	r3, [pc, #32]	@ (80093b0 <prvProcessReceivedCommands+0x1c8>)
 8009390:	681b      	ldr	r3, [r3, #0]
 8009392:	1d39      	adds	r1, r7, #4
 8009394:	2200      	movs	r2, #0
 8009396:	4618      	mov	r0, r3
 8009398:	f7fe fbce 	bl	8007b38 <xQueueReceive>
 800939c:	4603      	mov	r3, r0
 800939e:	2b00      	cmp	r3, #0
 80093a0:	f47f af26 	bne.w	80091f0 <prvProcessReceivedCommands+0x8>
 80093a4:	bf00      	nop
 80093a6:	bf00      	nop
 80093a8:	3730      	adds	r7, #48	@ 0x30
 80093aa:	46bd      	mov	sp, r7
 80093ac:	bd80      	pop	{r7, pc}
 80093ae:	bf00      	nop
 80093b0:	20001794 	.word	0x20001794

080093b4 <prvSwitchTimerLists>:
 80093b4:	b580      	push	{r7, lr}
 80093b6:	b088      	sub	sp, #32
 80093b8:	af02      	add	r7, sp, #8
 80093ba:	e049      	b.n	8009450 <prvSwitchTimerLists+0x9c>
 80093bc:	4b2e      	ldr	r3, [pc, #184]	@ (8009478 <prvSwitchTimerLists+0xc4>)
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	68db      	ldr	r3, [r3, #12]
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	613b      	str	r3, [r7, #16]
 80093c6:	4b2c      	ldr	r3, [pc, #176]	@ (8009478 <prvSwitchTimerLists+0xc4>)
 80093c8:	681b      	ldr	r3, [r3, #0]
 80093ca:	68db      	ldr	r3, [r3, #12]
 80093cc:	68db      	ldr	r3, [r3, #12]
 80093ce:	60fb      	str	r3, [r7, #12]
 80093d0:	68fb      	ldr	r3, [r7, #12]
 80093d2:	3304      	adds	r3, #4
 80093d4:	4618      	mov	r0, r3
 80093d6:	f7fe f8db 	bl	8007590 <uxListRemove>
 80093da:	68fb      	ldr	r3, [r7, #12]
 80093dc:	6a1b      	ldr	r3, [r3, #32]
 80093de:	68f8      	ldr	r0, [r7, #12]
 80093e0:	4798      	blx	r3
 80093e2:	68fb      	ldr	r3, [r7, #12]
 80093e4:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80093e8:	f003 0304 	and.w	r3, r3, #4
 80093ec:	2b00      	cmp	r3, #0
 80093ee:	d02f      	beq.n	8009450 <prvSwitchTimerLists+0x9c>
 80093f0:	68fb      	ldr	r3, [r7, #12]
 80093f2:	699b      	ldr	r3, [r3, #24]
 80093f4:	693a      	ldr	r2, [r7, #16]
 80093f6:	4413      	add	r3, r2
 80093f8:	60bb      	str	r3, [r7, #8]
 80093fa:	68ba      	ldr	r2, [r7, #8]
 80093fc:	693b      	ldr	r3, [r7, #16]
 80093fe:	429a      	cmp	r2, r3
 8009400:	d90e      	bls.n	8009420 <prvSwitchTimerLists+0x6c>
 8009402:	68fb      	ldr	r3, [r7, #12]
 8009404:	68ba      	ldr	r2, [r7, #8]
 8009406:	605a      	str	r2, [r3, #4]
 8009408:	68fb      	ldr	r3, [r7, #12]
 800940a:	68fa      	ldr	r2, [r7, #12]
 800940c:	611a      	str	r2, [r3, #16]
 800940e:	4b1a      	ldr	r3, [pc, #104]	@ (8009478 <prvSwitchTimerLists+0xc4>)
 8009410:	681a      	ldr	r2, [r3, #0]
 8009412:	68fb      	ldr	r3, [r7, #12]
 8009414:	3304      	adds	r3, #4
 8009416:	4619      	mov	r1, r3
 8009418:	4610      	mov	r0, r2
 800941a:	f7fe f880 	bl	800751e <vListInsert>
 800941e:	e017      	b.n	8009450 <prvSwitchTimerLists+0x9c>
 8009420:	2300      	movs	r3, #0
 8009422:	9300      	str	r3, [sp, #0]
 8009424:	2300      	movs	r3, #0
 8009426:	693a      	ldr	r2, [r7, #16]
 8009428:	2100      	movs	r1, #0
 800942a:	68f8      	ldr	r0, [r7, #12]
 800942c:	f7ff fd58 	bl	8008ee0 <xTimerGenericCommand>
 8009430:	6078      	str	r0, [r7, #4]
 8009432:	687b      	ldr	r3, [r7, #4]
 8009434:	2b00      	cmp	r3, #0
 8009436:	d10b      	bne.n	8009450 <prvSwitchTimerLists+0x9c>
 8009438:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800943c:	f383 8811 	msr	BASEPRI, r3
 8009440:	f3bf 8f6f 	isb	sy
 8009444:	f3bf 8f4f 	dsb	sy
 8009448:	603b      	str	r3, [r7, #0]
 800944a:	bf00      	nop
 800944c:	bf00      	nop
 800944e:	e7fd      	b.n	800944c <prvSwitchTimerLists+0x98>
 8009450:	4b09      	ldr	r3, [pc, #36]	@ (8009478 <prvSwitchTimerLists+0xc4>)
 8009452:	681b      	ldr	r3, [r3, #0]
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	2b00      	cmp	r3, #0
 8009458:	d1b0      	bne.n	80093bc <prvSwitchTimerLists+0x8>
 800945a:	4b07      	ldr	r3, [pc, #28]	@ (8009478 <prvSwitchTimerLists+0xc4>)
 800945c:	681b      	ldr	r3, [r3, #0]
 800945e:	617b      	str	r3, [r7, #20]
 8009460:	4b06      	ldr	r3, [pc, #24]	@ (800947c <prvSwitchTimerLists+0xc8>)
 8009462:	681b      	ldr	r3, [r3, #0]
 8009464:	4a04      	ldr	r2, [pc, #16]	@ (8009478 <prvSwitchTimerLists+0xc4>)
 8009466:	6013      	str	r3, [r2, #0]
 8009468:	4a04      	ldr	r2, [pc, #16]	@ (800947c <prvSwitchTimerLists+0xc8>)
 800946a:	697b      	ldr	r3, [r7, #20]
 800946c:	6013      	str	r3, [r2, #0]
 800946e:	bf00      	nop
 8009470:	3718      	adds	r7, #24
 8009472:	46bd      	mov	sp, r7
 8009474:	bd80      	pop	{r7, pc}
 8009476:	bf00      	nop
 8009478:	2000178c 	.word	0x2000178c
 800947c:	20001790 	.word	0x20001790

08009480 <prvCheckForValidListAndQueue>:
 8009480:	b580      	push	{r7, lr}
 8009482:	b082      	sub	sp, #8
 8009484:	af02      	add	r7, sp, #8
 8009486:	f000 f96f 	bl	8009768 <vPortEnterCritical>
 800948a:	4b15      	ldr	r3, [pc, #84]	@ (80094e0 <prvCheckForValidListAndQueue+0x60>)
 800948c:	681b      	ldr	r3, [r3, #0]
 800948e:	2b00      	cmp	r3, #0
 8009490:	d120      	bne.n	80094d4 <prvCheckForValidListAndQueue+0x54>
 8009492:	4814      	ldr	r0, [pc, #80]	@ (80094e4 <prvCheckForValidListAndQueue+0x64>)
 8009494:	f7fd fff2 	bl	800747c <vListInitialise>
 8009498:	4813      	ldr	r0, [pc, #76]	@ (80094e8 <prvCheckForValidListAndQueue+0x68>)
 800949a:	f7fd ffef 	bl	800747c <vListInitialise>
 800949e:	4b13      	ldr	r3, [pc, #76]	@ (80094ec <prvCheckForValidListAndQueue+0x6c>)
 80094a0:	4a10      	ldr	r2, [pc, #64]	@ (80094e4 <prvCheckForValidListAndQueue+0x64>)
 80094a2:	601a      	str	r2, [r3, #0]
 80094a4:	4b12      	ldr	r3, [pc, #72]	@ (80094f0 <prvCheckForValidListAndQueue+0x70>)
 80094a6:	4a10      	ldr	r2, [pc, #64]	@ (80094e8 <prvCheckForValidListAndQueue+0x68>)
 80094a8:	601a      	str	r2, [r3, #0]
 80094aa:	2300      	movs	r3, #0
 80094ac:	9300      	str	r3, [sp, #0]
 80094ae:	4b11      	ldr	r3, [pc, #68]	@ (80094f4 <prvCheckForValidListAndQueue+0x74>)
 80094b0:	4a11      	ldr	r2, [pc, #68]	@ (80094f8 <prvCheckForValidListAndQueue+0x78>)
 80094b2:	2110      	movs	r1, #16
 80094b4:	200a      	movs	r0, #10
 80094b6:	f7fe f8ff 	bl	80076b8 <xQueueGenericCreateStatic>
 80094ba:	4603      	mov	r3, r0
 80094bc:	4a08      	ldr	r2, [pc, #32]	@ (80094e0 <prvCheckForValidListAndQueue+0x60>)
 80094be:	6013      	str	r3, [r2, #0]
 80094c0:	4b07      	ldr	r3, [pc, #28]	@ (80094e0 <prvCheckForValidListAndQueue+0x60>)
 80094c2:	681b      	ldr	r3, [r3, #0]
 80094c4:	2b00      	cmp	r3, #0
 80094c6:	d005      	beq.n	80094d4 <prvCheckForValidListAndQueue+0x54>
 80094c8:	4b05      	ldr	r3, [pc, #20]	@ (80094e0 <prvCheckForValidListAndQueue+0x60>)
 80094ca:	681b      	ldr	r3, [r3, #0]
 80094cc:	490b      	ldr	r1, [pc, #44]	@ (80094fc <prvCheckForValidListAndQueue+0x7c>)
 80094ce:	4618      	mov	r0, r3
 80094d0:	f7fe fd24 	bl	8007f1c <vQueueAddToRegistry>
 80094d4:	f000 f97a 	bl	80097cc <vPortExitCritical>
 80094d8:	bf00      	nop
 80094da:	46bd      	mov	sp, r7
 80094dc:	bd80      	pop	{r7, pc}
 80094de:	bf00      	nop
 80094e0:	20001794 	.word	0x20001794
 80094e4:	20001764 	.word	0x20001764
 80094e8:	20001778 	.word	0x20001778
 80094ec:	2000178c 	.word	0x2000178c
 80094f0:	20001790 	.word	0x20001790
 80094f4:	20001840 	.word	0x20001840
 80094f8:	200017a0 	.word	0x200017a0
 80094fc:	08009fb4 	.word	0x08009fb4

08009500 <pxPortInitialiseStack>:
 8009500:	b480      	push	{r7}
 8009502:	b085      	sub	sp, #20
 8009504:	af00      	add	r7, sp, #0
 8009506:	60f8      	str	r0, [r7, #12]
 8009508:	60b9      	str	r1, [r7, #8]
 800950a:	607a      	str	r2, [r7, #4]
 800950c:	68fb      	ldr	r3, [r7, #12]
 800950e:	3b04      	subs	r3, #4
 8009510:	60fb      	str	r3, [r7, #12]
 8009512:	68fb      	ldr	r3, [r7, #12]
 8009514:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8009518:	601a      	str	r2, [r3, #0]
 800951a:	68fb      	ldr	r3, [r7, #12]
 800951c:	3b04      	subs	r3, #4
 800951e:	60fb      	str	r3, [r7, #12]
 8009520:	68bb      	ldr	r3, [r7, #8]
 8009522:	f023 0201 	bic.w	r2, r3, #1
 8009526:	68fb      	ldr	r3, [r7, #12]
 8009528:	601a      	str	r2, [r3, #0]
 800952a:	68fb      	ldr	r3, [r7, #12]
 800952c:	3b04      	subs	r3, #4
 800952e:	60fb      	str	r3, [r7, #12]
 8009530:	4a0c      	ldr	r2, [pc, #48]	@ (8009564 <pxPortInitialiseStack+0x64>)
 8009532:	68fb      	ldr	r3, [r7, #12]
 8009534:	601a      	str	r2, [r3, #0]
 8009536:	68fb      	ldr	r3, [r7, #12]
 8009538:	3b14      	subs	r3, #20
 800953a:	60fb      	str	r3, [r7, #12]
 800953c:	687a      	ldr	r2, [r7, #4]
 800953e:	68fb      	ldr	r3, [r7, #12]
 8009540:	601a      	str	r2, [r3, #0]
 8009542:	68fb      	ldr	r3, [r7, #12]
 8009544:	3b04      	subs	r3, #4
 8009546:	60fb      	str	r3, [r7, #12]
 8009548:	68fb      	ldr	r3, [r7, #12]
 800954a:	f06f 0202 	mvn.w	r2, #2
 800954e:	601a      	str	r2, [r3, #0]
 8009550:	68fb      	ldr	r3, [r7, #12]
 8009552:	3b20      	subs	r3, #32
 8009554:	60fb      	str	r3, [r7, #12]
 8009556:	68fb      	ldr	r3, [r7, #12]
 8009558:	4618      	mov	r0, r3
 800955a:	3714      	adds	r7, #20
 800955c:	46bd      	mov	sp, r7
 800955e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009562:	4770      	bx	lr
 8009564:	08009569 	.word	0x08009569

08009568 <prvTaskExitError>:
 8009568:	b480      	push	{r7}
 800956a:	b085      	sub	sp, #20
 800956c:	af00      	add	r7, sp, #0
 800956e:	2300      	movs	r3, #0
 8009570:	607b      	str	r3, [r7, #4]
 8009572:	4b13      	ldr	r3, [pc, #76]	@ (80095c0 <prvTaskExitError+0x58>)
 8009574:	681b      	ldr	r3, [r3, #0]
 8009576:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800957a:	d00b      	beq.n	8009594 <prvTaskExitError+0x2c>
 800957c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009580:	f383 8811 	msr	BASEPRI, r3
 8009584:	f3bf 8f6f 	isb	sy
 8009588:	f3bf 8f4f 	dsb	sy
 800958c:	60fb      	str	r3, [r7, #12]
 800958e:	bf00      	nop
 8009590:	bf00      	nop
 8009592:	e7fd      	b.n	8009590 <prvTaskExitError+0x28>
 8009594:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009598:	f383 8811 	msr	BASEPRI, r3
 800959c:	f3bf 8f6f 	isb	sy
 80095a0:	f3bf 8f4f 	dsb	sy
 80095a4:	60bb      	str	r3, [r7, #8]
 80095a6:	bf00      	nop
 80095a8:	bf00      	nop
 80095aa:	687b      	ldr	r3, [r7, #4]
 80095ac:	2b00      	cmp	r3, #0
 80095ae:	d0fc      	beq.n	80095aa <prvTaskExitError+0x42>
 80095b0:	bf00      	nop
 80095b2:	bf00      	nop
 80095b4:	3714      	adds	r7, #20
 80095b6:	46bd      	mov	sp, r7
 80095b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095bc:	4770      	bx	lr
 80095be:	bf00      	nop
 80095c0:	20000158 	.word	0x20000158
	...

080095d0 <SVC_Handler>:
 80095d0:	4b07      	ldr	r3, [pc, #28]	@ (80095f0 <pxCurrentTCBConst2>)
 80095d2:	6819      	ldr	r1, [r3, #0]
 80095d4:	6808      	ldr	r0, [r1, #0]
 80095d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095da:	f380 8809 	msr	PSP, r0
 80095de:	f3bf 8f6f 	isb	sy
 80095e2:	f04f 0000 	mov.w	r0, #0
 80095e6:	f380 8811 	msr	BASEPRI, r0
 80095ea:	4770      	bx	lr
 80095ec:	f3af 8000 	nop.w

080095f0 <pxCurrentTCBConst2>:
 80095f0:	20001264 	.word	0x20001264
 80095f4:	bf00      	nop
 80095f6:	bf00      	nop

080095f8 <prvPortStartFirstTask>:
 80095f8:	4808      	ldr	r0, [pc, #32]	@ (800961c <prvPortStartFirstTask+0x24>)
 80095fa:	6800      	ldr	r0, [r0, #0]
 80095fc:	6800      	ldr	r0, [r0, #0]
 80095fe:	f380 8808 	msr	MSP, r0
 8009602:	f04f 0000 	mov.w	r0, #0
 8009606:	f380 8814 	msr	CONTROL, r0
 800960a:	b662      	cpsie	i
 800960c:	b661      	cpsie	f
 800960e:	f3bf 8f4f 	dsb	sy
 8009612:	f3bf 8f6f 	isb	sy
 8009616:	df00      	svc	0
 8009618:	bf00      	nop
 800961a:	bf00      	nop
 800961c:	e000ed08 	.word	0xe000ed08

08009620 <xPortStartScheduler>:
 8009620:	b580      	push	{r7, lr}
 8009622:	b086      	sub	sp, #24
 8009624:	af00      	add	r7, sp, #0
 8009626:	4b47      	ldr	r3, [pc, #284]	@ (8009744 <xPortStartScheduler+0x124>)
 8009628:	681b      	ldr	r3, [r3, #0]
 800962a:	4a47      	ldr	r2, [pc, #284]	@ (8009748 <xPortStartScheduler+0x128>)
 800962c:	4293      	cmp	r3, r2
 800962e:	d10b      	bne.n	8009648 <xPortStartScheduler+0x28>
 8009630:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009634:	f383 8811 	msr	BASEPRI, r3
 8009638:	f3bf 8f6f 	isb	sy
 800963c:	f3bf 8f4f 	dsb	sy
 8009640:	613b      	str	r3, [r7, #16]
 8009642:	bf00      	nop
 8009644:	bf00      	nop
 8009646:	e7fd      	b.n	8009644 <xPortStartScheduler+0x24>
 8009648:	4b3e      	ldr	r3, [pc, #248]	@ (8009744 <xPortStartScheduler+0x124>)
 800964a:	681b      	ldr	r3, [r3, #0]
 800964c:	4a3f      	ldr	r2, [pc, #252]	@ (800974c <xPortStartScheduler+0x12c>)
 800964e:	4293      	cmp	r3, r2
 8009650:	d10b      	bne.n	800966a <xPortStartScheduler+0x4a>
 8009652:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009656:	f383 8811 	msr	BASEPRI, r3
 800965a:	f3bf 8f6f 	isb	sy
 800965e:	f3bf 8f4f 	dsb	sy
 8009662:	60fb      	str	r3, [r7, #12]
 8009664:	bf00      	nop
 8009666:	bf00      	nop
 8009668:	e7fd      	b.n	8009666 <xPortStartScheduler+0x46>
 800966a:	4b39      	ldr	r3, [pc, #228]	@ (8009750 <xPortStartScheduler+0x130>)
 800966c:	617b      	str	r3, [r7, #20]
 800966e:	697b      	ldr	r3, [r7, #20]
 8009670:	781b      	ldrb	r3, [r3, #0]
 8009672:	b2db      	uxtb	r3, r3
 8009674:	607b      	str	r3, [r7, #4]
 8009676:	697b      	ldr	r3, [r7, #20]
 8009678:	22ff      	movs	r2, #255	@ 0xff
 800967a:	701a      	strb	r2, [r3, #0]
 800967c:	697b      	ldr	r3, [r7, #20]
 800967e:	781b      	ldrb	r3, [r3, #0]
 8009680:	b2db      	uxtb	r3, r3
 8009682:	70fb      	strb	r3, [r7, #3]
 8009684:	78fb      	ldrb	r3, [r7, #3]
 8009686:	b2db      	uxtb	r3, r3
 8009688:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800968c:	b2da      	uxtb	r2, r3
 800968e:	4b31      	ldr	r3, [pc, #196]	@ (8009754 <xPortStartScheduler+0x134>)
 8009690:	701a      	strb	r2, [r3, #0]
 8009692:	4b31      	ldr	r3, [pc, #196]	@ (8009758 <xPortStartScheduler+0x138>)
 8009694:	2207      	movs	r2, #7
 8009696:	601a      	str	r2, [r3, #0]
 8009698:	e009      	b.n	80096ae <xPortStartScheduler+0x8e>
 800969a:	4b2f      	ldr	r3, [pc, #188]	@ (8009758 <xPortStartScheduler+0x138>)
 800969c:	681b      	ldr	r3, [r3, #0]
 800969e:	3b01      	subs	r3, #1
 80096a0:	4a2d      	ldr	r2, [pc, #180]	@ (8009758 <xPortStartScheduler+0x138>)
 80096a2:	6013      	str	r3, [r2, #0]
 80096a4:	78fb      	ldrb	r3, [r7, #3]
 80096a6:	b2db      	uxtb	r3, r3
 80096a8:	005b      	lsls	r3, r3, #1
 80096aa:	b2db      	uxtb	r3, r3
 80096ac:	70fb      	strb	r3, [r7, #3]
 80096ae:	78fb      	ldrb	r3, [r7, #3]
 80096b0:	b2db      	uxtb	r3, r3
 80096b2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80096b6:	2b80      	cmp	r3, #128	@ 0x80
 80096b8:	d0ef      	beq.n	800969a <xPortStartScheduler+0x7a>
 80096ba:	4b27      	ldr	r3, [pc, #156]	@ (8009758 <xPortStartScheduler+0x138>)
 80096bc:	681b      	ldr	r3, [r3, #0]
 80096be:	f1c3 0307 	rsb	r3, r3, #7
 80096c2:	2b04      	cmp	r3, #4
 80096c4:	d00b      	beq.n	80096de <xPortStartScheduler+0xbe>
 80096c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096ca:	f383 8811 	msr	BASEPRI, r3
 80096ce:	f3bf 8f6f 	isb	sy
 80096d2:	f3bf 8f4f 	dsb	sy
 80096d6:	60bb      	str	r3, [r7, #8]
 80096d8:	bf00      	nop
 80096da:	bf00      	nop
 80096dc:	e7fd      	b.n	80096da <xPortStartScheduler+0xba>
 80096de:	4b1e      	ldr	r3, [pc, #120]	@ (8009758 <xPortStartScheduler+0x138>)
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	021b      	lsls	r3, r3, #8
 80096e4:	4a1c      	ldr	r2, [pc, #112]	@ (8009758 <xPortStartScheduler+0x138>)
 80096e6:	6013      	str	r3, [r2, #0]
 80096e8:	4b1b      	ldr	r3, [pc, #108]	@ (8009758 <xPortStartScheduler+0x138>)
 80096ea:	681b      	ldr	r3, [r3, #0]
 80096ec:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80096f0:	4a19      	ldr	r2, [pc, #100]	@ (8009758 <xPortStartScheduler+0x138>)
 80096f2:	6013      	str	r3, [r2, #0]
 80096f4:	687b      	ldr	r3, [r7, #4]
 80096f6:	b2da      	uxtb	r2, r3
 80096f8:	697b      	ldr	r3, [r7, #20]
 80096fa:	701a      	strb	r2, [r3, #0]
 80096fc:	4b17      	ldr	r3, [pc, #92]	@ (800975c <xPortStartScheduler+0x13c>)
 80096fe:	681b      	ldr	r3, [r3, #0]
 8009700:	4a16      	ldr	r2, [pc, #88]	@ (800975c <xPortStartScheduler+0x13c>)
 8009702:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8009706:	6013      	str	r3, [r2, #0]
 8009708:	4b14      	ldr	r3, [pc, #80]	@ (800975c <xPortStartScheduler+0x13c>)
 800970a:	681b      	ldr	r3, [r3, #0]
 800970c:	4a13      	ldr	r2, [pc, #76]	@ (800975c <xPortStartScheduler+0x13c>)
 800970e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8009712:	6013      	str	r3, [r2, #0]
 8009714:	f000 f8da 	bl	80098cc <vPortSetupTimerInterrupt>
 8009718:	4b11      	ldr	r3, [pc, #68]	@ (8009760 <xPortStartScheduler+0x140>)
 800971a:	2200      	movs	r2, #0
 800971c:	601a      	str	r2, [r3, #0]
 800971e:	f000 f8f9 	bl	8009914 <vPortEnableVFP>
 8009722:	4b10      	ldr	r3, [pc, #64]	@ (8009764 <xPortStartScheduler+0x144>)
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	4a0f      	ldr	r2, [pc, #60]	@ (8009764 <xPortStartScheduler+0x144>)
 8009728:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800972c:	6013      	str	r3, [r2, #0]
 800972e:	f7ff ff63 	bl	80095f8 <prvPortStartFirstTask>
 8009732:	f7ff f82b 	bl	800878c <vTaskSwitchContext>
 8009736:	f7ff ff17 	bl	8009568 <prvTaskExitError>
 800973a:	2300      	movs	r3, #0
 800973c:	4618      	mov	r0, r3
 800973e:	3718      	adds	r7, #24
 8009740:	46bd      	mov	sp, r7
 8009742:	bd80      	pop	{r7, pc}
 8009744:	e000ed00 	.word	0xe000ed00
 8009748:	410fc271 	.word	0x410fc271
 800974c:	410fc270 	.word	0x410fc270
 8009750:	e000e400 	.word	0xe000e400
 8009754:	20001890 	.word	0x20001890
 8009758:	20001894 	.word	0x20001894
 800975c:	e000ed20 	.word	0xe000ed20
 8009760:	20000158 	.word	0x20000158
 8009764:	e000ef34 	.word	0xe000ef34

08009768 <vPortEnterCritical>:
 8009768:	b480      	push	{r7}
 800976a:	b083      	sub	sp, #12
 800976c:	af00      	add	r7, sp, #0
 800976e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009772:	f383 8811 	msr	BASEPRI, r3
 8009776:	f3bf 8f6f 	isb	sy
 800977a:	f3bf 8f4f 	dsb	sy
 800977e:	607b      	str	r3, [r7, #4]
 8009780:	bf00      	nop
 8009782:	4b10      	ldr	r3, [pc, #64]	@ (80097c4 <vPortEnterCritical+0x5c>)
 8009784:	681b      	ldr	r3, [r3, #0]
 8009786:	3301      	adds	r3, #1
 8009788:	4a0e      	ldr	r2, [pc, #56]	@ (80097c4 <vPortEnterCritical+0x5c>)
 800978a:	6013      	str	r3, [r2, #0]
 800978c:	4b0d      	ldr	r3, [pc, #52]	@ (80097c4 <vPortEnterCritical+0x5c>)
 800978e:	681b      	ldr	r3, [r3, #0]
 8009790:	2b01      	cmp	r3, #1
 8009792:	d110      	bne.n	80097b6 <vPortEnterCritical+0x4e>
 8009794:	4b0c      	ldr	r3, [pc, #48]	@ (80097c8 <vPortEnterCritical+0x60>)
 8009796:	681b      	ldr	r3, [r3, #0]
 8009798:	b2db      	uxtb	r3, r3
 800979a:	2b00      	cmp	r3, #0
 800979c:	d00b      	beq.n	80097b6 <vPortEnterCritical+0x4e>
 800979e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097a2:	f383 8811 	msr	BASEPRI, r3
 80097a6:	f3bf 8f6f 	isb	sy
 80097aa:	f3bf 8f4f 	dsb	sy
 80097ae:	603b      	str	r3, [r7, #0]
 80097b0:	bf00      	nop
 80097b2:	bf00      	nop
 80097b4:	e7fd      	b.n	80097b2 <vPortEnterCritical+0x4a>
 80097b6:	bf00      	nop
 80097b8:	370c      	adds	r7, #12
 80097ba:	46bd      	mov	sp, r7
 80097bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c0:	4770      	bx	lr
 80097c2:	bf00      	nop
 80097c4:	20000158 	.word	0x20000158
 80097c8:	e000ed04 	.word	0xe000ed04

080097cc <vPortExitCritical>:
 80097cc:	b480      	push	{r7}
 80097ce:	b083      	sub	sp, #12
 80097d0:	af00      	add	r7, sp, #0
 80097d2:	4b12      	ldr	r3, [pc, #72]	@ (800981c <vPortExitCritical+0x50>)
 80097d4:	681b      	ldr	r3, [r3, #0]
 80097d6:	2b00      	cmp	r3, #0
 80097d8:	d10b      	bne.n	80097f2 <vPortExitCritical+0x26>
 80097da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097de:	f383 8811 	msr	BASEPRI, r3
 80097e2:	f3bf 8f6f 	isb	sy
 80097e6:	f3bf 8f4f 	dsb	sy
 80097ea:	607b      	str	r3, [r7, #4]
 80097ec:	bf00      	nop
 80097ee:	bf00      	nop
 80097f0:	e7fd      	b.n	80097ee <vPortExitCritical+0x22>
 80097f2:	4b0a      	ldr	r3, [pc, #40]	@ (800981c <vPortExitCritical+0x50>)
 80097f4:	681b      	ldr	r3, [r3, #0]
 80097f6:	3b01      	subs	r3, #1
 80097f8:	4a08      	ldr	r2, [pc, #32]	@ (800981c <vPortExitCritical+0x50>)
 80097fa:	6013      	str	r3, [r2, #0]
 80097fc:	4b07      	ldr	r3, [pc, #28]	@ (800981c <vPortExitCritical+0x50>)
 80097fe:	681b      	ldr	r3, [r3, #0]
 8009800:	2b00      	cmp	r3, #0
 8009802:	d105      	bne.n	8009810 <vPortExitCritical+0x44>
 8009804:	2300      	movs	r3, #0
 8009806:	603b      	str	r3, [r7, #0]
 8009808:	683b      	ldr	r3, [r7, #0]
 800980a:	f383 8811 	msr	BASEPRI, r3
 800980e:	bf00      	nop
 8009810:	bf00      	nop
 8009812:	370c      	adds	r7, #12
 8009814:	46bd      	mov	sp, r7
 8009816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800981a:	4770      	bx	lr
 800981c:	20000158 	.word	0x20000158

08009820 <PendSV_Handler>:
 8009820:	f3ef 8009 	mrs	r0, PSP
 8009824:	f3bf 8f6f 	isb	sy
 8009828:	4b15      	ldr	r3, [pc, #84]	@ (8009880 <pxCurrentTCBConst>)
 800982a:	681a      	ldr	r2, [r3, #0]
 800982c:	f01e 0f10 	tst.w	lr, #16
 8009830:	bf08      	it	eq
 8009832:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009836:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800983a:	6010      	str	r0, [r2, #0]
 800983c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009840:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8009844:	f380 8811 	msr	BASEPRI, r0
 8009848:	f3bf 8f4f 	dsb	sy
 800984c:	f3bf 8f6f 	isb	sy
 8009850:	f7fe ff9c 	bl	800878c <vTaskSwitchContext>
 8009854:	f04f 0000 	mov.w	r0, #0
 8009858:	f380 8811 	msr	BASEPRI, r0
 800985c:	bc09      	pop	{r0, r3}
 800985e:	6819      	ldr	r1, [r3, #0]
 8009860:	6808      	ldr	r0, [r1, #0]
 8009862:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009866:	f01e 0f10 	tst.w	lr, #16
 800986a:	bf08      	it	eq
 800986c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009870:	f380 8809 	msr	PSP, r0
 8009874:	f3bf 8f6f 	isb	sy
 8009878:	4770      	bx	lr
 800987a:	bf00      	nop
 800987c:	f3af 8000 	nop.w

08009880 <pxCurrentTCBConst>:
 8009880:	20001264 	.word	0x20001264
 8009884:	bf00      	nop
 8009886:	bf00      	nop

08009888 <xPortSysTickHandler>:
 8009888:	b580      	push	{r7, lr}
 800988a:	b082      	sub	sp, #8
 800988c:	af00      	add	r7, sp, #0
 800988e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009892:	f383 8811 	msr	BASEPRI, r3
 8009896:	f3bf 8f6f 	isb	sy
 800989a:	f3bf 8f4f 	dsb	sy
 800989e:	607b      	str	r3, [r7, #4]
 80098a0:	bf00      	nop
 80098a2:	f7fe feb9 	bl	8008618 <xTaskIncrementTick>
 80098a6:	4603      	mov	r3, r0
 80098a8:	2b00      	cmp	r3, #0
 80098aa:	d003      	beq.n	80098b4 <xPortSysTickHandler+0x2c>
 80098ac:	4b06      	ldr	r3, [pc, #24]	@ (80098c8 <xPortSysTickHandler+0x40>)
 80098ae:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80098b2:	601a      	str	r2, [r3, #0]
 80098b4:	2300      	movs	r3, #0
 80098b6:	603b      	str	r3, [r7, #0]
 80098b8:	683b      	ldr	r3, [r7, #0]
 80098ba:	f383 8811 	msr	BASEPRI, r3
 80098be:	bf00      	nop
 80098c0:	bf00      	nop
 80098c2:	3708      	adds	r7, #8
 80098c4:	46bd      	mov	sp, r7
 80098c6:	bd80      	pop	{r7, pc}
 80098c8:	e000ed04 	.word	0xe000ed04

080098cc <vPortSetupTimerInterrupt>:
 80098cc:	b480      	push	{r7}
 80098ce:	af00      	add	r7, sp, #0
 80098d0:	4b0b      	ldr	r3, [pc, #44]	@ (8009900 <vPortSetupTimerInterrupt+0x34>)
 80098d2:	2200      	movs	r2, #0
 80098d4:	601a      	str	r2, [r3, #0]
 80098d6:	4b0b      	ldr	r3, [pc, #44]	@ (8009904 <vPortSetupTimerInterrupt+0x38>)
 80098d8:	2200      	movs	r2, #0
 80098da:	601a      	str	r2, [r3, #0]
 80098dc:	4b0a      	ldr	r3, [pc, #40]	@ (8009908 <vPortSetupTimerInterrupt+0x3c>)
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	4a0a      	ldr	r2, [pc, #40]	@ (800990c <vPortSetupTimerInterrupt+0x40>)
 80098e2:	fba2 2303 	umull	r2, r3, r2, r3
 80098e6:	099b      	lsrs	r3, r3, #6
 80098e8:	4a09      	ldr	r2, [pc, #36]	@ (8009910 <vPortSetupTimerInterrupt+0x44>)
 80098ea:	3b01      	subs	r3, #1
 80098ec:	6013      	str	r3, [r2, #0]
 80098ee:	4b04      	ldr	r3, [pc, #16]	@ (8009900 <vPortSetupTimerInterrupt+0x34>)
 80098f0:	2207      	movs	r2, #7
 80098f2:	601a      	str	r2, [r3, #0]
 80098f4:	bf00      	nop
 80098f6:	46bd      	mov	sp, r7
 80098f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098fc:	4770      	bx	lr
 80098fe:	bf00      	nop
 8009900:	e000e010 	.word	0xe000e010
 8009904:	e000e018 	.word	0xe000e018
 8009908:	2000014c 	.word	0x2000014c
 800990c:	10624dd3 	.word	0x10624dd3
 8009910:	e000e014 	.word	0xe000e014

08009914 <vPortEnableVFP>:
 8009914:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8009924 <vPortEnableVFP+0x10>
 8009918:	6801      	ldr	r1, [r0, #0]
 800991a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800991e:	6001      	str	r1, [r0, #0]
 8009920:	4770      	bx	lr
 8009922:	bf00      	nop
 8009924:	e000ed88 	.word	0xe000ed88

08009928 <vPortValidateInterruptPriority>:
 8009928:	b480      	push	{r7}
 800992a:	b085      	sub	sp, #20
 800992c:	af00      	add	r7, sp, #0
 800992e:	f3ef 8305 	mrs	r3, IPSR
 8009932:	60fb      	str	r3, [r7, #12]
 8009934:	68fb      	ldr	r3, [r7, #12]
 8009936:	2b0f      	cmp	r3, #15
 8009938:	d915      	bls.n	8009966 <vPortValidateInterruptPriority+0x3e>
 800993a:	4a18      	ldr	r2, [pc, #96]	@ (800999c <vPortValidateInterruptPriority+0x74>)
 800993c:	68fb      	ldr	r3, [r7, #12]
 800993e:	4413      	add	r3, r2
 8009940:	781b      	ldrb	r3, [r3, #0]
 8009942:	72fb      	strb	r3, [r7, #11]
 8009944:	4b16      	ldr	r3, [pc, #88]	@ (80099a0 <vPortValidateInterruptPriority+0x78>)
 8009946:	781b      	ldrb	r3, [r3, #0]
 8009948:	7afa      	ldrb	r2, [r7, #11]
 800994a:	429a      	cmp	r2, r3
 800994c:	d20b      	bcs.n	8009966 <vPortValidateInterruptPriority+0x3e>
 800994e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009952:	f383 8811 	msr	BASEPRI, r3
 8009956:	f3bf 8f6f 	isb	sy
 800995a:	f3bf 8f4f 	dsb	sy
 800995e:	607b      	str	r3, [r7, #4]
 8009960:	bf00      	nop
 8009962:	bf00      	nop
 8009964:	e7fd      	b.n	8009962 <vPortValidateInterruptPriority+0x3a>
 8009966:	4b0f      	ldr	r3, [pc, #60]	@ (80099a4 <vPortValidateInterruptPriority+0x7c>)
 8009968:	681b      	ldr	r3, [r3, #0]
 800996a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800996e:	4b0e      	ldr	r3, [pc, #56]	@ (80099a8 <vPortValidateInterruptPriority+0x80>)
 8009970:	681b      	ldr	r3, [r3, #0]
 8009972:	429a      	cmp	r2, r3
 8009974:	d90b      	bls.n	800998e <vPortValidateInterruptPriority+0x66>
 8009976:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800997a:	f383 8811 	msr	BASEPRI, r3
 800997e:	f3bf 8f6f 	isb	sy
 8009982:	f3bf 8f4f 	dsb	sy
 8009986:	603b      	str	r3, [r7, #0]
 8009988:	bf00      	nop
 800998a:	bf00      	nop
 800998c:	e7fd      	b.n	800998a <vPortValidateInterruptPriority+0x62>
 800998e:	bf00      	nop
 8009990:	3714      	adds	r7, #20
 8009992:	46bd      	mov	sp, r7
 8009994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009998:	4770      	bx	lr
 800999a:	bf00      	nop
 800999c:	e000e3f0 	.word	0xe000e3f0
 80099a0:	20001890 	.word	0x20001890
 80099a4:	e000ed0c 	.word	0xe000ed0c
 80099a8:	20001894 	.word	0x20001894

080099ac <pvPortMalloc>:
 80099ac:	b580      	push	{r7, lr}
 80099ae:	b08a      	sub	sp, #40	@ 0x28
 80099b0:	af00      	add	r7, sp, #0
 80099b2:	6078      	str	r0, [r7, #4]
 80099b4:	2300      	movs	r3, #0
 80099b6:	61fb      	str	r3, [r7, #28]
 80099b8:	f7fe fd72 	bl	80084a0 <vTaskSuspendAll>
 80099bc:	4b5c      	ldr	r3, [pc, #368]	@ (8009b30 <pvPortMalloc+0x184>)
 80099be:	681b      	ldr	r3, [r3, #0]
 80099c0:	2b00      	cmp	r3, #0
 80099c2:	d101      	bne.n	80099c8 <pvPortMalloc+0x1c>
 80099c4:	f000 f924 	bl	8009c10 <prvHeapInit>
 80099c8:	4b5a      	ldr	r3, [pc, #360]	@ (8009b34 <pvPortMalloc+0x188>)
 80099ca:	681a      	ldr	r2, [r3, #0]
 80099cc:	687b      	ldr	r3, [r7, #4]
 80099ce:	4013      	ands	r3, r2
 80099d0:	2b00      	cmp	r3, #0
 80099d2:	f040 8095 	bne.w	8009b00 <pvPortMalloc+0x154>
 80099d6:	687b      	ldr	r3, [r7, #4]
 80099d8:	2b00      	cmp	r3, #0
 80099da:	d01e      	beq.n	8009a1a <pvPortMalloc+0x6e>
 80099dc:	2208      	movs	r2, #8
 80099de:	687b      	ldr	r3, [r7, #4]
 80099e0:	4413      	add	r3, r2
 80099e2:	607b      	str	r3, [r7, #4]
 80099e4:	687b      	ldr	r3, [r7, #4]
 80099e6:	f003 0307 	and.w	r3, r3, #7
 80099ea:	2b00      	cmp	r3, #0
 80099ec:	d015      	beq.n	8009a1a <pvPortMalloc+0x6e>
 80099ee:	687b      	ldr	r3, [r7, #4]
 80099f0:	f023 0307 	bic.w	r3, r3, #7
 80099f4:	3308      	adds	r3, #8
 80099f6:	607b      	str	r3, [r7, #4]
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	f003 0307 	and.w	r3, r3, #7
 80099fe:	2b00      	cmp	r3, #0
 8009a00:	d00b      	beq.n	8009a1a <pvPortMalloc+0x6e>
 8009a02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a06:	f383 8811 	msr	BASEPRI, r3
 8009a0a:	f3bf 8f6f 	isb	sy
 8009a0e:	f3bf 8f4f 	dsb	sy
 8009a12:	617b      	str	r3, [r7, #20]
 8009a14:	bf00      	nop
 8009a16:	bf00      	nop
 8009a18:	e7fd      	b.n	8009a16 <pvPortMalloc+0x6a>
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	2b00      	cmp	r3, #0
 8009a1e:	d06f      	beq.n	8009b00 <pvPortMalloc+0x154>
 8009a20:	4b45      	ldr	r3, [pc, #276]	@ (8009b38 <pvPortMalloc+0x18c>)
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	687a      	ldr	r2, [r7, #4]
 8009a26:	429a      	cmp	r2, r3
 8009a28:	d86a      	bhi.n	8009b00 <pvPortMalloc+0x154>
 8009a2a:	4b44      	ldr	r3, [pc, #272]	@ (8009b3c <pvPortMalloc+0x190>)
 8009a2c:	623b      	str	r3, [r7, #32]
 8009a2e:	4b43      	ldr	r3, [pc, #268]	@ (8009b3c <pvPortMalloc+0x190>)
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	627b      	str	r3, [r7, #36]	@ 0x24
 8009a34:	e004      	b.n	8009a40 <pvPortMalloc+0x94>
 8009a36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a38:	623b      	str	r3, [r7, #32]
 8009a3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a3c:	681b      	ldr	r3, [r3, #0]
 8009a3e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009a40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a42:	685b      	ldr	r3, [r3, #4]
 8009a44:	687a      	ldr	r2, [r7, #4]
 8009a46:	429a      	cmp	r2, r3
 8009a48:	d903      	bls.n	8009a52 <pvPortMalloc+0xa6>
 8009a4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a4c:	681b      	ldr	r3, [r3, #0]
 8009a4e:	2b00      	cmp	r3, #0
 8009a50:	d1f1      	bne.n	8009a36 <pvPortMalloc+0x8a>
 8009a52:	4b37      	ldr	r3, [pc, #220]	@ (8009b30 <pvPortMalloc+0x184>)
 8009a54:	681b      	ldr	r3, [r3, #0]
 8009a56:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009a58:	429a      	cmp	r2, r3
 8009a5a:	d051      	beq.n	8009b00 <pvPortMalloc+0x154>
 8009a5c:	6a3b      	ldr	r3, [r7, #32]
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	2208      	movs	r2, #8
 8009a62:	4413      	add	r3, r2
 8009a64:	61fb      	str	r3, [r7, #28]
 8009a66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a68:	681a      	ldr	r2, [r3, #0]
 8009a6a:	6a3b      	ldr	r3, [r7, #32]
 8009a6c:	601a      	str	r2, [r3, #0]
 8009a6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a70:	685a      	ldr	r2, [r3, #4]
 8009a72:	687b      	ldr	r3, [r7, #4]
 8009a74:	1ad2      	subs	r2, r2, r3
 8009a76:	2308      	movs	r3, #8
 8009a78:	005b      	lsls	r3, r3, #1
 8009a7a:	429a      	cmp	r2, r3
 8009a7c:	d920      	bls.n	8009ac0 <pvPortMalloc+0x114>
 8009a7e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	4413      	add	r3, r2
 8009a84:	61bb      	str	r3, [r7, #24]
 8009a86:	69bb      	ldr	r3, [r7, #24]
 8009a88:	f003 0307 	and.w	r3, r3, #7
 8009a8c:	2b00      	cmp	r3, #0
 8009a8e:	d00b      	beq.n	8009aa8 <pvPortMalloc+0xfc>
 8009a90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a94:	f383 8811 	msr	BASEPRI, r3
 8009a98:	f3bf 8f6f 	isb	sy
 8009a9c:	f3bf 8f4f 	dsb	sy
 8009aa0:	613b      	str	r3, [r7, #16]
 8009aa2:	bf00      	nop
 8009aa4:	bf00      	nop
 8009aa6:	e7fd      	b.n	8009aa4 <pvPortMalloc+0xf8>
 8009aa8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009aaa:	685a      	ldr	r2, [r3, #4]
 8009aac:	687b      	ldr	r3, [r7, #4]
 8009aae:	1ad2      	subs	r2, r2, r3
 8009ab0:	69bb      	ldr	r3, [r7, #24]
 8009ab2:	605a      	str	r2, [r3, #4]
 8009ab4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ab6:	687a      	ldr	r2, [r7, #4]
 8009ab8:	605a      	str	r2, [r3, #4]
 8009aba:	69b8      	ldr	r0, [r7, #24]
 8009abc:	f000 f90a 	bl	8009cd4 <prvInsertBlockIntoFreeList>
 8009ac0:	4b1d      	ldr	r3, [pc, #116]	@ (8009b38 <pvPortMalloc+0x18c>)
 8009ac2:	681a      	ldr	r2, [r3, #0]
 8009ac4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ac6:	685b      	ldr	r3, [r3, #4]
 8009ac8:	1ad3      	subs	r3, r2, r3
 8009aca:	4a1b      	ldr	r2, [pc, #108]	@ (8009b38 <pvPortMalloc+0x18c>)
 8009acc:	6013      	str	r3, [r2, #0]
 8009ace:	4b1a      	ldr	r3, [pc, #104]	@ (8009b38 <pvPortMalloc+0x18c>)
 8009ad0:	681a      	ldr	r2, [r3, #0]
 8009ad2:	4b1b      	ldr	r3, [pc, #108]	@ (8009b40 <pvPortMalloc+0x194>)
 8009ad4:	681b      	ldr	r3, [r3, #0]
 8009ad6:	429a      	cmp	r2, r3
 8009ad8:	d203      	bcs.n	8009ae2 <pvPortMalloc+0x136>
 8009ada:	4b17      	ldr	r3, [pc, #92]	@ (8009b38 <pvPortMalloc+0x18c>)
 8009adc:	681b      	ldr	r3, [r3, #0]
 8009ade:	4a18      	ldr	r2, [pc, #96]	@ (8009b40 <pvPortMalloc+0x194>)
 8009ae0:	6013      	str	r3, [r2, #0]
 8009ae2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ae4:	685a      	ldr	r2, [r3, #4]
 8009ae6:	4b13      	ldr	r3, [pc, #76]	@ (8009b34 <pvPortMalloc+0x188>)
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	431a      	orrs	r2, r3
 8009aec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009aee:	605a      	str	r2, [r3, #4]
 8009af0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009af2:	2200      	movs	r2, #0
 8009af4:	601a      	str	r2, [r3, #0]
 8009af6:	4b13      	ldr	r3, [pc, #76]	@ (8009b44 <pvPortMalloc+0x198>)
 8009af8:	681b      	ldr	r3, [r3, #0]
 8009afa:	3301      	adds	r3, #1
 8009afc:	4a11      	ldr	r2, [pc, #68]	@ (8009b44 <pvPortMalloc+0x198>)
 8009afe:	6013      	str	r3, [r2, #0]
 8009b00:	f7fe fcdc 	bl	80084bc <xTaskResumeAll>
 8009b04:	69fb      	ldr	r3, [r7, #28]
 8009b06:	f003 0307 	and.w	r3, r3, #7
 8009b0a:	2b00      	cmp	r3, #0
 8009b0c:	d00b      	beq.n	8009b26 <pvPortMalloc+0x17a>
 8009b0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b12:	f383 8811 	msr	BASEPRI, r3
 8009b16:	f3bf 8f6f 	isb	sy
 8009b1a:	f3bf 8f4f 	dsb	sy
 8009b1e:	60fb      	str	r3, [r7, #12]
 8009b20:	bf00      	nop
 8009b22:	bf00      	nop
 8009b24:	e7fd      	b.n	8009b22 <pvPortMalloc+0x176>
 8009b26:	69fb      	ldr	r3, [r7, #28]
 8009b28:	4618      	mov	r0, r3
 8009b2a:	3728      	adds	r7, #40	@ 0x28
 8009b2c:	46bd      	mov	sp, r7
 8009b2e:	bd80      	pop	{r7, pc}
 8009b30:	200054a0 	.word	0x200054a0
 8009b34:	200054b4 	.word	0x200054b4
 8009b38:	200054a4 	.word	0x200054a4
 8009b3c:	20005498 	.word	0x20005498
 8009b40:	200054a8 	.word	0x200054a8
 8009b44:	200054ac 	.word	0x200054ac

08009b48 <vPortFree>:
 8009b48:	b580      	push	{r7, lr}
 8009b4a:	b086      	sub	sp, #24
 8009b4c:	af00      	add	r7, sp, #0
 8009b4e:	6078      	str	r0, [r7, #4]
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	617b      	str	r3, [r7, #20]
 8009b54:	687b      	ldr	r3, [r7, #4]
 8009b56:	2b00      	cmp	r3, #0
 8009b58:	d04f      	beq.n	8009bfa <vPortFree+0xb2>
 8009b5a:	2308      	movs	r3, #8
 8009b5c:	425b      	negs	r3, r3
 8009b5e:	697a      	ldr	r2, [r7, #20]
 8009b60:	4413      	add	r3, r2
 8009b62:	617b      	str	r3, [r7, #20]
 8009b64:	697b      	ldr	r3, [r7, #20]
 8009b66:	613b      	str	r3, [r7, #16]
 8009b68:	693b      	ldr	r3, [r7, #16]
 8009b6a:	685a      	ldr	r2, [r3, #4]
 8009b6c:	4b25      	ldr	r3, [pc, #148]	@ (8009c04 <vPortFree+0xbc>)
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	4013      	ands	r3, r2
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d10b      	bne.n	8009b8e <vPortFree+0x46>
 8009b76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b7a:	f383 8811 	msr	BASEPRI, r3
 8009b7e:	f3bf 8f6f 	isb	sy
 8009b82:	f3bf 8f4f 	dsb	sy
 8009b86:	60fb      	str	r3, [r7, #12]
 8009b88:	bf00      	nop
 8009b8a:	bf00      	nop
 8009b8c:	e7fd      	b.n	8009b8a <vPortFree+0x42>
 8009b8e:	693b      	ldr	r3, [r7, #16]
 8009b90:	681b      	ldr	r3, [r3, #0]
 8009b92:	2b00      	cmp	r3, #0
 8009b94:	d00b      	beq.n	8009bae <vPortFree+0x66>
 8009b96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b9a:	f383 8811 	msr	BASEPRI, r3
 8009b9e:	f3bf 8f6f 	isb	sy
 8009ba2:	f3bf 8f4f 	dsb	sy
 8009ba6:	60bb      	str	r3, [r7, #8]
 8009ba8:	bf00      	nop
 8009baa:	bf00      	nop
 8009bac:	e7fd      	b.n	8009baa <vPortFree+0x62>
 8009bae:	693b      	ldr	r3, [r7, #16]
 8009bb0:	685a      	ldr	r2, [r3, #4]
 8009bb2:	4b14      	ldr	r3, [pc, #80]	@ (8009c04 <vPortFree+0xbc>)
 8009bb4:	681b      	ldr	r3, [r3, #0]
 8009bb6:	4013      	ands	r3, r2
 8009bb8:	2b00      	cmp	r3, #0
 8009bba:	d01e      	beq.n	8009bfa <vPortFree+0xb2>
 8009bbc:	693b      	ldr	r3, [r7, #16]
 8009bbe:	681b      	ldr	r3, [r3, #0]
 8009bc0:	2b00      	cmp	r3, #0
 8009bc2:	d11a      	bne.n	8009bfa <vPortFree+0xb2>
 8009bc4:	693b      	ldr	r3, [r7, #16]
 8009bc6:	685a      	ldr	r2, [r3, #4]
 8009bc8:	4b0e      	ldr	r3, [pc, #56]	@ (8009c04 <vPortFree+0xbc>)
 8009bca:	681b      	ldr	r3, [r3, #0]
 8009bcc:	43db      	mvns	r3, r3
 8009bce:	401a      	ands	r2, r3
 8009bd0:	693b      	ldr	r3, [r7, #16]
 8009bd2:	605a      	str	r2, [r3, #4]
 8009bd4:	f7fe fc64 	bl	80084a0 <vTaskSuspendAll>
 8009bd8:	693b      	ldr	r3, [r7, #16]
 8009bda:	685a      	ldr	r2, [r3, #4]
 8009bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8009c08 <vPortFree+0xc0>)
 8009bde:	681b      	ldr	r3, [r3, #0]
 8009be0:	4413      	add	r3, r2
 8009be2:	4a09      	ldr	r2, [pc, #36]	@ (8009c08 <vPortFree+0xc0>)
 8009be4:	6013      	str	r3, [r2, #0]
 8009be6:	6938      	ldr	r0, [r7, #16]
 8009be8:	f000 f874 	bl	8009cd4 <prvInsertBlockIntoFreeList>
 8009bec:	4b07      	ldr	r3, [pc, #28]	@ (8009c0c <vPortFree+0xc4>)
 8009bee:	681b      	ldr	r3, [r3, #0]
 8009bf0:	3301      	adds	r3, #1
 8009bf2:	4a06      	ldr	r2, [pc, #24]	@ (8009c0c <vPortFree+0xc4>)
 8009bf4:	6013      	str	r3, [r2, #0]
 8009bf6:	f7fe fc61 	bl	80084bc <xTaskResumeAll>
 8009bfa:	bf00      	nop
 8009bfc:	3718      	adds	r7, #24
 8009bfe:	46bd      	mov	sp, r7
 8009c00:	bd80      	pop	{r7, pc}
 8009c02:	bf00      	nop
 8009c04:	200054b4 	.word	0x200054b4
 8009c08:	200054a4 	.word	0x200054a4
 8009c0c:	200054b0 	.word	0x200054b0

08009c10 <prvHeapInit>:
 8009c10:	b480      	push	{r7}
 8009c12:	b085      	sub	sp, #20
 8009c14:	af00      	add	r7, sp, #0
 8009c16:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 8009c1a:	60bb      	str	r3, [r7, #8]
 8009c1c:	4b27      	ldr	r3, [pc, #156]	@ (8009cbc <prvHeapInit+0xac>)
 8009c1e:	60fb      	str	r3, [r7, #12]
 8009c20:	68fb      	ldr	r3, [r7, #12]
 8009c22:	f003 0307 	and.w	r3, r3, #7
 8009c26:	2b00      	cmp	r3, #0
 8009c28:	d00c      	beq.n	8009c44 <prvHeapInit+0x34>
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	3307      	adds	r3, #7
 8009c2e:	60fb      	str	r3, [r7, #12]
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	f023 0307 	bic.w	r3, r3, #7
 8009c36:	60fb      	str	r3, [r7, #12]
 8009c38:	68ba      	ldr	r2, [r7, #8]
 8009c3a:	68fb      	ldr	r3, [r7, #12]
 8009c3c:	1ad3      	subs	r3, r2, r3
 8009c3e:	4a1f      	ldr	r2, [pc, #124]	@ (8009cbc <prvHeapInit+0xac>)
 8009c40:	4413      	add	r3, r2
 8009c42:	60bb      	str	r3, [r7, #8]
 8009c44:	68fb      	ldr	r3, [r7, #12]
 8009c46:	607b      	str	r3, [r7, #4]
 8009c48:	4a1d      	ldr	r2, [pc, #116]	@ (8009cc0 <prvHeapInit+0xb0>)
 8009c4a:	687b      	ldr	r3, [r7, #4]
 8009c4c:	6013      	str	r3, [r2, #0]
 8009c4e:	4b1c      	ldr	r3, [pc, #112]	@ (8009cc0 <prvHeapInit+0xb0>)
 8009c50:	2200      	movs	r2, #0
 8009c52:	605a      	str	r2, [r3, #4]
 8009c54:	687b      	ldr	r3, [r7, #4]
 8009c56:	68ba      	ldr	r2, [r7, #8]
 8009c58:	4413      	add	r3, r2
 8009c5a:	60fb      	str	r3, [r7, #12]
 8009c5c:	2208      	movs	r2, #8
 8009c5e:	68fb      	ldr	r3, [r7, #12]
 8009c60:	1a9b      	subs	r3, r3, r2
 8009c62:	60fb      	str	r3, [r7, #12]
 8009c64:	68fb      	ldr	r3, [r7, #12]
 8009c66:	f023 0307 	bic.w	r3, r3, #7
 8009c6a:	60fb      	str	r3, [r7, #12]
 8009c6c:	68fb      	ldr	r3, [r7, #12]
 8009c6e:	4a15      	ldr	r2, [pc, #84]	@ (8009cc4 <prvHeapInit+0xb4>)
 8009c70:	6013      	str	r3, [r2, #0]
 8009c72:	4b14      	ldr	r3, [pc, #80]	@ (8009cc4 <prvHeapInit+0xb4>)
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	2200      	movs	r2, #0
 8009c78:	605a      	str	r2, [r3, #4]
 8009c7a:	4b12      	ldr	r3, [pc, #72]	@ (8009cc4 <prvHeapInit+0xb4>)
 8009c7c:	681b      	ldr	r3, [r3, #0]
 8009c7e:	2200      	movs	r2, #0
 8009c80:	601a      	str	r2, [r3, #0]
 8009c82:	687b      	ldr	r3, [r7, #4]
 8009c84:	603b      	str	r3, [r7, #0]
 8009c86:	683b      	ldr	r3, [r7, #0]
 8009c88:	68fa      	ldr	r2, [r7, #12]
 8009c8a:	1ad2      	subs	r2, r2, r3
 8009c8c:	683b      	ldr	r3, [r7, #0]
 8009c8e:	605a      	str	r2, [r3, #4]
 8009c90:	4b0c      	ldr	r3, [pc, #48]	@ (8009cc4 <prvHeapInit+0xb4>)
 8009c92:	681a      	ldr	r2, [r3, #0]
 8009c94:	683b      	ldr	r3, [r7, #0]
 8009c96:	601a      	str	r2, [r3, #0]
 8009c98:	683b      	ldr	r3, [r7, #0]
 8009c9a:	685b      	ldr	r3, [r3, #4]
 8009c9c:	4a0a      	ldr	r2, [pc, #40]	@ (8009cc8 <prvHeapInit+0xb8>)
 8009c9e:	6013      	str	r3, [r2, #0]
 8009ca0:	683b      	ldr	r3, [r7, #0]
 8009ca2:	685b      	ldr	r3, [r3, #4]
 8009ca4:	4a09      	ldr	r2, [pc, #36]	@ (8009ccc <prvHeapInit+0xbc>)
 8009ca6:	6013      	str	r3, [r2, #0]
 8009ca8:	4b09      	ldr	r3, [pc, #36]	@ (8009cd0 <prvHeapInit+0xc0>)
 8009caa:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8009cae:	601a      	str	r2, [r3, #0]
 8009cb0:	bf00      	nop
 8009cb2:	3714      	adds	r7, #20
 8009cb4:	46bd      	mov	sp, r7
 8009cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cba:	4770      	bx	lr
 8009cbc:	20001898 	.word	0x20001898
 8009cc0:	20005498 	.word	0x20005498
 8009cc4:	200054a0 	.word	0x200054a0
 8009cc8:	200054a8 	.word	0x200054a8
 8009ccc:	200054a4 	.word	0x200054a4
 8009cd0:	200054b4 	.word	0x200054b4

08009cd4 <prvInsertBlockIntoFreeList>:
 8009cd4:	b480      	push	{r7}
 8009cd6:	b085      	sub	sp, #20
 8009cd8:	af00      	add	r7, sp, #0
 8009cda:	6078      	str	r0, [r7, #4]
 8009cdc:	4b28      	ldr	r3, [pc, #160]	@ (8009d80 <prvInsertBlockIntoFreeList+0xac>)
 8009cde:	60fb      	str	r3, [r7, #12]
 8009ce0:	e002      	b.n	8009ce8 <prvInsertBlockIntoFreeList+0x14>
 8009ce2:	68fb      	ldr	r3, [r7, #12]
 8009ce4:	681b      	ldr	r3, [r3, #0]
 8009ce6:	60fb      	str	r3, [r7, #12]
 8009ce8:	68fb      	ldr	r3, [r7, #12]
 8009cea:	681b      	ldr	r3, [r3, #0]
 8009cec:	687a      	ldr	r2, [r7, #4]
 8009cee:	429a      	cmp	r2, r3
 8009cf0:	d8f7      	bhi.n	8009ce2 <prvInsertBlockIntoFreeList+0xe>
 8009cf2:	68fb      	ldr	r3, [r7, #12]
 8009cf4:	60bb      	str	r3, [r7, #8]
 8009cf6:	68fb      	ldr	r3, [r7, #12]
 8009cf8:	685b      	ldr	r3, [r3, #4]
 8009cfa:	68ba      	ldr	r2, [r7, #8]
 8009cfc:	4413      	add	r3, r2
 8009cfe:	687a      	ldr	r2, [r7, #4]
 8009d00:	429a      	cmp	r2, r3
 8009d02:	d108      	bne.n	8009d16 <prvInsertBlockIntoFreeList+0x42>
 8009d04:	68fb      	ldr	r3, [r7, #12]
 8009d06:	685a      	ldr	r2, [r3, #4]
 8009d08:	687b      	ldr	r3, [r7, #4]
 8009d0a:	685b      	ldr	r3, [r3, #4]
 8009d0c:	441a      	add	r2, r3
 8009d0e:	68fb      	ldr	r3, [r7, #12]
 8009d10:	605a      	str	r2, [r3, #4]
 8009d12:	68fb      	ldr	r3, [r7, #12]
 8009d14:	607b      	str	r3, [r7, #4]
 8009d16:	687b      	ldr	r3, [r7, #4]
 8009d18:	60bb      	str	r3, [r7, #8]
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	685b      	ldr	r3, [r3, #4]
 8009d1e:	68ba      	ldr	r2, [r7, #8]
 8009d20:	441a      	add	r2, r3
 8009d22:	68fb      	ldr	r3, [r7, #12]
 8009d24:	681b      	ldr	r3, [r3, #0]
 8009d26:	429a      	cmp	r2, r3
 8009d28:	d118      	bne.n	8009d5c <prvInsertBlockIntoFreeList+0x88>
 8009d2a:	68fb      	ldr	r3, [r7, #12]
 8009d2c:	681a      	ldr	r2, [r3, #0]
 8009d2e:	4b15      	ldr	r3, [pc, #84]	@ (8009d84 <prvInsertBlockIntoFreeList+0xb0>)
 8009d30:	681b      	ldr	r3, [r3, #0]
 8009d32:	429a      	cmp	r2, r3
 8009d34:	d00d      	beq.n	8009d52 <prvInsertBlockIntoFreeList+0x7e>
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	685a      	ldr	r2, [r3, #4]
 8009d3a:	68fb      	ldr	r3, [r7, #12]
 8009d3c:	681b      	ldr	r3, [r3, #0]
 8009d3e:	685b      	ldr	r3, [r3, #4]
 8009d40:	441a      	add	r2, r3
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	605a      	str	r2, [r3, #4]
 8009d46:	68fb      	ldr	r3, [r7, #12]
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	681a      	ldr	r2, [r3, #0]
 8009d4c:	687b      	ldr	r3, [r7, #4]
 8009d4e:	601a      	str	r2, [r3, #0]
 8009d50:	e008      	b.n	8009d64 <prvInsertBlockIntoFreeList+0x90>
 8009d52:	4b0c      	ldr	r3, [pc, #48]	@ (8009d84 <prvInsertBlockIntoFreeList+0xb0>)
 8009d54:	681a      	ldr	r2, [r3, #0]
 8009d56:	687b      	ldr	r3, [r7, #4]
 8009d58:	601a      	str	r2, [r3, #0]
 8009d5a:	e003      	b.n	8009d64 <prvInsertBlockIntoFreeList+0x90>
 8009d5c:	68fb      	ldr	r3, [r7, #12]
 8009d5e:	681a      	ldr	r2, [r3, #0]
 8009d60:	687b      	ldr	r3, [r7, #4]
 8009d62:	601a      	str	r2, [r3, #0]
 8009d64:	68fa      	ldr	r2, [r7, #12]
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	429a      	cmp	r2, r3
 8009d6a:	d002      	beq.n	8009d72 <prvInsertBlockIntoFreeList+0x9e>
 8009d6c:	68fb      	ldr	r3, [r7, #12]
 8009d6e:	687a      	ldr	r2, [r7, #4]
 8009d70:	601a      	str	r2, [r3, #0]
 8009d72:	bf00      	nop
 8009d74:	3714      	adds	r7, #20
 8009d76:	46bd      	mov	sp, r7
 8009d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d7c:	4770      	bx	lr
 8009d7e:	bf00      	nop
 8009d80:	20005498 	.word	0x20005498
 8009d84:	200054a0 	.word	0x200054a0

08009d88 <memset>:
 8009d88:	4402      	add	r2, r0
 8009d8a:	4603      	mov	r3, r0
 8009d8c:	4293      	cmp	r3, r2
 8009d8e:	d100      	bne.n	8009d92 <memset+0xa>
 8009d90:	4770      	bx	lr
 8009d92:	f803 1b01 	strb.w	r1, [r3], #1
 8009d96:	e7f9      	b.n	8009d8c <memset+0x4>

08009d98 <_reclaim_reent>:
 8009d98:	4b29      	ldr	r3, [pc, #164]	@ (8009e40 <_reclaim_reent+0xa8>)
 8009d9a:	681b      	ldr	r3, [r3, #0]
 8009d9c:	4283      	cmp	r3, r0
 8009d9e:	b570      	push	{r4, r5, r6, lr}
 8009da0:	4604      	mov	r4, r0
 8009da2:	d04b      	beq.n	8009e3c <_reclaim_reent+0xa4>
 8009da4:	69c3      	ldr	r3, [r0, #28]
 8009da6:	b1ab      	cbz	r3, 8009dd4 <_reclaim_reent+0x3c>
 8009da8:	68db      	ldr	r3, [r3, #12]
 8009daa:	b16b      	cbz	r3, 8009dc8 <_reclaim_reent+0x30>
 8009dac:	2500      	movs	r5, #0
 8009dae:	69e3      	ldr	r3, [r4, #28]
 8009db0:	68db      	ldr	r3, [r3, #12]
 8009db2:	5959      	ldr	r1, [r3, r5]
 8009db4:	2900      	cmp	r1, #0
 8009db6:	d13b      	bne.n	8009e30 <_reclaim_reent+0x98>
 8009db8:	3504      	adds	r5, #4
 8009dba:	2d80      	cmp	r5, #128	@ 0x80
 8009dbc:	d1f7      	bne.n	8009dae <_reclaim_reent+0x16>
 8009dbe:	69e3      	ldr	r3, [r4, #28]
 8009dc0:	4620      	mov	r0, r4
 8009dc2:	68d9      	ldr	r1, [r3, #12]
 8009dc4:	f000 f872 	bl	8009eac <_free_r>
 8009dc8:	69e3      	ldr	r3, [r4, #28]
 8009dca:	6819      	ldr	r1, [r3, #0]
 8009dcc:	b111      	cbz	r1, 8009dd4 <_reclaim_reent+0x3c>
 8009dce:	4620      	mov	r0, r4
 8009dd0:	f000 f86c 	bl	8009eac <_free_r>
 8009dd4:	6961      	ldr	r1, [r4, #20]
 8009dd6:	b111      	cbz	r1, 8009dde <_reclaim_reent+0x46>
 8009dd8:	4620      	mov	r0, r4
 8009dda:	f000 f867 	bl	8009eac <_free_r>
 8009dde:	69e1      	ldr	r1, [r4, #28]
 8009de0:	b111      	cbz	r1, 8009de8 <_reclaim_reent+0x50>
 8009de2:	4620      	mov	r0, r4
 8009de4:	f000 f862 	bl	8009eac <_free_r>
 8009de8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8009dea:	b111      	cbz	r1, 8009df2 <_reclaim_reent+0x5a>
 8009dec:	4620      	mov	r0, r4
 8009dee:	f000 f85d 	bl	8009eac <_free_r>
 8009df2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009df4:	b111      	cbz	r1, 8009dfc <_reclaim_reent+0x64>
 8009df6:	4620      	mov	r0, r4
 8009df8:	f000 f858 	bl	8009eac <_free_r>
 8009dfc:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009dfe:	b111      	cbz	r1, 8009e06 <_reclaim_reent+0x6e>
 8009e00:	4620      	mov	r0, r4
 8009e02:	f000 f853 	bl	8009eac <_free_r>
 8009e06:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8009e08:	b111      	cbz	r1, 8009e10 <_reclaim_reent+0x78>
 8009e0a:	4620      	mov	r0, r4
 8009e0c:	f000 f84e 	bl	8009eac <_free_r>
 8009e10:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8009e12:	b111      	cbz	r1, 8009e1a <_reclaim_reent+0x82>
 8009e14:	4620      	mov	r0, r4
 8009e16:	f000 f849 	bl	8009eac <_free_r>
 8009e1a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009e1c:	b111      	cbz	r1, 8009e24 <_reclaim_reent+0x8c>
 8009e1e:	4620      	mov	r0, r4
 8009e20:	f000 f844 	bl	8009eac <_free_r>
 8009e24:	6a23      	ldr	r3, [r4, #32]
 8009e26:	b14b      	cbz	r3, 8009e3c <_reclaim_reent+0xa4>
 8009e28:	4620      	mov	r0, r4
 8009e2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009e2e:	4718      	bx	r3
 8009e30:	680e      	ldr	r6, [r1, #0]
 8009e32:	4620      	mov	r0, r4
 8009e34:	f000 f83a 	bl	8009eac <_free_r>
 8009e38:	4631      	mov	r1, r6
 8009e3a:	e7bb      	b.n	8009db4 <_reclaim_reent+0x1c>
 8009e3c:	bd70      	pop	{r4, r5, r6, pc}
 8009e3e:	bf00      	nop
 8009e40:	2000015c 	.word	0x2000015c

08009e44 <__libc_init_array>:
 8009e44:	b570      	push	{r4, r5, r6, lr}
 8009e46:	4d0d      	ldr	r5, [pc, #52]	@ (8009e7c <__libc_init_array+0x38>)
 8009e48:	4c0d      	ldr	r4, [pc, #52]	@ (8009e80 <__libc_init_array+0x3c>)
 8009e4a:	1b64      	subs	r4, r4, r5
 8009e4c:	10a4      	asrs	r4, r4, #2
 8009e4e:	2600      	movs	r6, #0
 8009e50:	42a6      	cmp	r6, r4
 8009e52:	d109      	bne.n	8009e68 <__libc_init_array+0x24>
 8009e54:	4d0b      	ldr	r5, [pc, #44]	@ (8009e84 <__libc_init_array+0x40>)
 8009e56:	4c0c      	ldr	r4, [pc, #48]	@ (8009e88 <__libc_init_array+0x44>)
 8009e58:	f000 f87e 	bl	8009f58 <_init>
 8009e5c:	1b64      	subs	r4, r4, r5
 8009e5e:	10a4      	asrs	r4, r4, #2
 8009e60:	2600      	movs	r6, #0
 8009e62:	42a6      	cmp	r6, r4
 8009e64:	d105      	bne.n	8009e72 <__libc_init_array+0x2e>
 8009e66:	bd70      	pop	{r4, r5, r6, pc}
 8009e68:	f855 3b04 	ldr.w	r3, [r5], #4
 8009e6c:	4798      	blx	r3
 8009e6e:	3601      	adds	r6, #1
 8009e70:	e7ee      	b.n	8009e50 <__libc_init_array+0xc>
 8009e72:	f855 3b04 	ldr.w	r3, [r5], #4
 8009e76:	4798      	blx	r3
 8009e78:	3601      	adds	r6, #1
 8009e7a:	e7f2      	b.n	8009e62 <__libc_init_array+0x1e>
 8009e7c:	0800a074 	.word	0x0800a074
 8009e80:	0800a074 	.word	0x0800a074
 8009e84:	0800a074 	.word	0x0800a074
 8009e88:	0800a078 	.word	0x0800a078

08009e8c <__retarget_lock_acquire_recursive>:
 8009e8c:	4770      	bx	lr

08009e8e <__retarget_lock_release_recursive>:
 8009e8e:	4770      	bx	lr

08009e90 <memcpy>:
 8009e90:	440a      	add	r2, r1
 8009e92:	4291      	cmp	r1, r2
 8009e94:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8009e98:	d100      	bne.n	8009e9c <memcpy+0xc>
 8009e9a:	4770      	bx	lr
 8009e9c:	b510      	push	{r4, lr}
 8009e9e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009ea2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8009ea6:	4291      	cmp	r1, r2
 8009ea8:	d1f9      	bne.n	8009e9e <memcpy+0xe>
 8009eaa:	bd10      	pop	{r4, pc}

08009eac <_free_r>:
 8009eac:	b538      	push	{r3, r4, r5, lr}
 8009eae:	4605      	mov	r5, r0
 8009eb0:	2900      	cmp	r1, #0
 8009eb2:	d041      	beq.n	8009f38 <_free_r+0x8c>
 8009eb4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009eb8:	1f0c      	subs	r4, r1, #4
 8009eba:	2b00      	cmp	r3, #0
 8009ebc:	bfb8      	it	lt
 8009ebe:	18e4      	addlt	r4, r4, r3
 8009ec0:	f000 f83e 	bl	8009f40 <__malloc_lock>
 8009ec4:	4a1d      	ldr	r2, [pc, #116]	@ (8009f3c <_free_r+0x90>)
 8009ec6:	6813      	ldr	r3, [r2, #0]
 8009ec8:	b933      	cbnz	r3, 8009ed8 <_free_r+0x2c>
 8009eca:	6063      	str	r3, [r4, #4]
 8009ecc:	6014      	str	r4, [r2, #0]
 8009ece:	4628      	mov	r0, r5
 8009ed0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009ed4:	f000 b83a 	b.w	8009f4c <__malloc_unlock>
 8009ed8:	42a3      	cmp	r3, r4
 8009eda:	d908      	bls.n	8009eee <_free_r+0x42>
 8009edc:	6820      	ldr	r0, [r4, #0]
 8009ede:	1821      	adds	r1, r4, r0
 8009ee0:	428b      	cmp	r3, r1
 8009ee2:	bf01      	itttt	eq
 8009ee4:	6819      	ldreq	r1, [r3, #0]
 8009ee6:	685b      	ldreq	r3, [r3, #4]
 8009ee8:	1809      	addeq	r1, r1, r0
 8009eea:	6021      	streq	r1, [r4, #0]
 8009eec:	e7ed      	b.n	8009eca <_free_r+0x1e>
 8009eee:	461a      	mov	r2, r3
 8009ef0:	685b      	ldr	r3, [r3, #4]
 8009ef2:	b10b      	cbz	r3, 8009ef8 <_free_r+0x4c>
 8009ef4:	42a3      	cmp	r3, r4
 8009ef6:	d9fa      	bls.n	8009eee <_free_r+0x42>
 8009ef8:	6811      	ldr	r1, [r2, #0]
 8009efa:	1850      	adds	r0, r2, r1
 8009efc:	42a0      	cmp	r0, r4
 8009efe:	d10b      	bne.n	8009f18 <_free_r+0x6c>
 8009f00:	6820      	ldr	r0, [r4, #0]
 8009f02:	4401      	add	r1, r0
 8009f04:	1850      	adds	r0, r2, r1
 8009f06:	4283      	cmp	r3, r0
 8009f08:	6011      	str	r1, [r2, #0]
 8009f0a:	d1e0      	bne.n	8009ece <_free_r+0x22>
 8009f0c:	6818      	ldr	r0, [r3, #0]
 8009f0e:	685b      	ldr	r3, [r3, #4]
 8009f10:	6053      	str	r3, [r2, #4]
 8009f12:	4408      	add	r0, r1
 8009f14:	6010      	str	r0, [r2, #0]
 8009f16:	e7da      	b.n	8009ece <_free_r+0x22>
 8009f18:	d902      	bls.n	8009f20 <_free_r+0x74>
 8009f1a:	230c      	movs	r3, #12
 8009f1c:	602b      	str	r3, [r5, #0]
 8009f1e:	e7d6      	b.n	8009ece <_free_r+0x22>
 8009f20:	6820      	ldr	r0, [r4, #0]
 8009f22:	1821      	adds	r1, r4, r0
 8009f24:	428b      	cmp	r3, r1
 8009f26:	bf04      	itt	eq
 8009f28:	6819      	ldreq	r1, [r3, #0]
 8009f2a:	685b      	ldreq	r3, [r3, #4]
 8009f2c:	6063      	str	r3, [r4, #4]
 8009f2e:	bf04      	itt	eq
 8009f30:	1809      	addeq	r1, r1, r0
 8009f32:	6021      	streq	r1, [r4, #0]
 8009f34:	6054      	str	r4, [r2, #4]
 8009f36:	e7ca      	b.n	8009ece <_free_r+0x22>
 8009f38:	bd38      	pop	{r3, r4, r5, pc}
 8009f3a:	bf00      	nop
 8009f3c:	200055f4 	.word	0x200055f4

08009f40 <__malloc_lock>:
 8009f40:	4801      	ldr	r0, [pc, #4]	@ (8009f48 <__malloc_lock+0x8>)
 8009f42:	f7ff bfa3 	b.w	8009e8c <__retarget_lock_acquire_recursive>
 8009f46:	bf00      	nop
 8009f48:	200055f0 	.word	0x200055f0

08009f4c <__malloc_unlock>:
 8009f4c:	4801      	ldr	r0, [pc, #4]	@ (8009f54 <__malloc_unlock+0x8>)
 8009f4e:	f7ff bf9e 	b.w	8009e8e <__retarget_lock_release_recursive>
 8009f52:	bf00      	nop
 8009f54:	200055f0 	.word	0x200055f0

08009f58 <_init>:
 8009f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f5a:	bf00      	nop
 8009f5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009f5e:	bc08      	pop	{r3}
 8009f60:	469e      	mov	lr, r3
 8009f62:	4770      	bx	lr

08009f64 <_fini>:
 8009f64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f66:	bf00      	nop
 8009f68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009f6a:	bc08      	pop	{r3}
 8009f6c:	469e      	mov	lr, r3
 8009f6e:	4770      	bx	lr
