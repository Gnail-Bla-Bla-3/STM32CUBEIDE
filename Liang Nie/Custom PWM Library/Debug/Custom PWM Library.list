
Custom PWM Library.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009c60  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000fc  08009df0  08009df0  0000adf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009eec  08009eec  0000b060  2**0
                  CONTENTS
  4 .ARM          00000008  08009eec  08009eec  0000aeec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009ef4  08009ef4  0000b060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009ef4  08009ef4  0000aef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08009ef8  08009ef8  0000aef8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08009efc  0000b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000b060  2**0
                  CONTENTS
 10 .bss          00005448  20000060  20000060  0000b060  2**3
                  ALLOC
 11 ._user_heap_stack 00000600  200054a8  200054a8  0000b060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000b060  2**0
                  CONTENTS, READONLY
 13 .debug_info   000201f0  00000000  00000000  0000b090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000403b  00000000  00000000  0002b280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001bc0  00000000  00000000  0002f2c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000015ca  00000000  00000000  00030e80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024143  00000000  00000000  0003244a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001fe53  00000000  00000000  0005658d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000ddc88  00000000  00000000  000763e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00154068  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000079e0  00000000  00000000  001540ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007c  00000000  00000000  0015ba8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000060 	.word	0x20000060
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08009dd8 	.word	0x08009dd8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000064 	.word	0x20000064
 80001cc:	08009dd8 	.word	0x08009dd8

080001d0 <__aeabi_uldivmod>:
 80001d0:	b953      	cbnz	r3, 80001e8 <__aeabi_uldivmod+0x18>
 80001d2:	b94a      	cbnz	r2, 80001e8 <__aeabi_uldivmod+0x18>
 80001d4:	2900      	cmp	r1, #0
 80001d6:	bf08      	it	eq
 80001d8:	2800      	cmpeq	r0, #0
 80001da:	bf1c      	itt	ne
 80001dc:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 80001e0:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 80001e4:	f000 b96a 	b.w	80004bc <__aeabi_idiv0>
 80001e8:	f1ad 0c08 	sub.w	ip, sp, #8
 80001ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f0:	f000 f806 	bl	8000200 <__udivmoddi4>
 80001f4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001fc:	b004      	add	sp, #16
 80001fe:	4770      	bx	lr

08000200 <__udivmoddi4>:
 8000200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000204:	9d08      	ldr	r5, [sp, #32]
 8000206:	460c      	mov	r4, r1
 8000208:	2b00      	cmp	r3, #0
 800020a:	d14e      	bne.n	80002aa <__udivmoddi4+0xaa>
 800020c:	4694      	mov	ip, r2
 800020e:	458c      	cmp	ip, r1
 8000210:	4686      	mov	lr, r0
 8000212:	fab2 f282 	clz	r2, r2
 8000216:	d962      	bls.n	80002de <__udivmoddi4+0xde>
 8000218:	b14a      	cbz	r2, 800022e <__udivmoddi4+0x2e>
 800021a:	f1c2 0320 	rsb	r3, r2, #32
 800021e:	4091      	lsls	r1, r2
 8000220:	fa20 f303 	lsr.w	r3, r0, r3
 8000224:	fa0c fc02 	lsl.w	ip, ip, r2
 8000228:	4319      	orrs	r1, r3
 800022a:	fa00 fe02 	lsl.w	lr, r0, r2
 800022e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000232:	fa1f f68c 	uxth.w	r6, ip
 8000236:	fbb1 f4f7 	udiv	r4, r1, r7
 800023a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800023e:	fb07 1114 	mls	r1, r7, r4, r1
 8000242:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000246:	fb04 f106 	mul.w	r1, r4, r6
 800024a:	4299      	cmp	r1, r3
 800024c:	d90a      	bls.n	8000264 <__udivmoddi4+0x64>
 800024e:	eb1c 0303 	adds.w	r3, ip, r3
 8000252:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8000256:	f080 8112 	bcs.w	800047e <__udivmoddi4+0x27e>
 800025a:	4299      	cmp	r1, r3
 800025c:	f240 810f 	bls.w	800047e <__udivmoddi4+0x27e>
 8000260:	3c02      	subs	r4, #2
 8000262:	4463      	add	r3, ip
 8000264:	1a59      	subs	r1, r3, r1
 8000266:	fa1f f38e 	uxth.w	r3, lr
 800026a:	fbb1 f0f7 	udiv	r0, r1, r7
 800026e:	fb07 1110 	mls	r1, r7, r0, r1
 8000272:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000276:	fb00 f606 	mul.w	r6, r0, r6
 800027a:	429e      	cmp	r6, r3
 800027c:	d90a      	bls.n	8000294 <__udivmoddi4+0x94>
 800027e:	eb1c 0303 	adds.w	r3, ip, r3
 8000282:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8000286:	f080 80fc 	bcs.w	8000482 <__udivmoddi4+0x282>
 800028a:	429e      	cmp	r6, r3
 800028c:	f240 80f9 	bls.w	8000482 <__udivmoddi4+0x282>
 8000290:	4463      	add	r3, ip
 8000292:	3802      	subs	r0, #2
 8000294:	1b9b      	subs	r3, r3, r6
 8000296:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800029a:	2100      	movs	r1, #0
 800029c:	b11d      	cbz	r5, 80002a6 <__udivmoddi4+0xa6>
 800029e:	40d3      	lsrs	r3, r2
 80002a0:	2200      	movs	r2, #0
 80002a2:	e9c5 3200 	strd	r3, r2, [r5]
 80002a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002aa:	428b      	cmp	r3, r1
 80002ac:	d905      	bls.n	80002ba <__udivmoddi4+0xba>
 80002ae:	b10d      	cbz	r5, 80002b4 <__udivmoddi4+0xb4>
 80002b0:	e9c5 0100 	strd	r0, r1, [r5]
 80002b4:	2100      	movs	r1, #0
 80002b6:	4608      	mov	r0, r1
 80002b8:	e7f5      	b.n	80002a6 <__udivmoddi4+0xa6>
 80002ba:	fab3 f183 	clz	r1, r3
 80002be:	2900      	cmp	r1, #0
 80002c0:	d146      	bne.n	8000350 <__udivmoddi4+0x150>
 80002c2:	42a3      	cmp	r3, r4
 80002c4:	d302      	bcc.n	80002cc <__udivmoddi4+0xcc>
 80002c6:	4290      	cmp	r0, r2
 80002c8:	f0c0 80f0 	bcc.w	80004ac <__udivmoddi4+0x2ac>
 80002cc:	1a86      	subs	r6, r0, r2
 80002ce:	eb64 0303 	sbc.w	r3, r4, r3
 80002d2:	2001      	movs	r0, #1
 80002d4:	2d00      	cmp	r5, #0
 80002d6:	d0e6      	beq.n	80002a6 <__udivmoddi4+0xa6>
 80002d8:	e9c5 6300 	strd	r6, r3, [r5]
 80002dc:	e7e3      	b.n	80002a6 <__udivmoddi4+0xa6>
 80002de:	2a00      	cmp	r2, #0
 80002e0:	f040 8090 	bne.w	8000404 <__udivmoddi4+0x204>
 80002e4:	eba1 040c 	sub.w	r4, r1, ip
 80002e8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002ec:	fa1f f78c 	uxth.w	r7, ip
 80002f0:	2101      	movs	r1, #1
 80002f2:	fbb4 f6f8 	udiv	r6, r4, r8
 80002f6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fa:	fb08 4416 	mls	r4, r8, r6, r4
 80002fe:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000302:	fb07 f006 	mul.w	r0, r7, r6
 8000306:	4298      	cmp	r0, r3
 8000308:	d908      	bls.n	800031c <__udivmoddi4+0x11c>
 800030a:	eb1c 0303 	adds.w	r3, ip, r3
 800030e:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 8000312:	d202      	bcs.n	800031a <__udivmoddi4+0x11a>
 8000314:	4298      	cmp	r0, r3
 8000316:	f200 80cd 	bhi.w	80004b4 <__udivmoddi4+0x2b4>
 800031a:	4626      	mov	r6, r4
 800031c:	1a1c      	subs	r4, r3, r0
 800031e:	fa1f f38e 	uxth.w	r3, lr
 8000322:	fbb4 f0f8 	udiv	r0, r4, r8
 8000326:	fb08 4410 	mls	r4, r8, r0, r4
 800032a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800032e:	fb00 f707 	mul.w	r7, r0, r7
 8000332:	429f      	cmp	r7, r3
 8000334:	d908      	bls.n	8000348 <__udivmoddi4+0x148>
 8000336:	eb1c 0303 	adds.w	r3, ip, r3
 800033a:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 800033e:	d202      	bcs.n	8000346 <__udivmoddi4+0x146>
 8000340:	429f      	cmp	r7, r3
 8000342:	f200 80b0 	bhi.w	80004a6 <__udivmoddi4+0x2a6>
 8000346:	4620      	mov	r0, r4
 8000348:	1bdb      	subs	r3, r3, r7
 800034a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800034e:	e7a5      	b.n	800029c <__udivmoddi4+0x9c>
 8000350:	f1c1 0620 	rsb	r6, r1, #32
 8000354:	408b      	lsls	r3, r1
 8000356:	fa22 f706 	lsr.w	r7, r2, r6
 800035a:	431f      	orrs	r7, r3
 800035c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000360:	fa04 f301 	lsl.w	r3, r4, r1
 8000364:	ea43 030c 	orr.w	r3, r3, ip
 8000368:	40f4      	lsrs	r4, r6
 800036a:	fa00 f801 	lsl.w	r8, r0, r1
 800036e:	0c38      	lsrs	r0, r7, #16
 8000370:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000374:	fbb4 fef0 	udiv	lr, r4, r0
 8000378:	fa1f fc87 	uxth.w	ip, r7
 800037c:	fb00 441e 	mls	r4, r0, lr, r4
 8000380:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000384:	fb0e f90c 	mul.w	r9, lr, ip
 8000388:	45a1      	cmp	r9, r4
 800038a:	fa02 f201 	lsl.w	r2, r2, r1
 800038e:	d90a      	bls.n	80003a6 <__udivmoddi4+0x1a6>
 8000390:	193c      	adds	r4, r7, r4
 8000392:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 8000396:	f080 8084 	bcs.w	80004a2 <__udivmoddi4+0x2a2>
 800039a:	45a1      	cmp	r9, r4
 800039c:	f240 8081 	bls.w	80004a2 <__udivmoddi4+0x2a2>
 80003a0:	f1ae 0e02 	sub.w	lr, lr, #2
 80003a4:	443c      	add	r4, r7
 80003a6:	eba4 0409 	sub.w	r4, r4, r9
 80003aa:	fa1f f983 	uxth.w	r9, r3
 80003ae:	fbb4 f3f0 	udiv	r3, r4, r0
 80003b2:	fb00 4413 	mls	r4, r0, r3, r4
 80003b6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ba:	fb03 fc0c 	mul.w	ip, r3, ip
 80003be:	45a4      	cmp	ip, r4
 80003c0:	d907      	bls.n	80003d2 <__udivmoddi4+0x1d2>
 80003c2:	193c      	adds	r4, r7, r4
 80003c4:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 80003c8:	d267      	bcs.n	800049a <__udivmoddi4+0x29a>
 80003ca:	45a4      	cmp	ip, r4
 80003cc:	d965      	bls.n	800049a <__udivmoddi4+0x29a>
 80003ce:	3b02      	subs	r3, #2
 80003d0:	443c      	add	r4, r7
 80003d2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80003d6:	fba0 9302 	umull	r9, r3, r0, r2
 80003da:	eba4 040c 	sub.w	r4, r4, ip
 80003de:	429c      	cmp	r4, r3
 80003e0:	46ce      	mov	lr, r9
 80003e2:	469c      	mov	ip, r3
 80003e4:	d351      	bcc.n	800048a <__udivmoddi4+0x28a>
 80003e6:	d04e      	beq.n	8000486 <__udivmoddi4+0x286>
 80003e8:	b155      	cbz	r5, 8000400 <__udivmoddi4+0x200>
 80003ea:	ebb8 030e 	subs.w	r3, r8, lr
 80003ee:	eb64 040c 	sbc.w	r4, r4, ip
 80003f2:	fa04 f606 	lsl.w	r6, r4, r6
 80003f6:	40cb      	lsrs	r3, r1
 80003f8:	431e      	orrs	r6, r3
 80003fa:	40cc      	lsrs	r4, r1
 80003fc:	e9c5 6400 	strd	r6, r4, [r5]
 8000400:	2100      	movs	r1, #0
 8000402:	e750      	b.n	80002a6 <__udivmoddi4+0xa6>
 8000404:	f1c2 0320 	rsb	r3, r2, #32
 8000408:	fa20 f103 	lsr.w	r1, r0, r3
 800040c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000410:	fa24 f303 	lsr.w	r3, r4, r3
 8000414:	4094      	lsls	r4, r2
 8000416:	430c      	orrs	r4, r1
 8000418:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800041c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000420:	fa1f f78c 	uxth.w	r7, ip
 8000424:	fbb3 f0f8 	udiv	r0, r3, r8
 8000428:	fb08 3110 	mls	r1, r8, r0, r3
 800042c:	0c23      	lsrs	r3, r4, #16
 800042e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000432:	fb00 f107 	mul.w	r1, r0, r7
 8000436:	4299      	cmp	r1, r3
 8000438:	d908      	bls.n	800044c <__udivmoddi4+0x24c>
 800043a:	eb1c 0303 	adds.w	r3, ip, r3
 800043e:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000442:	d22c      	bcs.n	800049e <__udivmoddi4+0x29e>
 8000444:	4299      	cmp	r1, r3
 8000446:	d92a      	bls.n	800049e <__udivmoddi4+0x29e>
 8000448:	3802      	subs	r0, #2
 800044a:	4463      	add	r3, ip
 800044c:	1a5b      	subs	r3, r3, r1
 800044e:	b2a4      	uxth	r4, r4
 8000450:	fbb3 f1f8 	udiv	r1, r3, r8
 8000454:	fb08 3311 	mls	r3, r8, r1, r3
 8000458:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800045c:	fb01 f307 	mul.w	r3, r1, r7
 8000460:	42a3      	cmp	r3, r4
 8000462:	d908      	bls.n	8000476 <__udivmoddi4+0x276>
 8000464:	eb1c 0404 	adds.w	r4, ip, r4
 8000468:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 800046c:	d213      	bcs.n	8000496 <__udivmoddi4+0x296>
 800046e:	42a3      	cmp	r3, r4
 8000470:	d911      	bls.n	8000496 <__udivmoddi4+0x296>
 8000472:	3902      	subs	r1, #2
 8000474:	4464      	add	r4, ip
 8000476:	1ae4      	subs	r4, r4, r3
 8000478:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800047c:	e739      	b.n	80002f2 <__udivmoddi4+0xf2>
 800047e:	4604      	mov	r4, r0
 8000480:	e6f0      	b.n	8000264 <__udivmoddi4+0x64>
 8000482:	4608      	mov	r0, r1
 8000484:	e706      	b.n	8000294 <__udivmoddi4+0x94>
 8000486:	45c8      	cmp	r8, r9
 8000488:	d2ae      	bcs.n	80003e8 <__udivmoddi4+0x1e8>
 800048a:	ebb9 0e02 	subs.w	lr, r9, r2
 800048e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000492:	3801      	subs	r0, #1
 8000494:	e7a8      	b.n	80003e8 <__udivmoddi4+0x1e8>
 8000496:	4631      	mov	r1, r6
 8000498:	e7ed      	b.n	8000476 <__udivmoddi4+0x276>
 800049a:	4603      	mov	r3, r0
 800049c:	e799      	b.n	80003d2 <__udivmoddi4+0x1d2>
 800049e:	4630      	mov	r0, r6
 80004a0:	e7d4      	b.n	800044c <__udivmoddi4+0x24c>
 80004a2:	46d6      	mov	lr, sl
 80004a4:	e77f      	b.n	80003a6 <__udivmoddi4+0x1a6>
 80004a6:	4463      	add	r3, ip
 80004a8:	3802      	subs	r0, #2
 80004aa:	e74d      	b.n	8000348 <__udivmoddi4+0x148>
 80004ac:	4606      	mov	r6, r0
 80004ae:	4623      	mov	r3, r4
 80004b0:	4608      	mov	r0, r1
 80004b2:	e70f      	b.n	80002d4 <__udivmoddi4+0xd4>
 80004b4:	3e02      	subs	r6, #2
 80004b6:	4463      	add	r3, ip
 80004b8:	e730      	b.n	800031c <__udivmoddi4+0x11c>
 80004ba:	bf00      	nop

080004bc <__aeabi_idiv0>:
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop

080004c0 <usart_Init>:
referee_warning_t referee_warning;
dart_info_t dart_info;

uint8_t mainHeaderOffset = 5;

void usart_Init(void) {
 80004c0:	b580      	push	{r7, lr}
 80004c2:	af00      	add	r7, sp, #0
	HAL_UARTEx_ReceiveToIdle_DMA(&huart1, RxBuff_1, 256);
 80004c4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80004c8:	4905      	ldr	r1, [pc, #20]	@ (80004e0 <usart_Init+0x20>)
 80004ca:	4806      	ldr	r0, [pc, #24]	@ (80004e4 <usart_Init+0x24>)
 80004cc:	f005 fccc 	bl	8005e68 <HAL_UARTEx_ReceiveToIdle_DMA>
	HAL_UARTEx_ReceiveToIdle_DMA(&huart6, RxBuff_2, 256);
 80004d0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80004d4:	4904      	ldr	r1, [pc, #16]	@ (80004e8 <usart_Init+0x28>)
 80004d6:	4805      	ldr	r0, [pc, #20]	@ (80004ec <usart_Init+0x2c>)
 80004d8:	f005 fcc6 	bl	8005e68 <HAL_UARTEx_ReceiveToIdle_DMA>
}
 80004dc:	bf00      	nop
 80004de:	bd80      	pop	{r7, pc}
 80004e0:	2000007c 	.word	0x2000007c
 80004e4:	20000634 	.word	0x20000634
 80004e8:	2000017c 	.word	0x2000017c
 80004ec:	200006c4 	.word	0x200006c4

080004f0 <HAL_UARTEx_RxEventCallback>:
    len = vsprintf((char *)tx_buf, fmt, ap);           //return length of string
    va_end(ap);
    HAL_UART_Transmit_DMA(&huart1, tx_buf, len);
}

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 80004f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80004f4:	b09f      	sub	sp, #124	@ 0x7c
 80004f6:	af00      	add	r7, sp, #0
 80004f8:	66f8      	str	r0, [r7, #108]	@ 0x6c
 80004fa:	460b      	mov	r3, r1
 80004fc:	f8a7 306a 	strh.w	r3, [r7, #106]	@ 0x6a
	if (huart == &huart6) {
 8000500:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8000502:	4b81      	ldr	r3, [pc, #516]	@ (8000708 <HAL_UARTEx_RxEventCallback+0x218>)
 8000504:	429a      	cmp	r2, r3
 8000506:	f040 81c9 	bne.w	800089c <HAL_UARTEx_RxEventCallback+0x3ac>
		HAL_UARTEx_ReceiveToIdle_DMA(&huart6, RxBuff_2, 256);
 800050a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800050e:	497f      	ldr	r1, [pc, #508]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000510:	487d      	ldr	r0, [pc, #500]	@ (8000708 <HAL_UARTEx_RxEventCallback+0x218>)
 8000512:	f005 fca9 	bl	8005e68 <HAL_UARTEx_ReceiveToIdle_DMA>
		uint16_t RxBuff16 = ((uint16_t) RxBuff_2[5] << 8) | RxBuff_2[6];
 8000516:	4b7d      	ldr	r3, [pc, #500]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000518:	795b      	ldrb	r3, [r3, #5]
 800051a:	021b      	lsls	r3, r3, #8
 800051c:	b21a      	sxth	r2, r3
 800051e:	4b7b      	ldr	r3, [pc, #492]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000520:	799b      	ldrb	r3, [r3, #6]
 8000522:	b21b      	sxth	r3, r3
 8000524:	4313      	orrs	r3, r2
 8000526:	b21b      	sxth	r3, r3
 8000528:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
		//usart_printf("callback triggered at %d | %d | %d | %d || %d \r\n", RxBuff_2[0], RxBuff_2[1], RxBuff_2[2], RxBuff_2[3], RxBuff16);
		switch (RxBuff16) {
 800052c:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8000530:	f240 2302 	movw	r3, #514	@ 0x202
 8000534:	429a      	cmp	r2, r3
 8000536:	f000 8153 	beq.w	80007e0 <HAL_UARTEx_RxEventCallback+0x2f0>
 800053a:	f240 2302 	movw	r3, #514	@ 0x202
 800053e:	429a      	cmp	r2, r3
 8000540:	f300 81ab 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000544:	f240 2301 	movw	r3, #513	@ 0x201
 8000548:	429a      	cmp	r2, r3
 800054a:	f000 80e7 	beq.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 800054e:	f240 2301 	movw	r3, #513	@ 0x201
 8000552:	429a      	cmp	r2, r3
 8000554:	f300 81a1 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000558:	f5b2 7f83 	cmp.w	r2, #262	@ 0x106
 800055c:	f280 819d 	bge.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000560:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8000564:	f280 80da 	bge.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 8000568:	f5b2 7f81 	cmp.w	r2, #258	@ 0x102
 800056c:	f300 8195 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000570:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8000574:	f300 80d2 	bgt.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 8000578:	2a03      	cmp	r2, #3
 800057a:	f000 80cf 	beq.w	800071c <HAL_UARTEx_RxEventCallback+0x22c>
 800057e:	2a03      	cmp	r2, #3
 8000580:	f300 818b 	bgt.w	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
 8000584:	2a01      	cmp	r2, #1
 8000586:	d003      	beq.n	8000590 <HAL_UARTEx_RxEventCallback+0xa0>
 8000588:	2a02      	cmp	r2, #2
 800058a:	f000 80c3 	beq.w	8000714 <HAL_UARTEx_RxEventCallback+0x224>
		    case MINIMAP_DATA_HEADER: {}
		    case CUSTOM_INFO_HEADER: {}

		    default: {
		    	//usart_printf("no match \r\n");
		        break;
 800058e:	e184      	b.n	800089a <HAL_UARTEx_RxEventCallback+0x3aa>
		    	game_status.game_type = RxBuff_2[7];
 8000590:	4b5e      	ldr	r3, [pc, #376]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000592:	79db      	ldrb	r3, [r3, #7]
 8000594:	4a5e      	ldr	r2, [pc, #376]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 8000596:	7013      	strb	r3, [r2, #0]
		    	game_status.game_progress = RxBuff_2[8];
 8000598:	4b5c      	ldr	r3, [pc, #368]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 800059a:	7a1b      	ldrb	r3, [r3, #8]
 800059c:	4a5c      	ldr	r2, [pc, #368]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 800059e:	7053      	strb	r3, [r2, #1]
		    	game_status.stage_remain_time = ((uint16_t) RxBuff_2[9] << 8) | RxBuff_2[10];
 80005a0:	4b5a      	ldr	r3, [pc, #360]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005a2:	7a5b      	ldrb	r3, [r3, #9]
 80005a4:	021b      	lsls	r3, r3, #8
 80005a6:	b21a      	sxth	r2, r3
 80005a8:	4b58      	ldr	r3, [pc, #352]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005aa:	7a9b      	ldrb	r3, [r3, #10]
 80005ac:	b21b      	sxth	r3, r3
 80005ae:	4313      	orrs	r3, r2
 80005b0:	b21b      	sxth	r3, r3
 80005b2:	b29b      	uxth	r3, r3
 80005b4:	4a56      	ldr	r2, [pc, #344]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 80005b6:	8053      	strh	r3, [r2, #2]
		    		((uint64_t) RxBuff_2[11] << 56) |
 80005b8:	4b54      	ldr	r3, [pc, #336]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005ba:	7adb      	ldrb	r3, [r3, #11]
 80005bc:	b2db      	uxtb	r3, r3
 80005be:	2200      	movs	r2, #0
 80005c0:	663b      	str	r3, [r7, #96]	@ 0x60
 80005c2:	667a      	str	r2, [r7, #100]	@ 0x64
 80005c4:	f04f 0000 	mov.w	r0, #0
 80005c8:	f04f 0100 	mov.w	r1, #0
 80005cc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80005ce:	0619      	lsls	r1, r3, #24
 80005d0:	2000      	movs	r0, #0
		    		((uint64_t) RxBuff_2[12] << 48) |
 80005d2:	4b4e      	ldr	r3, [pc, #312]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005d4:	7b1b      	ldrb	r3, [r3, #12]
 80005d6:	b2db      	uxtb	r3, r3
 80005d8:	2200      	movs	r2, #0
 80005da:	65bb      	str	r3, [r7, #88]	@ 0x58
 80005dc:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80005de:	f04f 0200 	mov.w	r2, #0
 80005e2:	f04f 0300 	mov.w	r3, #0
 80005e6:	6dbe      	ldr	r6, [r7, #88]	@ 0x58
 80005e8:	0433      	lsls	r3, r6, #16
 80005ea:	2200      	movs	r2, #0
		    		((uint64_t) RxBuff_2[11] << 56) |
 80005ec:	ea40 0402 	orr.w	r4, r0, r2
 80005f0:	ea41 0503 	orr.w	r5, r1, r3
		    		((uint64_t) RxBuff_2[13] << 40) |
 80005f4:	4b45      	ldr	r3, [pc, #276]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80005f6:	7b5b      	ldrb	r3, [r3, #13]
 80005f8:	b2db      	uxtb	r3, r3
 80005fa:	2200      	movs	r2, #0
 80005fc:	653b      	str	r3, [r7, #80]	@ 0x50
 80005fe:	657a      	str	r2, [r7, #84]	@ 0x54
 8000600:	f04f 0200 	mov.w	r2, #0
 8000604:	f04f 0300 	mov.w	r3, #0
 8000608:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800060a:	020b      	lsls	r3, r1, #8
 800060c:	2200      	movs	r2, #0
		    		((uint64_t) RxBuff_2[12] << 48) |
 800060e:	ea44 0802 	orr.w	r8, r4, r2
 8000612:	ea45 0903 	orr.w	r9, r5, r3
		    		((uint64_t) RxBuff_2[14] << 32) |
 8000616:	4b3d      	ldr	r3, [pc, #244]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 8000618:	7b9b      	ldrb	r3, [r3, #14]
 800061a:	b2db      	uxtb	r3, r3
 800061c:	2200      	movs	r2, #0
 800061e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8000620:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8000622:	f04f 0200 	mov.w	r2, #0
 8000626:	f04f 0300 	mov.w	r3, #0
 800062a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800062c:	000b      	movs	r3, r1
 800062e:	2200      	movs	r2, #0
		    		((uint64_t) RxBuff_2[13] << 40) |
 8000630:	ea48 0102 	orr.w	r1, r8, r2
 8000634:	6439      	str	r1, [r7, #64]	@ 0x40
 8000636:	ea49 0303 	orr.w	r3, r9, r3
 800063a:	647b      	str	r3, [r7, #68]	@ 0x44
		    		((uint64_t) RxBuff_2[15] << 24) |
 800063c:	4b33      	ldr	r3, [pc, #204]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 800063e:	7bdb      	ldrb	r3, [r3, #15]
 8000640:	b2db      	uxtb	r3, r3
 8000642:	2200      	movs	r2, #0
 8000644:	63bb      	str	r3, [r7, #56]	@ 0x38
 8000646:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8000648:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 800064c:	460b      	mov	r3, r1
 800064e:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 8000652:	460b      	mov	r3, r1
 8000654:	ea4f 6a03 	mov.w	sl, r3, lsl #24
		    		((uint64_t) RxBuff_2[14] << 32) |
 8000658:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 800065c:	460b      	mov	r3, r1
 800065e:	ea43 030a 	orr.w	r3, r3, sl
 8000662:	633b      	str	r3, [r7, #48]	@ 0x30
 8000664:	4613      	mov	r3, r2
 8000666:	ea43 030b 	orr.w	r3, r3, fp
 800066a:	637b      	str	r3, [r7, #52]	@ 0x34
		    		((uint64_t) RxBuff_2[16] << 16) |
 800066c:	4b27      	ldr	r3, [pc, #156]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 800066e:	7c1b      	ldrb	r3, [r3, #16]
 8000670:	b2db      	uxtb	r3, r3
 8000672:	2200      	movs	r2, #0
 8000674:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000676:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8000678:	f04f 0200 	mov.w	r2, #0
 800067c:	f04f 0300 	mov.w	r3, #0
 8000680:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	@ 0x28
 8000684:	4629      	mov	r1, r5
 8000686:	040b      	lsls	r3, r1, #16
 8000688:	4621      	mov	r1, r4
 800068a:	ea43 4311 	orr.w	r3, r3, r1, lsr #16
 800068e:	4621      	mov	r1, r4
 8000690:	040a      	lsls	r2, r1, #16
		    		((uint64_t) RxBuff_2[15] << 24) |
 8000692:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8000696:	4621      	mov	r1, r4
 8000698:	4311      	orrs	r1, r2
 800069a:	6239      	str	r1, [r7, #32]
 800069c:	4629      	mov	r1, r5
 800069e:	4319      	orrs	r1, r3
 80006a0:	6279      	str	r1, [r7, #36]	@ 0x24
		    		((uint64_t) RxBuff_2[17] << 8) | RxBuff_2[18];
 80006a2:	4b1a      	ldr	r3, [pc, #104]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80006a4:	7c5b      	ldrb	r3, [r3, #17]
 80006a6:	b2db      	uxtb	r3, r3
 80006a8:	2200      	movs	r2, #0
 80006aa:	61bb      	str	r3, [r7, #24]
 80006ac:	61fa      	str	r2, [r7, #28]
 80006ae:	f04f 0200 	mov.w	r2, #0
 80006b2:	f04f 0300 	mov.w	r3, #0
 80006b6:	e9d7 4506 	ldrd	r4, r5, [r7, #24]
 80006ba:	4629      	mov	r1, r5
 80006bc:	020b      	lsls	r3, r1, #8
 80006be:	4621      	mov	r1, r4
 80006c0:	ea43 6311 	orr.w	r3, r3, r1, lsr #24
 80006c4:	4621      	mov	r1, r4
 80006c6:	020a      	lsls	r2, r1, #8
		    		((uint64_t) RxBuff_2[16] << 16) |
 80006c8:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80006cc:	4621      	mov	r1, r4
 80006ce:	4311      	orrs	r1, r2
 80006d0:	6139      	str	r1, [r7, #16]
 80006d2:	4629      	mov	r1, r5
 80006d4:	4319      	orrs	r1, r3
 80006d6:	6179      	str	r1, [r7, #20]
		    		((uint64_t) RxBuff_2[17] << 8) | RxBuff_2[18];
 80006d8:	4b0c      	ldr	r3, [pc, #48]	@ (800070c <HAL_UARTEx_RxEventCallback+0x21c>)
 80006da:	7c9b      	ldrb	r3, [r3, #18]
 80006dc:	b2db      	uxtb	r3, r3
 80006de:	2200      	movs	r2, #0
 80006e0:	60bb      	str	r3, [r7, #8]
 80006e2:	60fa      	str	r2, [r7, #12]
 80006e4:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80006e8:	4623      	mov	r3, r4
 80006ea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80006ee:	4602      	mov	r2, r0
 80006f0:	4313      	orrs	r3, r2
 80006f2:	603b      	str	r3, [r7, #0]
 80006f4:	462b      	mov	r3, r5
 80006f6:	460a      	mov	r2, r1
 80006f8:	4313      	orrs	r3, r2
 80006fa:	607b      	str	r3, [r7, #4]
		    	game_status.SyncTimeStamp =
 80006fc:	4b04      	ldr	r3, [pc, #16]	@ (8000710 <HAL_UARTEx_RxEventCallback+0x220>)
 80006fe:	e9d7 1200 	ldrd	r1, r2, [r7]
 8000702:	e9c3 1202 	strd	r1, r2, [r3, #8]
		    	break;
 8000706:	e0c9      	b.n	800089c <HAL_UARTEx_RxEventCallback+0x3ac>
 8000708:	200006c4 	.word	0x200006c4
 800070c:	2000017c 	.word	0x2000017c
 8000710:	20000280 	.word	0x20000280
		    	game_status.game_type = RxBuff_2[7];
 8000714:	4b64      	ldr	r3, [pc, #400]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000716:	79da      	ldrb	r2, [r3, #7]
 8000718:	4b64      	ldr	r3, [pc, #400]	@ (80008ac <HAL_UARTEx_RxEventCallback+0x3bc>)
 800071a:	701a      	strb	r2, [r3, #0]
		    	robot_status.robot_id = RxBuff_2[7];
 800071c:	4b62      	ldr	r3, [pc, #392]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800071e:	79da      	ldrb	r2, [r3, #7]
 8000720:	4b63      	ldr	r3, [pc, #396]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 8000722:	701a      	strb	r2, [r3, #0]
		    	robot_status.robot_level = RxBuff_2[8];
 8000724:	4b60      	ldr	r3, [pc, #384]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000726:	7a1a      	ldrb	r2, [r3, #8]
 8000728:	4b61      	ldr	r3, [pc, #388]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 800072a:	705a      	strb	r2, [r3, #1]
		    	robot_status.current_HP = ((uint16_t) RxBuff_2[9] << 8) | RxBuff_2[10];
 800072c:	4b5e      	ldr	r3, [pc, #376]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800072e:	7a5b      	ldrb	r3, [r3, #9]
 8000730:	021b      	lsls	r3, r3, #8
 8000732:	b21a      	sxth	r2, r3
 8000734:	4b5c      	ldr	r3, [pc, #368]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000736:	7a9b      	ldrb	r3, [r3, #10]
 8000738:	b21b      	sxth	r3, r3
 800073a:	4313      	orrs	r3, r2
 800073c:	b21b      	sxth	r3, r3
 800073e:	b29a      	uxth	r2, r3
 8000740:	4b5b      	ldr	r3, [pc, #364]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 8000742:	805a      	strh	r2, [r3, #2]
		    	robot_status.maximum_HP = ((uint16_t) RxBuff_2[11] << 8) | RxBuff_2[12];
 8000744:	4b58      	ldr	r3, [pc, #352]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000746:	7adb      	ldrb	r3, [r3, #11]
 8000748:	021b      	lsls	r3, r3, #8
 800074a:	b21a      	sxth	r2, r3
 800074c:	4b56      	ldr	r3, [pc, #344]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800074e:	7b1b      	ldrb	r3, [r3, #12]
 8000750:	b21b      	sxth	r3, r3
 8000752:	4313      	orrs	r3, r2
 8000754:	b21b      	sxth	r3, r3
 8000756:	b29a      	uxth	r2, r3
 8000758:	4b55      	ldr	r3, [pc, #340]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 800075a:	809a      	strh	r2, [r3, #4]
		    	robot_status.shooter_barrel_cooling_value = ((uint16_t) RxBuff_2[13] << 8) | RxBuff_2[14];
 800075c:	4b52      	ldr	r3, [pc, #328]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800075e:	7b5b      	ldrb	r3, [r3, #13]
 8000760:	021b      	lsls	r3, r3, #8
 8000762:	b21a      	sxth	r2, r3
 8000764:	4b50      	ldr	r3, [pc, #320]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000766:	7b9b      	ldrb	r3, [r3, #14]
 8000768:	b21b      	sxth	r3, r3
 800076a:	4313      	orrs	r3, r2
 800076c:	b21b      	sxth	r3, r3
 800076e:	b29a      	uxth	r2, r3
 8000770:	4b4f      	ldr	r3, [pc, #316]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 8000772:	80da      	strh	r2, [r3, #6]
		    	robot_status.shooter_barrel_heat_limit = ((uint16_t) RxBuff_2[15] << 8) | RxBuff_2[16];
 8000774:	4b4c      	ldr	r3, [pc, #304]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000776:	7bdb      	ldrb	r3, [r3, #15]
 8000778:	021b      	lsls	r3, r3, #8
 800077a:	b21a      	sxth	r2, r3
 800077c:	4b4a      	ldr	r3, [pc, #296]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800077e:	7c1b      	ldrb	r3, [r3, #16]
 8000780:	b21b      	sxth	r3, r3
 8000782:	4313      	orrs	r3, r2
 8000784:	b21b      	sxth	r3, r3
 8000786:	b29a      	uxth	r2, r3
 8000788:	4b49      	ldr	r3, [pc, #292]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 800078a:	811a      	strh	r2, [r3, #8]
		    	robot_status.chassis_power_limit = ((uint16_t) RxBuff_2[17] << 8) | RxBuff_2[18];
 800078c:	4b46      	ldr	r3, [pc, #280]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800078e:	7c5b      	ldrb	r3, [r3, #17]
 8000790:	021b      	lsls	r3, r3, #8
 8000792:	b21a      	sxth	r2, r3
 8000794:	4b44      	ldr	r3, [pc, #272]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000796:	7c9b      	ldrb	r3, [r3, #18]
 8000798:	b21b      	sxth	r3, r3
 800079a:	4313      	orrs	r3, r2
 800079c:	b21b      	sxth	r3, r3
 800079e:	b29a      	uxth	r2, r3
 80007a0:	4b43      	ldr	r3, [pc, #268]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007a2:	815a      	strh	r2, [r3, #10]
		    	robot_status.power_management_gimbal_output = RxBuff_2[19];
 80007a4:	4b40      	ldr	r3, [pc, #256]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007a6:	7cdb      	ldrb	r3, [r3, #19]
 80007a8:	f003 0301 	and.w	r3, r3, #1
 80007ac:	b2d9      	uxtb	r1, r3
 80007ae:	4a40      	ldr	r2, [pc, #256]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007b0:	7b13      	ldrb	r3, [r2, #12]
 80007b2:	f361 0300 	bfi	r3, r1, #0, #1
 80007b6:	7313      	strb	r3, [r2, #12]
		    	robot_status.power_management_chassis_output = RxBuff_2[20];
 80007b8:	4b3b      	ldr	r3, [pc, #236]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007ba:	7d1b      	ldrb	r3, [r3, #20]
 80007bc:	f003 0301 	and.w	r3, r3, #1
 80007c0:	b2d9      	uxtb	r1, r3
 80007c2:	4a3b      	ldr	r2, [pc, #236]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007c4:	7b13      	ldrb	r3, [r2, #12]
 80007c6:	f361 0341 	bfi	r3, r1, #1, #1
 80007ca:	7313      	strb	r3, [r2, #12]
		    	robot_status.power_management_shooter_output = RxBuff_2[21];
 80007cc:	4b36      	ldr	r3, [pc, #216]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007ce:	7d5b      	ldrb	r3, [r3, #21]
 80007d0:	f003 0301 	and.w	r3, r3, #1
 80007d4:	b2d9      	uxtb	r1, r3
 80007d6:	4a36      	ldr	r2, [pc, #216]	@ (80008b0 <HAL_UARTEx_RxEventCallback+0x3c0>)
 80007d8:	7b13      	ldrb	r3, [r2, #12]
 80007da:	f361 0382 	bfi	r3, r1, #2, #1
 80007de:	7313      	strb	r3, [r2, #12]
		    	power_heat_data.chassis_voltage = ((uint16_t) RxBuff_2[8] << 8) | RxBuff_2[7];
 80007e0:	4b31      	ldr	r3, [pc, #196]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007e2:	7a1b      	ldrb	r3, [r3, #8]
 80007e4:	021b      	lsls	r3, r3, #8
 80007e6:	b21a      	sxth	r2, r3
 80007e8:	4b2f      	ldr	r3, [pc, #188]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007ea:	79db      	ldrb	r3, [r3, #7]
 80007ec:	b21b      	sxth	r3, r3
 80007ee:	4313      	orrs	r3, r2
 80007f0:	b21b      	sxth	r3, r3
 80007f2:	b29a      	uxth	r2, r3
 80007f4:	4b2f      	ldr	r3, [pc, #188]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 80007f6:	801a      	strh	r2, [r3, #0]
		    	power_heat_data.chassis_current = ((uint16_t) RxBuff_2[10] << 8) | RxBuff_2[9];
 80007f8:	4b2b      	ldr	r3, [pc, #172]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 80007fa:	7a9b      	ldrb	r3, [r3, #10]
 80007fc:	021b      	lsls	r3, r3, #8
 80007fe:	b21a      	sxth	r2, r3
 8000800:	4b29      	ldr	r3, [pc, #164]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000802:	7a5b      	ldrb	r3, [r3, #9]
 8000804:	b21b      	sxth	r3, r3
 8000806:	4313      	orrs	r3, r2
 8000808:	b21b      	sxth	r3, r3
 800080a:	b29a      	uxth	r2, r3
 800080c:	4b29      	ldr	r3, [pc, #164]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 800080e:	805a      	strh	r2, [r3, #2]
		    	power_heat_data.chassis_power = ((uint32_t) RxBuff_2[14] << 24) | ((uint32_t) RxBuff_2[13] << 16) | ((uint32_t) RxBuff_2[12] << 8) | RxBuff_2[11];
 8000810:	4b25      	ldr	r3, [pc, #148]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000812:	7b9b      	ldrb	r3, [r3, #14]
 8000814:	061a      	lsls	r2, r3, #24
 8000816:	4b24      	ldr	r3, [pc, #144]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000818:	7b5b      	ldrb	r3, [r3, #13]
 800081a:	041b      	lsls	r3, r3, #16
 800081c:	431a      	orrs	r2, r3
 800081e:	4b22      	ldr	r3, [pc, #136]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000820:	7b1b      	ldrb	r3, [r3, #12]
 8000822:	021b      	lsls	r3, r3, #8
 8000824:	4313      	orrs	r3, r2
 8000826:	4a20      	ldr	r2, [pc, #128]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000828:	7ad2      	ldrb	r2, [r2, #11]
 800082a:	4313      	orrs	r3, r2
 800082c:	ee07 3a90 	vmov	s15, r3
 8000830:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000834:	4b1f      	ldr	r3, [pc, #124]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000836:	edc3 7a01 	vstr	s15, [r3, #4]
		    	power_heat_data.buffer_energy = ((uint16_t) RxBuff_2[15] << 8) | RxBuff_2[16];
 800083a:	4b1b      	ldr	r3, [pc, #108]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800083c:	7bdb      	ldrb	r3, [r3, #15]
 800083e:	021b      	lsls	r3, r3, #8
 8000840:	b21a      	sxth	r2, r3
 8000842:	4b19      	ldr	r3, [pc, #100]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000844:	7c1b      	ldrb	r3, [r3, #16]
 8000846:	b21b      	sxth	r3, r3
 8000848:	4313      	orrs	r3, r2
 800084a:	b21b      	sxth	r3, r3
 800084c:	b29a      	uxth	r2, r3
 800084e:	4b19      	ldr	r3, [pc, #100]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000850:	811a      	strh	r2, [r3, #8]
		    	power_heat_data.shooter_17mm_1_barrel_heat = ((uint16_t) RxBuff_2[18] << 8) | RxBuff_2[17];
 8000852:	4b15      	ldr	r3, [pc, #84]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000854:	7c9b      	ldrb	r3, [r3, #18]
 8000856:	021b      	lsls	r3, r3, #8
 8000858:	b21a      	sxth	r2, r3
 800085a:	4b13      	ldr	r3, [pc, #76]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800085c:	7c5b      	ldrb	r3, [r3, #17]
 800085e:	b21b      	sxth	r3, r3
 8000860:	4313      	orrs	r3, r2
 8000862:	b21b      	sxth	r3, r3
 8000864:	b29a      	uxth	r2, r3
 8000866:	4b13      	ldr	r3, [pc, #76]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000868:	815a      	strh	r2, [r3, #10]
		    	power_heat_data.shooter_17mm_2_barrel_heat = ((uint16_t) RxBuff_2[20] << 8) | RxBuff_2[19];
 800086a:	4b0f      	ldr	r3, [pc, #60]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800086c:	7d1b      	ldrb	r3, [r3, #20]
 800086e:	021b      	lsls	r3, r3, #8
 8000870:	b21a      	sxth	r2, r3
 8000872:	4b0d      	ldr	r3, [pc, #52]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000874:	7cdb      	ldrb	r3, [r3, #19]
 8000876:	b21b      	sxth	r3, r3
 8000878:	4313      	orrs	r3, r2
 800087a:	b21b      	sxth	r3, r3
 800087c:	b29a      	uxth	r2, r3
 800087e:	4b0d      	ldr	r3, [pc, #52]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000880:	819a      	strh	r2, [r3, #12]
		    	power_heat_data.shooter_42mm_barrel_heat = ((uint16_t) RxBuff_2[22] << 8) | RxBuff_2[21];
 8000882:	4b09      	ldr	r3, [pc, #36]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 8000884:	7d9b      	ldrb	r3, [r3, #22]
 8000886:	021b      	lsls	r3, r3, #8
 8000888:	b21a      	sxth	r2, r3
 800088a:	4b07      	ldr	r3, [pc, #28]	@ (80008a8 <HAL_UARTEx_RxEventCallback+0x3b8>)
 800088c:	7d5b      	ldrb	r3, [r3, #21]
 800088e:	b21b      	sxth	r3, r3
 8000890:	4313      	orrs	r3, r2
 8000892:	b21b      	sxth	r3, r3
 8000894:	b29a      	uxth	r2, r3
 8000896:	4b07      	ldr	r3, [pc, #28]	@ (80008b4 <HAL_UARTEx_RxEventCallback+0x3c4>)
 8000898:	81da      	strh	r2, [r3, #14]
		        break;
 800089a:	bf00      	nop
		    }
		}
	}
}
 800089c:	bf00      	nop
 800089e:	377c      	adds	r7, #124	@ 0x7c
 80008a0:	46bd      	mov	sp, r7
 80008a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008a6:	bf00      	nop
 80008a8:	2000017c 	.word	0x2000017c
 80008ac:	20000280 	.word	0x20000280
 80008b0:	200002a0 	.word	0x200002a0
 80008b4:	20000290 	.word	0x20000290

080008b8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008b8:	b580      	push	{r7, lr}
 80008ba:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008bc:	f002 f9d8 	bl	8002c70 <HAL_Init>

  /* USER CODE BEGIN Init */
  usart_Init();
 80008c0:	f7ff fdfe 	bl	80004c0 <usart_Init>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008c4:	f000 f85a 	bl	800097c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008c8:	f000 fcf2 	bl	80012b0 <MX_GPIO_Init>
  MX_DMA_Init();
 80008cc:	f000 fc8a 	bl	80011e4 <MX_DMA_Init>
  MX_CAN1_Init();
 80008d0:	f000 f8c0 	bl	8000a54 <MX_CAN1_Init>
  MX_CAN2_Init();
 80008d4:	f000 f8f4 	bl	8000ac0 <MX_CAN2_Init>
  MX_SPI1_Init();
 80008d8:	f000 f956 	bl	8000b88 <MX_SPI1_Init>
  MX_TIM4_Init();
 80008dc:	f000 fa32 	bl	8000d44 <MX_TIM4_Init>
  MX_USART1_UART_Init();
 80008e0:	f000 fc00 	bl	80010e4 <MX_USART1_UART_Init>
  MX_USART6_UART_Init();
 80008e4:	f000 fc54 	bl	8001190 <MX_USART6_UART_Init>
  MX_TIM1_Init();
 80008e8:	f000 f984 	bl	8000bf4 <MX_TIM1_Init>
  MX_TIM8_Init();
 80008ec:	f000 fb10 	bl	8000f10 <MX_TIM8_Init>
  MX_USART3_UART_Init();
 80008f0:	f000 fc22 	bl	8001138 <MX_USART3_UART_Init>
  MX_TIM10_Init();
 80008f4:	f000 fba8 	bl	8001048 <MX_TIM10_Init>
  MX_I2C3_Init();
 80008f8:	f000 f918 	bl	8000b2c <MX_I2C3_Init>
  MX_TIM5_Init();
 80008fc:	f000 fa98 	bl	8000e30 <MX_TIM5_Init>
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8000900:	f006 fbd0 	bl	80070a4 <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(TaskMain, NULL, &defaultTask_attributes);
 8000904:	4a11      	ldr	r2, [pc, #68]	@ (800094c <main+0x94>)
 8000906:	2100      	movs	r1, #0
 8000908:	4811      	ldr	r0, [pc, #68]	@ (8000950 <main+0x98>)
 800090a:	f006 fc15 	bl	8007138 <osThreadNew>
 800090e:	4603      	mov	r3, r0
 8000910:	4a10      	ldr	r2, [pc, #64]	@ (8000954 <main+0x9c>)
 8000912:	6013      	str	r3, [r2, #0]

  /* creation of chassisTask */
  chassisTaskHandle = osThreadNew(TaskChassis, NULL, &chassisTask_attributes);
 8000914:	4a10      	ldr	r2, [pc, #64]	@ (8000958 <main+0xa0>)
 8000916:	2100      	movs	r1, #0
 8000918:	4810      	ldr	r0, [pc, #64]	@ (800095c <main+0xa4>)
 800091a:	f006 fc0d 	bl	8007138 <osThreadNew>
 800091e:	4603      	mov	r3, r0
 8000920:	4a0f      	ldr	r2, [pc, #60]	@ (8000960 <main+0xa8>)
 8000922:	6013      	str	r3, [r2, #0]

  /* creation of IMUtempPIDtask */
  IMUtempPIDtaskHandle = osThreadNew(imu_temp_control_task, NULL, &IMUtempPIDtask_attributes);
 8000924:	4a0f      	ldr	r2, [pc, #60]	@ (8000964 <main+0xac>)
 8000926:	2100      	movs	r1, #0
 8000928:	480f      	ldr	r0, [pc, #60]	@ (8000968 <main+0xb0>)
 800092a:	f006 fc05 	bl	8007138 <osThreadNew>
 800092e:	4603      	mov	r3, r0
 8000930:	4a0e      	ldr	r2, [pc, #56]	@ (800096c <main+0xb4>)
 8000932:	6013      	str	r3, [r2, #0]

  /* creation of turretTask */
  turretTaskHandle = osThreadNew(TaskTurret, NULL, &turretTask_attributes);
 8000934:	4a0e      	ldr	r2, [pc, #56]	@ (8000970 <main+0xb8>)
 8000936:	2100      	movs	r1, #0
 8000938:	480e      	ldr	r0, [pc, #56]	@ (8000974 <main+0xbc>)
 800093a:	f006 fbfd 	bl	8007138 <osThreadNew>
 800093e:	4603      	mov	r3, r0
 8000940:	4a0d      	ldr	r2, [pc, #52]	@ (8000978 <main+0xc0>)
 8000942:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 8000944:	f006 fbd2 	bl	80070ec <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000948:	bf00      	nop
 800094a:	e7fd      	b.n	8000948 <main+0x90>
 800094c:	08009e3c 	.word	0x08009e3c
 8000950:	080014bd 	.word	0x080014bd
 8000954:	200008ec 	.word	0x200008ec
 8000958:	08009e60 	.word	0x08009e60
 800095c:	080014cd 	.word	0x080014cd
 8000960:	200008f0 	.word	0x200008f0
 8000964:	08009e84 	.word	0x08009e84
 8000968:	080017c1 	.word	0x080017c1
 800096c:	200008f4 	.word	0x200008f4
 8000970:	08009ea8 	.word	0x08009ea8
 8000974:	080017d1 	.word	0x080017d1
 8000978:	200008f8 	.word	0x200008f8

0800097c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	b094      	sub	sp, #80	@ 0x50
 8000980:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000982:	f107 0320 	add.w	r3, r7, #32
 8000986:	2230      	movs	r2, #48	@ 0x30
 8000988:	2100      	movs	r1, #0
 800098a:	4618      	mov	r0, r3
 800098c:	f009 f93c 	bl	8009c08 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000990:	f107 030c 	add.w	r3, r7, #12
 8000994:	2200      	movs	r2, #0
 8000996:	601a      	str	r2, [r3, #0]
 8000998:	605a      	str	r2, [r3, #4]
 800099a:	609a      	str	r2, [r3, #8]
 800099c:	60da      	str	r2, [r3, #12]
 800099e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80009a0:	2300      	movs	r3, #0
 80009a2:	60bb      	str	r3, [r7, #8]
 80009a4:	4b29      	ldr	r3, [pc, #164]	@ (8000a4c <SystemClock_Config+0xd0>)
 80009a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80009a8:	4a28      	ldr	r2, [pc, #160]	@ (8000a4c <SystemClock_Config+0xd0>)
 80009aa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80009ae:	6413      	str	r3, [r2, #64]	@ 0x40
 80009b0:	4b26      	ldr	r3, [pc, #152]	@ (8000a4c <SystemClock_Config+0xd0>)
 80009b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80009b4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80009b8:	60bb      	str	r3, [r7, #8]
 80009ba:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80009bc:	2300      	movs	r3, #0
 80009be:	607b      	str	r3, [r7, #4]
 80009c0:	4b23      	ldr	r3, [pc, #140]	@ (8000a50 <SystemClock_Config+0xd4>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	4a22      	ldr	r2, [pc, #136]	@ (8000a50 <SystemClock_Config+0xd4>)
 80009c6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80009ca:	6013      	str	r3, [r2, #0]
 80009cc:	4b20      	ldr	r3, [pc, #128]	@ (8000a50 <SystemClock_Config+0xd4>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80009d4:	607b      	str	r3, [r7, #4]
 80009d6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80009d8:	2301      	movs	r3, #1
 80009da:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80009dc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80009e0:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80009e2:	2302      	movs	r3, #2
 80009e4:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80009e6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80009ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 6;
 80009ec:	2306      	movs	r3, #6
 80009ee:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 80009f0:	23a8      	movs	r3, #168	@ 0xa8
 80009f2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80009f4:	2302      	movs	r3, #2
 80009f6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80009f8:	2304      	movs	r3, #4
 80009fa:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80009fc:	f107 0320 	add.w	r3, r7, #32
 8000a00:	4618      	mov	r0, r3
 8000a02:	f003 fd25 	bl	8004450 <HAL_RCC_OscConfig>
 8000a06:	4603      	mov	r3, r0
 8000a08:	2b00      	cmp	r3, #0
 8000a0a:	d001      	beq.n	8000a10 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000a0c:	f000 fee8 	bl	80017e0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a10:	230f      	movs	r3, #15
 8000a12:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a14:	2302      	movs	r3, #2
 8000a16:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a18:	2300      	movs	r3, #0
 8000a1a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000a1c:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000a20:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a22:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a26:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a28:	f107 030c 	add.w	r3, r7, #12
 8000a2c:	2105      	movs	r1, #5
 8000a2e:	4618      	mov	r0, r3
 8000a30:	f003 ff86 	bl	8004940 <HAL_RCC_ClockConfig>
 8000a34:	4603      	mov	r3, r0
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d001      	beq.n	8000a3e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000a3a:	f000 fed1 	bl	80017e0 <Error_Handler>
  }

  /** Enables the Clock Security System
  */
  HAL_RCC_EnableCSS();
 8000a3e:	f004 f865 	bl	8004b0c <HAL_RCC_EnableCSS>
}
 8000a42:	bf00      	nop
 8000a44:	3750      	adds	r7, #80	@ 0x50
 8000a46:	46bd      	mov	sp, r7
 8000a48:	bd80      	pop	{r7, pc}
 8000a4a:	bf00      	nop
 8000a4c:	40023800 	.word	0x40023800
 8000a50:	40007000 	.word	0x40007000

08000a54 <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 8000a54:	b580      	push	{r7, lr}
 8000a56:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8000a58:	4b17      	ldr	r3, [pc, #92]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a5a:	4a18      	ldr	r2, [pc, #96]	@ (8000abc <MX_CAN1_Init+0x68>)
 8000a5c:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 3;
 8000a5e:	4b16      	ldr	r3, [pc, #88]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a60:	2203      	movs	r2, #3
 8000a62:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8000a64:	4b14      	ldr	r3, [pc, #80]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a66:	2200      	movs	r2, #0
 8000a68:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000a6a:	4b13      	ldr	r3, [pc, #76]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a6c:	2200      	movs	r2, #0
 8000a6e:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_10TQ;
 8000a70:	4b11      	ldr	r3, [pc, #68]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a72:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8000a76:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 8000a78:	4b0f      	ldr	r3, [pc, #60]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a7a:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000a7e:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8000a80:	4b0d      	ldr	r3, [pc, #52]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a82:	2200      	movs	r2, #0
 8000a84:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8000a86:	4b0c      	ldr	r3, [pc, #48]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a88:	2200      	movs	r2, #0
 8000a8a:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8000a8c:	4b0a      	ldr	r3, [pc, #40]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8000a92:	4b09      	ldr	r3, [pc, #36]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a94:	2200      	movs	r2, #0
 8000a96:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 8000a98:	4b07      	ldr	r3, [pc, #28]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8000a9e:	4b06      	ldr	r3, [pc, #24]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8000aa4:	4804      	ldr	r0, [pc, #16]	@ (8000ab8 <MX_CAN1_Init+0x64>)
 8000aa6:	f002 f955 	bl	8002d54 <HAL_CAN_Init>
 8000aaa:	4603      	mov	r3, r0
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	d001      	beq.n	8000ab4 <MX_CAN1_Init+0x60>
  {
    Error_Handler();
 8000ab0:	f000 fe96 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 8000ab4:	bf00      	nop
 8000ab6:	bd80      	pop	{r7, pc}
 8000ab8:	200002b0 	.word	0x200002b0
 8000abc:	40006400 	.word	0x40006400

08000ac0 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 8000ac4:	4b17      	ldr	r3, [pc, #92]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ac6:	4a18      	ldr	r2, [pc, #96]	@ (8000b28 <MX_CAN2_Init+0x68>)
 8000ac8:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 3;
 8000aca:	4b16      	ldr	r3, [pc, #88]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000acc:	2203      	movs	r2, #3
 8000ace:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 8000ad0:	4b14      	ldr	r3, [pc, #80]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000ad6:	4b13      	ldr	r3, [pc, #76]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ad8:	2200      	movs	r2, #0
 8000ada:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_10TQ;
 8000adc:	4b11      	ldr	r3, [pc, #68]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ade:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8000ae2:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 8000ae4:	4b0f      	ldr	r3, [pc, #60]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000ae6:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000aea:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8000aec:	4b0d      	ldr	r3, [pc, #52]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000aee:	2200      	movs	r2, #0
 8000af0:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 8000af2:	4b0c      	ldr	r3, [pc, #48]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000af4:	2200      	movs	r2, #0
 8000af6:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 8000af8:	4b0a      	ldr	r3, [pc, #40]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000afa:	2200      	movs	r2, #0
 8000afc:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 8000afe:	4b09      	ldr	r3, [pc, #36]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b00:	2200      	movs	r2, #0
 8000b02:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8000b04:	4b07      	ldr	r3, [pc, #28]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b06:	2200      	movs	r2, #0
 8000b08:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 8000b0a:	4b06      	ldr	r3, [pc, #24]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 8000b10:	4804      	ldr	r0, [pc, #16]	@ (8000b24 <MX_CAN2_Init+0x64>)
 8000b12:	f002 f91f 	bl	8002d54 <HAL_CAN_Init>
 8000b16:	4603      	mov	r3, r0
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	d001      	beq.n	8000b20 <MX_CAN2_Init+0x60>
  {
    Error_Handler();
 8000b1c:	f000 fe60 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN CAN2_Init 2 */

  /* USER CODE END CAN2_Init 2 */

}
 8000b20:	bf00      	nop
 8000b22:	bd80      	pop	{r7, pc}
 8000b24:	200002d8 	.word	0x200002d8
 8000b28:	40006800 	.word	0x40006800

08000b2c <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000b30:	4b12      	ldr	r3, [pc, #72]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b32:	4a13      	ldr	r2, [pc, #76]	@ (8000b80 <MX_I2C3_Init+0x54>)
 8000b34:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 400000;
 8000b36:	4b11      	ldr	r3, [pc, #68]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b38:	4a12      	ldr	r2, [pc, #72]	@ (8000b84 <MX_I2C3_Init+0x58>)
 8000b3a:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000b3c:	4b0f      	ldr	r3, [pc, #60]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8000b42:	4b0e      	ldr	r3, [pc, #56]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b48:	4b0c      	ldr	r3, [pc, #48]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b4a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000b4e:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b50:	4b0a      	ldr	r3, [pc, #40]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b52:	2200      	movs	r2, #0
 8000b54:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 8000b56:	4b09      	ldr	r3, [pc, #36]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b58:	2200      	movs	r2, #0
 8000b5a:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b5c:	4b07      	ldr	r3, [pc, #28]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b5e:	2200      	movs	r2, #0
 8000b60:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b62:	4b06      	ldr	r3, [pc, #24]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b64:	2200      	movs	r2, #0
 8000b66:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b68:	4804      	ldr	r0, [pc, #16]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b6a:	f003 fb2d 	bl	80041c8 <HAL_I2C_Init>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d001      	beq.n	8000b78 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8000b74:	f000 fe34 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000b78:	bf00      	nop
 8000b7a:	bd80      	pop	{r7, pc}
 8000b7c:	20000300 	.word	0x20000300
 8000b80:	40005c00 	.word	0x40005c00
 8000b84:	00061a80 	.word	0x00061a80

08000b88 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000b88:	b580      	push	{r7, lr}
 8000b8a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000b8c:	4b17      	ldr	r3, [pc, #92]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000b8e:	4a18      	ldr	r2, [pc, #96]	@ (8000bf0 <MX_SPI1_Init+0x68>)
 8000b90:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000b92:	4b16      	ldr	r3, [pc, #88]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000b94:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000b98:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000b9a:	4b14      	ldr	r3, [pc, #80]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000ba0:	4b12      	ldr	r3, [pc, #72]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8000ba6:	4b11      	ldr	r3, [pc, #68]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000ba8:	2202      	movs	r2, #2
 8000baa:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8000bac:	4b0f      	ldr	r3, [pc, #60]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bae:	2201      	movs	r2, #1
 8000bb0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000bb2:	4b0e      	ldr	r3, [pc, #56]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bb4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000bb8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 8000bba:	4b0c      	ldr	r3, [pc, #48]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bbc:	2238      	movs	r2, #56	@ 0x38
 8000bbe:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000bc0:	4b0a      	ldr	r3, [pc, #40]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000bc6:	4b09      	ldr	r3, [pc, #36]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bc8:	2200      	movs	r2, #0
 8000bca:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000bcc:	4b07      	ldr	r3, [pc, #28]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bce:	2200      	movs	r2, #0
 8000bd0:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000bd2:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bd4:	220a      	movs	r2, #10
 8000bd6:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000bd8:	4804      	ldr	r0, [pc, #16]	@ (8000bec <MX_SPI1_Init+0x64>)
 8000bda:	f004 f8b8 	bl	8004d4e <HAL_SPI_Init>
 8000bde:	4603      	mov	r3, r0
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d001      	beq.n	8000be8 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000be4:	f000 fdfc 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000be8:	bf00      	nop
 8000bea:	bd80      	pop	{r7, pc}
 8000bec:	20000354 	.word	0x20000354
 8000bf0:	40013000 	.word	0x40013000

08000bf4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000bf4:	b580      	push	{r7, lr}
 8000bf6:	b092      	sub	sp, #72	@ 0x48
 8000bf8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bfa:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000bfe:	2200      	movs	r2, #0
 8000c00:	601a      	str	r2, [r3, #0]
 8000c02:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000c04:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c08:	2200      	movs	r2, #0
 8000c0a:	601a      	str	r2, [r3, #0]
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	609a      	str	r2, [r3, #8]
 8000c10:	60da      	str	r2, [r3, #12]
 8000c12:	611a      	str	r2, [r3, #16]
 8000c14:	615a      	str	r2, [r3, #20]
 8000c16:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000c18:	1d3b      	adds	r3, r7, #4
 8000c1a:	2220      	movs	r2, #32
 8000c1c:	2100      	movs	r1, #0
 8000c1e:	4618      	mov	r0, r3
 8000c20:	f008 fff2 	bl	8009c08 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000c24:	4b45      	ldr	r3, [pc, #276]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c26:	4a46      	ldr	r2, [pc, #280]	@ (8000d40 <MX_TIM1_Init+0x14c>)
 8000c28:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 335;
 8000c2a:	4b44      	ldr	r3, [pc, #272]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c2c:	f240 124f 	movw	r2, #335	@ 0x14f
 8000c30:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c32:	4b42      	ldr	r3, [pc, #264]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 999;
 8000c38:	4b40      	ldr	r3, [pc, #256]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000c3e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c40:	4b3e      	ldr	r3, [pc, #248]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c42:	2200      	movs	r2, #0
 8000c44:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000c46:	4b3d      	ldr	r3, [pc, #244]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c4c:	4b3b      	ldr	r3, [pc, #236]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c4e:	2200      	movs	r2, #0
 8000c50:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8000c52:	483a      	ldr	r0, [pc, #232]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c54:	f004 f9bc 	bl	8004fd0 <HAL_TIM_PWM_Init>
 8000c58:	4603      	mov	r3, r0
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d001      	beq.n	8000c62 <MX_TIM1_Init+0x6e>
  {
    Error_Handler();
 8000c5e:	f000 fdbf 	bl	80017e0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c62:	2300      	movs	r3, #0
 8000c64:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c66:	2300      	movs	r3, #0
 8000c68:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000c6a:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000c6e:	4619      	mov	r1, r3
 8000c70:	4832      	ldr	r0, [pc, #200]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000c72:	f004 ffdb 	bl	8005c2c <HAL_TIMEx_MasterConfigSynchronization>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d001      	beq.n	8000c80 <MX_TIM1_Init+0x8c>
  {
    Error_Handler();
 8000c7c:	f000 fdb0 	bl	80017e0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000c80:	2360      	movs	r3, #96	@ 0x60
 8000c82:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 8000c84:	2300      	movs	r3, #0
 8000c86:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000c88:	2300      	movs	r3, #0
 8000c8a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000c90:	2300      	movs	r3, #0
 8000c92:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000c94:	2300      	movs	r3, #0
 8000c96:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000c98:	2300      	movs	r3, #0
 8000c9a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000c9c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	4619      	mov	r1, r3
 8000ca4:	4825      	ldr	r0, [pc, #148]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000ca6:	f004 fb1b 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000caa:	4603      	mov	r3, r0
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d001      	beq.n	8000cb4 <MX_TIM1_Init+0xc0>
  {
    Error_Handler();
 8000cb0:	f000 fd96 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000cb4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000cb8:	2204      	movs	r2, #4
 8000cba:	4619      	mov	r1, r3
 8000cbc:	481f      	ldr	r0, [pc, #124]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000cbe:	f004 fb0f 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000cc2:	4603      	mov	r3, r0
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d001      	beq.n	8000ccc <MX_TIM1_Init+0xd8>
  {
    Error_Handler();
 8000cc8:	f000 fd8a 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000ccc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000cd0:	2208      	movs	r2, #8
 8000cd2:	4619      	mov	r1, r3
 8000cd4:	4819      	ldr	r0, [pc, #100]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000cd6:	f004 fb03 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000cda:	4603      	mov	r3, r0
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d001      	beq.n	8000ce4 <MX_TIM1_Init+0xf0>
  {
    Error_Handler();
 8000ce0:	f000 fd7e 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000ce4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000ce8:	220c      	movs	r2, #12
 8000cea:	4619      	mov	r1, r3
 8000cec:	4813      	ldr	r0, [pc, #76]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000cee:	f004 faf7 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d001      	beq.n	8000cfc <MX_TIM1_Init+0x108>
  {
    Error_Handler();
 8000cf8:	f000 fd72 	bl	80017e0 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000d00:	2300      	movs	r3, #0
 8000d02:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8000d04:	2300      	movs	r3, #0
 8000d06:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8000d08:	2300      	movs	r3, #0
 8000d0a:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000d10:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000d14:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000d16:	2300      	movs	r3, #0
 8000d18:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000d1a:	1d3b      	adds	r3, r7, #4
 8000d1c:	4619      	mov	r1, r3
 8000d1e:	4807      	ldr	r0, [pc, #28]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000d20:	f005 f800 	bl	8005d24 <HAL_TIMEx_ConfigBreakDeadTime>
 8000d24:	4603      	mov	r3, r0
 8000d26:	2b00      	cmp	r3, #0
 8000d28:	d001      	beq.n	8000d2e <MX_TIM1_Init+0x13a>
  {
    Error_Handler();
 8000d2a:	f000 fd59 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8000d2e:	4803      	ldr	r0, [pc, #12]	@ (8000d3c <MX_TIM1_Init+0x148>)
 8000d30:	f001 fbc2 	bl	80024b8 <HAL_TIM_MspPostInit>

}
 8000d34:	bf00      	nop
 8000d36:	3748      	adds	r7, #72	@ 0x48
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	bd80      	pop	{r7, pc}
 8000d3c:	200003ac 	.word	0x200003ac
 8000d40:	40010000 	.word	0x40010000

08000d44 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b08e      	sub	sp, #56	@ 0x38
 8000d48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000d4a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000d4e:	2200      	movs	r2, #0
 8000d50:	601a      	str	r2, [r3, #0]
 8000d52:	605a      	str	r2, [r3, #4]
 8000d54:	609a      	str	r2, [r3, #8]
 8000d56:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000d58:	f107 0320 	add.w	r3, r7, #32
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	601a      	str	r2, [r3, #0]
 8000d60:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000d62:	1d3b      	adds	r3, r7, #4
 8000d64:	2200      	movs	r2, #0
 8000d66:	601a      	str	r2, [r3, #0]
 8000d68:	605a      	str	r2, [r3, #4]
 8000d6a:	609a      	str	r2, [r3, #8]
 8000d6c:	60da      	str	r2, [r3, #12]
 8000d6e:	611a      	str	r2, [r3, #16]
 8000d70:	615a      	str	r2, [r3, #20]
 8000d72:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000d74:	4b2c      	ldr	r3, [pc, #176]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d76:	4a2d      	ldr	r2, [pc, #180]	@ (8000e2c <MX_TIM4_Init+0xe8>)
 8000d78:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 83;
 8000d7a:	4b2b      	ldr	r3, [pc, #172]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d7c:	2253      	movs	r2, #83	@ 0x53
 8000d7e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000d80:	4b29      	ldr	r3, [pc, #164]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d82:	2200      	movs	r2, #0
 8000d84:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 249;
 8000d86:	4b28      	ldr	r3, [pc, #160]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d88:	22f9      	movs	r2, #249	@ 0xf9
 8000d8a:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d8c:	4b26      	ldr	r3, [pc, #152]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d8e:	2200      	movs	r2, #0
 8000d90:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000d92:	4b25      	ldr	r3, [pc, #148]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d94:	2280      	movs	r2, #128	@ 0x80
 8000d96:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8000d98:	4823      	ldr	r0, [pc, #140]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000d9a:	f004 f861 	bl	8004e60 <HAL_TIM_Base_Init>
 8000d9e:	4603      	mov	r3, r0
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d001      	beq.n	8000da8 <MX_TIM4_Init+0x64>
  {
    Error_Handler();
 8000da4:	f000 fd1c 	bl	80017e0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000da8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000dac:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8000dae:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000db2:	4619      	mov	r1, r3
 8000db4:	481c      	ldr	r0, [pc, #112]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000db6:	f004 fb55 	bl	8005464 <HAL_TIM_ConfigClockSource>
 8000dba:	4603      	mov	r3, r0
 8000dbc:	2b00      	cmp	r3, #0
 8000dbe:	d001      	beq.n	8000dc4 <MX_TIM4_Init+0x80>
  {
    Error_Handler();
 8000dc0:	f000 fd0e 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8000dc4:	4818      	ldr	r0, [pc, #96]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000dc6:	f004 f903 	bl	8004fd0 <HAL_TIM_PWM_Init>
 8000dca:	4603      	mov	r3, r0
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	d001      	beq.n	8000dd4 <MX_TIM4_Init+0x90>
  {
    Error_Handler();
 8000dd0:	f000 fd06 	bl	80017e0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000dd8:	2300      	movs	r3, #0
 8000dda:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000ddc:	f107 0320 	add.w	r3, r7, #32
 8000de0:	4619      	mov	r1, r3
 8000de2:	4811      	ldr	r0, [pc, #68]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000de4:	f004 ff22 	bl	8005c2c <HAL_TIMEx_MasterConfigSynchronization>
 8000de8:	4603      	mov	r3, r0
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	d001      	beq.n	8000df2 <MX_TIM4_Init+0xae>
  {
    Error_Handler();
 8000dee:	f000 fcf7 	bl	80017e0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000df2:	2360      	movs	r3, #96	@ 0x60
 8000df4:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 10499;
 8000df6:	f642 1303 	movw	r3, #10499	@ 0x2903
 8000dfa:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000e00:	2300      	movs	r3, #0
 8000e02:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000e04:	1d3b      	adds	r3, r7, #4
 8000e06:	2208      	movs	r2, #8
 8000e08:	4619      	mov	r1, r3
 8000e0a:	4807      	ldr	r0, [pc, #28]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000e0c:	f004 fa68 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000e10:	4603      	mov	r3, r0
 8000e12:	2b00      	cmp	r3, #0
 8000e14:	d001      	beq.n	8000e1a <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 8000e16:	f000 fce3 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8000e1a:	4803      	ldr	r0, [pc, #12]	@ (8000e28 <MX_TIM4_Init+0xe4>)
 8000e1c:	f001 fb4c 	bl	80024b8 <HAL_TIM_MspPostInit>

}
 8000e20:	bf00      	nop
 8000e22:	3738      	adds	r7, #56	@ 0x38
 8000e24:	46bd      	mov	sp, r7
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	200003f4 	.word	0x200003f4
 8000e2c:	40000800 	.word	0x40000800

08000e30 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8000e30:	b580      	push	{r7, lr}
 8000e32:	b08a      	sub	sp, #40	@ 0x28
 8000e34:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000e36:	f107 0320 	add.w	r3, r7, #32
 8000e3a:	2200      	movs	r2, #0
 8000e3c:	601a      	str	r2, [r3, #0]
 8000e3e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000e40:	1d3b      	adds	r3, r7, #4
 8000e42:	2200      	movs	r2, #0
 8000e44:	601a      	str	r2, [r3, #0]
 8000e46:	605a      	str	r2, [r3, #4]
 8000e48:	609a      	str	r2, [r3, #8]
 8000e4a:	60da      	str	r2, [r3, #12]
 8000e4c:	611a      	str	r2, [r3, #16]
 8000e4e:	615a      	str	r2, [r3, #20]
 8000e50:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8000e52:	4b2d      	ldr	r3, [pc, #180]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e54:	4a2d      	ldr	r2, [pc, #180]	@ (8000f0c <MX_TIM5_Init+0xdc>)
 8000e56:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 83;
 8000e58:	4b2b      	ldr	r3, [pc, #172]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e5a:	2253      	movs	r2, #83	@ 0x53
 8000e5c:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000e5e:	4b2a      	ldr	r3, [pc, #168]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e60:	2200      	movs	r2, #0
 8000e62:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 1999;
 8000e64:	4b28      	ldr	r3, [pc, #160]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e66:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8000e6a:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000e6c:	4b26      	ldr	r3, [pc, #152]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e6e:	2200      	movs	r2, #0
 8000e70:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000e72:	4b25      	ldr	r3, [pc, #148]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e74:	2200      	movs	r2, #0
 8000e76:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8000e78:	4823      	ldr	r0, [pc, #140]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e7a:	f004 f8a9 	bl	8004fd0 <HAL_TIM_PWM_Init>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d001      	beq.n	8000e88 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8000e84:	f000 fcac 	bl	80017e0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000e88:	2300      	movs	r3, #0
 8000e8a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8000e90:	f107 0320 	add.w	r3, r7, #32
 8000e94:	4619      	mov	r1, r3
 8000e96:	481c      	ldr	r0, [pc, #112]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000e98:	f004 fec8 	bl	8005c2c <HAL_TIMEx_MasterConfigSynchronization>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	2b00      	cmp	r3, #0
 8000ea0:	d001      	beq.n	8000ea6 <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 8000ea2:	f000 fc9d 	bl	80017e0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000ea6:	2360      	movs	r3, #96	@ 0x60
 8000ea8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000eaa:	2300      	movs	r3, #0
 8000eac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000eae:	2300      	movs	r3, #0
 8000eb0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000eb6:	1d3b      	adds	r3, r7, #4
 8000eb8:	2200      	movs	r2, #0
 8000eba:	4619      	mov	r1, r3
 8000ebc:	4812      	ldr	r0, [pc, #72]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000ebe:	f004 fa0f 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000ec2:	4603      	mov	r3, r0
 8000ec4:	2b00      	cmp	r3, #0
 8000ec6:	d001      	beq.n	8000ecc <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 8000ec8:	f000 fc8a 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000ecc:	1d3b      	adds	r3, r7, #4
 8000ece:	2204      	movs	r2, #4
 8000ed0:	4619      	mov	r1, r3
 8000ed2:	480d      	ldr	r0, [pc, #52]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000ed4:	f004 fa04 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000ed8:	4603      	mov	r3, r0
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d001      	beq.n	8000ee2 <MX_TIM5_Init+0xb2>
  {
    Error_Handler();
 8000ede:	f000 fc7f 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000ee2:	1d3b      	adds	r3, r7, #4
 8000ee4:	2208      	movs	r2, #8
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	4807      	ldr	r0, [pc, #28]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000eea:	f004 f9f9 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000eee:	4603      	mov	r3, r0
 8000ef0:	2b00      	cmp	r3, #0
 8000ef2:	d001      	beq.n	8000ef8 <MX_TIM5_Init+0xc8>
  {
    Error_Handler();
 8000ef4:	f000 fc74 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8000ef8:	4803      	ldr	r0, [pc, #12]	@ (8000f08 <MX_TIM5_Init+0xd8>)
 8000efa:	f001 fadd 	bl	80024b8 <HAL_TIM_MspPostInit>

}
 8000efe:	bf00      	nop
 8000f00:	3728      	adds	r7, #40	@ 0x28
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}
 8000f06:	bf00      	nop
 8000f08:	2000043c 	.word	0x2000043c
 8000f0c:	40000c00 	.word	0x40000c00

08000f10 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8000f10:	b580      	push	{r7, lr}
 8000f12:	b092      	sub	sp, #72	@ 0x48
 8000f14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f16:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000f1a:	2200      	movs	r2, #0
 8000f1c:	601a      	str	r2, [r3, #0]
 8000f1e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000f20:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f24:	2200      	movs	r2, #0
 8000f26:	601a      	str	r2, [r3, #0]
 8000f28:	605a      	str	r2, [r3, #4]
 8000f2a:	609a      	str	r2, [r3, #8]
 8000f2c:	60da      	str	r2, [r3, #12]
 8000f2e:	611a      	str	r2, [r3, #16]
 8000f30:	615a      	str	r2, [r3, #20]
 8000f32:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000f34:	1d3b      	adds	r3, r7, #4
 8000f36:	2220      	movs	r2, #32
 8000f38:	2100      	movs	r1, #0
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	f008 fe64 	bl	8009c08 <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8000f40:	4b3f      	ldr	r3, [pc, #252]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f42:	4a40      	ldr	r2, [pc, #256]	@ (8001044 <MX_TIM8_Init+0x134>)
 8000f44:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 335;
 8000f46:	4b3e      	ldr	r3, [pc, #248]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f48:	f240 124f 	movw	r2, #335	@ 0x14f
 8000f4c:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f4e:	4b3c      	ldr	r3, [pc, #240]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f50:	2200      	movs	r2, #0
 8000f52:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 999;
 8000f54:	4b3a      	ldr	r3, [pc, #232]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f56:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000f5a:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f5c:	4b38      	ldr	r3, [pc, #224]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8000f62:	4b37      	ldr	r3, [pc, #220]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000f68:	4b35      	ldr	r3, [pc, #212]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f6a:	2280      	movs	r2, #128	@ 0x80
 8000f6c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 8000f6e:	4834      	ldr	r0, [pc, #208]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f70:	f004 f82e 	bl	8004fd0 <HAL_TIM_PWM_Init>
 8000f74:	4603      	mov	r3, r0
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d001      	beq.n	8000f7e <MX_TIM8_Init+0x6e>
  {
    Error_Handler();
 8000f7a:	f000 fc31 	bl	80017e0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000f7e:	2300      	movs	r3, #0
 8000f80:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f82:	2300      	movs	r3, #0
 8000f84:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8000f86:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000f8a:	4619      	mov	r1, r3
 8000f8c:	482c      	ldr	r0, [pc, #176]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000f8e:	f004 fe4d 	bl	8005c2c <HAL_TIMEx_MasterConfigSynchronization>
 8000f92:	4603      	mov	r3, r0
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d001      	beq.n	8000f9c <MX_TIM8_Init+0x8c>
  {
    Error_Handler();
 8000f98:	f000 fc22 	bl	80017e0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000f9c:	2360      	movs	r3, #96	@ 0x60
 8000f9e:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000fa8:	2300      	movs	r3, #0
 8000faa:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000fac:	2300      	movs	r3, #0
 8000fae:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000fb4:	2300      	movs	r3, #0
 8000fb6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000fb8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	4619      	mov	r1, r3
 8000fc0:	481f      	ldr	r0, [pc, #124]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000fc2:	f004 f98d 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000fc6:	4603      	mov	r3, r0
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d001      	beq.n	8000fd0 <MX_TIM8_Init+0xc0>
  {
    Error_Handler();
 8000fcc:	f000 fc08 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000fd0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fd4:	2204      	movs	r2, #4
 8000fd6:	4619      	mov	r1, r3
 8000fd8:	4819      	ldr	r0, [pc, #100]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000fda:	f004 f981 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d001      	beq.n	8000fe8 <MX_TIM8_Init+0xd8>
  {
    Error_Handler();
 8000fe4:	f000 fbfc 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000fe8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fec:	2208      	movs	r2, #8
 8000fee:	4619      	mov	r1, r3
 8000ff0:	4813      	ldr	r0, [pc, #76]	@ (8001040 <MX_TIM8_Init+0x130>)
 8000ff2:	f004 f975 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 8000ff6:	4603      	mov	r3, r0
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	d001      	beq.n	8001000 <MX_TIM8_Init+0xf0>
  {
    Error_Handler();
 8000ffc:	f000 fbf0 	bl	80017e0 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001000:	2300      	movs	r3, #0
 8001002:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001004:	2300      	movs	r3, #0
 8001006:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001008:	2300      	movs	r3, #0
 800100a:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800100c:	2300      	movs	r3, #0
 800100e:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001010:	2300      	movs	r3, #0
 8001012:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001014:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001018:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800101a:	2300      	movs	r3, #0
 800101c:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 800101e:	1d3b      	adds	r3, r7, #4
 8001020:	4619      	mov	r1, r3
 8001022:	4807      	ldr	r0, [pc, #28]	@ (8001040 <MX_TIM8_Init+0x130>)
 8001024:	f004 fe7e 	bl	8005d24 <HAL_TIMEx_ConfigBreakDeadTime>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d001      	beq.n	8001032 <MX_TIM8_Init+0x122>
  {
    Error_Handler();
 800102e:	f000 fbd7 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 8001032:	4803      	ldr	r0, [pc, #12]	@ (8001040 <MX_TIM8_Init+0x130>)
 8001034:	f001 fa40 	bl	80024b8 <HAL_TIM_MspPostInit>

}
 8001038:	bf00      	nop
 800103a:	3748      	adds	r7, #72	@ 0x48
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}
 8001040:	20000484 	.word	0x20000484
 8001044:	40010400 	.word	0x40010400

08001048 <MX_TIM10_Init>:
  * @brief TIM10 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM10_Init(void)
{
 8001048:	b580      	push	{r7, lr}
 800104a:	b088      	sub	sp, #32
 800104c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM10_Init 0 */

  /* USER CODE END TIM10_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 800104e:	1d3b      	adds	r3, r7, #4
 8001050:	2200      	movs	r2, #0
 8001052:	601a      	str	r2, [r3, #0]
 8001054:	605a      	str	r2, [r3, #4]
 8001056:	609a      	str	r2, [r3, #8]
 8001058:	60da      	str	r2, [r3, #12]
 800105a:	611a      	str	r2, [r3, #16]
 800105c:	615a      	str	r2, [r3, #20]
 800105e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 8001060:	4b1e      	ldr	r3, [pc, #120]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001062:	4a1f      	ldr	r2, [pc, #124]	@ (80010e0 <MX_TIM10_Init+0x98>)
 8001064:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 0;
 8001066:	4b1d      	ldr	r3, [pc, #116]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001068:	2200      	movs	r2, #0
 800106a:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 800106c:	4b1b      	ldr	r3, [pc, #108]	@ (80010dc <MX_TIM10_Init+0x94>)
 800106e:	2200      	movs	r2, #0
 8001070:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 4999;
 8001072:	4b1a      	ldr	r3, [pc, #104]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001074:	f241 3287 	movw	r2, #4999	@ 0x1387
 8001078:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800107a:	4b18      	ldr	r3, [pc, #96]	@ (80010dc <MX_TIM10_Init+0x94>)
 800107c:	2200      	movs	r2, #0
 800107e:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001080:	4b16      	ldr	r3, [pc, #88]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001082:	2200      	movs	r2, #0
 8001084:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 8001086:	4815      	ldr	r0, [pc, #84]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001088:	f003 feea 	bl	8004e60 <HAL_TIM_Base_Init>
 800108c:	4603      	mov	r3, r0
 800108e:	2b00      	cmp	r3, #0
 8001090:	d001      	beq.n	8001096 <MX_TIM10_Init+0x4e>
  {
    Error_Handler();
 8001092:	f000 fba5 	bl	80017e0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 8001096:	4811      	ldr	r0, [pc, #68]	@ (80010dc <MX_TIM10_Init+0x94>)
 8001098:	f003 ff9a 	bl	8004fd0 <HAL_TIM_PWM_Init>
 800109c:	4603      	mov	r3, r0
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d001      	beq.n	80010a6 <MX_TIM10_Init+0x5e>
  {
    Error_Handler();
 80010a2:	f000 fb9d 	bl	80017e0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80010a6:	2360      	movs	r3, #96	@ 0x60
 80010a8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80010aa:	2300      	movs	r3, #0
 80010ac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010ae:	2300      	movs	r3, #0
 80010b0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80010b2:	2300      	movs	r3, #0
 80010b4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80010b6:	1d3b      	adds	r3, r7, #4
 80010b8:	2200      	movs	r2, #0
 80010ba:	4619      	mov	r1, r3
 80010bc:	4807      	ldr	r0, [pc, #28]	@ (80010dc <MX_TIM10_Init+0x94>)
 80010be:	f004 f90f 	bl	80052e0 <HAL_TIM_PWM_ConfigChannel>
 80010c2:	4603      	mov	r3, r0
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d001      	beq.n	80010cc <MX_TIM10_Init+0x84>
  {
    Error_Handler();
 80010c8:	f000 fb8a 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */
  HAL_TIM_MspPostInit(&htim10);
 80010cc:	4803      	ldr	r0, [pc, #12]	@ (80010dc <MX_TIM10_Init+0x94>)
 80010ce:	f001 f9f3 	bl	80024b8 <HAL_TIM_MspPostInit>

}
 80010d2:	bf00      	nop
 80010d4:	3720      	adds	r7, #32
 80010d6:	46bd      	mov	sp, r7
 80010d8:	bd80      	pop	{r7, pc}
 80010da:	bf00      	nop
 80010dc:	200004cc 	.word	0x200004cc
 80010e0:	40014400 	.word	0x40014400

080010e4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80010e8:	4b11      	ldr	r3, [pc, #68]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010ea:	4a12      	ldr	r2, [pc, #72]	@ (8001134 <MX_USART1_UART_Init+0x50>)
 80010ec:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80010ee:	4b10      	ldr	r3, [pc, #64]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010f0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80010f4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80010f6:	4b0e      	ldr	r3, [pc, #56]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010f8:	2200      	movs	r2, #0
 80010fa:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80010fc:	4b0c      	ldr	r3, [pc, #48]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 80010fe:	2200      	movs	r2, #0
 8001100:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001102:	4b0b      	ldr	r3, [pc, #44]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 8001104:	2200      	movs	r2, #0
 8001106:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001108:	4b09      	ldr	r3, [pc, #36]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 800110a:	220c      	movs	r2, #12
 800110c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800110e:	4b08      	ldr	r3, [pc, #32]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 8001110:	2200      	movs	r2, #0
 8001112:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001114:	4b06      	ldr	r3, [pc, #24]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 8001116:	2200      	movs	r2, #0
 8001118:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800111a:	4805      	ldr	r0, [pc, #20]	@ (8001130 <MX_USART1_UART_Init+0x4c>)
 800111c:	f004 fe54 	bl	8005dc8 <HAL_UART_Init>
 8001120:	4603      	mov	r3, r0
 8001122:	2b00      	cmp	r3, #0
 8001124:	d001      	beq.n	800112a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001126:	f000 fb5b 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800112a:	bf00      	nop
 800112c:	bd80      	pop	{r7, pc}
 800112e:	bf00      	nop
 8001130:	20000634 	.word	0x20000634
 8001134:	40011000 	.word	0x40011000

08001138 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8001138:	b580      	push	{r7, lr}
 800113a:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 800113c:	4b11      	ldr	r3, [pc, #68]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800113e:	4a12      	ldr	r2, [pc, #72]	@ (8001188 <MX_USART3_UART_Init+0x50>)
 8001140:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 100000;
 8001142:	4b10      	ldr	r3, [pc, #64]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001144:	4a11      	ldr	r2, [pc, #68]	@ (800118c <MX_USART3_UART_Init+0x54>)
 8001146:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8001148:	4b0e      	ldr	r3, [pc, #56]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800114a:	2200      	movs	r2, #0
 800114c:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800114e:	4b0d      	ldr	r3, [pc, #52]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001150:	2200      	movs	r2, #0
 8001152:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_EVEN;
 8001154:	4b0b      	ldr	r3, [pc, #44]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001156:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800115a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800115c:	4b09      	ldr	r3, [pc, #36]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800115e:	220c      	movs	r2, #12
 8001160:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001162:	4b08      	ldr	r3, [pc, #32]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001164:	2200      	movs	r2, #0
 8001166:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001168:	4b06      	ldr	r3, [pc, #24]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 800116a:	2200      	movs	r2, #0
 800116c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800116e:	4805      	ldr	r0, [pc, #20]	@ (8001184 <MX_USART3_UART_Init+0x4c>)
 8001170:	f004 fe2a 	bl	8005dc8 <HAL_UART_Init>
 8001174:	4603      	mov	r3, r0
 8001176:	2b00      	cmp	r3, #0
 8001178:	d001      	beq.n	800117e <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800117a:	f000 fb31 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800117e:	bf00      	nop
 8001180:	bd80      	pop	{r7, pc}
 8001182:	bf00      	nop
 8001184:	2000067c 	.word	0x2000067c
 8001188:	40004800 	.word	0x40004800
 800118c:	000186a0 	.word	0x000186a0

08001190 <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8001190:	b580      	push	{r7, lr}
 8001192:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8001194:	4b11      	ldr	r3, [pc, #68]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 8001196:	4a12      	ldr	r2, [pc, #72]	@ (80011e0 <MX_USART6_UART_Init+0x50>)
 8001198:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 115200;
 800119a:	4b10      	ldr	r3, [pc, #64]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 800119c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80011a0:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 80011a2:	4b0e      	ldr	r3, [pc, #56]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011a4:	2200      	movs	r2, #0
 80011a6:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 80011a8:	4b0c      	ldr	r3, [pc, #48]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011aa:	2200      	movs	r2, #0
 80011ac:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 80011ae:	4b0b      	ldr	r3, [pc, #44]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011b0:	2200      	movs	r2, #0
 80011b2:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 80011b4:	4b09      	ldr	r3, [pc, #36]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011b6:	220c      	movs	r2, #12
 80011b8:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80011ba:	4b08      	ldr	r3, [pc, #32]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011bc:	2200      	movs	r2, #0
 80011be:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 80011c0:	4b06      	ldr	r3, [pc, #24]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011c2:	2200      	movs	r2, #0
 80011c4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart6) != HAL_OK)
 80011c6:	4805      	ldr	r0, [pc, #20]	@ (80011dc <MX_USART6_UART_Init+0x4c>)
 80011c8:	f004 fdfe 	bl	8005dc8 <HAL_UART_Init>
 80011cc:	4603      	mov	r3, r0
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	d001      	beq.n	80011d6 <MX_USART6_UART_Init+0x46>
  {
    Error_Handler();
 80011d2:	f000 fb05 	bl	80017e0 <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 80011d6:	bf00      	nop
 80011d8:	bd80      	pop	{r7, pc}
 80011da:	bf00      	nop
 80011dc:	200006c4 	.word	0x200006c4
 80011e0:	40011400 	.word	0x40011400

080011e4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80011e4:	b580      	push	{r7, lr}
 80011e6:	b082      	sub	sp, #8
 80011e8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80011ea:	2300      	movs	r3, #0
 80011ec:	607b      	str	r3, [r7, #4]
 80011ee:	4b2f      	ldr	r3, [pc, #188]	@ (80012ac <MX_DMA_Init+0xc8>)
 80011f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011f2:	4a2e      	ldr	r2, [pc, #184]	@ (80012ac <MX_DMA_Init+0xc8>)
 80011f4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80011f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80011fa:	4b2c      	ldr	r3, [pc, #176]	@ (80012ac <MX_DMA_Init+0xc8>)
 80011fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011fe:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001202:	607b      	str	r3, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001206:	2300      	movs	r3, #0
 8001208:	603b      	str	r3, [r7, #0]
 800120a:	4b28      	ldr	r3, [pc, #160]	@ (80012ac <MX_DMA_Init+0xc8>)
 800120c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800120e:	4a27      	ldr	r2, [pc, #156]	@ (80012ac <MX_DMA_Init+0xc8>)
 8001210:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001214:	6313      	str	r3, [r2, #48]	@ 0x30
 8001216:	4b25      	ldr	r3, [pc, #148]	@ (80012ac <MX_DMA_Init+0xc8>)
 8001218:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800121a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800121e:	603b      	str	r3, [r7, #0]
 8001220:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 8001222:	2200      	movs	r2, #0
 8001224:	2105      	movs	r1, #5
 8001226:	200c      	movs	r0, #12
 8001228:	f002 f9a3 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 800122c:	200c      	movs	r0, #12
 800122e:	f002 f9bc 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 5, 0);
 8001232:	2200      	movs	r2, #0
 8001234:	2105      	movs	r1, #5
 8001236:	202f      	movs	r0, #47	@ 0x2f
 8001238:	f002 f99b 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 800123c:	202f      	movs	r0, #47	@ 0x2f
 800123e:	f002 f9b4 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8001242:	2200      	movs	r2, #0
 8001244:	2105      	movs	r1, #5
 8001246:	2039      	movs	r0, #57	@ 0x39
 8001248:	f002 f993 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 800124c:	2039      	movs	r0, #57	@ 0x39
 800124e:	f002 f9ac 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 8001252:	2200      	movs	r2, #0
 8001254:	2105      	movs	r1, #5
 8001256:	203a      	movs	r0, #58	@ 0x3a
 8001258:	f002 f98b 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 800125c:	203a      	movs	r0, #58	@ 0x3a
 800125e:	f002 f9a4 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 8001262:	2200      	movs	r2, #0
 8001264:	2105      	movs	r1, #5
 8001266:	203b      	movs	r0, #59	@ 0x3b
 8001268:	f002 f983 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 800126c:	203b      	movs	r0, #59	@ 0x3b
 800126e:	f002 f99c 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream5_IRQn, 5, 0);
 8001272:	2200      	movs	r2, #0
 8001274:	2105      	movs	r1, #5
 8001276:	2044      	movs	r0, #68	@ 0x44
 8001278:	f002 f97b 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream5_IRQn);
 800127c:	2044      	movs	r0, #68	@ 0x44
 800127e:	f002 f994 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 5, 0);
 8001282:	2200      	movs	r2, #0
 8001284:	2105      	movs	r1, #5
 8001286:	2045      	movs	r0, #69	@ 0x45
 8001288:	f002 f973 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 800128c:	2045      	movs	r0, #69	@ 0x45
 800128e:	f002 f98c 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 8001292:	2200      	movs	r2, #0
 8001294:	2105      	movs	r1, #5
 8001296:	2046      	movs	r0, #70	@ 0x46
 8001298:	f002 f96b 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 800129c:	2046      	movs	r0, #70	@ 0x46
 800129e:	f002 f984 	bl	80035aa <HAL_NVIC_EnableIRQ>

}
 80012a2:	bf00      	nop
 80012a4:	3708      	adds	r7, #8
 80012a6:	46bd      	mov	sp, r7
 80012a8:	bd80      	pop	{r7, pc}
 80012aa:	bf00      	nop
 80012ac:	40023800 	.word	0x40023800

080012b0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	b08e      	sub	sp, #56	@ 0x38
 80012b4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012b6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80012ba:	2200      	movs	r2, #0
 80012bc:	601a      	str	r2, [r3, #0]
 80012be:	605a      	str	r2, [r3, #4]
 80012c0:	609a      	str	r2, [r3, #8]
 80012c2:	60da      	str	r2, [r3, #12]
 80012c4:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80012c6:	2300      	movs	r3, #0
 80012c8:	623b      	str	r3, [r7, #32]
 80012ca:	4b77      	ldr	r3, [pc, #476]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012ce:	4a76      	ldr	r2, [pc, #472]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012d0:	f043 0302 	orr.w	r3, r3, #2
 80012d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80012d6:	4b74      	ldr	r3, [pc, #464]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012da:	f003 0302 	and.w	r3, r3, #2
 80012de:	623b      	str	r3, [r7, #32]
 80012e0:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80012e2:	2300      	movs	r3, #0
 80012e4:	61fb      	str	r3, [r7, #28]
 80012e6:	4b70      	ldr	r3, [pc, #448]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012ea:	4a6f      	ldr	r2, [pc, #444]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80012f2:	4b6d      	ldr	r3, [pc, #436]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80012f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80012fa:	61fb      	str	r3, [r7, #28]
 80012fc:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012fe:	2300      	movs	r3, #0
 8001300:	61bb      	str	r3, [r7, #24]
 8001302:	4b69      	ldr	r3, [pc, #420]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001304:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001306:	4a68      	ldr	r2, [pc, #416]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001308:	f043 0301 	orr.w	r3, r3, #1
 800130c:	6313      	str	r3, [r2, #48]	@ 0x30
 800130e:	4b66      	ldr	r3, [pc, #408]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001312:	f003 0301 	and.w	r3, r3, #1
 8001316:	61bb      	str	r3, [r7, #24]
 8001318:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800131a:	2300      	movs	r3, #0
 800131c:	617b      	str	r3, [r7, #20]
 800131e:	4b62      	ldr	r3, [pc, #392]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001320:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001322:	4a61      	ldr	r2, [pc, #388]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001324:	f043 0308 	orr.w	r3, r3, #8
 8001328:	6313      	str	r3, [r2, #48]	@ 0x30
 800132a:	4b5f      	ldr	r3, [pc, #380]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800132c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800132e:	f003 0308 	and.w	r3, r3, #8
 8001332:	617b      	str	r3, [r7, #20]
 8001334:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001336:	2300      	movs	r3, #0
 8001338:	613b      	str	r3, [r7, #16]
 800133a:	4b5b      	ldr	r3, [pc, #364]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800133c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800133e:	4a5a      	ldr	r2, [pc, #360]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001340:	f043 0304 	orr.w	r3, r3, #4
 8001344:	6313      	str	r3, [r2, #48]	@ 0x30
 8001346:	4b58      	ldr	r3, [pc, #352]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800134a:	f003 0304 	and.w	r3, r3, #4
 800134e:	613b      	str	r3, [r7, #16]
 8001350:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001352:	2300      	movs	r3, #0
 8001354:	60fb      	str	r3, [r7, #12]
 8001356:	4b54      	ldr	r3, [pc, #336]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001358:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800135a:	4a53      	ldr	r2, [pc, #332]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800135c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001360:	6313      	str	r3, [r2, #48]	@ 0x30
 8001362:	4b51      	ldr	r3, [pc, #324]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001364:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001366:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800136a:	60fb      	str	r3, [r7, #12]
 800136c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800136e:	2300      	movs	r3, #0
 8001370:	60bb      	str	r3, [r7, #8]
 8001372:	4b4d      	ldr	r3, [pc, #308]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001374:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001376:	4a4c      	ldr	r2, [pc, #304]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001378:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800137c:	6313      	str	r3, [r2, #48]	@ 0x30
 800137e:	4b4a      	ldr	r3, [pc, #296]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001380:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001382:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001386:	60bb      	str	r3, [r7, #8]
 8001388:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800138a:	2300      	movs	r3, #0
 800138c:	607b      	str	r3, [r7, #4]
 800138e:	4b46      	ldr	r3, [pc, #280]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001390:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001392:	4a45      	ldr	r2, [pc, #276]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 8001394:	f043 0320 	orr.w	r3, r3, #32
 8001398:	6313      	str	r3, [r2, #48]	@ 0x30
 800139a:	4b43      	ldr	r3, [pc, #268]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 800139c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800139e:	f003 0320 	and.w	r3, r3, #32
 80013a2:	607b      	str	r3, [r7, #4]
 80013a4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013a6:	2300      	movs	r3, #0
 80013a8:	603b      	str	r3, [r7, #0]
 80013aa:	4b3f      	ldr	r3, [pc, #252]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80013ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ae:	4a3e      	ldr	r2, [pc, #248]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80013b0:	f043 0310 	orr.w	r3, r3, #16
 80013b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80013b6:	4b3c      	ldr	r3, [pc, #240]	@ (80014a8 <MX_GPIO_Init+0x1f8>)
 80013b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ba:	f003 0310 	and.w	r3, r3, #16
 80013be:	603b      	str	r3, [r7, #0]
 80013c0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_6, GPIO_PIN_RESET);
 80013c2:	2200      	movs	r2, #0
 80013c4:	2140      	movs	r1, #64	@ 0x40
 80013c6:	4839      	ldr	r0, [pc, #228]	@ (80014ac <MX_GPIO_Init+0x1fc>)
 80013c8:	f002 fec0 	bl	800414c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 80013cc:	2200      	movs	r2, #0
 80013ce:	2110      	movs	r1, #16
 80013d0:	4837      	ldr	r0, [pc, #220]	@ (80014b0 <MX_GPIO_Init+0x200>)
 80013d2:	f002 febb 	bl	800414c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 80013d6:	2200      	movs	r2, #0
 80013d8:	2101      	movs	r1, #1
 80013da:	4836      	ldr	r0, [pc, #216]	@ (80014b4 <MX_GPIO_Init+0x204>)
 80013dc:	f002 feb6 	bl	800414c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PG6 */
  GPIO_InitStruct.Pin = GPIO_PIN_6;
 80013e0:	2340      	movs	r3, #64	@ 0x40
 80013e2:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013e4:	2301      	movs	r3, #1
 80013e6:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013e8:	2300      	movs	r3, #0
 80013ea:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013ec:	2300      	movs	r3, #0
 80013ee:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80013f0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80013f4:	4619      	mov	r1, r3
 80013f6:	482d      	ldr	r0, [pc, #180]	@ (80014ac <MX_GPIO_Init+0x1fc>)
 80013f8:	f002 fcf4 	bl	8003de4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PG3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80013fc:	2308      	movs	r3, #8
 80013fe:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001400:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001404:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001406:	2300      	movs	r3, #0
 8001408:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800140a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800140e:	4619      	mov	r1, r3
 8001410:	4826      	ldr	r0, [pc, #152]	@ (80014ac <MX_GPIO_Init+0x1fc>)
 8001412:	f002 fce7 	bl	8003de4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001416:	2301      	movs	r3, #1
 8001418:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800141a:	2300      	movs	r3, #0
 800141c:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800141e:	2300      	movs	r3, #0
 8001420:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001422:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001426:	4619      	mov	r1, r3
 8001428:	4821      	ldr	r0, [pc, #132]	@ (80014b0 <MX_GPIO_Init+0x200>)
 800142a:	f002 fcdb 	bl	8003de4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 800142e:	2310      	movs	r3, #16
 8001430:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001432:	2301      	movs	r3, #1
 8001434:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001436:	2300      	movs	r3, #0
 8001438:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800143a:	2300      	movs	r3, #0
 800143c:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800143e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001442:	4619      	mov	r1, r3
 8001444:	481a      	ldr	r0, [pc, #104]	@ (80014b0 <MX_GPIO_Init+0x200>)
 8001446:	f002 fccd 	bl	8003de4 <HAL_GPIO_Init>

  /*Configure GPIO pins : INT1_ACCEL_Pin_Pin INT1_GRYO_Pin_Pin */
  GPIO_InitStruct.Pin = INT1_ACCEL_Pin_Pin|INT1_GRYO_Pin_Pin;
 800144a:	2330      	movs	r3, #48	@ 0x30
 800144c:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800144e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001452:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001454:	2300      	movs	r3, #0
 8001456:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001458:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800145c:	4619      	mov	r1, r3
 800145e:	4816      	ldr	r0, [pc, #88]	@ (80014b8 <MX_GPIO_Init+0x208>)
 8001460:	f002 fcc0 	bl	8003de4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001464:	2301      	movs	r3, #1
 8001466:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001468:	2301      	movs	r3, #1
 800146a:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800146c:	2300      	movs	r3, #0
 800146e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001470:	2300      	movs	r3, #0
 8001472:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001474:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001478:	4619      	mov	r1, r3
 800147a:	480e      	ldr	r0, [pc, #56]	@ (80014b4 <MX_GPIO_Init+0x204>)
 800147c:	f002 fcb2 	bl	8003de4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001480:	2200      	movs	r2, #0
 8001482:	2105      	movs	r1, #5
 8001484:	2009      	movs	r0, #9
 8001486:	f002 f874 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800148a:	2009      	movs	r0, #9
 800148c:	f002 f88d 	bl	80035aa <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 8001490:	2200      	movs	r2, #0
 8001492:	2105      	movs	r1, #5
 8001494:	200a      	movs	r0, #10
 8001496:	f002 f86c 	bl	8003572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 800149a:	200a      	movs	r0, #10
 800149c:	f002 f885 	bl	80035aa <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80014a0:	bf00      	nop
 80014a2:	3738      	adds	r7, #56	@ 0x38
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bd80      	pop	{r7, pc}
 80014a8:	40023800 	.word	0x40023800
 80014ac:	40021800 	.word	0x40021800
 80014b0:	40020000 	.word	0x40020000
 80014b4:	40020400 	.word	0x40020400
 80014b8:	40020800 	.word	0x40020800

080014bc <TaskMain>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_TaskMain */
void TaskMain(void *argument)
{
 80014bc:	b580      	push	{r7, lr}
 80014be:	b082      	sub	sp, #8
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
  osDelay(1);
 80014c4:	2001      	movs	r0, #1
 80014c6:	f005 fec9 	bl	800725c <osDelay>
 80014ca:	e7fb      	b.n	80014c4 <TaskMain+0x8>

080014cc <TaskChassis>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_TaskChassis */
void TaskChassis(void *argument)
{
 80014cc:	b580      	push	{r7, lr}
 80014ce:	b08e      	sub	sp, #56	@ 0x38
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]
  HAL_TIM_Base_Start(&htim1);
  HAL_TIM_Base_Start(&htim4);
  HAL_TIM_Base_Start(&htim5);
  HAL_TIM_Base_Start(&htim8);
  */
  PWMInit(&htim1, &htim4, &htim5, &htim8);
 80014d4:	4bb5      	ldr	r3, [pc, #724]	@ (80017ac <TaskChassis+0x2e0>)
 80014d6:	4ab6      	ldr	r2, [pc, #728]	@ (80017b0 <TaskChassis+0x2e4>)
 80014d8:	49b6      	ldr	r1, [pc, #728]	@ (80017b4 <TaskChassis+0x2e8>)
 80014da:	48b7      	ldr	r0, [pc, #732]	@ (80017b8 <TaskChassis+0x2ec>)
 80014dc:	f000 f986 	bl	80017ec <PWMInit>


  int16_t speedOfPulse = 100;
 80014e0:	2364      	movs	r3, #100	@ 0x64
 80014e2:	847b      	strh	r3, [r7, #34]	@ 0x22
  int16_t negativeComponent = speedOfPulse*(-0.5f);
 80014e4:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	@ 0x22
 80014e8:	ee07 3a90 	vmov	s15, r3
 80014ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014f0:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 80014f4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80014fc:	ee17 3a90 	vmov	r3, s15
 8001500:	843b      	strh	r3, [r7, #32]
  float FancyLEDscaler = (1/(float)speedOfPulse);
 8001502:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	@ 0x22
 8001506:	ee07 3a90 	vmov	s15, r3
 800150a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800150e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001512:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001516:	edc7 7a07 	vstr	s15, [r7, #28]

  int8_t iSwapper = 0;
 800151a:	2300      	movs	r3, #0
 800151c:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
  int16_t iVal = negativeComponent;
 8001520:	8c3b      	ldrh	r3, [r7, #32]
 8001522:	86bb      	strh	r3, [r7, #52]	@ 0x34
  int8_t iSwapper1 = 0;
 8001524:	2300      	movs	r3, #0
 8001526:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
  int16_t iVal1 = negativeComponent*-1;
 800152a:	8c3b      	ldrh	r3, [r7, #32]
 800152c:	425b      	negs	r3, r3
 800152e:	b29b      	uxth	r3, r3
 8001530:	863b      	strh	r3, [r7, #48]	@ 0x30
  int8_t iSwapper2 = 1;
 8001532:	2301      	movs	r3, #1
 8001534:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  int16_t iVal2 = negativeComponent*-1;
 8001538:	8c3b      	ldrh	r3, [r7, #32]
 800153a:	425b      	negs	r3, r3
 800153c:	b29b      	uxth	r3, r3
 800153e:	85bb      	strh	r3, [r7, #44]	@ 0x2c

  int16_t MotorCycle = 400;
 8001540:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8001544:	857b      	strh	r3, [r7, #42]	@ 0x2a
  */
  // int8_t iSwapper3 = 1;
  // int16_t buzzerVal = 0;
  // int8_t swapper = 0;

  int16_t servoPosition = 1200;
 8001546:	f44f 6396 	mov.w	r3, #1200	@ 0x4b0
 800154a:	837b      	strh	r3, [r7, #26]
	*/
	// PWMOutput(Buzzer, 1, NeverGonnaGiveYouUpNotes());
	// PWMOutput(Buzzer, 1, CaliforniaGirlsNotes());
	// PWMOutput(Buzzer, 1, HampsterNotes());
	// PWMOutput(Buzzer, 1, 100);
	if (iVal > speedOfPulse) {
 800154c:	f9b7 2034 	ldrsh.w	r2, [r7, #52]	@ 0x34
 8001550:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	@ 0x22
 8001554:	429a      	cmp	r2, r3
 8001556:	dd07      	ble.n	8001568 <TaskChassis+0x9c>
		iVal = speedOfPulse-1;
 8001558:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800155a:	3b01      	subs	r3, #1
 800155c:	b29b      	uxth	r3, r3
 800155e:	86bb      	strh	r3, [r7, #52]	@ 0x34
		iSwapper = 1;
 8001560:	2301      	movs	r3, #1
 8001562:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8001566:	e00c      	b.n	8001582 <TaskChassis+0xb6>
	} else if (iVal < negativeComponent) {
 8001568:	f9b7 2034 	ldrsh.w	r2, [r7, #52]	@ 0x34
 800156c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 8001570:	429a      	cmp	r2, r3
 8001572:	da06      	bge.n	8001582 <TaskChassis+0xb6>
		iVal = negativeComponent+1;
 8001574:	8c3b      	ldrh	r3, [r7, #32]
 8001576:	3301      	adds	r3, #1
 8001578:	b29b      	uxth	r3, r3
 800157a:	86bb      	strh	r3, [r7, #52]	@ 0x34
		iSwapper = 0;
 800157c:	2300      	movs	r3, #0
 800157e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
	}
	if (iSwapper == 1) {
 8001582:	f997 3037 	ldrsb.w	r3, [r7, #55]	@ 0x37
 8001586:	2b01      	cmp	r3, #1
 8001588:	d106      	bne.n	8001598 <TaskChassis+0xcc>
		iVal--;
 800158a:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	@ 0x34
 800158e:	b29b      	uxth	r3, r3
 8001590:	3b01      	subs	r3, #1
 8001592:	b29b      	uxth	r3, r3
 8001594:	86bb      	strh	r3, [r7, #52]	@ 0x34
 8001596:	e005      	b.n	80015a4 <TaskChassis+0xd8>
	} else {
		iVal++;
 8001598:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	@ 0x34
 800159c:	b29b      	uxth	r3, r3
 800159e:	3301      	adds	r3, #1
 80015a0:	b29b      	uxth	r3, r3
 80015a2:	86bb      	strh	r3, [r7, #52]	@ 0x34
	}


	if (iVal1 > speedOfPulse) {
 80015a4:	f9b7 2030 	ldrsh.w	r2, [r7, #48]	@ 0x30
 80015a8:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	@ 0x22
 80015ac:	429a      	cmp	r2, r3
 80015ae:	dd07      	ble.n	80015c0 <TaskChassis+0xf4>
		iVal1 = speedOfPulse-1;
 80015b0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80015b2:	3b01      	subs	r3, #1
 80015b4:	b29b      	uxth	r3, r3
 80015b6:	863b      	strh	r3, [r7, #48]	@ 0x30
		iSwapper1 = 1;
 80015b8:	2301      	movs	r3, #1
 80015ba:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 80015be:	e00c      	b.n	80015da <TaskChassis+0x10e>
	} else if (iVal1 < negativeComponent) {
 80015c0:	f9b7 2030 	ldrsh.w	r2, [r7, #48]	@ 0x30
 80015c4:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 80015c8:	429a      	cmp	r2, r3
 80015ca:	da06      	bge.n	80015da <TaskChassis+0x10e>
		iVal1 = negativeComponent+1;
 80015cc:	8c3b      	ldrh	r3, [r7, #32]
 80015ce:	3301      	adds	r3, #1
 80015d0:	b29b      	uxth	r3, r3
 80015d2:	863b      	strh	r3, [r7, #48]	@ 0x30
		iSwapper1 = 0;
 80015d4:	2300      	movs	r3, #0
 80015d6:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
	}
	if (iSwapper1 == 1) {
 80015da:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 80015de:	2b01      	cmp	r3, #1
 80015e0:	d106      	bne.n	80015f0 <TaskChassis+0x124>
		iVal1--;
 80015e2:	f9b7 3030 	ldrsh.w	r3, [r7, #48]	@ 0x30
 80015e6:	b29b      	uxth	r3, r3
 80015e8:	3b01      	subs	r3, #1
 80015ea:	b29b      	uxth	r3, r3
 80015ec:	863b      	strh	r3, [r7, #48]	@ 0x30
 80015ee:	e005      	b.n	80015fc <TaskChassis+0x130>
	} else {
		iVal1++;
 80015f0:	f9b7 3030 	ldrsh.w	r3, [r7, #48]	@ 0x30
 80015f4:	b29b      	uxth	r3, r3
 80015f6:	3301      	adds	r3, #1
 80015f8:	b29b      	uxth	r3, r3
 80015fa:	863b      	strh	r3, [r7, #48]	@ 0x30
	}


	if (iVal2 > speedOfPulse) {
 80015fc:	f9b7 202c 	ldrsh.w	r2, [r7, #44]	@ 0x2c
 8001600:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	@ 0x22
 8001604:	429a      	cmp	r2, r3
 8001606:	dd07      	ble.n	8001618 <TaskChassis+0x14c>
		iVal2 = speedOfPulse-1;
 8001608:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800160a:	3b01      	subs	r3, #1
 800160c:	b29b      	uxth	r3, r3
 800160e:	85bb      	strh	r3, [r7, #44]	@ 0x2c
		iSwapper2 = 1;
 8001610:	2301      	movs	r3, #1
 8001612:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8001616:	e00c      	b.n	8001632 <TaskChassis+0x166>
	} else if (iVal2 < negativeComponent) {
 8001618:	f9b7 202c 	ldrsh.w	r2, [r7, #44]	@ 0x2c
 800161c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 8001620:	429a      	cmp	r2, r3
 8001622:	da06      	bge.n	8001632 <TaskChassis+0x166>
		iVal2 = negativeComponent+1;
 8001624:	8c3b      	ldrh	r3, [r7, #32]
 8001626:	3301      	adds	r3, #1
 8001628:	b29b      	uxth	r3, r3
 800162a:	85bb      	strh	r3, [r7, #44]	@ 0x2c
		iSwapper2 = 0;
 800162c:	2300      	movs	r3, #0
 800162e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	}
	if (iSwapper2 == 1) {
 8001632:	f997 302f 	ldrsb.w	r3, [r7, #47]	@ 0x2f
 8001636:	2b01      	cmp	r3, #1
 8001638:	d106      	bne.n	8001648 <TaskChassis+0x17c>
		iVal2--;
 800163a:	f9b7 302c 	ldrsh.w	r3, [r7, #44]	@ 0x2c
 800163e:	b29b      	uxth	r3, r3
 8001640:	3b01      	subs	r3, #1
 8001642:	b29b      	uxth	r3, r3
 8001644:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 8001646:	e005      	b.n	8001654 <TaskChassis+0x188>
	} else {
		iVal2++;
 8001648:	f9b7 302c 	ldrsh.w	r3, [r7, #44]	@ 0x2c
 800164c:	b29b      	uxth	r3, r3
 800164e:	3301      	adds	r3, #1
 8001650:	b29b      	uxth	r3, r3
 8001652:	85bb      	strh	r3, [r7, #44]	@ 0x2c
	}

	int16_t Val = iVal;
 8001654:	8ebb      	ldrh	r3, [r7, #52]	@ 0x34
 8001656:	853b      	strh	r3, [r7, #40]	@ 0x28
	if (iVal < 0) {
 8001658:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	@ 0x34
 800165c:	2b00      	cmp	r3, #0
 800165e:	da01      	bge.n	8001664 <TaskChassis+0x198>
		Val = 0;
 8001660:	2300      	movs	r3, #0
 8001662:	853b      	strh	r3, [r7, #40]	@ 0x28
	}
	int16_t Val1 = iVal1;
 8001664:	8e3b      	ldrh	r3, [r7, #48]	@ 0x30
 8001666:	84fb      	strh	r3, [r7, #38]	@ 0x26
	if (iVal1 < 0) {
 8001668:	f9b7 3030 	ldrsh.w	r3, [r7, #48]	@ 0x30
 800166c:	2b00      	cmp	r3, #0
 800166e:	da01      	bge.n	8001674 <TaskChassis+0x1a8>
		Val1 = 0;
 8001670:	2300      	movs	r3, #0
 8001672:	84fb      	strh	r3, [r7, #38]	@ 0x26
	}
	int16_t Val2 = iVal2;
 8001674:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8001676:	84bb      	strh	r3, [r7, #36]	@ 0x24
	if (iVal2 < 0) {
 8001678:	f9b7 302c 	ldrsh.w	r3, [r7, #44]	@ 0x2c
 800167c:	2b00      	cmp	r3, #0
 800167e:	da01      	bge.n	8001684 <TaskChassis+0x1b8>
		Val2 = 0;
 8001680:	2300      	movs	r3, #0
 8001682:	84bb      	strh	r3, [r7, #36]	@ 0x24
	}



	float realVal = Val * FancyLEDscaler;
 8001684:	f9b7 3028 	ldrsh.w	r3, [r7, #40]	@ 0x28
 8001688:	ee07 3a90 	vmov	s15, r3
 800168c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001690:	ed97 7a07 	vldr	s14, [r7, #28]
 8001694:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001698:	edc7 7a05 	vstr	s15, [r7, #20]
	float realVal1 = Val1 * FancyLEDscaler;
 800169c:	f9b7 3026 	ldrsh.w	r3, [r7, #38]	@ 0x26
 80016a0:	ee07 3a90 	vmov	s15, r3
 80016a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016a8:	ed97 7a07 	vldr	s14, [r7, #28]
 80016ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80016b0:	edc7 7a04 	vstr	s15, [r7, #16]
	float realVal2 = Val2 * FancyLEDscaler;
 80016b4:	f9b7 3024 	ldrsh.w	r3, [r7, #36]	@ 0x24
 80016b8:	ee07 3a90 	vmov	s15, r3
 80016bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016c0:	ed97 7a07 	vldr	s14, [r7, #28]
 80016c4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80016c8:	edc7 7a03 	vstr	s15, [r7, #12]

	// usart_printf("%d\r\n", iVal);
	// (TypesThatUsePWM_t Type, int8_t Position, int16_t desiredFrequency)

	int8_t KEY = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 80016cc:	2101      	movs	r1, #1
 80016ce:	483b      	ldr	r0, [pc, #236]	@ (80017bc <TaskChassis+0x2f0>)
 80016d0:	f002 fd24 	bl	800411c <HAL_GPIO_ReadPin>
 80016d4:	4603      	mov	r3, r0
 80016d6:	72fb      	strb	r3, [r7, #11]
	if (MotorCycle > 1650) {
 80016d8:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 80016dc:	f240 6272 	movw	r2, #1650	@ 0x672
 80016e0:	4293      	cmp	r3, r2
 80016e2:	dd03      	ble.n	80016ec <TaskChassis+0x220>
		MotorCycle = 1650;
 80016e4:	f240 6372 	movw	r3, #1650	@ 0x672
 80016e8:	857b      	strh	r3, [r7, #42]	@ 0x2a
 80016ea:	e008      	b.n	80016fe <TaskChassis+0x232>

	} else if (MotorCycle < 950) {
 80016ec:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 80016f0:	f240 32b5 	movw	r2, #949	@ 0x3b5
 80016f4:	4293      	cmp	r3, r2
 80016f6:	dc02      	bgt.n	80016fe <TaskChassis+0x232>
		MotorCycle = 950;
 80016f8:	f240 33b6 	movw	r3, #950	@ 0x3b6
 80016fc:	857b      	strh	r3, [r7, #42]	@ 0x2a
	}


	if (KEY == 1) {
 80016fe:	f997 300b 	ldrsb.w	r3, [r7, #11]
 8001702:	2b01      	cmp	r3, #1
 8001704:	d107      	bne.n	8001716 <TaskChassis+0x24a>
		MotorCycle = MotorCycle - 6;
 8001706:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001708:	3b06      	subs	r3, #6
 800170a:	b29b      	uxth	r3, r3
 800170c:	857b      	strh	r3, [r7, #42]	@ 0x2a
		servoPosition = 1000;
 800170e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001712:	837b      	strh	r3, [r7, #26]
 8001714:	e008      	b.n	8001728 <TaskChassis+0x25c>
		// PWMOff(Buzzer, 1);

	} else {
		initializeCaliforniaGirls();
 8001716:	f000 fbe3 	bl	8001ee0 <initializeCaliforniaGirls>
		MotorCycle = MotorCycle + 6;
 800171a:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 800171c:	3306      	adds	r3, #6
 800171e:	b29b      	uxth	r3, r3
 8001720:	857b      	strh	r3, [r7, #42]	@ 0x2a
		servoPosition = 2500;
 8001722:	f640 13c4 	movw	r3, #2500	@ 0x9c4
 8001726:	837b      	strh	r3, [r7, #26]
	}
	// usart_printf("%d %d\r\n", KEY, MotorCycle);
	// usart_printf("%d %d %d  0\r\n", iVal, iVal1, iVal2);

	// htim4.Instance->CCR3=150;
	PWMOutput(LED, 3, 500);
 8001728:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800172c:	2103      	movs	r1, #3
 800172e:	2001      	movs	r0, #1
 8001730:	f000 fa92 	bl	8001c58 <PWMOutput>
	PWMOutput(LED, 2, 500);
 8001734:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001738:	2102      	movs	r1, #2
 800173a:	2001      	movs	r0, #1
 800173c:	f000 fa8c 	bl	8001c58 <PWMOutput>
	PWMOutput(LED, 1, 500);
 8001740:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001744:	2101      	movs	r1, #1
 8001746:	2001      	movs	r0, #1
 8001748:	f000 fa86 	bl	8001c58 <PWMOutput>
	//(htim1).Init.Period = 999;
	PWMOutput(Motor, 2 , 500);
 800174c:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001750:	2102      	movs	r1, #2
 8001752:	2000      	movs	r0, #0
 8001754:	f000 fa80 	bl	8001c58 <PWMOutput>

	//PWMOutput(Buzzer, 1, 90);
	// usart_printf("beanis7\r\n");

	// (TypesThatUsePWM_t Type, msOrFullRange microsecondOrFullrange, int8_t position, float val)
	PWMInitialize(LED, FR, 3, realVal2);
 8001758:	ed97 0a03 	vldr	s0, [r7, #12]
 800175c:	2203      	movs	r2, #3
 800175e:	2101      	movs	r1, #1
 8001760:	2001      	movs	r0, #1
 8001762:	f000 f961 	bl	8001a28 <PWMInitialize>
	PWMInitialize(LED, FR, 2, realVal);
 8001766:	ed97 0a05 	vldr	s0, [r7, #20]
 800176a:	2202      	movs	r2, #2
 800176c:	2101      	movs	r1, #1
 800176e:	2001      	movs	r0, #1
 8001770:	f000 f95a 	bl	8001a28 <PWMInitialize>
	PWMInitialize(LED, FR, 1, realVal1);
 8001774:	ed97 0a04 	vldr	s0, [r7, #16]
 8001778:	2201      	movs	r2, #1
 800177a:	2101      	movs	r1, #1
 800177c:	2001      	movs	r0, #1
 800177e:	f000 f953 	bl	8001a28 <PWMInitialize>
	// (htim1).Instance->CCR1=499;

	// PWMInitialize(Motor, FR, 1, 0.5);
	PWMInitialize(Motor, MS, 2, MotorCycle);
 8001782:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 8001786:	ee07 3a90 	vmov	s15, r3
 800178a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800178e:	eeb0 0a67 	vmov.f32	s0, s15
 8001792:	2202      	movs	r2, #2
 8001794:	2100      	movs	r1, #0
 8001796:	2000      	movs	r0, #0
 8001798:	f000 f946 	bl	8001a28 <PWMInitialize>
	// (*tim5).Instance->CCR2=value;

	// htim5.Init.Period = 1000;

	// htim5.Instance->CCR2=400;
	mainPrint();
 800179c:	f000 fa8c 	bl	8001cb8 <mainPrint>

	PWMTimerStarter();
 80017a0:	f000 fa92 	bl	8001cc8 <PWMTimerStarter>

    osDelay(10);
 80017a4:	200a      	movs	r0, #10
 80017a6:	f005 fd59 	bl	800725c <osDelay>
  {
 80017aa:	e6cf      	b.n	800154c <TaskChassis+0x80>
 80017ac:	20000484 	.word	0x20000484
 80017b0:	2000043c 	.word	0x2000043c
 80017b4:	200003f4 	.word	0x200003f4
 80017b8:	200003ac 	.word	0x200003ac
 80017bc:	40020000 	.word	0x40020000

080017c0 <imu_temp_control_task>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_imu_temp_control_task */
__weak void imu_temp_control_task(void *argument)
{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b082      	sub	sp, #8
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN imu_temp_control_task */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80017c8:	2001      	movs	r0, #1
 80017ca:	f005 fd47 	bl	800725c <osDelay>
 80017ce:	e7fb      	b.n	80017c8 <imu_temp_control_task+0x8>

080017d0 <TaskTurret>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_TaskTurret */
void TaskTurret(void *argument)
{
 80017d0:	b580      	push	{r7, lr}
 80017d2:	b082      	sub	sp, #8
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN TaskTurret */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80017d8:	2001      	movs	r0, #1
 80017da:	f005 fd3f 	bl	800725c <osDelay>
 80017de:	e7fb      	b.n	80017d8 <TaskTurret+0x8>

080017e0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017e0:	b480      	push	{r7}
 80017e2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80017e4:	b672      	cpsid	i
}
 80017e6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80017e8:	bf00      	nop
 80017ea:	e7fd      	b.n	80017e8 <Error_Handler+0x8>

080017ec <PWMInit>:
uint32_t period[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

// struct individualTracker PWMS[11];

// Initializes the variables in this library :<
void PWMInit (TIM_HandleTypeDef *t1, TIM_HandleTypeDef *t4, TIM_HandleTypeDef *t5, TIM_HandleTypeDef *t8) {
 80017ec:	b580      	push	{r7, lr}
 80017ee:	b084      	sub	sp, #16
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	60f8      	str	r0, [r7, #12]
 80017f4:	60b9      	str	r1, [r7, #8]
 80017f6:	607a      	str	r2, [r7, #4]
 80017f8:	603b      	str	r3, [r7, #0]
	tim1 = t1;
 80017fa:	4a12      	ldr	r2, [pc, #72]	@ (8001844 <PWMInit+0x58>)
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	6013      	str	r3, [r2, #0]
	tim4 = t4;
 8001800:	4a11      	ldr	r2, [pc, #68]	@ (8001848 <PWMInit+0x5c>)
 8001802:	68bb      	ldr	r3, [r7, #8]
 8001804:	6013      	str	r3, [r2, #0]
	tim5 = t5;
 8001806:	4a11      	ldr	r2, [pc, #68]	@ (800184c <PWMInit+0x60>)
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	6013      	str	r3, [r2, #0]
	tim8 = t8;
 800180c:	4a10      	ldr	r2, [pc, #64]	@ (8001850 <PWMInit+0x64>)
 800180e:	683b      	ldr	r3, [r7, #0]
 8001810:	6013      	str	r3, [r2, #0]
	HAL_TIM_Base_Start(tim1);
 8001812:	4b0c      	ldr	r3, [pc, #48]	@ (8001844 <PWMInit+0x58>)
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	4618      	mov	r0, r3
 8001818:	f003 fb72 	bl	8004f00 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(tim4);
 800181c:	4b0a      	ldr	r3, [pc, #40]	@ (8001848 <PWMInit+0x5c>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	4618      	mov	r0, r3
 8001822:	f003 fb6d 	bl	8004f00 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(tim5);
 8001826:	4b09      	ldr	r3, [pc, #36]	@ (800184c <PWMInit+0x60>)
 8001828:	681b      	ldr	r3, [r3, #0]
 800182a:	4618      	mov	r0, r3
 800182c:	f003 fb68 	bl	8004f00 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(tim8);
 8001830:	4b07      	ldr	r3, [pc, #28]	@ (8001850 <PWMInit+0x64>)
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	4618      	mov	r0, r3
 8001836:	f003 fb63 	bl	8004f00 <HAL_TIM_Base_Start>
}
 800183a:	bf00      	nop
 800183c:	3710      	adds	r7, #16
 800183e:	46bd      	mov	sp, r7
 8001840:	bd80      	pop	{r7, pc}
 8001842:	bf00      	nop
 8001844:	200008fc 	.word	0x200008fc
 8001848:	20000900 	.word	0x20000900
 800184c:	20000904 	.word	0x20000904
 8001850:	20000908 	.word	0x20000908

08001854 <calculateOutputPeriodToGetFrequency>:

uint32_t calculateOutputPeriodToGetFrequency (TypesThatUsePWM_t Type, uint32_t desiredFrequency) {
 8001854:	b480      	push	{r7}
 8001856:	b085      	sub	sp, #20
 8001858:	af00      	add	r7, sp, #0
 800185a:	4603      	mov	r3, r0
 800185c:	6039      	str	r1, [r7, #0]
 800185e:	71fb      	strb	r3, [r7, #7]
	uint32_t finalVal = 0;
 8001860:	2300      	movs	r3, #0
 8001862:	60fb      	str	r3, [r7, #12]
	switch (Type) {
 8001864:	79fb      	ldrb	r3, [r7, #7]
 8001866:	2b02      	cmp	r3, #2
 8001868:	d02c      	beq.n	80018c4 <calculateOutputPeriodToGetFrequency+0x70>
 800186a:	2b02      	cmp	r3, #2
 800186c:	dc3d      	bgt.n	80018ea <calculateOutputPeriodToGetFrequency+0x96>
 800186e:	2b00      	cmp	r3, #0
 8001870:	d002      	beq.n	8001878 <calculateOutputPeriodToGetFrequency+0x24>
 8001872:	2b01      	cmp	r3, #1
 8001874:	d013      	beq.n	800189e <calculateOutputPeriodToGetFrequency+0x4a>
 8001876:	e038      	b.n	80018ea <calculateOutputPeriodToGetFrequency+0x96>
	case 0:
		finalVal = 1/(PWMPre*desiredFrequency);
 8001878:	683b      	ldr	r3, [r7, #0]
 800187a:	ee07 3a90 	vmov	s15, r3
 800187e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001882:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 80018f8 <calculateOutputPeriodToGetFrequency+0xa4>
 8001886:	ee27 7a87 	vmul.f32	s14, s15, s14
 800188a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800188e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001892:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001896:	ee17 3a90 	vmov	r3, s15
 800189a:	60fb      	str	r3, [r7, #12]
		// usart_printf("%d %d\r\n", desiredFrequency, finalVal);
		break;
 800189c:	e025      	b.n	80018ea <calculateOutputPeriodToGetFrequency+0x96>
	case 1:
		finalVal = 1/(LEDPre*desiredFrequency);
 800189e:	683b      	ldr	r3, [r7, #0]
 80018a0:	ee07 3a90 	vmov	s15, r3
 80018a4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018a8:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 80018fc <calculateOutputPeriodToGetFrequency+0xa8>
 80018ac:	ee27 7a87 	vmul.f32	s14, s15, s14
 80018b0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80018b4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018b8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80018bc:	ee17 3a90 	vmov	r3, s15
 80018c0:	60fb      	str	r3, [r7, #12]
		// usart_printf("%d %d\r\n", desiredFrequency, finalVal);
		break;
 80018c2:	e012      	b.n	80018ea <calculateOutputPeriodToGetFrequency+0x96>
	case 2:
		finalVal = 1/(buzzerPre*desiredFrequency);
 80018c4:	683b      	ldr	r3, [r7, #0]
 80018c6:	ee07 3a90 	vmov	s15, r3
 80018ca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018ce:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 80018fc <calculateOutputPeriodToGetFrequency+0xa8>
 80018d2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80018d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80018da:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018de:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80018e2:	ee17 3a90 	vmov	r3, s15
 80018e6:	60fb      	str	r3, [r7, #12]
		// usart_printf("%d %d\r\n", desiredFrequency, finalVal);
		break;
 80018e8:	bf00      	nop
	}

	return finalVal;
 80018ea:	68fb      	ldr	r3, [r7, #12]
}
 80018ec:	4618      	mov	r0, r3
 80018ee:	3714      	adds	r7, #20
 80018f0:	46bd      	mov	sp, r7
 80018f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f6:	4770      	bx	lr
 80018f8:	360637bd 	.word	0x360637bd
 80018fc:	358637bd 	.word	0x358637bd

08001900 <safeOutputPeriodValueCalculator>:

uint32_t safeOutputPeriodValueCalculator(int32_t maxVal, float ratioVal) {
 8001900:	b480      	push	{r7}
 8001902:	b085      	sub	sp, #20
 8001904:	af00      	add	r7, sp, #0
 8001906:	6078      	str	r0, [r7, #4]
 8001908:	ed87 0a00 	vstr	s0, [r7]
	// float val = (maxVal);
	// uint32_t val = maxVal;
	// uint32_t val = 500;

	uint32_t val1 = maxVal * ratioVal;// (uint32_t)val;
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	ee07 3a90 	vmov	s15, r3
 8001912:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001916:	edd7 7a00 	vldr	s15, [r7]
 800191a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800191e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001922:	ee17 3a90 	vmov	r3, s15
 8001926:	60fb      	str	r3, [r7, #12]

	if (val1 > (uint32_t)maxVal) {
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	68fa      	ldr	r2, [r7, #12]
 800192c:	429a      	cmp	r2, r3
 800192e:	d902      	bls.n	8001936 <safeOutputPeriodValueCalculator+0x36>
		val1 = (uint32_t)(maxVal);
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	60fb      	str	r3, [r7, #12]
 8001934:	e004      	b.n	8001940 <safeOutputPeriodValueCalculator+0x40>
	} else if (val1 < 1) {
 8001936:	68fb      	ldr	r3, [r7, #12]
 8001938:	2b00      	cmp	r3, #0
 800193a:	d101      	bne.n	8001940 <safeOutputPeriodValueCalculator+0x40>
		val1 = 1;
 800193c:	2301      	movs	r3, #1
 800193e:	60fb      	str	r3, [r7, #12]
	}

	// val1 = val1-1;
	return val1;
 8001940:	68fb      	ldr	r3, [r7, #12]

}
 8001942:	4618      	mov	r0, r3
 8001944:	3714      	adds	r7, #20
 8001946:	46bd      	mov	sp, r7
 8001948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800194c:	4770      	bx	lr
	...

08001950 <calculateOutputPeriodValue>:

uint32_t calculateOutputPeriodValue (TypesThatUsePWM_t Type, msOrFullRange microsecondOrFullrange, int8_t position, float val) {
 8001950:	b580      	push	{r7, lr}
 8001952:	b084      	sub	sp, #16
 8001954:	af00      	add	r7, sp, #0
 8001956:	4603      	mov	r3, r0
 8001958:	ed87 0a00 	vstr	s0, [r7]
 800195c:	71fb      	strb	r3, [r7, #7]
 800195e:	460b      	mov	r3, r1
 8001960:	71bb      	strb	r3, [r7, #6]
 8001962:	4613      	mov	r3, r2
 8001964:	717b      	strb	r3, [r7, #5]
	uint32_t returnVal = 0;
 8001966:	2300      	movs	r3, #0
 8001968:	60fb      	str	r3, [r7, #12]
	// usart_printf("beanis1 %d", position);
	switch (Type) {
 800196a:	79fb      	ldrb	r3, [r7, #7]
 800196c:	2b02      	cmp	r3, #2
 800196e:	d03c      	beq.n	80019ea <calculateOutputPeriodValue+0x9a>
 8001970:	2b02      	cmp	r3, #2
 8001972:	dc51      	bgt.n	8001a18 <calculateOutputPeriodValue+0xc8>
 8001974:	2b00      	cmp	r3, #0
 8001976:	d002      	beq.n	800197e <calculateOutputPeriodValue+0x2e>
 8001978:	2b01      	cmp	r3, #1
 800197a:	d01b      	beq.n	80019b4 <calculateOutputPeriodValue+0x64>
 800197c:	e04c      	b.n	8001a18 <calculateOutputPeriodValue+0xc8>
		case 0:
			if (microsecondOrFullrange == MS) {
 800197e:	79bb      	ldrb	r3, [r7, #6]
 8001980:	2b00      	cmp	r3, #0
 8001982:	d10a      	bne.n	800199a <calculateOutputPeriodValue+0x4a>
				returnVal = (uint32_t)(val)/PWMµsPre;
 8001984:	edd7 7a00 	vldr	s15, [r7]
 8001988:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800198c:	ee17 2a90 	vmov	r2, s15
 8001990:	2302      	movs	r3, #2
 8001992:	fbb2 f3f3 	udiv	r3, r2, r3
 8001996:	60fb      	str	r3, [r7, #12]
			} else {
				returnVal = safeOutputPeriodValueCalculator(period[position-1], val);
			}
			// usart_printf("beanis %d %d\r\n", returnVal, period[position-1]);
			// PWMS[position-1].period = returnVal;
			break;
 8001998:	e03e      	b.n	8001a18 <calculateOutputPeriodValue+0xc8>
				returnVal = safeOutputPeriodValueCalculator(period[position-1], val);
 800199a:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800199e:	3b01      	subs	r3, #1
 80019a0:	4a20      	ldr	r2, [pc, #128]	@ (8001a24 <calculateOutputPeriodValue+0xd4>)
 80019a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80019a6:	ed97 0a00 	vldr	s0, [r7]
 80019aa:	4618      	mov	r0, r3
 80019ac:	f7ff ffa8 	bl	8001900 <safeOutputPeriodValueCalculator>
 80019b0:	60f8      	str	r0, [r7, #12]
			break;
 80019b2:	e031      	b.n	8001a18 <calculateOutputPeriodValue+0xc8>
		case 1:
			if (microsecondOrFullrange == MS) {
 80019b4:	79bb      	ldrb	r3, [r7, #6]
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	d10a      	bne.n	80019d0 <calculateOutputPeriodValue+0x80>
				returnVal = (uint32_t)(val)/LEDµsPre;
 80019ba:	edd7 7a00 	vldr	s15, [r7]
 80019be:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019c2:	ee17 2a90 	vmov	r2, s15
 80019c6:	2301      	movs	r3, #1
 80019c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80019cc:	60fb      	str	r3, [r7, #12]
				returnVal = safeOutputPeriodValueCalculator(period[position+6], val);
			}
			// usart_printf("%d %d\r\n", returnVal, period[position+6]);
			// (int32_t)((float)(period[position+6]) * val)
			// PWMS[position+6].period = returnVal;
			break;
 80019ce:	e023      	b.n	8001a18 <calculateOutputPeriodValue+0xc8>
				returnVal = safeOutputPeriodValueCalculator(period[position+6], val);
 80019d0:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80019d4:	3306      	adds	r3, #6
 80019d6:	4a13      	ldr	r2, [pc, #76]	@ (8001a24 <calculateOutputPeriodValue+0xd4>)
 80019d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80019dc:	ed97 0a00 	vldr	s0, [r7]
 80019e0:	4618      	mov	r0, r3
 80019e2:	f7ff ff8d 	bl	8001900 <safeOutputPeriodValueCalculator>
 80019e6:	60f8      	str	r0, [r7, #12]
			break;
 80019e8:	e016      	b.n	8001a18 <calculateOutputPeriodValue+0xc8>
		case 2:
			if (microsecondOrFullrange == MS) {
 80019ea:	79bb      	ldrb	r3, [r7, #6]
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	d10a      	bne.n	8001a06 <calculateOutputPeriodValue+0xb6>
				returnVal = (uint32_t)(val)/buzzerµsPre;
 80019f0:	edd7 7a00 	vldr	s15, [r7]
 80019f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019f8:	ee17 2a90 	vmov	r2, s15
 80019fc:	2301      	movs	r3, #1
 80019fe:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a02:	60fb      	str	r3, [r7, #12]
			} else {
				returnVal = safeOutputPeriodValueCalculator(period[10], val);
			}
			// PWMS[10].period = returnVal;
			// usart_printf("%d %d\r\n", returnVal, period[10]);
			break;
 8001a04:	e007      	b.n	8001a16 <calculateOutputPeriodValue+0xc6>
				returnVal = safeOutputPeriodValueCalculator(period[10], val);
 8001a06:	4b07      	ldr	r3, [pc, #28]	@ (8001a24 <calculateOutputPeriodValue+0xd4>)
 8001a08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001a0a:	ed97 0a00 	vldr	s0, [r7]
 8001a0e:	4618      	mov	r0, r3
 8001a10:	f7ff ff76 	bl	8001900 <safeOutputPeriodValueCalculator>
 8001a14:	60f8      	str	r0, [r7, #12]
			break;
 8001a16:	bf00      	nop
		default:
	}
	return returnVal;
 8001a18:	68fb      	ldr	r3, [r7, #12]
}
 8001a1a:	4618      	mov	r0, r3
 8001a1c:	3710      	adds	r7, #16
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	bd80      	pop	{r7, pc}
 8001a22:	bf00      	nop
 8001a24:	20000944 	.word	0x20000944

08001a28 <PWMInitialize>:

void PWMInitialize(TypesThatUsePWM_t Type, msOrFullRange microsecondOrFullrange, int8_t position, float val) {
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	b084      	sub	sp, #16
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	4603      	mov	r3, r0
 8001a30:	ed87 0a00 	vstr	s0, [r7]
 8001a34:	71fb      	strb	r3, [r7, #7]
 8001a36:	460b      	mov	r3, r1
 8001a38:	71bb      	strb	r3, [r7, #6]
 8001a3a:	4613      	mov	r3, r2
 8001a3c:	717b      	strb	r3, [r7, #5]

	// usart_printf("beanis2 %d\r\n", position);

	uint32_t value = calculateOutputPeriodValue (Type, microsecondOrFullrange, position, val);
 8001a3e:	f997 2005 	ldrsb.w	r2, [r7, #5]
 8001a42:	79b9      	ldrb	r1, [r7, #6]
 8001a44:	79fb      	ldrb	r3, [r7, #7]
 8001a46:	ed97 0a00 	vldr	s0, [r7]
 8001a4a:	4618      	mov	r0, r3
 8001a4c:	f7ff ff80 	bl	8001950 <calculateOutputPeriodValue>
 8001a50:	60f8      	str	r0, [r7, #12]
	switch (Type) {
 8001a52:	79fb      	ldrb	r3, [r7, #7]
 8001a54:	2b02      	cmp	r3, #2
 8001a56:	d076      	beq.n	8001b46 <PWMInitialize+0x11e>
 8001a58:	2b02      	cmp	r3, #2
 8001a5a:	dc7e      	bgt.n	8001b5a <PWMInitialize+0x132>
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d002      	beq.n	8001a66 <PWMInitialize+0x3e>
 8001a60:	2b01      	cmp	r3, #1
 8001a62:	d04a      	beq.n	8001afa <PWMInitialize+0xd2>
	case 2:
		(*tim4).Instance->CCR3=value;
		subPeriod[10] = value;
		break;
	}
	return;
 8001a64:	e079      	b.n	8001b5a <PWMInitialize+0x132>
		switch (position) {
 8001a66:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001a6a:	3b01      	subs	r3, #1
 8001a6c:	2b06      	cmp	r3, #6
 8001a6e:	d83b      	bhi.n	8001ae8 <PWMInitialize+0xc0>
 8001a70:	a201      	add	r2, pc, #4	@ (adr r2, 8001a78 <PWMInitialize+0x50>)
 8001a72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a76:	bf00      	nop
 8001a78:	08001a95 	.word	0x08001a95
 8001a7c:	08001aa1 	.word	0x08001aa1
 8001a80:	08001aad 	.word	0x08001aad
 8001a84:	08001ab9 	.word	0x08001ab9
 8001a88:	08001ac5 	.word	0x08001ac5
 8001a8c:	08001ad1 	.word	0x08001ad1
 8001a90:	08001add 	.word	0x08001add
			(*tim1).Instance->CCR1=value;
 8001a94:	4b33      	ldr	r3, [pc, #204]	@ (8001b64 <PWMInitialize+0x13c>)
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	68fa      	ldr	r2, [r7, #12]
 8001a9c:	635a      	str	r2, [r3, #52]	@ 0x34
			break;
 8001a9e:	e024      	b.n	8001aea <PWMInitialize+0xc2>
			(*tim1).Instance->CCR2=value;
 8001aa0:	4b30      	ldr	r3, [pc, #192]	@ (8001b64 <PWMInitialize+0x13c>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	68fa      	ldr	r2, [r7, #12]
 8001aa8:	639a      	str	r2, [r3, #56]	@ 0x38
			break;
 8001aaa:	e01e      	b.n	8001aea <PWMInitialize+0xc2>
			(*tim1).Instance->CCR3=value;
 8001aac:	4b2d      	ldr	r3, [pc, #180]	@ (8001b64 <PWMInitialize+0x13c>)
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	68fa      	ldr	r2, [r7, #12]
 8001ab4:	63da      	str	r2, [r3, #60]	@ 0x3c
			break;
 8001ab6:	e018      	b.n	8001aea <PWMInitialize+0xc2>
			(*tim1).Instance->CCR4=value;
 8001ab8:	4b2a      	ldr	r3, [pc, #168]	@ (8001b64 <PWMInitialize+0x13c>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	68fa      	ldr	r2, [r7, #12]
 8001ac0:	641a      	str	r2, [r3, #64]	@ 0x40
			break;
 8001ac2:	e012      	b.n	8001aea <PWMInitialize+0xc2>
			(*tim8).Instance->CCR1=value;
 8001ac4:	4b28      	ldr	r3, [pc, #160]	@ (8001b68 <PWMInitialize+0x140>)
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	681b      	ldr	r3, [r3, #0]
 8001aca:	68fa      	ldr	r2, [r7, #12]
 8001acc:	635a      	str	r2, [r3, #52]	@ 0x34
			break;
 8001ace:	e00c      	b.n	8001aea <PWMInitialize+0xc2>
			(*tim8).Instance->CCR2=value;
 8001ad0:	4b25      	ldr	r3, [pc, #148]	@ (8001b68 <PWMInitialize+0x140>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	68fa      	ldr	r2, [r7, #12]
 8001ad8:	639a      	str	r2, [r3, #56]	@ 0x38
			break;
 8001ada:	e006      	b.n	8001aea <PWMInitialize+0xc2>
			(*tim8).Instance->CCR3=value;
 8001adc:	4b22      	ldr	r3, [pc, #136]	@ (8001b68 <PWMInitialize+0x140>)
 8001ade:	681b      	ldr	r3, [r3, #0]
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	68fa      	ldr	r2, [r7, #12]
 8001ae4:	63da      	str	r2, [r3, #60]	@ 0x3c
			break;
 8001ae6:	e000      	b.n	8001aea <PWMInitialize+0xc2>
			break;
 8001ae8:	bf00      	nop
		subPeriod[position-1] = value;
 8001aea:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001aee:	3b01      	subs	r3, #1
 8001af0:	491e      	ldr	r1, [pc, #120]	@ (8001b6c <PWMInitialize+0x144>)
 8001af2:	68fa      	ldr	r2, [r7, #12]
 8001af4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		break;
 8001af8:	e02e      	b.n	8001b58 <PWMInitialize+0x130>
		switch (position) {
 8001afa:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001afe:	2b03      	cmp	r3, #3
 8001b00:	d012      	beq.n	8001b28 <PWMInitialize+0x100>
 8001b02:	2b03      	cmp	r3, #3
 8001b04:	dc16      	bgt.n	8001b34 <PWMInitialize+0x10c>
 8001b06:	2b01      	cmp	r3, #1
 8001b08:	d002      	beq.n	8001b10 <PWMInitialize+0xe8>
 8001b0a:	2b02      	cmp	r3, #2
 8001b0c:	d006      	beq.n	8001b1c <PWMInitialize+0xf4>
			break;
 8001b0e:	e011      	b.n	8001b34 <PWMInitialize+0x10c>
			(*tim5).Instance->CCR1=value;
 8001b10:	4b17      	ldr	r3, [pc, #92]	@ (8001b70 <PWMInitialize+0x148>)
 8001b12:	681b      	ldr	r3, [r3, #0]
 8001b14:	681b      	ldr	r3, [r3, #0]
 8001b16:	68fa      	ldr	r2, [r7, #12]
 8001b18:	635a      	str	r2, [r3, #52]	@ 0x34
			break;
 8001b1a:	e00c      	b.n	8001b36 <PWMInitialize+0x10e>
			(*tim5).Instance->CCR2=value;
 8001b1c:	4b14      	ldr	r3, [pc, #80]	@ (8001b70 <PWMInitialize+0x148>)
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	68fa      	ldr	r2, [r7, #12]
 8001b24:	639a      	str	r2, [r3, #56]	@ 0x38
			break;
 8001b26:	e006      	b.n	8001b36 <PWMInitialize+0x10e>
			(*tim5).Instance->CCR3=value;
 8001b28:	4b11      	ldr	r3, [pc, #68]	@ (8001b70 <PWMInitialize+0x148>)
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	68fa      	ldr	r2, [r7, #12]
 8001b30:	63da      	str	r2, [r3, #60]	@ 0x3c
			break;
 8001b32:	e000      	b.n	8001b36 <PWMInitialize+0x10e>
			break;
 8001b34:	bf00      	nop
		subPeriod[position+6] = value;
 8001b36:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001b3a:	3306      	adds	r3, #6
 8001b3c:	490b      	ldr	r1, [pc, #44]	@ (8001b6c <PWMInitialize+0x144>)
 8001b3e:	68fa      	ldr	r2, [r7, #12]
 8001b40:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		break;
 8001b44:	e008      	b.n	8001b58 <PWMInitialize+0x130>
		(*tim4).Instance->CCR3=value;
 8001b46:	4b0b      	ldr	r3, [pc, #44]	@ (8001b74 <PWMInitialize+0x14c>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	68fa      	ldr	r2, [r7, #12]
 8001b4e:	63da      	str	r2, [r3, #60]	@ 0x3c
		subPeriod[10] = value;
 8001b50:	4a06      	ldr	r2, [pc, #24]	@ (8001b6c <PWMInitialize+0x144>)
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	6293      	str	r3, [r2, #40]	@ 0x28
		break;
 8001b56:	bf00      	nop
	return;
 8001b58:	bf00      	nop
 8001b5a:	bf00      	nop
}
 8001b5c:	3710      	adds	r7, #16
 8001b5e:	46bd      	mov	sp, r7
 8001b60:	bd80      	pop	{r7, pc}
 8001b62:	bf00      	nop
 8001b64:	200008fc 	.word	0x200008fc
 8001b68:	20000908 	.word	0x20000908
 8001b6c:	20000918 	.word	0x20000918
 8001b70:	20000904 	.word	0x20000904
 8001b74:	20000900 	.word	0x20000900

08001b78 <MotorPositionForInitializingPeriod>:

void MotorPositionForInitializingPeriod(int8_t Position, uint32_t calculatedPeriod) {
 8001b78:	b480      	push	{r7}
 8001b7a:	b083      	sub	sp, #12
 8001b7c:	af00      	add	r7, sp, #0
 8001b7e:	4603      	mov	r3, r0
 8001b80:	6039      	str	r1, [r7, #0]
 8001b82:	71fb      	strb	r3, [r7, #7]
	if (Position < 5) {
 8001b84:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b88:	2b04      	cmp	r3, #4
 8001b8a:	dc0c      	bgt.n	8001ba6 <MotorPositionForInitializingPeriod+0x2e>

		(*tim1).Instance->ARR = calculatedPeriod;
 8001b8c:	4b0f      	ldr	r3, [pc, #60]	@ (8001bcc <MotorPositionForInitializingPeriod+0x54>)
 8001b8e:	681b      	ldr	r3, [r3, #0]
 8001b90:	681b      	ldr	r3, [r3, #0]
 8001b92:	683a      	ldr	r2, [r7, #0]
 8001b94:	62da      	str	r2, [r3, #44]	@ 0x2c
		// (*tim1).Init.Period = calculatedPeriod;
		period[Position-1] = calculatedPeriod;
 8001b96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b9a:	3b01      	subs	r3, #1
 8001b9c:	490c      	ldr	r1, [pc, #48]	@ (8001bd0 <MotorPositionForInitializingPeriod+0x58>)
 8001b9e:	683a      	ldr	r2, [r7, #0]
 8001ba0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	} else {
		(*tim8).Instance->ARR = calculatedPeriod;
		period[Position-1] = calculatedPeriod;
	}

}
 8001ba4:	e00b      	b.n	8001bbe <MotorPositionForInitializingPeriod+0x46>
		(*tim8).Instance->ARR = calculatedPeriod;
 8001ba6:	4b0b      	ldr	r3, [pc, #44]	@ (8001bd4 <MotorPositionForInitializingPeriod+0x5c>)
 8001ba8:	681b      	ldr	r3, [r3, #0]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	683a      	ldr	r2, [r7, #0]
 8001bae:	62da      	str	r2, [r3, #44]	@ 0x2c
		period[Position-1] = calculatedPeriod;
 8001bb0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bb4:	3b01      	subs	r3, #1
 8001bb6:	4906      	ldr	r1, [pc, #24]	@ (8001bd0 <MotorPositionForInitializingPeriod+0x58>)
 8001bb8:	683a      	ldr	r2, [r7, #0]
 8001bba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001bbe:	bf00      	nop
 8001bc0:	370c      	adds	r7, #12
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc8:	4770      	bx	lr
 8001bca:	bf00      	nop
 8001bcc:	200008fc 	.word	0x200008fc
 8001bd0:	20000944 	.word	0x20000944
 8001bd4:	20000908 	.word	0x20000908

08001bd8 <initializePeriod>:

// htim1.Init.Period
void initializePeriod (TypesThatUsePWM_t Type, int8_t Position, uint32_t desiredFrequency) {
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	b084      	sub	sp, #16
 8001bdc:	af00      	add	r7, sp, #0
 8001bde:	4603      	mov	r3, r0
 8001be0:	603a      	str	r2, [r7, #0]
 8001be2:	71fb      	strb	r3, [r7, #7]
 8001be4:	460b      	mov	r3, r1
 8001be6:	71bb      	strb	r3, [r7, #6]
	uint32_t calculatedPeriod = calculateOutputPeriodToGetFrequency(Type, desiredFrequency);
 8001be8:	79fb      	ldrb	r3, [r7, #7]
 8001bea:	6839      	ldr	r1, [r7, #0]
 8001bec:	4618      	mov	r0, r3
 8001bee:	f7ff fe31 	bl	8001854 <calculateOutputPeriodToGetFrequency>
 8001bf2:	60f8      	str	r0, [r7, #12]
	// usart_printf("%d %d\r\n", Position ,calculatedPeriod);
	switch (Type) {
 8001bf4:	79fb      	ldrb	r3, [r7, #7]
 8001bf6:	2b02      	cmp	r3, #2
 8001bf8:	d01a      	beq.n	8001c30 <initializePeriod+0x58>
 8001bfa:	2b02      	cmp	r3, #2
 8001bfc:	dc22      	bgt.n	8001c44 <initializePeriod+0x6c>
 8001bfe:	2b00      	cmp	r3, #0
 8001c00:	d002      	beq.n	8001c08 <initializePeriod+0x30>
 8001c02:	2b01      	cmp	r3, #1
 8001c04:	d007      	beq.n	8001c16 <initializePeriod+0x3e>
		// (*tim4).Init.Period = calculatedPeriod;
		(*tim4).Instance->ARR = calculatedPeriod;
		period[10] = calculatedPeriod;
		break;
	}
	return;
 8001c06:	e01d      	b.n	8001c44 <initializePeriod+0x6c>
		MotorPositionForInitializingPeriod(Position, calculatedPeriod);
 8001c08:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001c0c:	68f9      	ldr	r1, [r7, #12]
 8001c0e:	4618      	mov	r0, r3
 8001c10:	f7ff ffb2 	bl	8001b78 <MotorPositionForInitializingPeriod>
		break;
 8001c14:	e015      	b.n	8001c42 <initializePeriod+0x6a>
		(*tim5).Instance->ARR = calculatedPeriod;
 8001c16:	4b0d      	ldr	r3, [pc, #52]	@ (8001c4c <initializePeriod+0x74>)
 8001c18:	681b      	ldr	r3, [r3, #0]
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	68fa      	ldr	r2, [r7, #12]
 8001c1e:	62da      	str	r2, [r3, #44]	@ 0x2c
		period[Position+6] = calculatedPeriod;
 8001c20:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001c24:	3306      	adds	r3, #6
 8001c26:	490a      	ldr	r1, [pc, #40]	@ (8001c50 <initializePeriod+0x78>)
 8001c28:	68fa      	ldr	r2, [r7, #12]
 8001c2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		break;
 8001c2e:	e008      	b.n	8001c42 <initializePeriod+0x6a>
		(*tim4).Instance->ARR = calculatedPeriod;
 8001c30:	4b08      	ldr	r3, [pc, #32]	@ (8001c54 <initializePeriod+0x7c>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	68fa      	ldr	r2, [r7, #12]
 8001c38:	62da      	str	r2, [r3, #44]	@ 0x2c
		period[10] = calculatedPeriod;
 8001c3a:	4a05      	ldr	r2, [pc, #20]	@ (8001c50 <initializePeriod+0x78>)
 8001c3c:	68fb      	ldr	r3, [r7, #12]
 8001c3e:	6293      	str	r3, [r2, #40]	@ 0x28
		break;
 8001c40:	bf00      	nop
	return;
 8001c42:	bf00      	nop
 8001c44:	bf00      	nop
}
 8001c46:	3710      	adds	r7, #16
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	bd80      	pop	{r7, pc}
 8001c4c:	20000904 	.word	0x20000904
 8001c50:	20000944 	.word	0x20000944
 8001c54:	20000900 	.word	0x20000900

08001c58 <PWMOutput>:

// (Type, Position, ms or fullrange, val)
void PWMOutput(TypesThatUsePWM_t Type, int8_t Position, uint32_t desiredFrequency) {
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	b082      	sub	sp, #8
 8001c5c:	af00      	add	r7, sp, #0
 8001c5e:	4603      	mov	r3, r0
 8001c60:	603a      	str	r2, [r7, #0]
 8001c62:	71fb      	strb	r3, [r7, #7]
 8001c64:	460b      	mov	r3, r1
 8001c66:	71bb      	strb	r3, [r7, #6]

	initializePeriod(Type, Position, desiredFrequency);
 8001c68:	f997 1006 	ldrsb.w	r1, [r7, #6]
 8001c6c:	79fb      	ldrb	r3, [r7, #7]
 8001c6e:	683a      	ldr	r2, [r7, #0]
 8001c70:	4618      	mov	r0, r3
 8001c72:	f7ff ffb1 	bl	8001bd8 <initializePeriod>

	// usart_printf("beanis3 %d\r\n", Position);
	switch (Type) {
 8001c76:	79fb      	ldrb	r3, [r7, #7]
 8001c78:	2b02      	cmp	r3, #2
 8001c7a:	d014      	beq.n	8001ca6 <PWMOutput+0x4e>
 8001c7c:	2b02      	cmp	r3, #2
 8001c7e:	dc16      	bgt.n	8001cae <PWMOutput+0x56>
 8001c80:	2b00      	cmp	r3, #0
 8001c82:	d002      	beq.n	8001c8a <PWMOutput+0x32>
 8001c84:	2b01      	cmp	r3, #1
 8001c86:	d007      	beq.n	8001c98 <PWMOutput+0x40>
 8001c88:	e011      	b.n	8001cae <PWMOutput+0x56>
	case 0:
		whichPWMisOn[Position-1] = 1;
 8001c8a:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001c8e:	3b01      	subs	r3, #1
 8001c90:	4a08      	ldr	r2, [pc, #32]	@ (8001cb4 <PWMOutput+0x5c>)
 8001c92:	2101      	movs	r1, #1
 8001c94:	54d1      	strb	r1, [r2, r3]
		// usart_printf("PWM %d\r\n", Position);
		return;
 8001c96:	e00a      	b.n	8001cae <PWMOutput+0x56>
	case 1:
		whichPWMisOn[Position+6] = 1;
 8001c98:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001c9c:	3306      	adds	r3, #6
 8001c9e:	4a05      	ldr	r2, [pc, #20]	@ (8001cb4 <PWMOutput+0x5c>)
 8001ca0:	2101      	movs	r1, #1
 8001ca2:	54d1      	strb	r1, [r2, r3]
		// usart_printf("LED %d\r\n", Position);
		return;
 8001ca4:	e003      	b.n	8001cae <PWMOutput+0x56>
	case 2:
		whichPWMisOn[10] = 1;
 8001ca6:	4b03      	ldr	r3, [pc, #12]	@ (8001cb4 <PWMOutput+0x5c>)
 8001ca8:	2201      	movs	r2, #1
 8001caa:	729a      	strb	r2, [r3, #10]
		// usart_printf("Buzzer %d\r\n", Position);
		return;
 8001cac:	bf00      	nop
	}
	// whichPWMisOn[7]= 1;
	// usart_printf("beanis7 %d %d\r\n", Position, whichPWMisOn[Position-1]);
	// return;
}
 8001cae:	3708      	adds	r7, #8
 8001cb0:	46bd      	mov	sp, r7
 8001cb2:	bd80      	pop	{r7, pc}
 8001cb4:	2000090c 	.word	0x2000090c

08001cb8 <mainPrint>:
int32_t frequency[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
int32_t subPeriod[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
int32_t period[11] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
*/

void mainPrint() {
 8001cb8:	b480      	push	{r7}
 8001cba:	af00      	add	r7, sp, #0
	usart_printf("          |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  1  |  2  |  3  |   1    |\r\n");
	*/
	// usart_printf("Is it on? |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |  ‰d  |\r\n", whichPWMisOn[0], whichPWMisOn[1], whichPWMisOn[2], whichPWMisOn[3], whichPWMisOn[4], whichPWMisOn[5], whichPWMisOn[6], whichPWMisOn[7], whichPWMisOn[8], whichPWMisOn[9], whichPWMisOn[10]);

	// usart_printf("||| %d | %d | %d \r\n", whichPWMisOn[10], period[10], subPeriod[10]);
}
 8001cbc:	bf00      	nop
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc4:	4770      	bx	lr
	...

08001cc8 <PWMTimerStarter>:

void PWMTimerStarter() {
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	b082      	sub	sp, #8
 8001ccc:	af00      	add	r7, sp, #0
	for (int i = 0; i < 11; i++) {
 8001cce:	2300      	movs	r3, #0
 8001cd0:	607b      	str	r3, [r7, #4]
 8001cd2:	e0f1      	b.n	8001eb8 <PWMTimerStarter+0x1f0>
		switch (i) {
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	2b0a      	cmp	r3, #10
 8001cd8:	f200 80eb 	bhi.w	8001eb2 <PWMTimerStarter+0x1ea>
 8001cdc:	a201      	add	r2, pc, #4	@ (adr r2, 8001ce4 <PWMTimerStarter+0x1c>)
 8001cde:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001ce2:	bf00      	nop
 8001ce4:	08001d11 	.word	0x08001d11
 8001ce8:	08001d37 	.word	0x08001d37
 8001cec:	08001d5d 	.word	0x08001d5d
 8001cf0:	08001d83 	.word	0x08001d83
 8001cf4:	08001da9 	.word	0x08001da9
 8001cf8:	08001dcf 	.word	0x08001dcf
 8001cfc:	08001df5 	.word	0x08001df5
 8001d00:	08001e1b 	.word	0x08001e1b
 8001d04:	08001e41 	.word	0x08001e41
 8001d08:	08001e67 	.word	0x08001e67
 8001d0c:	08001e8d 	.word	0x08001e8d
		case 0:
			if (whichPWMisOn[0] == 1) {
 8001d10:	4b6e      	ldr	r3, [pc, #440]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001d12:	f993 3000 	ldrsb.w	r3, [r3]
 8001d16:	2b01      	cmp	r3, #1
 8001d18:	d106      	bne.n	8001d28 <PWMTimerStarter+0x60>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_1);
 8001d1a:	4b6d      	ldr	r3, [pc, #436]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	2100      	movs	r1, #0
 8001d20:	4618      	mov	r0, r3
 8001d22:	f003 f9a5 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_1);
			}
			break;
 8001d26:	e0c4      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_1);
 8001d28:	4b69      	ldr	r3, [pc, #420]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	2100      	movs	r1, #0
 8001d2e:	4618      	mov	r0, r3
 8001d30:	f003 fa66 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001d34:	e0bd      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 1:
			if (whichPWMisOn[1] == 1) {
 8001d36:	4b65      	ldr	r3, [pc, #404]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001d38:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8001d3c:	2b01      	cmp	r3, #1
 8001d3e:	d106      	bne.n	8001d4e <PWMTimerStarter+0x86>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_2);
 8001d40:	4b63      	ldr	r3, [pc, #396]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	2104      	movs	r1, #4
 8001d46:	4618      	mov	r0, r3
 8001d48:	f003 f992 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_2);
			}
			break;
 8001d4c:	e0b1      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_2);
 8001d4e:	4b60      	ldr	r3, [pc, #384]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	2104      	movs	r1, #4
 8001d54:	4618      	mov	r0, r3
 8001d56:	f003 fa53 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001d5a:	e0aa      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 2:
			if (whichPWMisOn[2] == 1) {
 8001d5c:	4b5b      	ldr	r3, [pc, #364]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001d5e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8001d62:	2b01      	cmp	r3, #1
 8001d64:	d106      	bne.n	8001d74 <PWMTimerStarter+0xac>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_3);
 8001d66:	4b5a      	ldr	r3, [pc, #360]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	2108      	movs	r1, #8
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	f003 f97f 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_3);
			}
			break;
 8001d72:	e09e      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_3);
 8001d74:	4b56      	ldr	r3, [pc, #344]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	2108      	movs	r1, #8
 8001d7a:	4618      	mov	r0, r3
 8001d7c:	f003 fa40 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001d80:	e097      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 3:
			if (whichPWMisOn[3] == 1) {
 8001d82:	4b52      	ldr	r3, [pc, #328]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001d84:	f993 3003 	ldrsb.w	r3, [r3, #3]
 8001d88:	2b01      	cmp	r3, #1
 8001d8a:	d106      	bne.n	8001d9a <PWMTimerStarter+0xd2>
				HAL_TIM_PWM_Start(tim1, TIM_CHANNEL_4);
 8001d8c:	4b50      	ldr	r3, [pc, #320]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	210c      	movs	r1, #12
 8001d92:	4618      	mov	r0, r3
 8001d94:	f003 f96c 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_4);
			}
			break;
 8001d98:	e08b      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim1, TIM_CHANNEL_4);
 8001d9a:	4b4d      	ldr	r3, [pc, #308]	@ (8001ed0 <PWMTimerStarter+0x208>)
 8001d9c:	681b      	ldr	r3, [r3, #0]
 8001d9e:	210c      	movs	r1, #12
 8001da0:	4618      	mov	r0, r3
 8001da2:	f003 fa2d 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001da6:	e084      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 4:
			if (whichPWMisOn[4] == 1) {
 8001da8:	4b48      	ldr	r3, [pc, #288]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001daa:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8001dae:	2b01      	cmp	r3, #1
 8001db0:	d106      	bne.n	8001dc0 <PWMTimerStarter+0xf8>
				HAL_TIM_PWM_Start(tim8, TIM_CHANNEL_1);
 8001db2:	4b48      	ldr	r3, [pc, #288]	@ (8001ed4 <PWMTimerStarter+0x20c>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	2100      	movs	r1, #0
 8001db8:	4618      	mov	r0, r3
 8001dba:	f003 f959 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_1);
			}
			break;
 8001dbe:	e078      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_1);
 8001dc0:	4b44      	ldr	r3, [pc, #272]	@ (8001ed4 <PWMTimerStarter+0x20c>)
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	2100      	movs	r1, #0
 8001dc6:	4618      	mov	r0, r3
 8001dc8:	f003 fa1a 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001dcc:	e071      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 5:
			if (whichPWMisOn[5] == 1) {
 8001dce:	4b3f      	ldr	r3, [pc, #252]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001dd0:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8001dd4:	2b01      	cmp	r3, #1
 8001dd6:	d106      	bne.n	8001de6 <PWMTimerStarter+0x11e>
				HAL_TIM_PWM_Start(tim8, TIM_CHANNEL_2);
 8001dd8:	4b3e      	ldr	r3, [pc, #248]	@ (8001ed4 <PWMTimerStarter+0x20c>)
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	2104      	movs	r1, #4
 8001dde:	4618      	mov	r0, r3
 8001de0:	f003 f946 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_2);
			}
			break;
 8001de4:	e065      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_2);
 8001de6:	4b3b      	ldr	r3, [pc, #236]	@ (8001ed4 <PWMTimerStarter+0x20c>)
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	2104      	movs	r1, #4
 8001dec:	4618      	mov	r0, r3
 8001dee:	f003 fa07 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001df2:	e05e      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 6:
			if (whichPWMisOn[6] == 1) {
 8001df4:	4b35      	ldr	r3, [pc, #212]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001df6:	f993 3006 	ldrsb.w	r3, [r3, #6]
 8001dfa:	2b01      	cmp	r3, #1
 8001dfc:	d106      	bne.n	8001e0c <PWMTimerStarter+0x144>
				HAL_TIM_PWM_Start(tim8, TIM_CHANNEL_3);
 8001dfe:	4b35      	ldr	r3, [pc, #212]	@ (8001ed4 <PWMTimerStarter+0x20c>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	2108      	movs	r1, #8
 8001e04:	4618      	mov	r0, r3
 8001e06:	f003 f933 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_3);
			}
			break;
 8001e0a:	e052      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim8, TIM_CHANNEL_3);
 8001e0c:	4b31      	ldr	r3, [pc, #196]	@ (8001ed4 <PWMTimerStarter+0x20c>)
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	2108      	movs	r1, #8
 8001e12:	4618      	mov	r0, r3
 8001e14:	f003 f9f4 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001e18:	e04b      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 7:
			if (whichPWMisOn[7] == 1) {
 8001e1a:	4b2c      	ldr	r3, [pc, #176]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001e1c:	f993 3007 	ldrsb.w	r3, [r3, #7]
 8001e20:	2b01      	cmp	r3, #1
 8001e22:	d106      	bne.n	8001e32 <PWMTimerStarter+0x16a>
				HAL_TIM_PWM_Start(tim5, TIM_CHANNEL_1);
 8001e24:	4b2c      	ldr	r3, [pc, #176]	@ (8001ed8 <PWMTimerStarter+0x210>)
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	2100      	movs	r1, #0
 8001e2a:	4618      	mov	r0, r3
 8001e2c:	f003 f920 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_1);
			}
			break;
 8001e30:	e03f      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_1);
 8001e32:	4b29      	ldr	r3, [pc, #164]	@ (8001ed8 <PWMTimerStarter+0x210>)
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	2100      	movs	r1, #0
 8001e38:	4618      	mov	r0, r3
 8001e3a:	f003 f9e1 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001e3e:	e038      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 8:
			if (whichPWMisOn[8] == 1) {
 8001e40:	4b22      	ldr	r3, [pc, #136]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001e42:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8001e46:	2b01      	cmp	r3, #1
 8001e48:	d106      	bne.n	8001e58 <PWMTimerStarter+0x190>
				HAL_TIM_PWM_Start(tim5, TIM_CHANNEL_2);
 8001e4a:	4b23      	ldr	r3, [pc, #140]	@ (8001ed8 <PWMTimerStarter+0x210>)
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	2104      	movs	r1, #4
 8001e50:	4618      	mov	r0, r3
 8001e52:	f003 f90d 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_2);
			}
			break;
 8001e56:	e02c      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_2);
 8001e58:	4b1f      	ldr	r3, [pc, #124]	@ (8001ed8 <PWMTimerStarter+0x210>)
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	2104      	movs	r1, #4
 8001e5e:	4618      	mov	r0, r3
 8001e60:	f003 f9ce 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001e64:	e025      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 9:
			if (whichPWMisOn[9] == 1) {
 8001e66:	4b19      	ldr	r3, [pc, #100]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001e68:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8001e6c:	2b01      	cmp	r3, #1
 8001e6e:	d106      	bne.n	8001e7e <PWMTimerStarter+0x1b6>
				HAL_TIM_PWM_Start(tim5, TIM_CHANNEL_3);
 8001e70:	4b19      	ldr	r3, [pc, #100]	@ (8001ed8 <PWMTimerStarter+0x210>)
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	2108      	movs	r1, #8
 8001e76:	4618      	mov	r0, r3
 8001e78:	f003 f8fa 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_3);
			}
			// usart_printf("Returned1\r\n");
			break;
 8001e7c:	e019      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
				HAL_TIM_PWM_Stop(tim5, TIM_CHANNEL_3);
 8001e7e:	4b16      	ldr	r3, [pc, #88]	@ (8001ed8 <PWMTimerStarter+0x210>)
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	2108      	movs	r1, #8
 8001e84:	4618      	mov	r0, r3
 8001e86:	f003 f9bb 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001e8a:	e012      	b.n	8001eb2 <PWMTimerStarter+0x1ea>
		case 10:
			if (whichPWMisOn[10] == 1) {
 8001e8c:	4b0f      	ldr	r3, [pc, #60]	@ (8001ecc <PWMTimerStarter+0x204>)
 8001e8e:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8001e92:	2b01      	cmp	r3, #1
 8001e94:	d106      	bne.n	8001ea4 <PWMTimerStarter+0x1dc>
				HAL_TIM_PWM_Start(tim4, TIM_CHANNEL_3);
 8001e96:	4b11      	ldr	r3, [pc, #68]	@ (8001edc <PWMTimerStarter+0x214>)
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	2108      	movs	r1, #8
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	f003 f8e7 	bl	8005070 <HAL_TIM_PWM_Start>
			} else {
				HAL_TIM_PWM_Stop(tim4, TIM_CHANNEL_3);
			}
			// usart_printf("Returned2\r\n");
			break;
 8001ea2:	e005      	b.n	8001eb0 <PWMTimerStarter+0x1e8>
				HAL_TIM_PWM_Stop(tim4, TIM_CHANNEL_3);
 8001ea4:	4b0d      	ldr	r3, [pc, #52]	@ (8001edc <PWMTimerStarter+0x214>)
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	2108      	movs	r1, #8
 8001eaa:	4618      	mov	r0, r3
 8001eac:	f003 f9a8 	bl	8005200 <HAL_TIM_PWM_Stop>
			break;
 8001eb0:	bf00      	nop
	for (int i = 0; i < 11; i++) {
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	3301      	adds	r3, #1
 8001eb6:	607b      	str	r3, [r7, #4]
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	2b0a      	cmp	r3, #10
 8001ebc:	f77f af0a 	ble.w	8001cd4 <PWMTimerStarter+0xc>
		}
	}
}
 8001ec0:	bf00      	nop
 8001ec2:	bf00      	nop
 8001ec4:	3708      	adds	r7, #8
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	bd80      	pop	{r7, pc}
 8001eca:	bf00      	nop
 8001ecc:	2000090c 	.word	0x2000090c
 8001ed0:	200008fc 	.word	0x200008fc
 8001ed4:	20000908 	.word	0x20000908
 8001ed8:	20000904 	.word	0x20000904
 8001edc:	20000900 	.word	0x20000900

08001ee0 <initializeCaliforniaGirls>:
uint8_t HD3Notes[46] = {4, 5, 6, 14, 6, 4, 14, 4, 1, 14, 1, 14, 1, 14, 1, 4, 1, 4, 6, 5, 14, 5, 4, 14, 4, 6, 4, 6, 8, 7, 14, 7, 6, 5, 6, 14, 6, 14, 6, 5, 14, 5, 14, 5, 4};
uint8_t HD1Rests[45] = {10, 10, 20, 19, 1, 19, 1, 10, 29, 1, 40, 40, 20, 10, 20, 110, 10, 10, 10, 10, 10, 10, 10, 9, 1, 9, 1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 40, 39, 1, 39, 1, 20};
uint8_t HD2Rests[39] = {10, 10, 40, 40, 59, 1, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 10, 10, 9, 1, 9, 1, 20, 9, 1, 9, 1, 20, 60};
uint8_t HD3Rests[46] = {10, 10, 19, 1, 20, 19, 1, 20, 29, 1, 29, 1, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 9, 1, 10, 20, 20, 20, 20, 29, 1, 30, 10, 10, 9, 1, 9, 1, 20, 9, 1, 9, 1, 20, 60};

void initializeCaliforniaGirls() {
 8001ee0:	b480      	push	{r7}
 8001ee2:	af00      	add	r7, sp, #0
	songProgress = 0;
 8001ee4:	4b06      	ldr	r3, [pc, #24]	@ (8001f00 <initializeCaliforniaGirls+0x20>)
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	701a      	strb	r2, [r3, #0]
	timeTracker = 0;
 8001eea:	4b06      	ldr	r3, [pc, #24]	@ (8001f04 <initializeCaliforniaGirls+0x24>)
 8001eec:	2200      	movs	r2, #0
 8001eee:	801a      	strh	r2, [r3, #0]
	noteTracker = 0;
 8001ef0:	4b05      	ldr	r3, [pc, #20]	@ (8001f08 <initializeCaliforniaGirls+0x28>)
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	801a      	strh	r2, [r3, #0]
}
 8001ef6:	bf00      	nop
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efe:	4770      	bx	lr
 8001f00:	20000970 	.word	0x20000970
 8001f04:	20000972 	.word	0x20000972
 8001f08:	20000974 	.word	0x20000974

08001f0c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001f0c:	b580      	push	{r7, lr}
 8001f0e:	b082      	sub	sp, #8
 8001f10:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001f12:	2300      	movs	r3, #0
 8001f14:	607b      	str	r3, [r7, #4]
 8001f16:	4b12      	ldr	r3, [pc, #72]	@ (8001f60 <HAL_MspInit+0x54>)
 8001f18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f1a:	4a11      	ldr	r2, [pc, #68]	@ (8001f60 <HAL_MspInit+0x54>)
 8001f1c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f20:	6453      	str	r3, [r2, #68]	@ 0x44
 8001f22:	4b0f      	ldr	r3, [pc, #60]	@ (8001f60 <HAL_MspInit+0x54>)
 8001f24:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f26:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001f2a:	607b      	str	r3, [r7, #4]
 8001f2c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f2e:	2300      	movs	r3, #0
 8001f30:	603b      	str	r3, [r7, #0]
 8001f32:	4b0b      	ldr	r3, [pc, #44]	@ (8001f60 <HAL_MspInit+0x54>)
 8001f34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f36:	4a0a      	ldr	r2, [pc, #40]	@ (8001f60 <HAL_MspInit+0x54>)
 8001f38:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001f3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001f3e:	4b08      	ldr	r3, [pc, #32]	@ (8001f60 <HAL_MspInit+0x54>)
 8001f40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f42:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f46:	603b      	str	r3, [r7, #0]
 8001f48:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	210f      	movs	r1, #15
 8001f4e:	f06f 0001 	mvn.w	r0, #1
 8001f52:	f001 fb0e 	bl	8003572 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f56:	bf00      	nop
 8001f58:	3708      	adds	r7, #8
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	bd80      	pop	{r7, pc}
 8001f5e:	bf00      	nop
 8001f60:	40023800 	.word	0x40023800

08001f64 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8001f64:	b580      	push	{r7, lr}
 8001f66:	b08c      	sub	sp, #48	@ 0x30
 8001f68:	af00      	add	r7, sp, #0
 8001f6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f6c:	f107 031c 	add.w	r3, r7, #28
 8001f70:	2200      	movs	r2, #0
 8001f72:	601a      	str	r2, [r3, #0]
 8001f74:	605a      	str	r2, [r3, #4]
 8001f76:	609a      	str	r2, [r3, #8]
 8001f78:	60da      	str	r2, [r3, #12]
 8001f7a:	611a      	str	r2, [r3, #16]
  if(hcan->Instance==CAN1)
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	4a4a      	ldr	r2, [pc, #296]	@ (80020ac <HAL_CAN_MspInit+0x148>)
 8001f82:	4293      	cmp	r3, r2
 8001f84:	d13d      	bne.n	8002002 <HAL_CAN_MspInit+0x9e>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_CAN1_CLK_ENABLED++;
 8001f86:	4b4a      	ldr	r3, [pc, #296]	@ (80020b0 <HAL_CAN_MspInit+0x14c>)
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	3301      	adds	r3, #1
 8001f8c:	4a48      	ldr	r2, [pc, #288]	@ (80020b0 <HAL_CAN_MspInit+0x14c>)
 8001f8e:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_CAN1_CLK_ENABLED==1){
 8001f90:	4b47      	ldr	r3, [pc, #284]	@ (80020b0 <HAL_CAN_MspInit+0x14c>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	2b01      	cmp	r3, #1
 8001f96:	d10d      	bne.n	8001fb4 <HAL_CAN_MspInit+0x50>
      __HAL_RCC_CAN1_CLK_ENABLE();
 8001f98:	2300      	movs	r3, #0
 8001f9a:	61bb      	str	r3, [r7, #24]
 8001f9c:	4b45      	ldr	r3, [pc, #276]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8001f9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fa0:	4a44      	ldr	r2, [pc, #272]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8001fa2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001fa6:	6413      	str	r3, [r2, #64]	@ 0x40
 8001fa8:	4b42      	ldr	r3, [pc, #264]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8001faa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fac:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001fb0:	61bb      	str	r3, [r7, #24]
 8001fb2:	69bb      	ldr	r3, [r7, #24]
    }

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	617b      	str	r3, [r7, #20]
 8001fb8:	4b3e      	ldr	r3, [pc, #248]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8001fba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fbc:	4a3d      	ldr	r2, [pc, #244]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8001fbe:	f043 0308 	orr.w	r3, r3, #8
 8001fc2:	6313      	str	r3, [r2, #48]	@ 0x30
 8001fc4:	4b3b      	ldr	r3, [pc, #236]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8001fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fc8:	f003 0308 	and.w	r3, r3, #8
 8001fcc:	617b      	str	r3, [r7, #20]
 8001fce:	697b      	ldr	r3, [r7, #20]
    /**CAN1 GPIO Configuration
    PD0     ------> CAN1_RX
    PD1     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001fd0:	2303      	movs	r3, #3
 8001fd2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd4:	2302      	movs	r3, #2
 8001fd6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fd8:	2300      	movs	r3, #0
 8001fda:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fdc:	2303      	movs	r3, #3
 8001fde:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 8001fe0:	2309      	movs	r3, #9
 8001fe2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fe4:	f107 031c 	add.w	r3, r7, #28
 8001fe8:	4619      	mov	r1, r3
 8001fea:	4833      	ldr	r0, [pc, #204]	@ (80020b8 <HAL_CAN_MspInit+0x154>)
 8001fec:	f001 fefa 	bl	8003de4 <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 5, 0);
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	2105      	movs	r1, #5
 8001ff4:	2014      	movs	r0, #20
 8001ff6:	f001 fabc 	bl	8003572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 8001ffa:	2014      	movs	r0, #20
 8001ffc:	f001 fad5 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN2_MspInit 1 */

  /* USER CODE END CAN2_MspInit 1 */
  }

}
 8002000:	e04f      	b.n	80020a2 <HAL_CAN_MspInit+0x13e>
  else if(hcan->Instance==CAN2)
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	4a2d      	ldr	r2, [pc, #180]	@ (80020bc <HAL_CAN_MspInit+0x158>)
 8002008:	4293      	cmp	r3, r2
 800200a:	d14a      	bne.n	80020a2 <HAL_CAN_MspInit+0x13e>
    __HAL_RCC_CAN2_CLK_ENABLE();
 800200c:	2300      	movs	r3, #0
 800200e:	613b      	str	r3, [r7, #16]
 8002010:	4b28      	ldr	r3, [pc, #160]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8002012:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002014:	4a27      	ldr	r2, [pc, #156]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8002016:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800201a:	6413      	str	r3, [r2, #64]	@ 0x40
 800201c:	4b25      	ldr	r3, [pc, #148]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 800201e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002020:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002024:	613b      	str	r3, [r7, #16]
 8002026:	693b      	ldr	r3, [r7, #16]
    HAL_RCC_CAN1_CLK_ENABLED++;
 8002028:	4b21      	ldr	r3, [pc, #132]	@ (80020b0 <HAL_CAN_MspInit+0x14c>)
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	3301      	adds	r3, #1
 800202e:	4a20      	ldr	r2, [pc, #128]	@ (80020b0 <HAL_CAN_MspInit+0x14c>)
 8002030:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_CAN1_CLK_ENABLED==1){
 8002032:	4b1f      	ldr	r3, [pc, #124]	@ (80020b0 <HAL_CAN_MspInit+0x14c>)
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	2b01      	cmp	r3, #1
 8002038:	d10d      	bne.n	8002056 <HAL_CAN_MspInit+0xf2>
      __HAL_RCC_CAN1_CLK_ENABLE();
 800203a:	2300      	movs	r3, #0
 800203c:	60fb      	str	r3, [r7, #12]
 800203e:	4b1d      	ldr	r3, [pc, #116]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8002040:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002042:	4a1c      	ldr	r2, [pc, #112]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8002044:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002048:	6413      	str	r3, [r2, #64]	@ 0x40
 800204a:	4b1a      	ldr	r3, [pc, #104]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 800204c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800204e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002052:	60fb      	str	r3, [r7, #12]
 8002054:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002056:	2300      	movs	r3, #0
 8002058:	60bb      	str	r3, [r7, #8]
 800205a:	4b16      	ldr	r3, [pc, #88]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 800205c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800205e:	4a15      	ldr	r2, [pc, #84]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8002060:	f043 0302 	orr.w	r3, r3, #2
 8002064:	6313      	str	r3, [r2, #48]	@ 0x30
 8002066:	4b13      	ldr	r3, [pc, #76]	@ (80020b4 <HAL_CAN_MspInit+0x150>)
 8002068:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800206a:	f003 0302 	and.w	r3, r3, #2
 800206e:	60bb      	str	r3, [r7, #8]
 8002070:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002072:	2360      	movs	r3, #96	@ 0x60
 8002074:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002076:	2302      	movs	r3, #2
 8002078:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800207a:	2300      	movs	r3, #0
 800207c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800207e:	2303      	movs	r3, #3
 8002080:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8002082:	2309      	movs	r3, #9
 8002084:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002086:	f107 031c 	add.w	r3, r7, #28
 800208a:	4619      	mov	r1, r3
 800208c:	480c      	ldr	r0, [pc, #48]	@ (80020c0 <HAL_CAN_MspInit+0x15c>)
 800208e:	f001 fea9 	bl	8003de4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 5, 0);
 8002092:	2200      	movs	r2, #0
 8002094:	2105      	movs	r1, #5
 8002096:	2040      	movs	r0, #64	@ 0x40
 8002098:	f001 fa6b 	bl	8003572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 800209c:	2040      	movs	r0, #64	@ 0x40
 800209e:	f001 fa84 	bl	80035aa <HAL_NVIC_EnableIRQ>
}
 80020a2:	bf00      	nop
 80020a4:	3730      	adds	r7, #48	@ 0x30
 80020a6:	46bd      	mov	sp, r7
 80020a8:	bd80      	pop	{r7, pc}
 80020aa:	bf00      	nop
 80020ac:	40006400 	.word	0x40006400
 80020b0:	20000978 	.word	0x20000978
 80020b4:	40023800 	.word	0x40023800
 80020b8:	40020c00 	.word	0x40020c00
 80020bc:	40006800 	.word	0x40006800
 80020c0:	40020400 	.word	0x40020400

080020c4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80020c4:	b580      	push	{r7, lr}
 80020c6:	b08a      	sub	sp, #40	@ 0x28
 80020c8:	af00      	add	r7, sp, #0
 80020ca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020cc:	f107 0314 	add.w	r3, r7, #20
 80020d0:	2200      	movs	r2, #0
 80020d2:	601a      	str	r2, [r3, #0]
 80020d4:	605a      	str	r2, [r3, #4]
 80020d6:	609a      	str	r2, [r3, #8]
 80020d8:	60da      	str	r2, [r3, #12]
 80020da:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C3)
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	4a29      	ldr	r2, [pc, #164]	@ (8002188 <HAL_I2C_MspInit+0xc4>)
 80020e2:	4293      	cmp	r3, r2
 80020e4:	d14b      	bne.n	800217e <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020e6:	2300      	movs	r3, #0
 80020e8:	613b      	str	r3, [r7, #16]
 80020ea:	4b28      	ldr	r3, [pc, #160]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 80020ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020ee:	4a27      	ldr	r2, [pc, #156]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 80020f0:	f043 0304 	orr.w	r3, r3, #4
 80020f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80020f6:	4b25      	ldr	r3, [pc, #148]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 80020f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020fa:	f003 0304 	and.w	r3, r3, #4
 80020fe:	613b      	str	r3, [r7, #16]
 8002100:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002102:	2300      	movs	r3, #0
 8002104:	60fb      	str	r3, [r7, #12]
 8002106:	4b21      	ldr	r3, [pc, #132]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 8002108:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800210a:	4a20      	ldr	r2, [pc, #128]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 800210c:	f043 0301 	orr.w	r3, r3, #1
 8002110:	6313      	str	r3, [r2, #48]	@ 0x30
 8002112:	4b1e      	ldr	r3, [pc, #120]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 8002114:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002116:	f003 0301 	and.w	r3, r3, #1
 800211a:	60fb      	str	r3, [r7, #12]
 800211c:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PC9     ------> I2C3_SDA
    PA8     ------> I2C3_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800211e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8002122:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002124:	2312      	movs	r3, #18
 8002126:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002128:	2300      	movs	r3, #0
 800212a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800212c:	2303      	movs	r3, #3
 800212e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002130:	2304      	movs	r3, #4
 8002132:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002134:	f107 0314 	add.w	r3, r7, #20
 8002138:	4619      	mov	r1, r3
 800213a:	4815      	ldr	r0, [pc, #84]	@ (8002190 <HAL_I2C_MspInit+0xcc>)
 800213c:	f001 fe52 	bl	8003de4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002140:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002144:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002146:	2312      	movs	r3, #18
 8002148:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800214a:	2300      	movs	r3, #0
 800214c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800214e:	2303      	movs	r3, #3
 8002150:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002152:	2304      	movs	r3, #4
 8002154:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002156:	f107 0314 	add.w	r3, r7, #20
 800215a:	4619      	mov	r1, r3
 800215c:	480d      	ldr	r0, [pc, #52]	@ (8002194 <HAL_I2C_MspInit+0xd0>)
 800215e:	f001 fe41 	bl	8003de4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002162:	2300      	movs	r3, #0
 8002164:	60bb      	str	r3, [r7, #8]
 8002166:	4b09      	ldr	r3, [pc, #36]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 8002168:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800216a:	4a08      	ldr	r2, [pc, #32]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 800216c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002170:	6413      	str	r3, [r2, #64]	@ 0x40
 8002172:	4b06      	ldr	r3, [pc, #24]	@ (800218c <HAL_I2C_MspInit+0xc8>)
 8002174:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002176:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800217a:	60bb      	str	r3, [r7, #8]
 800217c:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800217e:	bf00      	nop
 8002180:	3728      	adds	r7, #40	@ 0x28
 8002182:	46bd      	mov	sp, r7
 8002184:	bd80      	pop	{r7, pc}
 8002186:	bf00      	nop
 8002188:	40005c00 	.word	0x40005c00
 800218c:	40023800 	.word	0x40023800
 8002190:	40020800 	.word	0x40020800
 8002194:	40020000 	.word	0x40020000

08002198 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002198:	b580      	push	{r7, lr}
 800219a:	b08a      	sub	sp, #40	@ 0x28
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021a0:	f107 0314 	add.w	r3, r7, #20
 80021a4:	2200      	movs	r2, #0
 80021a6:	601a      	str	r2, [r3, #0]
 80021a8:	605a      	str	r2, [r3, #4]
 80021aa:	609a      	str	r2, [r3, #8]
 80021ac:	60da      	str	r2, [r3, #12]
 80021ae:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	4a28      	ldr	r2, [pc, #160]	@ (8002258 <HAL_SPI_MspInit+0xc0>)
 80021b6:	4293      	cmp	r3, r2
 80021b8:	d149      	bne.n	800224e <HAL_SPI_MspInit+0xb6>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80021ba:	2300      	movs	r3, #0
 80021bc:	613b      	str	r3, [r7, #16]
 80021be:	4b27      	ldr	r3, [pc, #156]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80021c2:	4a26      	ldr	r2, [pc, #152]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021c4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80021c8:	6453      	str	r3, [r2, #68]	@ 0x44
 80021ca:	4b24      	ldr	r3, [pc, #144]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80021ce:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80021d2:	613b      	str	r3, [r7, #16]
 80021d4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80021d6:	2300      	movs	r3, #0
 80021d8:	60fb      	str	r3, [r7, #12]
 80021da:	4b20      	ldr	r3, [pc, #128]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021de:	4a1f      	ldr	r2, [pc, #124]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021e0:	f043 0302 	orr.w	r3, r3, #2
 80021e4:	6313      	str	r3, [r2, #48]	@ 0x30
 80021e6:	4b1d      	ldr	r3, [pc, #116]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021ea:	f003 0302 	and.w	r3, r3, #2
 80021ee:	60fb      	str	r3, [r7, #12]
 80021f0:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021f2:	2300      	movs	r3, #0
 80021f4:	60bb      	str	r3, [r7, #8]
 80021f6:	4b19      	ldr	r3, [pc, #100]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021fa:	4a18      	ldr	r2, [pc, #96]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 80021fc:	f043 0301 	orr.w	r3, r3, #1
 8002200:	6313      	str	r3, [r2, #48]	@ 0x30
 8002202:	4b16      	ldr	r3, [pc, #88]	@ (800225c <HAL_SPI_MspInit+0xc4>)
 8002204:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002206:	f003 0301 	and.w	r3, r3, #1
 800220a:	60bb      	str	r3, [r7, #8]
 800220c:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PB4     ------> SPI1_MISO
    PB3     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3;
 800220e:	2318      	movs	r3, #24
 8002210:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002212:	2302      	movs	r3, #2
 8002214:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002216:	2300      	movs	r3, #0
 8002218:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800221a:	2303      	movs	r3, #3
 800221c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800221e:	2305      	movs	r3, #5
 8002220:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002222:	f107 0314 	add.w	r3, r7, #20
 8002226:	4619      	mov	r1, r3
 8002228:	480d      	ldr	r0, [pc, #52]	@ (8002260 <HAL_SPI_MspInit+0xc8>)
 800222a:	f001 fddb 	bl	8003de4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 800222e:	2380      	movs	r3, #128	@ 0x80
 8002230:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002232:	2302      	movs	r3, #2
 8002234:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002236:	2300      	movs	r3, #0
 8002238:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800223a:	2303      	movs	r3, #3
 800223c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800223e:	2305      	movs	r3, #5
 8002240:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002242:	f107 0314 	add.w	r3, r7, #20
 8002246:	4619      	mov	r1, r3
 8002248:	4806      	ldr	r0, [pc, #24]	@ (8002264 <HAL_SPI_MspInit+0xcc>)
 800224a:	f001 fdcb 	bl	8003de4 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 800224e:	bf00      	nop
 8002250:	3728      	adds	r7, #40	@ 0x28
 8002252:	46bd      	mov	sp, r7
 8002254:	bd80      	pop	{r7, pc}
 8002256:	bf00      	nop
 8002258:	40013000 	.word	0x40013000
 800225c:	40023800 	.word	0x40023800
 8002260:	40020400 	.word	0x40020400
 8002264:	40020000 	.word	0x40020000

08002268 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002268:	b580      	push	{r7, lr}
 800226a:	b086      	sub	sp, #24
 800226c:	af00      	add	r7, sp, #0
 800226e:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	4a53      	ldr	r2, [pc, #332]	@ (80023c4 <HAL_TIM_PWM_MspInit+0x15c>)
 8002276:	4293      	cmp	r3, r2
 8002278:	d13e      	bne.n	80022f8 <HAL_TIM_PWM_MspInit+0x90>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800227a:	2300      	movs	r3, #0
 800227c:	617b      	str	r3, [r7, #20]
 800227e:	4b52      	ldr	r3, [pc, #328]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 8002280:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002282:	4a51      	ldr	r2, [pc, #324]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 8002284:	f043 0301 	orr.w	r3, r3, #1
 8002288:	6453      	str	r3, [r2, #68]	@ 0x44
 800228a:	4b4f      	ldr	r3, [pc, #316]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 800228c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800228e:	f003 0301 	and.w	r3, r3, #1
 8002292:	617b      	str	r3, [r7, #20]
 8002294:	697b      	ldr	r3, [r7, #20]

    /* TIM1 DMA Init */
    /* TIM1_CH1 Init */
    hdma_tim1_ch1.Instance = DMA2_Stream3;
 8002296:	4b4d      	ldr	r3, [pc, #308]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 8002298:	4a4d      	ldr	r2, [pc, #308]	@ (80023d0 <HAL_TIM_PWM_MspInit+0x168>)
 800229a:	601a      	str	r2, [r3, #0]
    hdma_tim1_ch1.Init.Channel = DMA_CHANNEL_6;
 800229c:	4b4b      	ldr	r3, [pc, #300]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 800229e:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 80022a2:	605a      	str	r2, [r3, #4]
    hdma_tim1_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80022a4:	4b49      	ldr	r3, [pc, #292]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022a6:	2200      	movs	r2, #0
 80022a8:	609a      	str	r2, [r3, #8]
    hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80022aa:	4b48      	ldr	r3, [pc, #288]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022ac:	2200      	movs	r2, #0
 80022ae:	60da      	str	r2, [r3, #12]
    hdma_tim1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 80022b0:	4b46      	ldr	r3, [pc, #280]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022b2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80022b6:	611a      	str	r2, [r3, #16]
    hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80022b8:	4b44      	ldr	r3, [pc, #272]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022ba:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80022be:	615a      	str	r2, [r3, #20]
    hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80022c0:	4b42      	ldr	r3, [pc, #264]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022c2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80022c6:	619a      	str	r2, [r3, #24]
    hdma_tim1_ch1.Init.Mode = DMA_NORMAL;
 80022c8:	4b40      	ldr	r3, [pc, #256]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022ca:	2200      	movs	r2, #0
 80022cc:	61da      	str	r2, [r3, #28]
    hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 80022ce:	4b3f      	ldr	r3, [pc, #252]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022d0:	2200      	movs	r2, #0
 80022d2:	621a      	str	r2, [r3, #32]
    hdma_tim1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80022d4:	4b3d      	ldr	r3, [pc, #244]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022d6:	2200      	movs	r2, #0
 80022d8:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 80022da:	483c      	ldr	r0, [pc, #240]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022dc:	f001 f980 	bl	80035e0 <HAL_DMA_Init>
 80022e0:	4603      	mov	r3, r0
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d001      	beq.n	80022ea <HAL_TIM_PWM_MspInit+0x82>
    {
      Error_Handler();
 80022e6:	f7ff fa7b 	bl	80017e0 <Error_Handler>
    }

    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC1],hdma_tim1_ch1);
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	4a37      	ldr	r2, [pc, #220]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80022f0:	4a36      	ldr	r2, [pc, #216]	@ (80023cc <HAL_TIM_PWM_MspInit+0x164>)
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	6393      	str	r3, [r2, #56]	@ 0x38
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 80022f6:	e061      	b.n	80023bc <HAL_TIM_PWM_MspInit+0x154>
  else if(htim_pwm->Instance==TIM5)
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	4a35      	ldr	r2, [pc, #212]	@ (80023d4 <HAL_TIM_PWM_MspInit+0x16c>)
 80022fe:	4293      	cmp	r3, r2
 8002300:	d10e      	bne.n	8002320 <HAL_TIM_PWM_MspInit+0xb8>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002302:	2300      	movs	r3, #0
 8002304:	613b      	str	r3, [r7, #16]
 8002306:	4b30      	ldr	r3, [pc, #192]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 8002308:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800230a:	4a2f      	ldr	r2, [pc, #188]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 800230c:	f043 0308 	orr.w	r3, r3, #8
 8002310:	6413      	str	r3, [r2, #64]	@ 0x40
 8002312:	4b2d      	ldr	r3, [pc, #180]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 8002314:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002316:	f003 0308 	and.w	r3, r3, #8
 800231a:	613b      	str	r3, [r7, #16]
 800231c:	693b      	ldr	r3, [r7, #16]
}
 800231e:	e04d      	b.n	80023bc <HAL_TIM_PWM_MspInit+0x154>
  else if(htim_pwm->Instance==TIM8)
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	4a2c      	ldr	r2, [pc, #176]	@ (80023d8 <HAL_TIM_PWM_MspInit+0x170>)
 8002326:	4293      	cmp	r3, r2
 8002328:	d148      	bne.n	80023bc <HAL_TIM_PWM_MspInit+0x154>
    __HAL_RCC_TIM8_CLK_ENABLE();
 800232a:	2300      	movs	r3, #0
 800232c:	60fb      	str	r3, [r7, #12]
 800232e:	4b26      	ldr	r3, [pc, #152]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 8002330:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002332:	4a25      	ldr	r2, [pc, #148]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 8002334:	f043 0302 	orr.w	r3, r3, #2
 8002338:	6453      	str	r3, [r2, #68]	@ 0x44
 800233a:	4b23      	ldr	r3, [pc, #140]	@ (80023c8 <HAL_TIM_PWM_MspInit+0x160>)
 800233c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800233e:	f003 0302 	and.w	r3, r3, #2
 8002342:	60fb      	str	r3, [r7, #12]
 8002344:	68fb      	ldr	r3, [r7, #12]
    hdma_tim8_ch1_ch2_ch3.Instance = DMA2_Stream2;
 8002346:	4b25      	ldr	r3, [pc, #148]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002348:	4a25      	ldr	r2, [pc, #148]	@ (80023e0 <HAL_TIM_PWM_MspInit+0x178>)
 800234a:	601a      	str	r2, [r3, #0]
    hdma_tim8_ch1_ch2_ch3.Init.Channel = DMA_CHANNEL_0;
 800234c:	4b23      	ldr	r3, [pc, #140]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 800234e:	2200      	movs	r2, #0
 8002350:	605a      	str	r2, [r3, #4]
    hdma_tim8_ch1_ch2_ch3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002352:	4b22      	ldr	r3, [pc, #136]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002354:	2200      	movs	r2, #0
 8002356:	609a      	str	r2, [r3, #8]
    hdma_tim8_ch1_ch2_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 8002358:	4b20      	ldr	r3, [pc, #128]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 800235a:	2200      	movs	r2, #0
 800235c:	60da      	str	r2, [r3, #12]
    hdma_tim8_ch1_ch2_ch3.Init.MemInc = DMA_MINC_ENABLE;
 800235e:	4b1f      	ldr	r3, [pc, #124]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002360:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002364:	611a      	str	r2, [r3, #16]
    hdma_tim8_ch1_ch2_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002366:	4b1d      	ldr	r3, [pc, #116]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002368:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800236c:	615a      	str	r2, [r3, #20]
    hdma_tim8_ch1_ch2_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800236e:	4b1b      	ldr	r3, [pc, #108]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002370:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002374:	619a      	str	r2, [r3, #24]
    hdma_tim8_ch1_ch2_ch3.Init.Mode = DMA_NORMAL;
 8002376:	4b19      	ldr	r3, [pc, #100]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002378:	2200      	movs	r2, #0
 800237a:	61da      	str	r2, [r3, #28]
    hdma_tim8_ch1_ch2_ch3.Init.Priority = DMA_PRIORITY_LOW;
 800237c:	4b17      	ldr	r3, [pc, #92]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 800237e:	2200      	movs	r2, #0
 8002380:	621a      	str	r2, [r3, #32]
    hdma_tim8_ch1_ch2_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002382:	4b16      	ldr	r3, [pc, #88]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 8002384:	2200      	movs	r2, #0
 8002386:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim8_ch1_ch2_ch3) != HAL_OK)
 8002388:	4814      	ldr	r0, [pc, #80]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 800238a:	f001 f929 	bl	80035e0 <HAL_DMA_Init>
 800238e:	4603      	mov	r3, r0
 8002390:	2b00      	cmp	r3, #0
 8002392:	d001      	beq.n	8002398 <HAL_TIM_PWM_MspInit+0x130>
      Error_Handler();
 8002394:	f7ff fa24 	bl	80017e0 <Error_Handler>
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC1],hdma_tim8_ch1_ch2_ch3);
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	4a10      	ldr	r2, [pc, #64]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 800239c:	625a      	str	r2, [r3, #36]	@ 0x24
 800239e:	4a0f      	ldr	r2, [pc, #60]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	6393      	str	r3, [r2, #56]	@ 0x38
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC2],hdma_tim8_ch1_ch2_ch3);
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	4a0d      	ldr	r2, [pc, #52]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 80023a8:	629a      	str	r2, [r3, #40]	@ 0x28
 80023aa:	4a0c      	ldr	r2, [pc, #48]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	6393      	str	r3, [r2, #56]	@ 0x38
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC3],hdma_tim8_ch1_ch2_ch3);
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	4a0a      	ldr	r2, [pc, #40]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 80023b4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80023b6:	4a09      	ldr	r2, [pc, #36]	@ (80023dc <HAL_TIM_PWM_MspInit+0x174>)
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	6393      	str	r3, [r2, #56]	@ 0x38
}
 80023bc:	bf00      	nop
 80023be:	3718      	adds	r7, #24
 80023c0:	46bd      	mov	sp, r7
 80023c2:	bd80      	pop	{r7, pc}
 80023c4:	40010000 	.word	0x40010000
 80023c8:	40023800 	.word	0x40023800
 80023cc:	20000514 	.word	0x20000514
 80023d0:	40026458 	.word	0x40026458
 80023d4:	40000c00 	.word	0x40000c00
 80023d8:	40010400 	.word	0x40010400
 80023dc:	200005d4 	.word	0x200005d4
 80023e0:	40026440 	.word	0x40026440

080023e4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80023e4:	b580      	push	{r7, lr}
 80023e6:	b084      	sub	sp, #16
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM4)
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	4a2c      	ldr	r2, [pc, #176]	@ (80024a4 <HAL_TIM_Base_MspInit+0xc0>)
 80023f2:	4293      	cmp	r3, r2
 80023f4:	d13e      	bne.n	8002474 <HAL_TIM_Base_MspInit+0x90>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 80023f6:	2300      	movs	r3, #0
 80023f8:	60fb      	str	r3, [r7, #12]
 80023fa:	4b2b      	ldr	r3, [pc, #172]	@ (80024a8 <HAL_TIM_Base_MspInit+0xc4>)
 80023fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023fe:	4a2a      	ldr	r2, [pc, #168]	@ (80024a8 <HAL_TIM_Base_MspInit+0xc4>)
 8002400:	f043 0304 	orr.w	r3, r3, #4
 8002404:	6413      	str	r3, [r2, #64]	@ 0x40
 8002406:	4b28      	ldr	r3, [pc, #160]	@ (80024a8 <HAL_TIM_Base_MspInit+0xc4>)
 8002408:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800240a:	f003 0304 	and.w	r3, r3, #4
 800240e:	60fb      	str	r3, [r7, #12]
 8002410:	68fb      	ldr	r3, [r7, #12]

    /* TIM4 DMA Init */
    /* TIM4_CH3 Init */
    hdma_tim4_ch3.Instance = DMA1_Stream7;
 8002412:	4b26      	ldr	r3, [pc, #152]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002414:	4a26      	ldr	r2, [pc, #152]	@ (80024b0 <HAL_TIM_Base_MspInit+0xcc>)
 8002416:	601a      	str	r2, [r3, #0]
    hdma_tim4_ch3.Init.Channel = DMA_CHANNEL_2;
 8002418:	4b24      	ldr	r3, [pc, #144]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 800241a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800241e:	605a      	str	r2, [r3, #4]
    hdma_tim4_ch3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002420:	4b22      	ldr	r3, [pc, #136]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002422:	2200      	movs	r2, #0
 8002424:	609a      	str	r2, [r3, #8]
    hdma_tim4_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 8002426:	4b21      	ldr	r3, [pc, #132]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002428:	2200      	movs	r2, #0
 800242a:	60da      	str	r2, [r3, #12]
    hdma_tim4_ch3.Init.MemInc = DMA_MINC_ENABLE;
 800242c:	4b1f      	ldr	r3, [pc, #124]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 800242e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002432:	611a      	str	r2, [r3, #16]
    hdma_tim4_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002434:	4b1d      	ldr	r3, [pc, #116]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002436:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800243a:	615a      	str	r2, [r3, #20]
    hdma_tim4_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800243c:	4b1b      	ldr	r3, [pc, #108]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 800243e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002442:	619a      	str	r2, [r3, #24]
    hdma_tim4_ch3.Init.Mode = DMA_NORMAL;
 8002444:	4b19      	ldr	r3, [pc, #100]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002446:	2200      	movs	r2, #0
 8002448:	61da      	str	r2, [r3, #28]
    hdma_tim4_ch3.Init.Priority = DMA_PRIORITY_LOW;
 800244a:	4b18      	ldr	r3, [pc, #96]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 800244c:	2200      	movs	r2, #0
 800244e:	621a      	str	r2, [r3, #32]
    hdma_tim4_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002450:	4b16      	ldr	r3, [pc, #88]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002452:	2200      	movs	r2, #0
 8002454:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim4_ch3) != HAL_OK)
 8002456:	4815      	ldr	r0, [pc, #84]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 8002458:	f001 f8c2 	bl	80035e0 <HAL_DMA_Init>
 800245c:	4603      	mov	r3, r0
 800245e:	2b00      	cmp	r3, #0
 8002460:	d001      	beq.n	8002466 <HAL_TIM_Base_MspInit+0x82>
    {
      Error_Handler();
 8002462:	f7ff f9bd 	bl	80017e0 <Error_Handler>
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim4_ch3);
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	4a10      	ldr	r2, [pc, #64]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 800246a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800246c:	4a0f      	ldr	r2, [pc, #60]	@ (80024ac <HAL_TIM_Base_MspInit+0xc8>)
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	6393      	str	r3, [r2, #56]	@ 0x38
  /* USER CODE BEGIN TIM10_MspInit 1 */

  /* USER CODE END TIM10_MspInit 1 */
  }

}
 8002472:	e012      	b.n	800249a <HAL_TIM_Base_MspInit+0xb6>
  else if(htim_base->Instance==TIM10)
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4a0e      	ldr	r2, [pc, #56]	@ (80024b4 <HAL_TIM_Base_MspInit+0xd0>)
 800247a:	4293      	cmp	r3, r2
 800247c:	d10d      	bne.n	800249a <HAL_TIM_Base_MspInit+0xb6>
    __HAL_RCC_TIM10_CLK_ENABLE();
 800247e:	2300      	movs	r3, #0
 8002480:	60bb      	str	r3, [r7, #8]
 8002482:	4b09      	ldr	r3, [pc, #36]	@ (80024a8 <HAL_TIM_Base_MspInit+0xc4>)
 8002484:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002486:	4a08      	ldr	r2, [pc, #32]	@ (80024a8 <HAL_TIM_Base_MspInit+0xc4>)
 8002488:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800248c:	6453      	str	r3, [r2, #68]	@ 0x44
 800248e:	4b06      	ldr	r3, [pc, #24]	@ (80024a8 <HAL_TIM_Base_MspInit+0xc4>)
 8002490:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002492:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002496:	60bb      	str	r3, [r7, #8]
 8002498:	68bb      	ldr	r3, [r7, #8]
}
 800249a:	bf00      	nop
 800249c:	3710      	adds	r7, #16
 800249e:	46bd      	mov	sp, r7
 80024a0:	bd80      	pop	{r7, pc}
 80024a2:	bf00      	nop
 80024a4:	40000800 	.word	0x40000800
 80024a8:	40023800 	.word	0x40023800
 80024ac:	20000574 	.word	0x20000574
 80024b0:	400260b8 	.word	0x400260b8
 80024b4:	40014400 	.word	0x40014400

080024b8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80024b8:	b580      	push	{r7, lr}
 80024ba:	b08e      	sub	sp, #56	@ 0x38
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024c0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80024c4:	2200      	movs	r2, #0
 80024c6:	601a      	str	r2, [r3, #0]
 80024c8:	605a      	str	r2, [r3, #4]
 80024ca:	609a      	str	r2, [r3, #8]
 80024cc:	60da      	str	r2, [r3, #12]
 80024ce:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	4a6a      	ldr	r2, [pc, #424]	@ (8002680 <HAL_TIM_MspPostInit+0x1c8>)
 80024d6:	4293      	cmp	r3, r2
 80024d8:	d11f      	bne.n	800251a <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80024da:	2300      	movs	r3, #0
 80024dc:	623b      	str	r3, [r7, #32]
 80024de:	4b69      	ldr	r3, [pc, #420]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80024e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024e2:	4a68      	ldr	r2, [pc, #416]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80024e4:	f043 0310 	orr.w	r3, r3, #16
 80024e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80024ea:	4b66      	ldr	r3, [pc, #408]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80024ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024ee:	f003 0310 	and.w	r3, r3, #16
 80024f2:	623b      	str	r3, [r7, #32]
 80024f4:	6a3b      	ldr	r3, [r7, #32]
    PE13     ------> TIM1_CH3
    PE9     ------> TIM1_CH1
    PE11     ------> TIM1_CH2
    PE14     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_14;
 80024f6:	f44f 43d4 	mov.w	r3, #27136	@ 0x6a00
 80024fa:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fc:	2302      	movs	r3, #2
 80024fe:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002500:	2300      	movs	r3, #0
 8002502:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002504:	2300      	movs	r3, #0
 8002506:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002508:	2301      	movs	r3, #1
 800250a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800250c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002510:	4619      	mov	r1, r3
 8002512:	485d      	ldr	r0, [pc, #372]	@ (8002688 <HAL_TIM_MspPostInit+0x1d0>)
 8002514:	f001 fc66 	bl	8003de4 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM10_MspPostInit 1 */

  /* USER CODE END TIM10_MspPostInit 1 */
  }

}
 8002518:	e0ae      	b.n	8002678 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM4)
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	4a5b      	ldr	r2, [pc, #364]	@ (800268c <HAL_TIM_MspPostInit+0x1d4>)
 8002520:	4293      	cmp	r3, r2
 8002522:	d11f      	bne.n	8002564 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002524:	2300      	movs	r3, #0
 8002526:	61fb      	str	r3, [r7, #28]
 8002528:	4b56      	ldr	r3, [pc, #344]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 800252a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800252c:	4a55      	ldr	r2, [pc, #340]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 800252e:	f043 0308 	orr.w	r3, r3, #8
 8002532:	6313      	str	r3, [r2, #48]	@ 0x30
 8002534:	4b53      	ldr	r3, [pc, #332]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 8002536:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002538:	f003 0308 	and.w	r3, r3, #8
 800253c:	61fb      	str	r3, [r7, #28]
 800253e:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_14;
 8002540:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8002544:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002546:	2302      	movs	r3, #2
 8002548:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800254a:	2300      	movs	r3, #0
 800254c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800254e:	2300      	movs	r3, #0
 8002550:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002552:	2302      	movs	r3, #2
 8002554:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002556:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800255a:	4619      	mov	r1, r3
 800255c:	484c      	ldr	r0, [pc, #304]	@ (8002690 <HAL_TIM_MspPostInit+0x1d8>)
 800255e:	f001 fc41 	bl	8003de4 <HAL_GPIO_Init>
}
 8002562:	e089      	b.n	8002678 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM5)
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	4a4a      	ldr	r2, [pc, #296]	@ (8002694 <HAL_TIM_MspPostInit+0x1dc>)
 800256a:	4293      	cmp	r3, r2
 800256c:	d11f      	bne.n	80025ae <HAL_TIM_MspPostInit+0xf6>
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800256e:	2300      	movs	r3, #0
 8002570:	61bb      	str	r3, [r7, #24]
 8002572:	4b44      	ldr	r3, [pc, #272]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 8002574:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002576:	4a43      	ldr	r2, [pc, #268]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 8002578:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800257c:	6313      	str	r3, [r2, #48]	@ 0x30
 800257e:	4b41      	ldr	r3, [pc, #260]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 8002580:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002582:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002586:	61bb      	str	r3, [r7, #24]
 8002588:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11|GPIO_PIN_10;
 800258a:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 800258e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002590:	2302      	movs	r3, #2
 8002592:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002594:	2300      	movs	r3, #0
 8002596:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002598:	2300      	movs	r3, #0
 800259a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 800259c:	2302      	movs	r3, #2
 800259e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80025a0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80025a4:	4619      	mov	r1, r3
 80025a6:	483c      	ldr	r0, [pc, #240]	@ (8002698 <HAL_TIM_MspPostInit+0x1e0>)
 80025a8:	f001 fc1c 	bl	8003de4 <HAL_GPIO_Init>
}
 80025ac:	e064      	b.n	8002678 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM8)
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	4a3a      	ldr	r2, [pc, #232]	@ (800269c <HAL_TIM_MspPostInit+0x1e4>)
 80025b4:	4293      	cmp	r3, r2
 80025b6:	d13c      	bne.n	8002632 <HAL_TIM_MspPostInit+0x17a>
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80025b8:	2300      	movs	r3, #0
 80025ba:	617b      	str	r3, [r7, #20]
 80025bc:	4b31      	ldr	r3, [pc, #196]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80025be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025c0:	4a30      	ldr	r2, [pc, #192]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80025c2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80025c6:	6313      	str	r3, [r2, #48]	@ 0x30
 80025c8:	4b2e      	ldr	r3, [pc, #184]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80025ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80025d0:	617b      	str	r3, [r7, #20]
 80025d2:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80025d4:	2300      	movs	r3, #0
 80025d6:	613b      	str	r3, [r7, #16]
 80025d8:	4b2a      	ldr	r3, [pc, #168]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80025da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025dc:	4a29      	ldr	r2, [pc, #164]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80025de:	f043 0304 	orr.w	r3, r3, #4
 80025e2:	6313      	str	r3, [r2, #48]	@ 0x30
 80025e4:	4b27      	ldr	r3, [pc, #156]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 80025e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025e8:	f003 0304 	and.w	r3, r3, #4
 80025ec:	613b      	str	r3, [r7, #16]
 80025ee:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 80025f0:	23c0      	movs	r3, #192	@ 0xc0
 80025f2:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025f4:	2302      	movs	r3, #2
 80025f6:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025f8:	2300      	movs	r3, #0
 80025fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80025fc:	2300      	movs	r3, #0
 80025fe:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8002600:	2303      	movs	r3, #3
 8002602:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002604:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002608:	4619      	mov	r1, r3
 800260a:	4825      	ldr	r0, [pc, #148]	@ (80026a0 <HAL_TIM_MspPostInit+0x1e8>)
 800260c:	f001 fbea 	bl	8003de4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8002610:	2340      	movs	r3, #64	@ 0x40
 8002612:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002614:	2302      	movs	r3, #2
 8002616:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002618:	2300      	movs	r3, #0
 800261a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800261c:	2300      	movs	r3, #0
 800261e:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8002620:	2303      	movs	r3, #3
 8002622:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002624:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002628:	4619      	mov	r1, r3
 800262a:	481e      	ldr	r0, [pc, #120]	@ (80026a4 <HAL_TIM_MspPostInit+0x1ec>)
 800262c:	f001 fbda 	bl	8003de4 <HAL_GPIO_Init>
}
 8002630:	e022      	b.n	8002678 <HAL_TIM_MspPostInit+0x1c0>
  else if(htim->Instance==TIM10)
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	4a1c      	ldr	r2, [pc, #112]	@ (80026a8 <HAL_TIM_MspPostInit+0x1f0>)
 8002638:	4293      	cmp	r3, r2
 800263a:	d11d      	bne.n	8002678 <HAL_TIM_MspPostInit+0x1c0>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800263c:	2300      	movs	r3, #0
 800263e:	60fb      	str	r3, [r7, #12]
 8002640:	4b10      	ldr	r3, [pc, #64]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 8002642:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002644:	4a0f      	ldr	r2, [pc, #60]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 8002646:	f043 0320 	orr.w	r3, r3, #32
 800264a:	6313      	str	r3, [r2, #48]	@ 0x30
 800264c:	4b0d      	ldr	r3, [pc, #52]	@ (8002684 <HAL_TIM_MspPostInit+0x1cc>)
 800264e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002650:	f003 0320 	and.w	r3, r3, #32
 8002654:	60fb      	str	r3, [r7, #12]
 8002656:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8002658:	2340      	movs	r3, #64	@ 0x40
 800265a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800265c:	2302      	movs	r3, #2
 800265e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002660:	2301      	movs	r3, #1
 8002662:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002664:	2302      	movs	r3, #2
 8002666:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 8002668:	2303      	movs	r3, #3
 800266a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800266c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002670:	4619      	mov	r1, r3
 8002672:	480e      	ldr	r0, [pc, #56]	@ (80026ac <HAL_TIM_MspPostInit+0x1f4>)
 8002674:	f001 fbb6 	bl	8003de4 <HAL_GPIO_Init>
}
 8002678:	bf00      	nop
 800267a:	3738      	adds	r7, #56	@ 0x38
 800267c:	46bd      	mov	sp, r7
 800267e:	bd80      	pop	{r7, pc}
 8002680:	40010000 	.word	0x40010000
 8002684:	40023800 	.word	0x40023800
 8002688:	40021000 	.word	0x40021000
 800268c:	40000800 	.word	0x40000800
 8002690:	40020c00 	.word	0x40020c00
 8002694:	40000c00 	.word	0x40000c00
 8002698:	40021c00 	.word	0x40021c00
 800269c:	40010400 	.word	0x40010400
 80026a0:	40022000 	.word	0x40022000
 80026a4:	40020800 	.word	0x40020800
 80026a8:	40014400 	.word	0x40014400
 80026ac:	40021400 	.word	0x40021400

080026b0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	b08e      	sub	sp, #56	@ 0x38
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026b8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80026bc:	2200      	movs	r2, #0
 80026be:	601a      	str	r2, [r3, #0]
 80026c0:	605a      	str	r2, [r3, #4]
 80026c2:	609a      	str	r2, [r3, #8]
 80026c4:	60da      	str	r2, [r3, #12]
 80026c6:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	4a90      	ldr	r2, [pc, #576]	@ (8002910 <HAL_UART_MspInit+0x260>)
 80026ce:	4293      	cmp	r3, r2
 80026d0:	f040 80b2 	bne.w	8002838 <HAL_UART_MspInit+0x188>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80026d4:	2300      	movs	r3, #0
 80026d6:	623b      	str	r3, [r7, #32]
 80026d8:	4b8e      	ldr	r3, [pc, #568]	@ (8002914 <HAL_UART_MspInit+0x264>)
 80026da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026dc:	4a8d      	ldr	r2, [pc, #564]	@ (8002914 <HAL_UART_MspInit+0x264>)
 80026de:	f043 0310 	orr.w	r3, r3, #16
 80026e2:	6453      	str	r3, [r2, #68]	@ 0x44
 80026e4:	4b8b      	ldr	r3, [pc, #556]	@ (8002914 <HAL_UART_MspInit+0x264>)
 80026e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026e8:	f003 0310 	and.w	r3, r3, #16
 80026ec:	623b      	str	r3, [r7, #32]
 80026ee:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80026f0:	2300      	movs	r3, #0
 80026f2:	61fb      	str	r3, [r7, #28]
 80026f4:	4b87      	ldr	r3, [pc, #540]	@ (8002914 <HAL_UART_MspInit+0x264>)
 80026f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026f8:	4a86      	ldr	r2, [pc, #536]	@ (8002914 <HAL_UART_MspInit+0x264>)
 80026fa:	f043 0302 	orr.w	r3, r3, #2
 80026fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8002700:	4b84      	ldr	r3, [pc, #528]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002702:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002704:	f003 0302 	and.w	r3, r3, #2
 8002708:	61fb      	str	r3, [r7, #28]
 800270a:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800270c:	2300      	movs	r3, #0
 800270e:	61bb      	str	r3, [r7, #24]
 8002710:	4b80      	ldr	r3, [pc, #512]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002714:	4a7f      	ldr	r2, [pc, #508]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002716:	f043 0301 	orr.w	r3, r3, #1
 800271a:	6313      	str	r3, [r2, #48]	@ 0x30
 800271c:	4b7d      	ldr	r3, [pc, #500]	@ (8002914 <HAL_UART_MspInit+0x264>)
 800271e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002720:	f003 0301 	and.w	r3, r3, #1
 8002724:	61bb      	str	r3, [r7, #24]
 8002726:	69bb      	ldr	r3, [r7, #24]
    /**USART1 GPIO Configuration
    PB7     ------> USART1_RX
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8002728:	2380      	movs	r3, #128	@ 0x80
 800272a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800272c:	2302      	movs	r3, #2
 800272e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002730:	2300      	movs	r3, #0
 8002732:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002734:	2303      	movs	r3, #3
 8002736:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002738:	2307      	movs	r3, #7
 800273a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800273c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002740:	4619      	mov	r1, r3
 8002742:	4875      	ldr	r0, [pc, #468]	@ (8002918 <HAL_UART_MspInit+0x268>)
 8002744:	f001 fb4e 	bl	8003de4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002748:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800274c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800274e:	2302      	movs	r3, #2
 8002750:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002752:	2300      	movs	r3, #0
 8002754:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002756:	2303      	movs	r3, #3
 8002758:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800275a:	2307      	movs	r3, #7
 800275c:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800275e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002762:	4619      	mov	r1, r3
 8002764:	486d      	ldr	r0, [pc, #436]	@ (800291c <HAL_UART_MspInit+0x26c>)
 8002766:	f001 fb3d 	bl	8003de4 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA2_Stream7;
 800276a:	4b6d      	ldr	r3, [pc, #436]	@ (8002920 <HAL_UART_MspInit+0x270>)
 800276c:	4a6d      	ldr	r2, [pc, #436]	@ (8002924 <HAL_UART_MspInit+0x274>)
 800276e:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 8002770:	4b6b      	ldr	r3, [pc, #428]	@ (8002920 <HAL_UART_MspInit+0x270>)
 8002772:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002776:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002778:	4b69      	ldr	r3, [pc, #420]	@ (8002920 <HAL_UART_MspInit+0x270>)
 800277a:	2240      	movs	r2, #64	@ 0x40
 800277c:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800277e:	4b68      	ldr	r3, [pc, #416]	@ (8002920 <HAL_UART_MspInit+0x270>)
 8002780:	2200      	movs	r2, #0
 8002782:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002784:	4b66      	ldr	r3, [pc, #408]	@ (8002920 <HAL_UART_MspInit+0x270>)
 8002786:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800278a:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800278c:	4b64      	ldr	r3, [pc, #400]	@ (8002920 <HAL_UART_MspInit+0x270>)
 800278e:	2200      	movs	r2, #0
 8002790:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002792:	4b63      	ldr	r3, [pc, #396]	@ (8002920 <HAL_UART_MspInit+0x270>)
 8002794:	2200      	movs	r2, #0
 8002796:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 8002798:	4b61      	ldr	r3, [pc, #388]	@ (8002920 <HAL_UART_MspInit+0x270>)
 800279a:	2200      	movs	r2, #0
 800279c:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 800279e:	4b60      	ldr	r3, [pc, #384]	@ (8002920 <HAL_UART_MspInit+0x270>)
 80027a0:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 80027a4:	621a      	str	r2, [r3, #32]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80027a6:	4b5e      	ldr	r3, [pc, #376]	@ (8002920 <HAL_UART_MspInit+0x270>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 80027ac:	485c      	ldr	r0, [pc, #368]	@ (8002920 <HAL_UART_MspInit+0x270>)
 80027ae:	f000 ff17 	bl	80035e0 <HAL_DMA_Init>
 80027b2:	4603      	mov	r3, r0
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d001      	beq.n	80027bc <HAL_UART_MspInit+0x10c>
    {
      Error_Handler();
 80027b8:	f7ff f812 	bl	80017e0 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	4a58      	ldr	r2, [pc, #352]	@ (8002920 <HAL_UART_MspInit+0x270>)
 80027c0:	639a      	str	r2, [r3, #56]	@ 0x38
 80027c2:	4a57      	ldr	r2, [pc, #348]	@ (8002920 <HAL_UART_MspInit+0x270>)
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA2_Stream5;
 80027c8:	4b57      	ldr	r3, [pc, #348]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027ca:	4a58      	ldr	r2, [pc, #352]	@ (800292c <HAL_UART_MspInit+0x27c>)
 80027cc:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 80027ce:	4b56      	ldr	r3, [pc, #344]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027d0:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80027d4:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80027d6:	4b54      	ldr	r3, [pc, #336]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027d8:	2200      	movs	r2, #0
 80027da:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80027dc:	4b52      	ldr	r3, [pc, #328]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027de:	2200      	movs	r2, #0
 80027e0:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 80027e2:	4b51      	ldr	r3, [pc, #324]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027e4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80027e8:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80027ea:	4b4f      	ldr	r3, [pc, #316]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027ec:	2200      	movs	r2, #0
 80027ee:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80027f0:	4b4d      	ldr	r3, [pc, #308]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027f2:	2200      	movs	r2, #0
 80027f4:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 80027f6:	4b4c      	ldr	r3, [pc, #304]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027f8:	2200      	movs	r2, #0
 80027fa:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80027fc:	4b4a      	ldr	r3, [pc, #296]	@ (8002928 <HAL_UART_MspInit+0x278>)
 80027fe:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002802:	621a      	str	r2, [r3, #32]
    hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002804:	4b48      	ldr	r3, [pc, #288]	@ (8002928 <HAL_UART_MspInit+0x278>)
 8002806:	2200      	movs	r2, #0
 8002808:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 800280a:	4847      	ldr	r0, [pc, #284]	@ (8002928 <HAL_UART_MspInit+0x278>)
 800280c:	f000 fee8 	bl	80035e0 <HAL_DMA_Init>
 8002810:	4603      	mov	r3, r0
 8002812:	2b00      	cmp	r3, #0
 8002814:	d001      	beq.n	800281a <HAL_UART_MspInit+0x16a>
    {
      Error_Handler();
 8002816:	f7fe ffe3 	bl	80017e0 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	4a42      	ldr	r2, [pc, #264]	@ (8002928 <HAL_UART_MspInit+0x278>)
 800281e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002820:	4a41      	ldr	r2, [pc, #260]	@ (8002928 <HAL_UART_MspInit+0x278>)
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8002826:	2200      	movs	r2, #0
 8002828:	2105      	movs	r1, #5
 800282a:	2025      	movs	r0, #37	@ 0x25
 800282c:	f000 fea1 	bl	8003572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002830:	2025      	movs	r0, #37	@ 0x25
 8002832:	f000 feba 	bl	80035aa <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART6_MspInit 1 */

  /* USER CODE END USART6_MspInit 1 */
  }

}
 8002836:	e11c      	b.n	8002a72 <HAL_UART_MspInit+0x3c2>
  else if(huart->Instance==USART3)
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	4a3c      	ldr	r2, [pc, #240]	@ (8002930 <HAL_UART_MspInit+0x280>)
 800283e:	4293      	cmp	r3, r2
 8002840:	d17e      	bne.n	8002940 <HAL_UART_MspInit+0x290>
    __HAL_RCC_USART3_CLK_ENABLE();
 8002842:	2300      	movs	r3, #0
 8002844:	617b      	str	r3, [r7, #20]
 8002846:	4b33      	ldr	r3, [pc, #204]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002848:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800284a:	4a32      	ldr	r2, [pc, #200]	@ (8002914 <HAL_UART_MspInit+0x264>)
 800284c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002850:	6413      	str	r3, [r2, #64]	@ 0x40
 8002852:	4b30      	ldr	r3, [pc, #192]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002854:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002856:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800285a:	617b      	str	r3, [r7, #20]
 800285c:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800285e:	2300      	movs	r3, #0
 8002860:	613b      	str	r3, [r7, #16]
 8002862:	4b2c      	ldr	r3, [pc, #176]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002864:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002866:	4a2b      	ldr	r2, [pc, #172]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002868:	f043 0304 	orr.w	r3, r3, #4
 800286c:	6313      	str	r3, [r2, #48]	@ 0x30
 800286e:	4b29      	ldr	r3, [pc, #164]	@ (8002914 <HAL_UART_MspInit+0x264>)
 8002870:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002872:	f003 0304 	and.w	r3, r3, #4
 8002876:	613b      	str	r3, [r7, #16]
 8002878:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_10;
 800287a:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800287e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002880:	2302      	movs	r3, #2
 8002882:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002884:	2300      	movs	r3, #0
 8002886:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002888:	2303      	movs	r3, #3
 800288a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800288c:	2307      	movs	r3, #7
 800288e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002890:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002894:	4619      	mov	r1, r3
 8002896:	4827      	ldr	r0, [pc, #156]	@ (8002934 <HAL_UART_MspInit+0x284>)
 8002898:	f001 faa4 	bl	8003de4 <HAL_GPIO_Init>
    hdma_usart3_rx.Instance = DMA1_Stream1;
 800289c:	4b26      	ldr	r3, [pc, #152]	@ (8002938 <HAL_UART_MspInit+0x288>)
 800289e:	4a27      	ldr	r2, [pc, #156]	@ (800293c <HAL_UART_MspInit+0x28c>)
 80028a0:	601a      	str	r2, [r3, #0]
    hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 80028a2:	4b25      	ldr	r3, [pc, #148]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028a4:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80028a8:	605a      	str	r2, [r3, #4]
    hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80028aa:	4b23      	ldr	r3, [pc, #140]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028ac:	2200      	movs	r2, #0
 80028ae:	609a      	str	r2, [r3, #8]
    hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80028b0:	4b21      	ldr	r3, [pc, #132]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028b2:	2200      	movs	r2, #0
 80028b4:	60da      	str	r2, [r3, #12]
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 80028b6:	4b20      	ldr	r3, [pc, #128]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028b8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80028bc:	611a      	str	r2, [r3, #16]
    hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80028be:	4b1e      	ldr	r3, [pc, #120]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028c0:	2200      	movs	r2, #0
 80028c2:	615a      	str	r2, [r3, #20]
    hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80028c4:	4b1c      	ldr	r3, [pc, #112]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028c6:	2200      	movs	r2, #0
 80028c8:	619a      	str	r2, [r3, #24]
    hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 80028ca:	4b1b      	ldr	r3, [pc, #108]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028cc:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80028d0:	61da      	str	r2, [r3, #28]
    hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80028d2:	4b19      	ldr	r3, [pc, #100]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028d4:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 80028d8:	621a      	str	r2, [r3, #32]
    hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80028da:	4b17      	ldr	r3, [pc, #92]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028dc:	2200      	movs	r2, #0
 80028de:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 80028e0:	4815      	ldr	r0, [pc, #84]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028e2:	f000 fe7d 	bl	80035e0 <HAL_DMA_Init>
 80028e6:	4603      	mov	r3, r0
 80028e8:	2b00      	cmp	r3, #0
 80028ea:	d001      	beq.n	80028f0 <HAL_UART_MspInit+0x240>
      Error_Handler();
 80028ec:	f7fe ff78 	bl	80017e0 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	4a11      	ldr	r2, [pc, #68]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028f4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80028f6:	4a10      	ldr	r2, [pc, #64]	@ (8002938 <HAL_UART_MspInit+0x288>)
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 80028fc:	2200      	movs	r2, #0
 80028fe:	2105      	movs	r1, #5
 8002900:	2027      	movs	r0, #39	@ 0x27
 8002902:	f000 fe36 	bl	8003572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8002906:	2027      	movs	r0, #39	@ 0x27
 8002908:	f000 fe4f 	bl	80035aa <HAL_NVIC_EnableIRQ>
}
 800290c:	e0b1      	b.n	8002a72 <HAL_UART_MspInit+0x3c2>
 800290e:	bf00      	nop
 8002910:	40011000 	.word	0x40011000
 8002914:	40023800 	.word	0x40023800
 8002918:	40020400 	.word	0x40020400
 800291c:	40020000 	.word	0x40020000
 8002920:	2000070c 	.word	0x2000070c
 8002924:	400264b8 	.word	0x400264b8
 8002928:	2000076c 	.word	0x2000076c
 800292c:	40026488 	.word	0x40026488
 8002930:	40004800 	.word	0x40004800
 8002934:	40020800 	.word	0x40020800
 8002938:	200007cc 	.word	0x200007cc
 800293c:	40026028 	.word	0x40026028
  else if(huart->Instance==USART6)
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	4a4d      	ldr	r2, [pc, #308]	@ (8002a7c <HAL_UART_MspInit+0x3cc>)
 8002946:	4293      	cmp	r3, r2
 8002948:	f040 8093 	bne.w	8002a72 <HAL_UART_MspInit+0x3c2>
    __HAL_RCC_USART6_CLK_ENABLE();
 800294c:	2300      	movs	r3, #0
 800294e:	60fb      	str	r3, [r7, #12]
 8002950:	4b4b      	ldr	r3, [pc, #300]	@ (8002a80 <HAL_UART_MspInit+0x3d0>)
 8002952:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002954:	4a4a      	ldr	r2, [pc, #296]	@ (8002a80 <HAL_UART_MspInit+0x3d0>)
 8002956:	f043 0320 	orr.w	r3, r3, #32
 800295a:	6453      	str	r3, [r2, #68]	@ 0x44
 800295c:	4b48      	ldr	r3, [pc, #288]	@ (8002a80 <HAL_UART_MspInit+0x3d0>)
 800295e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002960:	f003 0320 	and.w	r3, r3, #32
 8002964:	60fb      	str	r3, [r7, #12]
 8002966:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002968:	2300      	movs	r3, #0
 800296a:	60bb      	str	r3, [r7, #8]
 800296c:	4b44      	ldr	r3, [pc, #272]	@ (8002a80 <HAL_UART_MspInit+0x3d0>)
 800296e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002970:	4a43      	ldr	r2, [pc, #268]	@ (8002a80 <HAL_UART_MspInit+0x3d0>)
 8002972:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002976:	6313      	str	r3, [r2, #48]	@ 0x30
 8002978:	4b41      	ldr	r3, [pc, #260]	@ (8002a80 <HAL_UART_MspInit+0x3d0>)
 800297a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800297c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002980:	60bb      	str	r3, [r7, #8]
 8002982:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_9;
 8002984:	f44f 4384 	mov.w	r3, #16896	@ 0x4200
 8002988:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800298a:	2302      	movs	r3, #2
 800298c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800298e:	2300      	movs	r3, #0
 8002990:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002992:	2303      	movs	r3, #3
 8002994:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8002996:	2308      	movs	r3, #8
 8002998:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800299a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800299e:	4619      	mov	r1, r3
 80029a0:	4838      	ldr	r0, [pc, #224]	@ (8002a84 <HAL_UART_MspInit+0x3d4>)
 80029a2:	f001 fa1f 	bl	8003de4 <HAL_GPIO_Init>
    hdma_usart6_rx.Instance = DMA2_Stream1;
 80029a6:	4b38      	ldr	r3, [pc, #224]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029a8:	4a38      	ldr	r2, [pc, #224]	@ (8002a8c <HAL_UART_MspInit+0x3dc>)
 80029aa:	601a      	str	r2, [r3, #0]
    hdma_usart6_rx.Init.Channel = DMA_CHANNEL_5;
 80029ac:	4b36      	ldr	r3, [pc, #216]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029ae:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 80029b2:	605a      	str	r2, [r3, #4]
    hdma_usart6_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80029b4:	4b34      	ldr	r3, [pc, #208]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029b6:	2200      	movs	r2, #0
 80029b8:	609a      	str	r2, [r3, #8]
    hdma_usart6_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80029ba:	4b33      	ldr	r3, [pc, #204]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029bc:	2200      	movs	r2, #0
 80029be:	60da      	str	r2, [r3, #12]
    hdma_usart6_rx.Init.MemInc = DMA_MINC_ENABLE;
 80029c0:	4b31      	ldr	r3, [pc, #196]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029c2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80029c6:	611a      	str	r2, [r3, #16]
    hdma_usart6_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80029c8:	4b2f      	ldr	r3, [pc, #188]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029ca:	2200      	movs	r2, #0
 80029cc:	615a      	str	r2, [r3, #20]
    hdma_usart6_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80029ce:	4b2e      	ldr	r3, [pc, #184]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029d0:	2200      	movs	r2, #0
 80029d2:	619a      	str	r2, [r3, #24]
    hdma_usart6_rx.Init.Mode = DMA_NORMAL;
 80029d4:	4b2c      	ldr	r3, [pc, #176]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029d6:	2200      	movs	r2, #0
 80029d8:	61da      	str	r2, [r3, #28]
    hdma_usart6_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80029da:	4b2b      	ldr	r3, [pc, #172]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029dc:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 80029e0:	621a      	str	r2, [r3, #32]
    hdma_usart6_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80029e2:	4b29      	ldr	r3, [pc, #164]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029e4:	2200      	movs	r2, #0
 80029e6:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart6_rx) != HAL_OK)
 80029e8:	4827      	ldr	r0, [pc, #156]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029ea:	f000 fdf9 	bl	80035e0 <HAL_DMA_Init>
 80029ee:	4603      	mov	r3, r0
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d001      	beq.n	80029f8 <HAL_UART_MspInit+0x348>
      Error_Handler();
 80029f4:	f7fe fef4 	bl	80017e0 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart6_rx);
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	4a23      	ldr	r2, [pc, #140]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 80029fc:	63da      	str	r2, [r3, #60]	@ 0x3c
 80029fe:	4a22      	ldr	r2, [pc, #136]	@ (8002a88 <HAL_UART_MspInit+0x3d8>)
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	6393      	str	r3, [r2, #56]	@ 0x38
    hdma_usart6_tx.Instance = DMA2_Stream6;
 8002a04:	4b22      	ldr	r3, [pc, #136]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a06:	4a23      	ldr	r2, [pc, #140]	@ (8002a94 <HAL_UART_MspInit+0x3e4>)
 8002a08:	601a      	str	r2, [r3, #0]
    hdma_usart6_tx.Init.Channel = DMA_CHANNEL_5;
 8002a0a:	4b21      	ldr	r3, [pc, #132]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a0c:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 8002a10:	605a      	str	r2, [r3, #4]
    hdma_usart6_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002a12:	4b1f      	ldr	r3, [pc, #124]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a14:	2240      	movs	r2, #64	@ 0x40
 8002a16:	609a      	str	r2, [r3, #8]
    hdma_usart6_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002a18:	4b1d      	ldr	r3, [pc, #116]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	60da      	str	r2, [r3, #12]
    hdma_usart6_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002a1e:	4b1c      	ldr	r3, [pc, #112]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a20:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002a24:	611a      	str	r2, [r3, #16]
    hdma_usart6_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002a26:	4b1a      	ldr	r3, [pc, #104]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a28:	2200      	movs	r2, #0
 8002a2a:	615a      	str	r2, [r3, #20]
    hdma_usart6_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002a2c:	4b18      	ldr	r3, [pc, #96]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a2e:	2200      	movs	r2, #0
 8002a30:	619a      	str	r2, [r3, #24]
    hdma_usart6_tx.Init.Mode = DMA_NORMAL;
 8002a32:	4b17      	ldr	r3, [pc, #92]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a34:	2200      	movs	r2, #0
 8002a36:	61da      	str	r2, [r3, #28]
    hdma_usart6_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002a38:	4b15      	ldr	r3, [pc, #84]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a3a:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8002a3e:	621a      	str	r2, [r3, #32]
    hdma_usart6_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002a40:	4b13      	ldr	r3, [pc, #76]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a42:	2200      	movs	r2, #0
 8002a44:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart6_tx) != HAL_OK)
 8002a46:	4812      	ldr	r0, [pc, #72]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a48:	f000 fdca 	bl	80035e0 <HAL_DMA_Init>
 8002a4c:	4603      	mov	r3, r0
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d001      	beq.n	8002a56 <HAL_UART_MspInit+0x3a6>
      Error_Handler();
 8002a52:	f7fe fec5 	bl	80017e0 <Error_Handler>
    __HAL_LINKDMA(huart,hdmatx,hdma_usart6_tx);
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	4a0d      	ldr	r2, [pc, #52]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a5a:	639a      	str	r2, [r3, #56]	@ 0x38
 8002a5c:	4a0c      	ldr	r2, [pc, #48]	@ (8002a90 <HAL_UART_MspInit+0x3e0>)
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_NVIC_SetPriority(USART6_IRQn, 5, 0);
 8002a62:	2200      	movs	r2, #0
 8002a64:	2105      	movs	r1, #5
 8002a66:	2047      	movs	r0, #71	@ 0x47
 8002a68:	f000 fd83 	bl	8003572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART6_IRQn);
 8002a6c:	2047      	movs	r0, #71	@ 0x47
 8002a6e:	f000 fd9c 	bl	80035aa <HAL_NVIC_EnableIRQ>
}
 8002a72:	bf00      	nop
 8002a74:	3738      	adds	r7, #56	@ 0x38
 8002a76:	46bd      	mov	sp, r7
 8002a78:	bd80      	pop	{r7, pc}
 8002a7a:	bf00      	nop
 8002a7c:	40011400 	.word	0x40011400
 8002a80:	40023800 	.word	0x40023800
 8002a84:	40021800 	.word	0x40021800
 8002a88:	2000082c 	.word	0x2000082c
 8002a8c:	40026428 	.word	0x40026428
 8002a90:	2000088c 	.word	0x2000088c
 8002a94:	400264a0 	.word	0x400264a0

08002a98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002a98:	b580      	push	{r7, lr}
 8002a9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 8002a9c:	f002 f93c 	bl	8004d18 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002aa0:	bf00      	nop
 8002aa2:	e7fd      	b.n	8002aa0 <NMI_Handler+0x8>

08002aa4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002aa4:	b480      	push	{r7}
 8002aa6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002aa8:	bf00      	nop
 8002aaa:	e7fd      	b.n	8002aa8 <HardFault_Handler+0x4>

08002aac <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002aac:	b480      	push	{r7}
 8002aae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002ab0:	bf00      	nop
 8002ab2:	e7fd      	b.n	8002ab0 <MemManage_Handler+0x4>

08002ab4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002ab4:	b480      	push	{r7}
 8002ab6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002ab8:	bf00      	nop
 8002aba:	e7fd      	b.n	8002ab8 <BusFault_Handler+0x4>

08002abc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002abc:	b480      	push	{r7}
 8002abe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002ac0:	bf00      	nop
 8002ac2:	e7fd      	b.n	8002ac0 <UsageFault_Handler+0x4>

08002ac4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002ac4:	b480      	push	{r7}
 8002ac6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002ac8:	bf00      	nop
 8002aca:	46bd      	mov	sp, r7
 8002acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ad0:	4770      	bx	lr

08002ad2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002ad2:	b580      	push	{r7, lr}
 8002ad4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002ad6:	f000 f91d 	bl	8002d14 <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 8002ada:	f006 f815 	bl	8008b08 <xTaskGetSchedulerState>
 8002ade:	4603      	mov	r3, r0
 8002ae0:	2b01      	cmp	r3, #1
 8002ae2:	d001      	beq.n	8002ae8 <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 8002ae4:	f006 fe10 	bl	8009708 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002ae8:	bf00      	nop
 8002aea:	bd80      	pop	{r7, pc}

08002aec <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002aec:	b580      	push	{r7, lr}
 8002aee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 8002af0:	2008      	movs	r0, #8
 8002af2:	f001 fb45 	bl	8004180 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002af6:	bf00      	nop
 8002af8:	bd80      	pop	{r7, pc}

08002afa <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8002afa:	b580      	push	{r7, lr}
 8002afc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(INT1_ACCEL_Pin_Pin);
 8002afe:	2010      	movs	r0, #16
 8002b00:	f001 fb3e 	bl	8004180 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 8002b04:	bf00      	nop
 8002b06:	bd80      	pop	{r7, pc}

08002b08 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 8002b08:	b580      	push	{r7, lr}
 8002b0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
 8002b0c:	4802      	ldr	r0, [pc, #8]	@ (8002b18 <DMA1_Stream1_IRQHandler+0x10>)
 8002b0e:	f000 feff 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 8002b12:	bf00      	nop
 8002b14:	bd80      	pop	{r7, pc}
 8002b16:	bf00      	nop
 8002b18:	200007cc 	.word	0x200007cc

08002b1c <CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles CAN1 RX0 interrupts.
  */
void CAN1_RX0_IRQHandler(void)
{
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX0_IRQn 0 */

  /* USER CODE END CAN1_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8002b20:	4802      	ldr	r0, [pc, #8]	@ (8002b2c <CAN1_RX0_IRQHandler+0x10>)
 8002b22:	f000 fa12 	bl	8002f4a <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX0_IRQn 1 */

  /* USER CODE END CAN1_RX0_IRQn 1 */
}
 8002b26:	bf00      	nop
 8002b28:	bd80      	pop	{r7, pc}
 8002b2a:	bf00      	nop
 8002b2c:	200002b0 	.word	0x200002b0

08002b30 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002b30:	b580      	push	{r7, lr}
 8002b32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002b34:	4802      	ldr	r0, [pc, #8]	@ (8002b40 <USART1_IRQHandler+0x10>)
 8002b36:	f003 f9f5 	bl	8005f24 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002b3a:	bf00      	nop
 8002b3c:	bd80      	pop	{r7, pc}
 8002b3e:	bf00      	nop
 8002b40:	20000634 	.word	0x20000634

08002b44 <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 8002b44:	b580      	push	{r7, lr}
 8002b46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch3);
 8002b48:	4802      	ldr	r0, [pc, #8]	@ (8002b54 <DMA1_Stream7_IRQHandler+0x10>)
 8002b4a:	f000 fee1 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8002b4e:	bf00      	nop
 8002b50:	bd80      	pop	{r7, pc}
 8002b52:	bf00      	nop
 8002b54:	20000574 	.word	0x20000574

08002b58 <DMA2_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA2 stream1 global interrupt.
  */
void DMA2_Stream1_IRQHandler(void)
{
 8002b58:	b580      	push	{r7, lr}
 8002b5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */

  /* USER CODE END DMA2_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart6_rx);
 8002b5c:	4802      	ldr	r0, [pc, #8]	@ (8002b68 <DMA2_Stream1_IRQHandler+0x10>)
 8002b5e:	f000 fed7 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */

  /* USER CODE END DMA2_Stream1_IRQn 1 */
}
 8002b62:	bf00      	nop
 8002b64:	bd80      	pop	{r7, pc}
 8002b66:	bf00      	nop
 8002b68:	2000082c 	.word	0x2000082c

08002b6c <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8002b6c:	b580      	push	{r7, lr}
 8002b6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim8_ch1_ch2_ch3);
 8002b70:	4802      	ldr	r0, [pc, #8]	@ (8002b7c <DMA2_Stream2_IRQHandler+0x10>)
 8002b72:	f000 fecd 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8002b76:	bf00      	nop
 8002b78:	bd80      	pop	{r7, pc}
 8002b7a:	bf00      	nop
 8002b7c:	200005d4 	.word	0x200005d4

08002b80 <DMA2_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA2 stream3 global interrupt.
  */
void DMA2_Stream3_IRQHandler(void)
{
 8002b80:	b580      	push	{r7, lr}
 8002b82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 8002b84:	4802      	ldr	r0, [pc, #8]	@ (8002b90 <DMA2_Stream3_IRQHandler+0x10>)
 8002b86:	f000 fec3 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */

  /* USER CODE END DMA2_Stream3_IRQn 1 */
}
 8002b8a:	bf00      	nop
 8002b8c:	bd80      	pop	{r7, pc}
 8002b8e:	bf00      	nop
 8002b90:	20000514 	.word	0x20000514

08002b94 <CAN2_RX0_IRQHandler>:

/**
  * @brief This function handles CAN2 RX0 interrupts.
  */
void CAN2_RX0_IRQHandler(void)
{
 8002b94:	b580      	push	{r7, lr}
 8002b96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_RX0_IRQn 0 */

  /* USER CODE END CAN2_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8002b98:	4802      	ldr	r0, [pc, #8]	@ (8002ba4 <CAN2_RX0_IRQHandler+0x10>)
 8002b9a:	f000 f9d6 	bl	8002f4a <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_RX0_IRQn 1 */

  /* USER CODE END CAN2_RX0_IRQn 1 */
}
 8002b9e:	bf00      	nop
 8002ba0:	bd80      	pop	{r7, pc}
 8002ba2:	bf00      	nop
 8002ba4:	200002d8 	.word	0x200002d8

08002ba8 <DMA2_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA2 stream5 global interrupt.
  */
void DMA2_Stream5_IRQHandler(void)
{
 8002ba8:	b580      	push	{r7, lr}
 8002baa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */

  /* USER CODE END DMA2_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8002bac:	4802      	ldr	r0, [pc, #8]	@ (8002bb8 <DMA2_Stream5_IRQHandler+0x10>)
 8002bae:	f000 feaf 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */

  /* USER CODE END DMA2_Stream5_IRQn 1 */
}
 8002bb2:	bf00      	nop
 8002bb4:	bd80      	pop	{r7, pc}
 8002bb6:	bf00      	nop
 8002bb8:	2000076c 	.word	0x2000076c

08002bbc <DMA2_Stream6_IRQHandler>:

/**
  * @brief This function handles DMA2 stream6 global interrupt.
  */
void DMA2_Stream6_IRQHandler(void)
{
 8002bbc:	b580      	push	{r7, lr}
 8002bbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */

  /* USER CODE END DMA2_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart6_tx);
 8002bc0:	4802      	ldr	r0, [pc, #8]	@ (8002bcc <DMA2_Stream6_IRQHandler+0x10>)
 8002bc2:	f000 fea5 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */

  /* USER CODE END DMA2_Stream6_IRQn 1 */
}
 8002bc6:	bf00      	nop
 8002bc8:	bd80      	pop	{r7, pc}
 8002bca:	bf00      	nop
 8002bcc:	2000088c 	.word	0x2000088c

08002bd0 <DMA2_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA2 stream7 global interrupt.
  */
void DMA2_Stream7_IRQHandler(void)
{
 8002bd0:	b580      	push	{r7, lr}
 8002bd2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 8002bd4:	4802      	ldr	r0, [pc, #8]	@ (8002be0 <DMA2_Stream7_IRQHandler+0x10>)
 8002bd6:	f000 fe9b 	bl	8003910 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */

  /* USER CODE END DMA2_Stream7_IRQn 1 */
}
 8002bda:	bf00      	nop
 8002bdc:	bd80      	pop	{r7, pc}
 8002bde:	bf00      	nop
 8002be0:	2000070c 	.word	0x2000070c

08002be4 <USART6_IRQHandler>:

/**
  * @brief This function handles USART6 global interrupt.
  */
void USART6_IRQHandler(void)
{
 8002be4:	b580      	push	{r7, lr}
 8002be6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART6_IRQn 0 */

  /* USER CODE END USART6_IRQn 0 */
  HAL_UART_IRQHandler(&huart6);
 8002be8:	4802      	ldr	r0, [pc, #8]	@ (8002bf4 <USART6_IRQHandler+0x10>)
 8002bea:	f003 f99b 	bl	8005f24 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART6_IRQn 1 */

  /* USER CODE END USART6_IRQn 1 */
}
 8002bee:	bf00      	nop
 8002bf0:	bd80      	pop	{r7, pc}
 8002bf2:	bf00      	nop
 8002bf4:	200006c4 	.word	0x200006c4

08002bf8 <SystemInit>:
 8002bf8:	b480      	push	{r7}
 8002bfa:	af00      	add	r7, sp, #0
 8002bfc:	4b06      	ldr	r3, [pc, #24]	@ (8002c18 <SystemInit+0x20>)
 8002bfe:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002c02:	4a05      	ldr	r2, [pc, #20]	@ (8002c18 <SystemInit+0x20>)
 8002c04:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002c08:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002c0c:	bf00      	nop
 8002c0e:	46bd      	mov	sp, r7
 8002c10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c14:	4770      	bx	lr
 8002c16:	bf00      	nop
 8002c18:	e000ed00 	.word	0xe000ed00

08002c1c <Reset_Handler>:
 8002c1c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002c54 <LoopFillZerobss+0xe>
 8002c20:	f7ff ffea 	bl	8002bf8 <SystemInit>
 8002c24:	480c      	ldr	r0, [pc, #48]	@ (8002c58 <LoopFillZerobss+0x12>)
 8002c26:	490d      	ldr	r1, [pc, #52]	@ (8002c5c <LoopFillZerobss+0x16>)
 8002c28:	4a0d      	ldr	r2, [pc, #52]	@ (8002c60 <LoopFillZerobss+0x1a>)
 8002c2a:	2300      	movs	r3, #0
 8002c2c:	e002      	b.n	8002c34 <LoopCopyDataInit>

08002c2e <CopyDataInit>:
 8002c2e:	58d4      	ldr	r4, [r2, r3]
 8002c30:	50c4      	str	r4, [r0, r3]
 8002c32:	3304      	adds	r3, #4

08002c34 <LoopCopyDataInit>:
 8002c34:	18c4      	adds	r4, r0, r3
 8002c36:	428c      	cmp	r4, r1
 8002c38:	d3f9      	bcc.n	8002c2e <CopyDataInit>
 8002c3a:	4a0a      	ldr	r2, [pc, #40]	@ (8002c64 <LoopFillZerobss+0x1e>)
 8002c3c:	4c0a      	ldr	r4, [pc, #40]	@ (8002c68 <LoopFillZerobss+0x22>)
 8002c3e:	2300      	movs	r3, #0
 8002c40:	e001      	b.n	8002c46 <LoopFillZerobss>

08002c42 <FillZerobss>:
 8002c42:	6013      	str	r3, [r2, #0]
 8002c44:	3204      	adds	r2, #4

08002c46 <LoopFillZerobss>:
 8002c46:	42a2      	cmp	r2, r4
 8002c48:	d3fb      	bcc.n	8002c42 <FillZerobss>
 8002c4a:	f007 f83b 	bl	8009cc4 <__libc_init_array>
 8002c4e:	f7fd fe33 	bl	80008b8 <main>
 8002c52:	4770      	bx	lr
 8002c54:	20020000 	.word	0x20020000
 8002c58:	20000000 	.word	0x20000000
 8002c5c:	20000060 	.word	0x20000060
 8002c60:	08009efc 	.word	0x08009efc
 8002c64:	20000060 	.word	0x20000060
 8002c68:	200054a8 	.word	0x200054a8

08002c6c <ADC_IRQHandler>:
 8002c6c:	e7fe      	b.n	8002c6c <ADC_IRQHandler>
	...

08002c70 <HAL_Init>:
 8002c70:	b580      	push	{r7, lr}
 8002c72:	af00      	add	r7, sp, #0
 8002c74:	4b0e      	ldr	r3, [pc, #56]	@ (8002cb0 <HAL_Init+0x40>)
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	4a0d      	ldr	r2, [pc, #52]	@ (8002cb0 <HAL_Init+0x40>)
 8002c7a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002c7e:	6013      	str	r3, [r2, #0]
 8002c80:	4b0b      	ldr	r3, [pc, #44]	@ (8002cb0 <HAL_Init+0x40>)
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	4a0a      	ldr	r2, [pc, #40]	@ (8002cb0 <HAL_Init+0x40>)
 8002c86:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002c8a:	6013      	str	r3, [r2, #0]
 8002c8c:	4b08      	ldr	r3, [pc, #32]	@ (8002cb0 <HAL_Init+0x40>)
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	4a07      	ldr	r2, [pc, #28]	@ (8002cb0 <HAL_Init+0x40>)
 8002c92:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002c96:	6013      	str	r3, [r2, #0]
 8002c98:	2003      	movs	r0, #3
 8002c9a:	f000 fc5f 	bl	800355c <HAL_NVIC_SetPriorityGrouping>
 8002c9e:	200f      	movs	r0, #15
 8002ca0:	f000 f808 	bl	8002cb4 <HAL_InitTick>
 8002ca4:	f7ff f932 	bl	8001f0c <HAL_MspInit>
 8002ca8:	2300      	movs	r3, #0
 8002caa:	4618      	mov	r0, r3
 8002cac:	bd80      	pop	{r7, pc}
 8002cae:	bf00      	nop
 8002cb0:	40023c00 	.word	0x40023c00

08002cb4 <HAL_InitTick>:
 8002cb4:	b580      	push	{r7, lr}
 8002cb6:	b082      	sub	sp, #8
 8002cb8:	af00      	add	r7, sp, #0
 8002cba:	6078      	str	r0, [r7, #4]
 8002cbc:	4b12      	ldr	r3, [pc, #72]	@ (8002d08 <HAL_InitTick+0x54>)
 8002cbe:	681a      	ldr	r2, [r3, #0]
 8002cc0:	4b12      	ldr	r3, [pc, #72]	@ (8002d0c <HAL_InitTick+0x58>)
 8002cc2:	781b      	ldrb	r3, [r3, #0]
 8002cc4:	4619      	mov	r1, r3
 8002cc6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002cca:	fbb3 f3f1 	udiv	r3, r3, r1
 8002cce:	fbb2 f3f3 	udiv	r3, r2, r3
 8002cd2:	4618      	mov	r0, r3
 8002cd4:	f000 fc77 	bl	80035c6 <HAL_SYSTICK_Config>
 8002cd8:	4603      	mov	r3, r0
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d001      	beq.n	8002ce2 <HAL_InitTick+0x2e>
 8002cde:	2301      	movs	r3, #1
 8002ce0:	e00e      	b.n	8002d00 <HAL_InitTick+0x4c>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	2b0f      	cmp	r3, #15
 8002ce6:	d80a      	bhi.n	8002cfe <HAL_InitTick+0x4a>
 8002ce8:	2200      	movs	r2, #0
 8002cea:	6879      	ldr	r1, [r7, #4]
 8002cec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002cf0:	f000 fc3f 	bl	8003572 <HAL_NVIC_SetPriority>
 8002cf4:	4a06      	ldr	r2, [pc, #24]	@ (8002d10 <HAL_InitTick+0x5c>)
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	6013      	str	r3, [r2, #0]
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	e000      	b.n	8002d00 <HAL_InitTick+0x4c>
 8002cfe:	2301      	movs	r3, #1
 8002d00:	4618      	mov	r0, r3
 8002d02:	3708      	adds	r7, #8
 8002d04:	46bd      	mov	sp, r7
 8002d06:	bd80      	pop	{r7, pc}
 8002d08:	20000000 	.word	0x20000000
 8002d0c:	20000008 	.word	0x20000008
 8002d10:	20000004 	.word	0x20000004

08002d14 <HAL_IncTick>:
 8002d14:	b480      	push	{r7}
 8002d16:	af00      	add	r7, sp, #0
 8002d18:	4b06      	ldr	r3, [pc, #24]	@ (8002d34 <HAL_IncTick+0x20>)
 8002d1a:	781b      	ldrb	r3, [r3, #0]
 8002d1c:	461a      	mov	r2, r3
 8002d1e:	4b06      	ldr	r3, [pc, #24]	@ (8002d38 <HAL_IncTick+0x24>)
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	4413      	add	r3, r2
 8002d24:	4a04      	ldr	r2, [pc, #16]	@ (8002d38 <HAL_IncTick+0x24>)
 8002d26:	6013      	str	r3, [r2, #0]
 8002d28:	bf00      	nop
 8002d2a:	46bd      	mov	sp, r7
 8002d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d30:	4770      	bx	lr
 8002d32:	bf00      	nop
 8002d34:	20000008 	.word	0x20000008
 8002d38:	2000097c 	.word	0x2000097c

08002d3c <HAL_GetTick>:
 8002d3c:	b480      	push	{r7}
 8002d3e:	af00      	add	r7, sp, #0
 8002d40:	4b03      	ldr	r3, [pc, #12]	@ (8002d50 <HAL_GetTick+0x14>)
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	4618      	mov	r0, r3
 8002d46:	46bd      	mov	sp, r7
 8002d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d4c:	4770      	bx	lr
 8002d4e:	bf00      	nop
 8002d50:	2000097c 	.word	0x2000097c

08002d54 <HAL_CAN_Init>:
 8002d54:	b580      	push	{r7, lr}
 8002d56:	b084      	sub	sp, #16
 8002d58:	af00      	add	r7, sp, #0
 8002d5a:	6078      	str	r0, [r7, #4]
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d101      	bne.n	8002d66 <HAL_CAN_Init+0x12>
 8002d62:	2301      	movs	r3, #1
 8002d64:	e0ed      	b.n	8002f42 <HAL_CAN_Init+0x1ee>
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002d6c:	b2db      	uxtb	r3, r3
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d102      	bne.n	8002d78 <HAL_CAN_Init+0x24>
 8002d72:	6878      	ldr	r0, [r7, #4]
 8002d74:	f7ff f8f6 	bl	8001f64 <HAL_CAN_MspInit>
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	681a      	ldr	r2, [r3, #0]
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	f042 0201 	orr.w	r2, r2, #1
 8002d86:	601a      	str	r2, [r3, #0]
 8002d88:	f7ff ffd8 	bl	8002d3c <HAL_GetTick>
 8002d8c:	60f8      	str	r0, [r7, #12]
 8002d8e:	e012      	b.n	8002db6 <HAL_CAN_Init+0x62>
 8002d90:	f7ff ffd4 	bl	8002d3c <HAL_GetTick>
 8002d94:	4602      	mov	r2, r0
 8002d96:	68fb      	ldr	r3, [r7, #12]
 8002d98:	1ad3      	subs	r3, r2, r3
 8002d9a:	2b0a      	cmp	r3, #10
 8002d9c:	d90b      	bls.n	8002db6 <HAL_CAN_Init+0x62>
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002da2:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	625a      	str	r2, [r3, #36]	@ 0x24
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	2205      	movs	r2, #5
 8002dae:	f883 2020 	strb.w	r2, [r3, #32]
 8002db2:	2301      	movs	r3, #1
 8002db4:	e0c5      	b.n	8002f42 <HAL_CAN_Init+0x1ee>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	685b      	ldr	r3, [r3, #4]
 8002dbc:	f003 0301 	and.w	r3, r3, #1
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	d0e5      	beq.n	8002d90 <HAL_CAN_Init+0x3c>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	681a      	ldr	r2, [r3, #0]
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	f022 0202 	bic.w	r2, r2, #2
 8002dd2:	601a      	str	r2, [r3, #0]
 8002dd4:	f7ff ffb2 	bl	8002d3c <HAL_GetTick>
 8002dd8:	60f8      	str	r0, [r7, #12]
 8002dda:	e012      	b.n	8002e02 <HAL_CAN_Init+0xae>
 8002ddc:	f7ff ffae 	bl	8002d3c <HAL_GetTick>
 8002de0:	4602      	mov	r2, r0
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	1ad3      	subs	r3, r2, r3
 8002de6:	2b0a      	cmp	r3, #10
 8002de8:	d90b      	bls.n	8002e02 <HAL_CAN_Init+0xae>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002dee:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	625a      	str	r2, [r3, #36]	@ 0x24
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	2205      	movs	r2, #5
 8002dfa:	f883 2020 	strb.w	r2, [r3, #32]
 8002dfe:	2301      	movs	r3, #1
 8002e00:	e09f      	b.n	8002f42 <HAL_CAN_Init+0x1ee>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	685b      	ldr	r3, [r3, #4]
 8002e08:	f003 0302 	and.w	r3, r3, #2
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d1e5      	bne.n	8002ddc <HAL_CAN_Init+0x88>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	7e1b      	ldrb	r3, [r3, #24]
 8002e14:	2b01      	cmp	r3, #1
 8002e16:	d108      	bne.n	8002e2a <HAL_CAN_Init+0xd6>
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	681a      	ldr	r2, [r3, #0]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8002e26:	601a      	str	r2, [r3, #0]
 8002e28:	e007      	b.n	8002e3a <HAL_CAN_Init+0xe6>
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	681a      	ldr	r2, [r3, #0]
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002e38:	601a      	str	r2, [r3, #0]
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	7e5b      	ldrb	r3, [r3, #25]
 8002e3e:	2b01      	cmp	r3, #1
 8002e40:	d108      	bne.n	8002e54 <HAL_CAN_Init+0x100>
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	681a      	ldr	r2, [r3, #0]
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002e50:	601a      	str	r2, [r3, #0]
 8002e52:	e007      	b.n	8002e64 <HAL_CAN_Init+0x110>
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	681a      	ldr	r2, [r3, #0]
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002e62:	601a      	str	r2, [r3, #0]
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	7e9b      	ldrb	r3, [r3, #26]
 8002e68:	2b01      	cmp	r3, #1
 8002e6a:	d108      	bne.n	8002e7e <HAL_CAN_Init+0x12a>
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	681a      	ldr	r2, [r3, #0]
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	f042 0220 	orr.w	r2, r2, #32
 8002e7a:	601a      	str	r2, [r3, #0]
 8002e7c:	e007      	b.n	8002e8e <HAL_CAN_Init+0x13a>
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	681a      	ldr	r2, [r3, #0]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	f022 0220 	bic.w	r2, r2, #32
 8002e8c:	601a      	str	r2, [r3, #0]
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	7edb      	ldrb	r3, [r3, #27]
 8002e92:	2b01      	cmp	r3, #1
 8002e94:	d108      	bne.n	8002ea8 <HAL_CAN_Init+0x154>
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	681a      	ldr	r2, [r3, #0]
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	f022 0210 	bic.w	r2, r2, #16
 8002ea4:	601a      	str	r2, [r3, #0]
 8002ea6:	e007      	b.n	8002eb8 <HAL_CAN_Init+0x164>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	681a      	ldr	r2, [r3, #0]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f042 0210 	orr.w	r2, r2, #16
 8002eb6:	601a      	str	r2, [r3, #0]
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	7f1b      	ldrb	r3, [r3, #28]
 8002ebc:	2b01      	cmp	r3, #1
 8002ebe:	d108      	bne.n	8002ed2 <HAL_CAN_Init+0x17e>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	681a      	ldr	r2, [r3, #0]
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f042 0208 	orr.w	r2, r2, #8
 8002ece:	601a      	str	r2, [r3, #0]
 8002ed0:	e007      	b.n	8002ee2 <HAL_CAN_Init+0x18e>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	681a      	ldr	r2, [r3, #0]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	f022 0208 	bic.w	r2, r2, #8
 8002ee0:	601a      	str	r2, [r3, #0]
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	7f5b      	ldrb	r3, [r3, #29]
 8002ee6:	2b01      	cmp	r3, #1
 8002ee8:	d108      	bne.n	8002efc <HAL_CAN_Init+0x1a8>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	681a      	ldr	r2, [r3, #0]
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	f042 0204 	orr.w	r2, r2, #4
 8002ef8:	601a      	str	r2, [r3, #0]
 8002efa:	e007      	b.n	8002f0c <HAL_CAN_Init+0x1b8>
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	681a      	ldr	r2, [r3, #0]
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f022 0204 	bic.w	r2, r2, #4
 8002f0a:	601a      	str	r2, [r3, #0]
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	689a      	ldr	r2, [r3, #8]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	68db      	ldr	r3, [r3, #12]
 8002f14:	431a      	orrs	r2, r3
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	691b      	ldr	r3, [r3, #16]
 8002f1a:	431a      	orrs	r2, r3
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	695b      	ldr	r3, [r3, #20]
 8002f20:	ea42 0103 	orr.w	r1, r2, r3
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	685b      	ldr	r3, [r3, #4]
 8002f28:	1e5a      	subs	r2, r3, #1
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	430a      	orrs	r2, r1
 8002f30:	61da      	str	r2, [r3, #28]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	2200      	movs	r2, #0
 8002f36:	625a      	str	r2, [r3, #36]	@ 0x24
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	2201      	movs	r2, #1
 8002f3c:	f883 2020 	strb.w	r2, [r3, #32]
 8002f40:	2300      	movs	r3, #0
 8002f42:	4618      	mov	r0, r3
 8002f44:	3710      	adds	r7, #16
 8002f46:	46bd      	mov	sp, r7
 8002f48:	bd80      	pop	{r7, pc}

08002f4a <HAL_CAN_IRQHandler>:
 8002f4a:	b580      	push	{r7, lr}
 8002f4c:	b08a      	sub	sp, #40	@ 0x28
 8002f4e:	af00      	add	r7, sp, #0
 8002f50:	6078      	str	r0, [r7, #4]
 8002f52:	2300      	movs	r3, #0
 8002f54:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	695b      	ldr	r3, [r3, #20]
 8002f5c:	623b      	str	r3, [r7, #32]
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	685b      	ldr	r3, [r3, #4]
 8002f64:	61fb      	str	r3, [r7, #28]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	689b      	ldr	r3, [r3, #8]
 8002f6c:	61bb      	str	r3, [r7, #24]
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	68db      	ldr	r3, [r3, #12]
 8002f74:	617b      	str	r3, [r7, #20]
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	691b      	ldr	r3, [r3, #16]
 8002f7c:	613b      	str	r3, [r7, #16]
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	699b      	ldr	r3, [r3, #24]
 8002f84:	60fb      	str	r3, [r7, #12]
 8002f86:	6a3b      	ldr	r3, [r7, #32]
 8002f88:	f003 0301 	and.w	r3, r3, #1
 8002f8c:	2b00      	cmp	r3, #0
 8002f8e:	d07c      	beq.n	800308a <HAL_CAN_IRQHandler+0x140>
 8002f90:	69bb      	ldr	r3, [r7, #24]
 8002f92:	f003 0301 	and.w	r3, r3, #1
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d023      	beq.n	8002fe2 <HAL_CAN_IRQHandler+0x98>
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	2201      	movs	r2, #1
 8002fa0:	609a      	str	r2, [r3, #8]
 8002fa2:	69bb      	ldr	r3, [r7, #24]
 8002fa4:	f003 0302 	and.w	r3, r3, #2
 8002fa8:	2b00      	cmp	r3, #0
 8002faa:	d003      	beq.n	8002fb4 <HAL_CAN_IRQHandler+0x6a>
 8002fac:	6878      	ldr	r0, [r7, #4]
 8002fae:	f000 f983 	bl	80032b8 <HAL_CAN_TxMailbox0CompleteCallback>
 8002fb2:	e016      	b.n	8002fe2 <HAL_CAN_IRQHandler+0x98>
 8002fb4:	69bb      	ldr	r3, [r7, #24]
 8002fb6:	f003 0304 	and.w	r3, r3, #4
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d004      	beq.n	8002fc8 <HAL_CAN_IRQHandler+0x7e>
 8002fbe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002fc0:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002fc4:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fc6:	e00c      	b.n	8002fe2 <HAL_CAN_IRQHandler+0x98>
 8002fc8:	69bb      	ldr	r3, [r7, #24]
 8002fca:	f003 0308 	and.w	r3, r3, #8
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d004      	beq.n	8002fdc <HAL_CAN_IRQHandler+0x92>
 8002fd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002fd4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002fd8:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fda:	e002      	b.n	8002fe2 <HAL_CAN_IRQHandler+0x98>
 8002fdc:	6878      	ldr	r0, [r7, #4]
 8002fde:	f000 f989 	bl	80032f4 <HAL_CAN_TxMailbox0AbortCallback>
 8002fe2:	69bb      	ldr	r3, [r7, #24]
 8002fe4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d024      	beq.n	8003036 <HAL_CAN_IRQHandler+0xec>
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002ff4:	609a      	str	r2, [r3, #8]
 8002ff6:	69bb      	ldr	r3, [r7, #24]
 8002ff8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	d003      	beq.n	8003008 <HAL_CAN_IRQHandler+0xbe>
 8003000:	6878      	ldr	r0, [r7, #4]
 8003002:	f000 f963 	bl	80032cc <HAL_CAN_TxMailbox1CompleteCallback>
 8003006:	e016      	b.n	8003036 <HAL_CAN_IRQHandler+0xec>
 8003008:	69bb      	ldr	r3, [r7, #24]
 800300a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800300e:	2b00      	cmp	r3, #0
 8003010:	d004      	beq.n	800301c <HAL_CAN_IRQHandler+0xd2>
 8003012:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003014:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8003018:	627b      	str	r3, [r7, #36]	@ 0x24
 800301a:	e00c      	b.n	8003036 <HAL_CAN_IRQHandler+0xec>
 800301c:	69bb      	ldr	r3, [r7, #24]
 800301e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003022:	2b00      	cmp	r3, #0
 8003024:	d004      	beq.n	8003030 <HAL_CAN_IRQHandler+0xe6>
 8003026:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003028:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800302c:	627b      	str	r3, [r7, #36]	@ 0x24
 800302e:	e002      	b.n	8003036 <HAL_CAN_IRQHandler+0xec>
 8003030:	6878      	ldr	r0, [r7, #4]
 8003032:	f000 f969 	bl	8003308 <HAL_CAN_TxMailbox1AbortCallback>
 8003036:	69bb      	ldr	r3, [r7, #24]
 8003038:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800303c:	2b00      	cmp	r3, #0
 800303e:	d024      	beq.n	800308a <HAL_CAN_IRQHandler+0x140>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8003048:	609a      	str	r2, [r3, #8]
 800304a:	69bb      	ldr	r3, [r7, #24]
 800304c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003050:	2b00      	cmp	r3, #0
 8003052:	d003      	beq.n	800305c <HAL_CAN_IRQHandler+0x112>
 8003054:	6878      	ldr	r0, [r7, #4]
 8003056:	f000 f943 	bl	80032e0 <HAL_CAN_TxMailbox2CompleteCallback>
 800305a:	e016      	b.n	800308a <HAL_CAN_IRQHandler+0x140>
 800305c:	69bb      	ldr	r3, [r7, #24]
 800305e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003062:	2b00      	cmp	r3, #0
 8003064:	d004      	beq.n	8003070 <HAL_CAN_IRQHandler+0x126>
 8003066:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003068:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800306c:	627b      	str	r3, [r7, #36]	@ 0x24
 800306e:	e00c      	b.n	800308a <HAL_CAN_IRQHandler+0x140>
 8003070:	69bb      	ldr	r3, [r7, #24]
 8003072:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003076:	2b00      	cmp	r3, #0
 8003078:	d004      	beq.n	8003084 <HAL_CAN_IRQHandler+0x13a>
 800307a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800307c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003080:	627b      	str	r3, [r7, #36]	@ 0x24
 8003082:	e002      	b.n	800308a <HAL_CAN_IRQHandler+0x140>
 8003084:	6878      	ldr	r0, [r7, #4]
 8003086:	f000 f949 	bl	800331c <HAL_CAN_TxMailbox2AbortCallback>
 800308a:	6a3b      	ldr	r3, [r7, #32]
 800308c:	f003 0308 	and.w	r3, r3, #8
 8003090:	2b00      	cmp	r3, #0
 8003092:	d00c      	beq.n	80030ae <HAL_CAN_IRQHandler+0x164>
 8003094:	697b      	ldr	r3, [r7, #20]
 8003096:	f003 0310 	and.w	r3, r3, #16
 800309a:	2b00      	cmp	r3, #0
 800309c:	d007      	beq.n	80030ae <HAL_CAN_IRQHandler+0x164>
 800309e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030a0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80030a4:	627b      	str	r3, [r7, #36]	@ 0x24
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	2210      	movs	r2, #16
 80030ac:	60da      	str	r2, [r3, #12]
 80030ae:	6a3b      	ldr	r3, [r7, #32]
 80030b0:	f003 0304 	and.w	r3, r3, #4
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d00b      	beq.n	80030d0 <HAL_CAN_IRQHandler+0x186>
 80030b8:	697b      	ldr	r3, [r7, #20]
 80030ba:	f003 0308 	and.w	r3, r3, #8
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d006      	beq.n	80030d0 <HAL_CAN_IRQHandler+0x186>
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	2208      	movs	r2, #8
 80030c8:	60da      	str	r2, [r3, #12]
 80030ca:	6878      	ldr	r0, [r7, #4]
 80030cc:	f000 f93a 	bl	8003344 <HAL_CAN_RxFifo0FullCallback>
 80030d0:	6a3b      	ldr	r3, [r7, #32]
 80030d2:	f003 0302 	and.w	r3, r3, #2
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	d009      	beq.n	80030ee <HAL_CAN_IRQHandler+0x1a4>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	68db      	ldr	r3, [r3, #12]
 80030e0:	f003 0303 	and.w	r3, r3, #3
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	d002      	beq.n	80030ee <HAL_CAN_IRQHandler+0x1a4>
 80030e8:	6878      	ldr	r0, [r7, #4]
 80030ea:	f000 f921 	bl	8003330 <HAL_CAN_RxFifo0MsgPendingCallback>
 80030ee:	6a3b      	ldr	r3, [r7, #32]
 80030f0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d00c      	beq.n	8003112 <HAL_CAN_IRQHandler+0x1c8>
 80030f8:	693b      	ldr	r3, [r7, #16]
 80030fa:	f003 0310 	and.w	r3, r3, #16
 80030fe:	2b00      	cmp	r3, #0
 8003100:	d007      	beq.n	8003112 <HAL_CAN_IRQHandler+0x1c8>
 8003102:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003104:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003108:	627b      	str	r3, [r7, #36]	@ 0x24
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	2210      	movs	r2, #16
 8003110:	611a      	str	r2, [r3, #16]
 8003112:	6a3b      	ldr	r3, [r7, #32]
 8003114:	f003 0320 	and.w	r3, r3, #32
 8003118:	2b00      	cmp	r3, #0
 800311a:	d00b      	beq.n	8003134 <HAL_CAN_IRQHandler+0x1ea>
 800311c:	693b      	ldr	r3, [r7, #16]
 800311e:	f003 0308 	and.w	r3, r3, #8
 8003122:	2b00      	cmp	r3, #0
 8003124:	d006      	beq.n	8003134 <HAL_CAN_IRQHandler+0x1ea>
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	2208      	movs	r2, #8
 800312c:	611a      	str	r2, [r3, #16]
 800312e:	6878      	ldr	r0, [r7, #4]
 8003130:	f000 f91c 	bl	800336c <HAL_CAN_RxFifo1FullCallback>
 8003134:	6a3b      	ldr	r3, [r7, #32]
 8003136:	f003 0310 	and.w	r3, r3, #16
 800313a:	2b00      	cmp	r3, #0
 800313c:	d009      	beq.n	8003152 <HAL_CAN_IRQHandler+0x208>
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	691b      	ldr	r3, [r3, #16]
 8003144:	f003 0303 	and.w	r3, r3, #3
 8003148:	2b00      	cmp	r3, #0
 800314a:	d002      	beq.n	8003152 <HAL_CAN_IRQHandler+0x208>
 800314c:	6878      	ldr	r0, [r7, #4]
 800314e:	f000 f903 	bl	8003358 <HAL_CAN_RxFifo1MsgPendingCallback>
 8003152:	6a3b      	ldr	r3, [r7, #32]
 8003154:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003158:	2b00      	cmp	r3, #0
 800315a:	d00b      	beq.n	8003174 <HAL_CAN_IRQHandler+0x22a>
 800315c:	69fb      	ldr	r3, [r7, #28]
 800315e:	f003 0310 	and.w	r3, r3, #16
 8003162:	2b00      	cmp	r3, #0
 8003164:	d006      	beq.n	8003174 <HAL_CAN_IRQHandler+0x22a>
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	2210      	movs	r2, #16
 800316c:	605a      	str	r2, [r3, #4]
 800316e:	6878      	ldr	r0, [r7, #4]
 8003170:	f000 f906 	bl	8003380 <HAL_CAN_SleepCallback>
 8003174:	6a3b      	ldr	r3, [r7, #32]
 8003176:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800317a:	2b00      	cmp	r3, #0
 800317c:	d00b      	beq.n	8003196 <HAL_CAN_IRQHandler+0x24c>
 800317e:	69fb      	ldr	r3, [r7, #28]
 8003180:	f003 0308 	and.w	r3, r3, #8
 8003184:	2b00      	cmp	r3, #0
 8003186:	d006      	beq.n	8003196 <HAL_CAN_IRQHandler+0x24c>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	2208      	movs	r2, #8
 800318e:	605a      	str	r2, [r3, #4]
 8003190:	6878      	ldr	r0, [r7, #4]
 8003192:	f000 f8ff 	bl	8003394 <HAL_CAN_WakeUpFromRxMsgCallback>
 8003196:	6a3b      	ldr	r3, [r7, #32]
 8003198:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800319c:	2b00      	cmp	r3, #0
 800319e:	d07b      	beq.n	8003298 <HAL_CAN_IRQHandler+0x34e>
 80031a0:	69fb      	ldr	r3, [r7, #28]
 80031a2:	f003 0304 	and.w	r3, r3, #4
 80031a6:	2b00      	cmp	r3, #0
 80031a8:	d072      	beq.n	8003290 <HAL_CAN_IRQHandler+0x346>
 80031aa:	6a3b      	ldr	r3, [r7, #32]
 80031ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d008      	beq.n	80031c6 <HAL_CAN_IRQHandler+0x27c>
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	f003 0301 	and.w	r3, r3, #1
 80031ba:	2b00      	cmp	r3, #0
 80031bc:	d003      	beq.n	80031c6 <HAL_CAN_IRQHandler+0x27c>
 80031be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031c0:	f043 0301 	orr.w	r3, r3, #1
 80031c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80031c6:	6a3b      	ldr	r3, [r7, #32]
 80031c8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d008      	beq.n	80031e2 <HAL_CAN_IRQHandler+0x298>
 80031d0:	68fb      	ldr	r3, [r7, #12]
 80031d2:	f003 0302 	and.w	r3, r3, #2
 80031d6:	2b00      	cmp	r3, #0
 80031d8:	d003      	beq.n	80031e2 <HAL_CAN_IRQHandler+0x298>
 80031da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031dc:	f043 0302 	orr.w	r3, r3, #2
 80031e0:	627b      	str	r3, [r7, #36]	@ 0x24
 80031e2:	6a3b      	ldr	r3, [r7, #32]
 80031e4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	d008      	beq.n	80031fe <HAL_CAN_IRQHandler+0x2b4>
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	f003 0304 	and.w	r3, r3, #4
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d003      	beq.n	80031fe <HAL_CAN_IRQHandler+0x2b4>
 80031f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031f8:	f043 0304 	orr.w	r3, r3, #4
 80031fc:	627b      	str	r3, [r7, #36]	@ 0x24
 80031fe:	6a3b      	ldr	r3, [r7, #32]
 8003200:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003204:	2b00      	cmp	r3, #0
 8003206:	d043      	beq.n	8003290 <HAL_CAN_IRQHandler+0x346>
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800320e:	2b00      	cmp	r3, #0
 8003210:	d03e      	beq.n	8003290 <HAL_CAN_IRQHandler+0x346>
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003218:	2b60      	cmp	r3, #96	@ 0x60
 800321a:	d02b      	beq.n	8003274 <HAL_CAN_IRQHandler+0x32a>
 800321c:	2b60      	cmp	r3, #96	@ 0x60
 800321e:	d82e      	bhi.n	800327e <HAL_CAN_IRQHandler+0x334>
 8003220:	2b50      	cmp	r3, #80	@ 0x50
 8003222:	d022      	beq.n	800326a <HAL_CAN_IRQHandler+0x320>
 8003224:	2b50      	cmp	r3, #80	@ 0x50
 8003226:	d82a      	bhi.n	800327e <HAL_CAN_IRQHandler+0x334>
 8003228:	2b40      	cmp	r3, #64	@ 0x40
 800322a:	d019      	beq.n	8003260 <HAL_CAN_IRQHandler+0x316>
 800322c:	2b40      	cmp	r3, #64	@ 0x40
 800322e:	d826      	bhi.n	800327e <HAL_CAN_IRQHandler+0x334>
 8003230:	2b30      	cmp	r3, #48	@ 0x30
 8003232:	d010      	beq.n	8003256 <HAL_CAN_IRQHandler+0x30c>
 8003234:	2b30      	cmp	r3, #48	@ 0x30
 8003236:	d822      	bhi.n	800327e <HAL_CAN_IRQHandler+0x334>
 8003238:	2b10      	cmp	r3, #16
 800323a:	d002      	beq.n	8003242 <HAL_CAN_IRQHandler+0x2f8>
 800323c:	2b20      	cmp	r3, #32
 800323e:	d005      	beq.n	800324c <HAL_CAN_IRQHandler+0x302>
 8003240:	e01d      	b.n	800327e <HAL_CAN_IRQHandler+0x334>
 8003242:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003244:	f043 0308 	orr.w	r3, r3, #8
 8003248:	627b      	str	r3, [r7, #36]	@ 0x24
 800324a:	e019      	b.n	8003280 <HAL_CAN_IRQHandler+0x336>
 800324c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800324e:	f043 0310 	orr.w	r3, r3, #16
 8003252:	627b      	str	r3, [r7, #36]	@ 0x24
 8003254:	e014      	b.n	8003280 <HAL_CAN_IRQHandler+0x336>
 8003256:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003258:	f043 0320 	orr.w	r3, r3, #32
 800325c:	627b      	str	r3, [r7, #36]	@ 0x24
 800325e:	e00f      	b.n	8003280 <HAL_CAN_IRQHandler+0x336>
 8003260:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003262:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003266:	627b      	str	r3, [r7, #36]	@ 0x24
 8003268:	e00a      	b.n	8003280 <HAL_CAN_IRQHandler+0x336>
 800326a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800326c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003270:	627b      	str	r3, [r7, #36]	@ 0x24
 8003272:	e005      	b.n	8003280 <HAL_CAN_IRQHandler+0x336>
 8003274:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003276:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800327a:	627b      	str	r3, [r7, #36]	@ 0x24
 800327c:	e000      	b.n	8003280 <HAL_CAN_IRQHandler+0x336>
 800327e:	bf00      	nop
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	699a      	ldr	r2, [r3, #24]
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800328e:	619a      	str	r2, [r3, #24]
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	2204      	movs	r2, #4
 8003296:	605a      	str	r2, [r3, #4]
 8003298:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800329a:	2b00      	cmp	r3, #0
 800329c:	d008      	beq.n	80032b0 <HAL_CAN_IRQHandler+0x366>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80032a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80032a4:	431a      	orrs	r2, r3
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	625a      	str	r2, [r3, #36]	@ 0x24
 80032aa:	6878      	ldr	r0, [r7, #4]
 80032ac:	f000 f87c 	bl	80033a8 <HAL_CAN_ErrorCallback>
 80032b0:	bf00      	nop
 80032b2:	3728      	adds	r7, #40	@ 0x28
 80032b4:	46bd      	mov	sp, r7
 80032b6:	bd80      	pop	{r7, pc}

080032b8 <HAL_CAN_TxMailbox0CompleteCallback>:
 80032b8:	b480      	push	{r7}
 80032ba:	b083      	sub	sp, #12
 80032bc:	af00      	add	r7, sp, #0
 80032be:	6078      	str	r0, [r7, #4]
 80032c0:	bf00      	nop
 80032c2:	370c      	adds	r7, #12
 80032c4:	46bd      	mov	sp, r7
 80032c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ca:	4770      	bx	lr

080032cc <HAL_CAN_TxMailbox1CompleteCallback>:
 80032cc:	b480      	push	{r7}
 80032ce:	b083      	sub	sp, #12
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	6078      	str	r0, [r7, #4]
 80032d4:	bf00      	nop
 80032d6:	370c      	adds	r7, #12
 80032d8:	46bd      	mov	sp, r7
 80032da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032de:	4770      	bx	lr

080032e0 <HAL_CAN_TxMailbox2CompleteCallback>:
 80032e0:	b480      	push	{r7}
 80032e2:	b083      	sub	sp, #12
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	6078      	str	r0, [r7, #4]
 80032e8:	bf00      	nop
 80032ea:	370c      	adds	r7, #12
 80032ec:	46bd      	mov	sp, r7
 80032ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f2:	4770      	bx	lr

080032f4 <HAL_CAN_TxMailbox0AbortCallback>:
 80032f4:	b480      	push	{r7}
 80032f6:	b083      	sub	sp, #12
 80032f8:	af00      	add	r7, sp, #0
 80032fa:	6078      	str	r0, [r7, #4]
 80032fc:	bf00      	nop
 80032fe:	370c      	adds	r7, #12
 8003300:	46bd      	mov	sp, r7
 8003302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003306:	4770      	bx	lr

08003308 <HAL_CAN_TxMailbox1AbortCallback>:
 8003308:	b480      	push	{r7}
 800330a:	b083      	sub	sp, #12
 800330c:	af00      	add	r7, sp, #0
 800330e:	6078      	str	r0, [r7, #4]
 8003310:	bf00      	nop
 8003312:	370c      	adds	r7, #12
 8003314:	46bd      	mov	sp, r7
 8003316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800331a:	4770      	bx	lr

0800331c <HAL_CAN_TxMailbox2AbortCallback>:
 800331c:	b480      	push	{r7}
 800331e:	b083      	sub	sp, #12
 8003320:	af00      	add	r7, sp, #0
 8003322:	6078      	str	r0, [r7, #4]
 8003324:	bf00      	nop
 8003326:	370c      	adds	r7, #12
 8003328:	46bd      	mov	sp, r7
 800332a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800332e:	4770      	bx	lr

08003330 <HAL_CAN_RxFifo0MsgPendingCallback>:
 8003330:	b480      	push	{r7}
 8003332:	b083      	sub	sp, #12
 8003334:	af00      	add	r7, sp, #0
 8003336:	6078      	str	r0, [r7, #4]
 8003338:	bf00      	nop
 800333a:	370c      	adds	r7, #12
 800333c:	46bd      	mov	sp, r7
 800333e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003342:	4770      	bx	lr

08003344 <HAL_CAN_RxFifo0FullCallback>:
 8003344:	b480      	push	{r7}
 8003346:	b083      	sub	sp, #12
 8003348:	af00      	add	r7, sp, #0
 800334a:	6078      	str	r0, [r7, #4]
 800334c:	bf00      	nop
 800334e:	370c      	adds	r7, #12
 8003350:	46bd      	mov	sp, r7
 8003352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003356:	4770      	bx	lr

08003358 <HAL_CAN_RxFifo1MsgPendingCallback>:
 8003358:	b480      	push	{r7}
 800335a:	b083      	sub	sp, #12
 800335c:	af00      	add	r7, sp, #0
 800335e:	6078      	str	r0, [r7, #4]
 8003360:	bf00      	nop
 8003362:	370c      	adds	r7, #12
 8003364:	46bd      	mov	sp, r7
 8003366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800336a:	4770      	bx	lr

0800336c <HAL_CAN_RxFifo1FullCallback>:
 800336c:	b480      	push	{r7}
 800336e:	b083      	sub	sp, #12
 8003370:	af00      	add	r7, sp, #0
 8003372:	6078      	str	r0, [r7, #4]
 8003374:	bf00      	nop
 8003376:	370c      	adds	r7, #12
 8003378:	46bd      	mov	sp, r7
 800337a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800337e:	4770      	bx	lr

08003380 <HAL_CAN_SleepCallback>:
 8003380:	b480      	push	{r7}
 8003382:	b083      	sub	sp, #12
 8003384:	af00      	add	r7, sp, #0
 8003386:	6078      	str	r0, [r7, #4]
 8003388:	bf00      	nop
 800338a:	370c      	adds	r7, #12
 800338c:	46bd      	mov	sp, r7
 800338e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003392:	4770      	bx	lr

08003394 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8003394:	b480      	push	{r7}
 8003396:	b083      	sub	sp, #12
 8003398:	af00      	add	r7, sp, #0
 800339a:	6078      	str	r0, [r7, #4]
 800339c:	bf00      	nop
 800339e:	370c      	adds	r7, #12
 80033a0:	46bd      	mov	sp, r7
 80033a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033a6:	4770      	bx	lr

080033a8 <HAL_CAN_ErrorCallback>:
 80033a8:	b480      	push	{r7}
 80033aa:	b083      	sub	sp, #12
 80033ac:	af00      	add	r7, sp, #0
 80033ae:	6078      	str	r0, [r7, #4]
 80033b0:	bf00      	nop
 80033b2:	370c      	adds	r7, #12
 80033b4:	46bd      	mov	sp, r7
 80033b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ba:	4770      	bx	lr

080033bc <__NVIC_SetPriorityGrouping>:
 80033bc:	b480      	push	{r7}
 80033be:	b085      	sub	sp, #20
 80033c0:	af00      	add	r7, sp, #0
 80033c2:	6078      	str	r0, [r7, #4]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	f003 0307 	and.w	r3, r3, #7
 80033ca:	60fb      	str	r3, [r7, #12]
 80033cc:	4b0c      	ldr	r3, [pc, #48]	@ (8003400 <__NVIC_SetPriorityGrouping+0x44>)
 80033ce:	68db      	ldr	r3, [r3, #12]
 80033d0:	60bb      	str	r3, [r7, #8]
 80033d2:	68ba      	ldr	r2, [r7, #8]
 80033d4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80033d8:	4013      	ands	r3, r2
 80033da:	60bb      	str	r3, [r7, #8]
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	021a      	lsls	r2, r3, #8
 80033e0:	68bb      	ldr	r3, [r7, #8]
 80033e2:	4313      	orrs	r3, r2
 80033e4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80033e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80033ec:	60bb      	str	r3, [r7, #8]
 80033ee:	4a04      	ldr	r2, [pc, #16]	@ (8003400 <__NVIC_SetPriorityGrouping+0x44>)
 80033f0:	68bb      	ldr	r3, [r7, #8]
 80033f2:	60d3      	str	r3, [r2, #12]
 80033f4:	bf00      	nop
 80033f6:	3714      	adds	r7, #20
 80033f8:	46bd      	mov	sp, r7
 80033fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033fe:	4770      	bx	lr
 8003400:	e000ed00 	.word	0xe000ed00

08003404 <__NVIC_GetPriorityGrouping>:
 8003404:	b480      	push	{r7}
 8003406:	af00      	add	r7, sp, #0
 8003408:	4b04      	ldr	r3, [pc, #16]	@ (800341c <__NVIC_GetPriorityGrouping+0x18>)
 800340a:	68db      	ldr	r3, [r3, #12]
 800340c:	0a1b      	lsrs	r3, r3, #8
 800340e:	f003 0307 	and.w	r3, r3, #7
 8003412:	4618      	mov	r0, r3
 8003414:	46bd      	mov	sp, r7
 8003416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800341a:	4770      	bx	lr
 800341c:	e000ed00 	.word	0xe000ed00

08003420 <__NVIC_EnableIRQ>:
 8003420:	b480      	push	{r7}
 8003422:	b083      	sub	sp, #12
 8003424:	af00      	add	r7, sp, #0
 8003426:	4603      	mov	r3, r0
 8003428:	71fb      	strb	r3, [r7, #7]
 800342a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800342e:	2b00      	cmp	r3, #0
 8003430:	db0b      	blt.n	800344a <__NVIC_EnableIRQ+0x2a>
 8003432:	79fb      	ldrb	r3, [r7, #7]
 8003434:	f003 021f 	and.w	r2, r3, #31
 8003438:	4907      	ldr	r1, [pc, #28]	@ (8003458 <__NVIC_EnableIRQ+0x38>)
 800343a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800343e:	095b      	lsrs	r3, r3, #5
 8003440:	2001      	movs	r0, #1
 8003442:	fa00 f202 	lsl.w	r2, r0, r2
 8003446:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800344a:	bf00      	nop
 800344c:	370c      	adds	r7, #12
 800344e:	46bd      	mov	sp, r7
 8003450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003454:	4770      	bx	lr
 8003456:	bf00      	nop
 8003458:	e000e100 	.word	0xe000e100

0800345c <__NVIC_SetPriority>:
 800345c:	b480      	push	{r7}
 800345e:	b083      	sub	sp, #12
 8003460:	af00      	add	r7, sp, #0
 8003462:	4603      	mov	r3, r0
 8003464:	6039      	str	r1, [r7, #0]
 8003466:	71fb      	strb	r3, [r7, #7]
 8003468:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800346c:	2b00      	cmp	r3, #0
 800346e:	db0a      	blt.n	8003486 <__NVIC_SetPriority+0x2a>
 8003470:	683b      	ldr	r3, [r7, #0]
 8003472:	b2da      	uxtb	r2, r3
 8003474:	490c      	ldr	r1, [pc, #48]	@ (80034a8 <__NVIC_SetPriority+0x4c>)
 8003476:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800347a:	0112      	lsls	r2, r2, #4
 800347c:	b2d2      	uxtb	r2, r2
 800347e:	440b      	add	r3, r1
 8003480:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003484:	e00a      	b.n	800349c <__NVIC_SetPriority+0x40>
 8003486:	683b      	ldr	r3, [r7, #0]
 8003488:	b2da      	uxtb	r2, r3
 800348a:	4908      	ldr	r1, [pc, #32]	@ (80034ac <__NVIC_SetPriority+0x50>)
 800348c:	79fb      	ldrb	r3, [r7, #7]
 800348e:	f003 030f 	and.w	r3, r3, #15
 8003492:	3b04      	subs	r3, #4
 8003494:	0112      	lsls	r2, r2, #4
 8003496:	b2d2      	uxtb	r2, r2
 8003498:	440b      	add	r3, r1
 800349a:	761a      	strb	r2, [r3, #24]
 800349c:	bf00      	nop
 800349e:	370c      	adds	r7, #12
 80034a0:	46bd      	mov	sp, r7
 80034a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a6:	4770      	bx	lr
 80034a8:	e000e100 	.word	0xe000e100
 80034ac:	e000ed00 	.word	0xe000ed00

080034b0 <NVIC_EncodePriority>:
 80034b0:	b480      	push	{r7}
 80034b2:	b089      	sub	sp, #36	@ 0x24
 80034b4:	af00      	add	r7, sp, #0
 80034b6:	60f8      	str	r0, [r7, #12]
 80034b8:	60b9      	str	r1, [r7, #8]
 80034ba:	607a      	str	r2, [r7, #4]
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	f003 0307 	and.w	r3, r3, #7
 80034c2:	61fb      	str	r3, [r7, #28]
 80034c4:	69fb      	ldr	r3, [r7, #28]
 80034c6:	f1c3 0307 	rsb	r3, r3, #7
 80034ca:	2b04      	cmp	r3, #4
 80034cc:	bf28      	it	cs
 80034ce:	2304      	movcs	r3, #4
 80034d0:	61bb      	str	r3, [r7, #24]
 80034d2:	69fb      	ldr	r3, [r7, #28]
 80034d4:	3304      	adds	r3, #4
 80034d6:	2b06      	cmp	r3, #6
 80034d8:	d902      	bls.n	80034e0 <NVIC_EncodePriority+0x30>
 80034da:	69fb      	ldr	r3, [r7, #28]
 80034dc:	3b03      	subs	r3, #3
 80034de:	e000      	b.n	80034e2 <NVIC_EncodePriority+0x32>
 80034e0:	2300      	movs	r3, #0
 80034e2:	617b      	str	r3, [r7, #20]
 80034e4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80034e8:	69bb      	ldr	r3, [r7, #24]
 80034ea:	fa02 f303 	lsl.w	r3, r2, r3
 80034ee:	43da      	mvns	r2, r3
 80034f0:	68bb      	ldr	r3, [r7, #8]
 80034f2:	401a      	ands	r2, r3
 80034f4:	697b      	ldr	r3, [r7, #20]
 80034f6:	409a      	lsls	r2, r3
 80034f8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80034fc:	697b      	ldr	r3, [r7, #20]
 80034fe:	fa01 f303 	lsl.w	r3, r1, r3
 8003502:	43d9      	mvns	r1, r3
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	400b      	ands	r3, r1
 8003508:	4313      	orrs	r3, r2
 800350a:	4618      	mov	r0, r3
 800350c:	3724      	adds	r7, #36	@ 0x24
 800350e:	46bd      	mov	sp, r7
 8003510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003514:	4770      	bx	lr
	...

08003518 <SysTick_Config>:
 8003518:	b580      	push	{r7, lr}
 800351a:	b082      	sub	sp, #8
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	3b01      	subs	r3, #1
 8003524:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003528:	d301      	bcc.n	800352e <SysTick_Config+0x16>
 800352a:	2301      	movs	r3, #1
 800352c:	e00f      	b.n	800354e <SysTick_Config+0x36>
 800352e:	4a0a      	ldr	r2, [pc, #40]	@ (8003558 <SysTick_Config+0x40>)
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	3b01      	subs	r3, #1
 8003534:	6053      	str	r3, [r2, #4]
 8003536:	210f      	movs	r1, #15
 8003538:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800353c:	f7ff ff8e 	bl	800345c <__NVIC_SetPriority>
 8003540:	4b05      	ldr	r3, [pc, #20]	@ (8003558 <SysTick_Config+0x40>)
 8003542:	2200      	movs	r2, #0
 8003544:	609a      	str	r2, [r3, #8]
 8003546:	4b04      	ldr	r3, [pc, #16]	@ (8003558 <SysTick_Config+0x40>)
 8003548:	2207      	movs	r2, #7
 800354a:	601a      	str	r2, [r3, #0]
 800354c:	2300      	movs	r3, #0
 800354e:	4618      	mov	r0, r3
 8003550:	3708      	adds	r7, #8
 8003552:	46bd      	mov	sp, r7
 8003554:	bd80      	pop	{r7, pc}
 8003556:	bf00      	nop
 8003558:	e000e010 	.word	0xe000e010

0800355c <HAL_NVIC_SetPriorityGrouping>:
 800355c:	b580      	push	{r7, lr}
 800355e:	b082      	sub	sp, #8
 8003560:	af00      	add	r7, sp, #0
 8003562:	6078      	str	r0, [r7, #4]
 8003564:	6878      	ldr	r0, [r7, #4]
 8003566:	f7ff ff29 	bl	80033bc <__NVIC_SetPriorityGrouping>
 800356a:	bf00      	nop
 800356c:	3708      	adds	r7, #8
 800356e:	46bd      	mov	sp, r7
 8003570:	bd80      	pop	{r7, pc}

08003572 <HAL_NVIC_SetPriority>:
 8003572:	b580      	push	{r7, lr}
 8003574:	b086      	sub	sp, #24
 8003576:	af00      	add	r7, sp, #0
 8003578:	4603      	mov	r3, r0
 800357a:	60b9      	str	r1, [r7, #8]
 800357c:	607a      	str	r2, [r7, #4]
 800357e:	73fb      	strb	r3, [r7, #15]
 8003580:	2300      	movs	r3, #0
 8003582:	617b      	str	r3, [r7, #20]
 8003584:	f7ff ff3e 	bl	8003404 <__NVIC_GetPriorityGrouping>
 8003588:	6178      	str	r0, [r7, #20]
 800358a:	687a      	ldr	r2, [r7, #4]
 800358c:	68b9      	ldr	r1, [r7, #8]
 800358e:	6978      	ldr	r0, [r7, #20]
 8003590:	f7ff ff8e 	bl	80034b0 <NVIC_EncodePriority>
 8003594:	4602      	mov	r2, r0
 8003596:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800359a:	4611      	mov	r1, r2
 800359c:	4618      	mov	r0, r3
 800359e:	f7ff ff5d 	bl	800345c <__NVIC_SetPriority>
 80035a2:	bf00      	nop
 80035a4:	3718      	adds	r7, #24
 80035a6:	46bd      	mov	sp, r7
 80035a8:	bd80      	pop	{r7, pc}

080035aa <HAL_NVIC_EnableIRQ>:
 80035aa:	b580      	push	{r7, lr}
 80035ac:	b082      	sub	sp, #8
 80035ae:	af00      	add	r7, sp, #0
 80035b0:	4603      	mov	r3, r0
 80035b2:	71fb      	strb	r3, [r7, #7]
 80035b4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b8:	4618      	mov	r0, r3
 80035ba:	f7ff ff31 	bl	8003420 <__NVIC_EnableIRQ>
 80035be:	bf00      	nop
 80035c0:	3708      	adds	r7, #8
 80035c2:	46bd      	mov	sp, r7
 80035c4:	bd80      	pop	{r7, pc}

080035c6 <HAL_SYSTICK_Config>:
 80035c6:	b580      	push	{r7, lr}
 80035c8:	b082      	sub	sp, #8
 80035ca:	af00      	add	r7, sp, #0
 80035cc:	6078      	str	r0, [r7, #4]
 80035ce:	6878      	ldr	r0, [r7, #4]
 80035d0:	f7ff ffa2 	bl	8003518 <SysTick_Config>
 80035d4:	4603      	mov	r3, r0
 80035d6:	4618      	mov	r0, r3
 80035d8:	3708      	adds	r7, #8
 80035da:	46bd      	mov	sp, r7
 80035dc:	bd80      	pop	{r7, pc}
	...

080035e0 <HAL_DMA_Init>:
 80035e0:	b580      	push	{r7, lr}
 80035e2:	b086      	sub	sp, #24
 80035e4:	af00      	add	r7, sp, #0
 80035e6:	6078      	str	r0, [r7, #4]
 80035e8:	2300      	movs	r3, #0
 80035ea:	617b      	str	r3, [r7, #20]
 80035ec:	f7ff fba6 	bl	8002d3c <HAL_GetTick>
 80035f0:	6138      	str	r0, [r7, #16]
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	2b00      	cmp	r3, #0
 80035f6:	d101      	bne.n	80035fc <HAL_DMA_Init+0x1c>
 80035f8:	2301      	movs	r3, #1
 80035fa:	e099      	b.n	8003730 <HAL_DMA_Init+0x150>
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	2202      	movs	r2, #2
 8003600:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	2200      	movs	r2, #0
 8003608:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	681a      	ldr	r2, [r3, #0]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	f022 0201 	bic.w	r2, r2, #1
 800361a:	601a      	str	r2, [r3, #0]
 800361c:	e00f      	b.n	800363e <HAL_DMA_Init+0x5e>
 800361e:	f7ff fb8d 	bl	8002d3c <HAL_GetTick>
 8003622:	4602      	mov	r2, r0
 8003624:	693b      	ldr	r3, [r7, #16]
 8003626:	1ad3      	subs	r3, r2, r3
 8003628:	2b05      	cmp	r3, #5
 800362a:	d908      	bls.n	800363e <HAL_DMA_Init+0x5e>
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	2220      	movs	r2, #32
 8003630:	655a      	str	r2, [r3, #84]	@ 0x54
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	2203      	movs	r2, #3
 8003636:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800363a:	2303      	movs	r3, #3
 800363c:	e078      	b.n	8003730 <HAL_DMA_Init+0x150>
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	f003 0301 	and.w	r3, r3, #1
 8003648:	2b00      	cmp	r3, #0
 800364a:	d1e8      	bne.n	800361e <HAL_DMA_Init+0x3e>
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	617b      	str	r3, [r7, #20]
 8003654:	697a      	ldr	r2, [r7, #20]
 8003656:	4b38      	ldr	r3, [pc, #224]	@ (8003738 <HAL_DMA_Init+0x158>)
 8003658:	4013      	ands	r3, r2
 800365a:	617b      	str	r3, [r7, #20]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	685a      	ldr	r2, [r3, #4]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	689b      	ldr	r3, [r3, #8]
 8003664:	431a      	orrs	r2, r3
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	68db      	ldr	r3, [r3, #12]
 800366a:	431a      	orrs	r2, r3
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	691b      	ldr	r3, [r3, #16]
 8003670:	431a      	orrs	r2, r3
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	695b      	ldr	r3, [r3, #20]
 8003676:	431a      	orrs	r2, r3
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	699b      	ldr	r3, [r3, #24]
 800367c:	431a      	orrs	r2, r3
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	69db      	ldr	r3, [r3, #28]
 8003682:	431a      	orrs	r2, r3
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	6a1b      	ldr	r3, [r3, #32]
 8003688:	4313      	orrs	r3, r2
 800368a:	697a      	ldr	r2, [r7, #20]
 800368c:	4313      	orrs	r3, r2
 800368e:	617b      	str	r3, [r7, #20]
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003694:	2b04      	cmp	r3, #4
 8003696:	d107      	bne.n	80036a8 <HAL_DMA_Init+0xc8>
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036a0:	4313      	orrs	r3, r2
 80036a2:	697a      	ldr	r2, [r7, #20]
 80036a4:	4313      	orrs	r3, r2
 80036a6:	617b      	str	r3, [r7, #20]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	697a      	ldr	r2, [r7, #20]
 80036ae:	601a      	str	r2, [r3, #0]
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	695b      	ldr	r3, [r3, #20]
 80036b6:	617b      	str	r3, [r7, #20]
 80036b8:	697b      	ldr	r3, [r7, #20]
 80036ba:	f023 0307 	bic.w	r3, r3, #7
 80036be:	617b      	str	r3, [r7, #20]
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036c4:	697a      	ldr	r2, [r7, #20]
 80036c6:	4313      	orrs	r3, r2
 80036c8:	617b      	str	r3, [r7, #20]
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036ce:	2b04      	cmp	r3, #4
 80036d0:	d117      	bne.n	8003702 <HAL_DMA_Init+0x122>
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036d6:	697a      	ldr	r2, [r7, #20]
 80036d8:	4313      	orrs	r3, r2
 80036da:	617b      	str	r3, [r7, #20]
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80036e0:	2b00      	cmp	r3, #0
 80036e2:	d00e      	beq.n	8003702 <HAL_DMA_Init+0x122>
 80036e4:	6878      	ldr	r0, [r7, #4]
 80036e6:	f000 fb01 	bl	8003cec <DMA_CheckFifoParam>
 80036ea:	4603      	mov	r3, r0
 80036ec:	2b00      	cmp	r3, #0
 80036ee:	d008      	beq.n	8003702 <HAL_DMA_Init+0x122>
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	2240      	movs	r2, #64	@ 0x40
 80036f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	2201      	movs	r2, #1
 80036fa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80036fe:	2301      	movs	r3, #1
 8003700:	e016      	b.n	8003730 <HAL_DMA_Init+0x150>
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	697a      	ldr	r2, [r7, #20]
 8003708:	615a      	str	r2, [r3, #20]
 800370a:	6878      	ldr	r0, [r7, #4]
 800370c:	f000 fab8 	bl	8003c80 <DMA_CalcBaseAndBitshift>
 8003710:	4603      	mov	r3, r0
 8003712:	60fb      	str	r3, [r7, #12]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003718:	223f      	movs	r2, #63	@ 0x3f
 800371a:	409a      	lsls	r2, r3
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	609a      	str	r2, [r3, #8]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	2200      	movs	r2, #0
 8003724:	655a      	str	r2, [r3, #84]	@ 0x54
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	2201      	movs	r2, #1
 800372a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800372e:	2300      	movs	r3, #0
 8003730:	4618      	mov	r0, r3
 8003732:	3718      	adds	r7, #24
 8003734:	46bd      	mov	sp, r7
 8003736:	bd80      	pop	{r7, pc}
 8003738:	f010803f 	.word	0xf010803f

0800373c <HAL_DMA_Start_IT>:
 800373c:	b580      	push	{r7, lr}
 800373e:	b086      	sub	sp, #24
 8003740:	af00      	add	r7, sp, #0
 8003742:	60f8      	str	r0, [r7, #12]
 8003744:	60b9      	str	r1, [r7, #8]
 8003746:	607a      	str	r2, [r7, #4]
 8003748:	603b      	str	r3, [r7, #0]
 800374a:	2300      	movs	r3, #0
 800374c:	75fb      	strb	r3, [r7, #23]
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003752:	613b      	str	r3, [r7, #16]
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800375a:	2b01      	cmp	r3, #1
 800375c:	d101      	bne.n	8003762 <HAL_DMA_Start_IT+0x26>
 800375e:	2302      	movs	r3, #2
 8003760:	e040      	b.n	80037e4 <HAL_DMA_Start_IT+0xa8>
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	2201      	movs	r2, #1
 8003766:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003770:	b2db      	uxtb	r3, r3
 8003772:	2b01      	cmp	r3, #1
 8003774:	d12f      	bne.n	80037d6 <HAL_DMA_Start_IT+0x9a>
 8003776:	68fb      	ldr	r3, [r7, #12]
 8003778:	2202      	movs	r2, #2
 800377a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800377e:	68fb      	ldr	r3, [r7, #12]
 8003780:	2200      	movs	r2, #0
 8003782:	655a      	str	r2, [r3, #84]	@ 0x54
 8003784:	683b      	ldr	r3, [r7, #0]
 8003786:	687a      	ldr	r2, [r7, #4]
 8003788:	68b9      	ldr	r1, [r7, #8]
 800378a:	68f8      	ldr	r0, [r7, #12]
 800378c:	f000 fa4a 	bl	8003c24 <DMA_SetConfig>
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003794:	223f      	movs	r2, #63	@ 0x3f
 8003796:	409a      	lsls	r2, r3
 8003798:	693b      	ldr	r3, [r7, #16]
 800379a:	609a      	str	r2, [r3, #8]
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	681a      	ldr	r2, [r3, #0]
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	f042 0216 	orr.w	r2, r2, #22
 80037aa:	601a      	str	r2, [r3, #0]
 80037ac:	68fb      	ldr	r3, [r7, #12]
 80037ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d007      	beq.n	80037c4 <HAL_DMA_Start_IT+0x88>
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	681a      	ldr	r2, [r3, #0]
 80037ba:	68fb      	ldr	r3, [r7, #12]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	f042 0208 	orr.w	r2, r2, #8
 80037c2:	601a      	str	r2, [r3, #0]
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	681a      	ldr	r2, [r3, #0]
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	f042 0201 	orr.w	r2, r2, #1
 80037d2:	601a      	str	r2, [r3, #0]
 80037d4:	e005      	b.n	80037e2 <HAL_DMA_Start_IT+0xa6>
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	2200      	movs	r2, #0
 80037da:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80037de:	2302      	movs	r3, #2
 80037e0:	75fb      	strb	r3, [r7, #23]
 80037e2:	7dfb      	ldrb	r3, [r7, #23]
 80037e4:	4618      	mov	r0, r3
 80037e6:	3718      	adds	r7, #24
 80037e8:	46bd      	mov	sp, r7
 80037ea:	bd80      	pop	{r7, pc}

080037ec <HAL_DMA_Abort>:
 80037ec:	b580      	push	{r7, lr}
 80037ee:	b084      	sub	sp, #16
 80037f0:	af00      	add	r7, sp, #0
 80037f2:	6078      	str	r0, [r7, #4]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80037f8:	60fb      	str	r3, [r7, #12]
 80037fa:	f7ff fa9f 	bl	8002d3c <HAL_GetTick>
 80037fe:	60b8      	str	r0, [r7, #8]
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003806:	b2db      	uxtb	r3, r3
 8003808:	2b02      	cmp	r3, #2
 800380a:	d008      	beq.n	800381e <HAL_DMA_Abort+0x32>
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	2280      	movs	r2, #128	@ 0x80
 8003810:	655a      	str	r2, [r3, #84]	@ 0x54
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	2200      	movs	r2, #0
 8003816:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800381a:	2301      	movs	r3, #1
 800381c:	e052      	b.n	80038c4 <HAL_DMA_Abort+0xd8>
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	681a      	ldr	r2, [r3, #0]
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	f022 0216 	bic.w	r2, r2, #22
 800382c:	601a      	str	r2, [r3, #0]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	695a      	ldr	r2, [r3, #20]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800383c:	615a      	str	r2, [r3, #20]
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003842:	2b00      	cmp	r3, #0
 8003844:	d103      	bne.n	800384e <HAL_DMA_Abort+0x62>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800384a:	2b00      	cmp	r3, #0
 800384c:	d007      	beq.n	800385e <HAL_DMA_Abort+0x72>
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	681a      	ldr	r2, [r3, #0]
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	f022 0208 	bic.w	r2, r2, #8
 800385c:	601a      	str	r2, [r3, #0]
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	681a      	ldr	r2, [r3, #0]
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	f022 0201 	bic.w	r2, r2, #1
 800386c:	601a      	str	r2, [r3, #0]
 800386e:	e013      	b.n	8003898 <HAL_DMA_Abort+0xac>
 8003870:	f7ff fa64 	bl	8002d3c <HAL_GetTick>
 8003874:	4602      	mov	r2, r0
 8003876:	68bb      	ldr	r3, [r7, #8]
 8003878:	1ad3      	subs	r3, r2, r3
 800387a:	2b05      	cmp	r3, #5
 800387c:	d90c      	bls.n	8003898 <HAL_DMA_Abort+0xac>
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	2220      	movs	r2, #32
 8003882:	655a      	str	r2, [r3, #84]	@ 0x54
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	2203      	movs	r2, #3
 8003888:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	2200      	movs	r2, #0
 8003890:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003894:	2303      	movs	r3, #3
 8003896:	e015      	b.n	80038c4 <HAL_DMA_Abort+0xd8>
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	f003 0301 	and.w	r3, r3, #1
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d1e4      	bne.n	8003870 <HAL_DMA_Abort+0x84>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038aa:	223f      	movs	r2, #63	@ 0x3f
 80038ac:	409a      	lsls	r2, r3
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	609a      	str	r2, [r3, #8]
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	2201      	movs	r2, #1
 80038b6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	2200      	movs	r2, #0
 80038be:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80038c2:	2300      	movs	r3, #0
 80038c4:	4618      	mov	r0, r3
 80038c6:	3710      	adds	r7, #16
 80038c8:	46bd      	mov	sp, r7
 80038ca:	bd80      	pop	{r7, pc}

080038cc <HAL_DMA_Abort_IT>:
 80038cc:	b480      	push	{r7}
 80038ce:	b083      	sub	sp, #12
 80038d0:	af00      	add	r7, sp, #0
 80038d2:	6078      	str	r0, [r7, #4]
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80038da:	b2db      	uxtb	r3, r3
 80038dc:	2b02      	cmp	r3, #2
 80038de:	d004      	beq.n	80038ea <HAL_DMA_Abort_IT+0x1e>
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	2280      	movs	r2, #128	@ 0x80
 80038e4:	655a      	str	r2, [r3, #84]	@ 0x54
 80038e6:	2301      	movs	r3, #1
 80038e8:	e00c      	b.n	8003904 <HAL_DMA_Abort_IT+0x38>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	2205      	movs	r2, #5
 80038ee:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	681a      	ldr	r2, [r3, #0]
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	f022 0201 	bic.w	r2, r2, #1
 8003900:	601a      	str	r2, [r3, #0]
 8003902:	2300      	movs	r3, #0
 8003904:	4618      	mov	r0, r3
 8003906:	370c      	adds	r7, #12
 8003908:	46bd      	mov	sp, r7
 800390a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800390e:	4770      	bx	lr

08003910 <HAL_DMA_IRQHandler>:
 8003910:	b580      	push	{r7, lr}
 8003912:	b086      	sub	sp, #24
 8003914:	af00      	add	r7, sp, #0
 8003916:	6078      	str	r0, [r7, #4]
 8003918:	2300      	movs	r3, #0
 800391a:	60bb      	str	r3, [r7, #8]
 800391c:	4b8e      	ldr	r3, [pc, #568]	@ (8003b58 <HAL_DMA_IRQHandler+0x248>)
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	4a8e      	ldr	r2, [pc, #568]	@ (8003b5c <HAL_DMA_IRQHandler+0x24c>)
 8003922:	fba2 2303 	umull	r2, r3, r2, r3
 8003926:	0a9b      	lsrs	r3, r3, #10
 8003928:	617b      	str	r3, [r7, #20]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800392e:	613b      	str	r3, [r7, #16]
 8003930:	693b      	ldr	r3, [r7, #16]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	60fb      	str	r3, [r7, #12]
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800393a:	2208      	movs	r2, #8
 800393c:	409a      	lsls	r2, r3
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	4013      	ands	r3, r2
 8003942:	2b00      	cmp	r3, #0
 8003944:	d01a      	beq.n	800397c <HAL_DMA_IRQHandler+0x6c>
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	f003 0304 	and.w	r3, r3, #4
 8003950:	2b00      	cmp	r3, #0
 8003952:	d013      	beq.n	800397c <HAL_DMA_IRQHandler+0x6c>
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	681a      	ldr	r2, [r3, #0]
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	f022 0204 	bic.w	r2, r2, #4
 8003962:	601a      	str	r2, [r3, #0]
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003968:	2208      	movs	r2, #8
 800396a:	409a      	lsls	r2, r3
 800396c:	693b      	ldr	r3, [r7, #16]
 800396e:	609a      	str	r2, [r3, #8]
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003974:	f043 0201 	orr.w	r2, r3, #1
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	655a      	str	r2, [r3, #84]	@ 0x54
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003980:	2201      	movs	r2, #1
 8003982:	409a      	lsls	r2, r3
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	4013      	ands	r3, r2
 8003988:	2b00      	cmp	r3, #0
 800398a:	d012      	beq.n	80039b2 <HAL_DMA_IRQHandler+0xa2>
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	695b      	ldr	r3, [r3, #20]
 8003992:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003996:	2b00      	cmp	r3, #0
 8003998:	d00b      	beq.n	80039b2 <HAL_DMA_IRQHandler+0xa2>
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800399e:	2201      	movs	r2, #1
 80039a0:	409a      	lsls	r2, r3
 80039a2:	693b      	ldr	r3, [r7, #16]
 80039a4:	609a      	str	r2, [r3, #8]
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80039aa:	f043 0202 	orr.w	r2, r3, #2
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	655a      	str	r2, [r3, #84]	@ 0x54
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039b6:	2204      	movs	r2, #4
 80039b8:	409a      	lsls	r2, r3
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	4013      	ands	r3, r2
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d012      	beq.n	80039e8 <HAL_DMA_IRQHandler+0xd8>
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	f003 0302 	and.w	r3, r3, #2
 80039cc:	2b00      	cmp	r3, #0
 80039ce:	d00b      	beq.n	80039e8 <HAL_DMA_IRQHandler+0xd8>
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039d4:	2204      	movs	r2, #4
 80039d6:	409a      	lsls	r2, r3
 80039d8:	693b      	ldr	r3, [r7, #16]
 80039da:	609a      	str	r2, [r3, #8]
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80039e0:	f043 0204 	orr.w	r2, r3, #4
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039ec:	2210      	movs	r2, #16
 80039ee:	409a      	lsls	r2, r3
 80039f0:	68fb      	ldr	r3, [r7, #12]
 80039f2:	4013      	ands	r3, r2
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d043      	beq.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	f003 0308 	and.w	r3, r3, #8
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	d03c      	beq.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a0a:	2210      	movs	r2, #16
 8003a0c:	409a      	lsls	r2, r3
 8003a0e:	693b      	ldr	r3, [r7, #16]
 8003a10:	609a      	str	r2, [r3, #8]
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	681b      	ldr	r3, [r3, #0]
 8003a18:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d018      	beq.n	8003a52 <HAL_DMA_IRQHandler+0x142>
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d108      	bne.n	8003a40 <HAL_DMA_IRQHandler+0x130>
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a32:	2b00      	cmp	r3, #0
 8003a34:	d024      	beq.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a3a:	6878      	ldr	r0, [r7, #4]
 8003a3c:	4798      	blx	r3
 8003a3e:	e01f      	b.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d01b      	beq.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003a4c:	6878      	ldr	r0, [r7, #4]
 8003a4e:	4798      	blx	r3
 8003a50:	e016      	b.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d107      	bne.n	8003a70 <HAL_DMA_IRQHandler+0x160>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	681a      	ldr	r2, [r3, #0]
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	f022 0208 	bic.w	r2, r2, #8
 8003a6e:	601a      	str	r2, [r3, #0]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d003      	beq.n	8003a80 <HAL_DMA_IRQHandler+0x170>
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a7c:	6878      	ldr	r0, [r7, #4]
 8003a7e:	4798      	blx	r3
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a84:	2220      	movs	r2, #32
 8003a86:	409a      	lsls	r2, r3
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	4013      	ands	r3, r2
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	f000 808f 	beq.w	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	f003 0310 	and.w	r3, r3, #16
 8003a9c:	2b00      	cmp	r3, #0
 8003a9e:	f000 8087 	beq.w	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003aa6:	2220      	movs	r2, #32
 8003aa8:	409a      	lsls	r2, r3
 8003aaa:	693b      	ldr	r3, [r7, #16]
 8003aac:	609a      	str	r2, [r3, #8]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003ab4:	b2db      	uxtb	r3, r3
 8003ab6:	2b05      	cmp	r3, #5
 8003ab8:	d136      	bne.n	8003b28 <HAL_DMA_IRQHandler+0x218>
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	681a      	ldr	r2, [r3, #0]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	f022 0216 	bic.w	r2, r2, #22
 8003ac8:	601a      	str	r2, [r3, #0]
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	695a      	ldr	r2, [r3, #20]
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003ad8:	615a      	str	r2, [r3, #20]
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d103      	bne.n	8003aea <HAL_DMA_IRQHandler+0x1da>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d007      	beq.n	8003afa <HAL_DMA_IRQHandler+0x1ea>
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	681a      	ldr	r2, [r3, #0]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	f022 0208 	bic.w	r2, r2, #8
 8003af8:	601a      	str	r2, [r3, #0]
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003afe:	223f      	movs	r2, #63	@ 0x3f
 8003b00:	409a      	lsls	r2, r3
 8003b02:	693b      	ldr	r3, [r7, #16]
 8003b04:	609a      	str	r2, [r3, #8]
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	2201      	movs	r2, #1
 8003b0a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	2200      	movs	r2, #0
 8003b12:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d07e      	beq.n	8003c1c <HAL_DMA_IRQHandler+0x30c>
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003b22:	6878      	ldr	r0, [r7, #4]
 8003b24:	4798      	blx	r3
 8003b26:	e079      	b.n	8003c1c <HAL_DMA_IRQHandler+0x30c>
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	681b      	ldr	r3, [r3, #0]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d01d      	beq.n	8003b72 <HAL_DMA_IRQHandler+0x262>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d10d      	bne.n	8003b60 <HAL_DMA_IRQHandler+0x250>
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b48:	2b00      	cmp	r3, #0
 8003b4a:	d031      	beq.n	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b50:	6878      	ldr	r0, [r7, #4]
 8003b52:	4798      	blx	r3
 8003b54:	e02c      	b.n	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003b56:	bf00      	nop
 8003b58:	20000000 	.word	0x20000000
 8003b5c:	1b4e81b5 	.word	0x1b4e81b5
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d023      	beq.n	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b6c:	6878      	ldr	r0, [r7, #4]
 8003b6e:	4798      	blx	r3
 8003b70:	e01e      	b.n	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d10f      	bne.n	8003ba0 <HAL_DMA_IRQHandler+0x290>
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	681a      	ldr	r2, [r3, #0]
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	f022 0210 	bic.w	r2, r2, #16
 8003b8e:	601a      	str	r2, [r3, #0]
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	2201      	movs	r2, #1
 8003b94:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	2200      	movs	r2, #0
 8003b9c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	d003      	beq.n	8003bb0 <HAL_DMA_IRQHandler+0x2a0>
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bac:	6878      	ldr	r0, [r7, #4]
 8003bae:	4798      	blx	r3
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	d032      	beq.n	8003c1e <HAL_DMA_IRQHandler+0x30e>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003bbc:	f003 0301 	and.w	r3, r3, #1
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d022      	beq.n	8003c0a <HAL_DMA_IRQHandler+0x2fa>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	2205      	movs	r2, #5
 8003bc8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	681a      	ldr	r2, [r3, #0]
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	f022 0201 	bic.w	r2, r2, #1
 8003bda:	601a      	str	r2, [r3, #0]
 8003bdc:	68bb      	ldr	r3, [r7, #8]
 8003bde:	3301      	adds	r3, #1
 8003be0:	60bb      	str	r3, [r7, #8]
 8003be2:	697a      	ldr	r2, [r7, #20]
 8003be4:	429a      	cmp	r2, r3
 8003be6:	d307      	bcc.n	8003bf8 <HAL_DMA_IRQHandler+0x2e8>
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	f003 0301 	and.w	r3, r3, #1
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	d1f2      	bne.n	8003bdc <HAL_DMA_IRQHandler+0x2cc>
 8003bf6:	e000      	b.n	8003bfa <HAL_DMA_IRQHandler+0x2ea>
 8003bf8:	bf00      	nop
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	2200      	movs	r2, #0
 8003c06:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	d005      	beq.n	8003c1e <HAL_DMA_IRQHandler+0x30e>
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c16:	6878      	ldr	r0, [r7, #4]
 8003c18:	4798      	blx	r3
 8003c1a:	e000      	b.n	8003c1e <HAL_DMA_IRQHandler+0x30e>
 8003c1c:	bf00      	nop
 8003c1e:	3718      	adds	r7, #24
 8003c20:	46bd      	mov	sp, r7
 8003c22:	bd80      	pop	{r7, pc}

08003c24 <DMA_SetConfig>:
 8003c24:	b480      	push	{r7}
 8003c26:	b085      	sub	sp, #20
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	60f8      	str	r0, [r7, #12]
 8003c2c:	60b9      	str	r1, [r7, #8]
 8003c2e:	607a      	str	r2, [r7, #4]
 8003c30:	603b      	str	r3, [r7, #0]
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	681a      	ldr	r2, [r3, #0]
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003c40:	601a      	str	r2, [r3, #0]
 8003c42:	68fb      	ldr	r3, [r7, #12]
 8003c44:	681b      	ldr	r3, [r3, #0]
 8003c46:	683a      	ldr	r2, [r7, #0]
 8003c48:	605a      	str	r2, [r3, #4]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	689b      	ldr	r3, [r3, #8]
 8003c4e:	2b40      	cmp	r3, #64	@ 0x40
 8003c50:	d108      	bne.n	8003c64 <DMA_SetConfig+0x40>
 8003c52:	68fb      	ldr	r3, [r7, #12]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	687a      	ldr	r2, [r7, #4]
 8003c58:	609a      	str	r2, [r3, #8]
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	68ba      	ldr	r2, [r7, #8]
 8003c60:	60da      	str	r2, [r3, #12]
 8003c62:	e007      	b.n	8003c74 <DMA_SetConfig+0x50>
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	68ba      	ldr	r2, [r7, #8]
 8003c6a:	609a      	str	r2, [r3, #8]
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	687a      	ldr	r2, [r7, #4]
 8003c72:	60da      	str	r2, [r3, #12]
 8003c74:	bf00      	nop
 8003c76:	3714      	adds	r7, #20
 8003c78:	46bd      	mov	sp, r7
 8003c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c7e:	4770      	bx	lr

08003c80 <DMA_CalcBaseAndBitshift>:
 8003c80:	b480      	push	{r7}
 8003c82:	b085      	sub	sp, #20
 8003c84:	af00      	add	r7, sp, #0
 8003c86:	6078      	str	r0, [r7, #4]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	b2db      	uxtb	r3, r3
 8003c8e:	3b10      	subs	r3, #16
 8003c90:	4a14      	ldr	r2, [pc, #80]	@ (8003ce4 <DMA_CalcBaseAndBitshift+0x64>)
 8003c92:	fba2 2303 	umull	r2, r3, r2, r3
 8003c96:	091b      	lsrs	r3, r3, #4
 8003c98:	60fb      	str	r3, [r7, #12]
 8003c9a:	4a13      	ldr	r2, [pc, #76]	@ (8003ce8 <DMA_CalcBaseAndBitshift+0x68>)
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	4413      	add	r3, r2
 8003ca0:	781b      	ldrb	r3, [r3, #0]
 8003ca2:	461a      	mov	r2, r3
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	2b03      	cmp	r3, #3
 8003cac:	d909      	bls.n	8003cc2 <DMA_CalcBaseAndBitshift+0x42>
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003cb6:	f023 0303 	bic.w	r3, r3, #3
 8003cba:	1d1a      	adds	r2, r3, #4
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	659a      	str	r2, [r3, #88]	@ 0x58
 8003cc0:	e007      	b.n	8003cd2 <DMA_CalcBaseAndBitshift+0x52>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003cca:	f023 0303 	bic.w	r3, r3, #3
 8003cce:	687a      	ldr	r2, [r7, #4]
 8003cd0:	6593      	str	r3, [r2, #88]	@ 0x58
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003cd6:	4618      	mov	r0, r3
 8003cd8:	3714      	adds	r7, #20
 8003cda:	46bd      	mov	sp, r7
 8003cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ce0:	4770      	bx	lr
 8003ce2:	bf00      	nop
 8003ce4:	aaaaaaab 	.word	0xaaaaaaab
 8003ce8:	08009ee4 	.word	0x08009ee4

08003cec <DMA_CheckFifoParam>:
 8003cec:	b480      	push	{r7}
 8003cee:	b085      	sub	sp, #20
 8003cf0:	af00      	add	r7, sp, #0
 8003cf2:	6078      	str	r0, [r7, #4]
 8003cf4:	2300      	movs	r3, #0
 8003cf6:	73fb      	strb	r3, [r7, #15]
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003cfc:	60bb      	str	r3, [r7, #8]
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	699b      	ldr	r3, [r3, #24]
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	d11f      	bne.n	8003d46 <DMA_CheckFifoParam+0x5a>
 8003d06:	68bb      	ldr	r3, [r7, #8]
 8003d08:	2b03      	cmp	r3, #3
 8003d0a:	d856      	bhi.n	8003dba <DMA_CheckFifoParam+0xce>
 8003d0c:	a201      	add	r2, pc, #4	@ (adr r2, 8003d14 <DMA_CheckFifoParam+0x28>)
 8003d0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d12:	bf00      	nop
 8003d14:	08003d25 	.word	0x08003d25
 8003d18:	08003d37 	.word	0x08003d37
 8003d1c:	08003d25 	.word	0x08003d25
 8003d20:	08003dbb 	.word	0x08003dbb
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d28:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d046      	beq.n	8003dbe <DMA_CheckFifoParam+0xd2>
 8003d30:	2301      	movs	r3, #1
 8003d32:	73fb      	strb	r3, [r7, #15]
 8003d34:	e043      	b.n	8003dbe <DMA_CheckFifoParam+0xd2>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d3a:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003d3e:	d140      	bne.n	8003dc2 <DMA_CheckFifoParam+0xd6>
 8003d40:	2301      	movs	r3, #1
 8003d42:	73fb      	strb	r3, [r7, #15]
 8003d44:	e03d      	b.n	8003dc2 <DMA_CheckFifoParam+0xd6>
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	699b      	ldr	r3, [r3, #24]
 8003d4a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003d4e:	d121      	bne.n	8003d94 <DMA_CheckFifoParam+0xa8>
 8003d50:	68bb      	ldr	r3, [r7, #8]
 8003d52:	2b03      	cmp	r3, #3
 8003d54:	d837      	bhi.n	8003dc6 <DMA_CheckFifoParam+0xda>
 8003d56:	a201      	add	r2, pc, #4	@ (adr r2, 8003d5c <DMA_CheckFifoParam+0x70>)
 8003d58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d5c:	08003d6d 	.word	0x08003d6d
 8003d60:	08003d73 	.word	0x08003d73
 8003d64:	08003d6d 	.word	0x08003d6d
 8003d68:	08003d85 	.word	0x08003d85
 8003d6c:	2301      	movs	r3, #1
 8003d6e:	73fb      	strb	r3, [r7, #15]
 8003d70:	e030      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d76:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	d025      	beq.n	8003dca <DMA_CheckFifoParam+0xde>
 8003d7e:	2301      	movs	r3, #1
 8003d80:	73fb      	strb	r3, [r7, #15]
 8003d82:	e022      	b.n	8003dca <DMA_CheckFifoParam+0xde>
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d88:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003d8c:	d11f      	bne.n	8003dce <DMA_CheckFifoParam+0xe2>
 8003d8e:	2301      	movs	r3, #1
 8003d90:	73fb      	strb	r3, [r7, #15]
 8003d92:	e01c      	b.n	8003dce <DMA_CheckFifoParam+0xe2>
 8003d94:	68bb      	ldr	r3, [r7, #8]
 8003d96:	2b02      	cmp	r3, #2
 8003d98:	d903      	bls.n	8003da2 <DMA_CheckFifoParam+0xb6>
 8003d9a:	68bb      	ldr	r3, [r7, #8]
 8003d9c:	2b03      	cmp	r3, #3
 8003d9e:	d003      	beq.n	8003da8 <DMA_CheckFifoParam+0xbc>
 8003da0:	e018      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003da2:	2301      	movs	r3, #1
 8003da4:	73fb      	strb	r3, [r7, #15]
 8003da6:	e015      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003dac:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d00e      	beq.n	8003dd2 <DMA_CheckFifoParam+0xe6>
 8003db4:	2301      	movs	r3, #1
 8003db6:	73fb      	strb	r3, [r7, #15]
 8003db8:	e00b      	b.n	8003dd2 <DMA_CheckFifoParam+0xe6>
 8003dba:	bf00      	nop
 8003dbc:	e00a      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003dbe:	bf00      	nop
 8003dc0:	e008      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003dc2:	bf00      	nop
 8003dc4:	e006      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003dc6:	bf00      	nop
 8003dc8:	e004      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003dca:	bf00      	nop
 8003dcc:	e002      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003dce:	bf00      	nop
 8003dd0:	e000      	b.n	8003dd4 <DMA_CheckFifoParam+0xe8>
 8003dd2:	bf00      	nop
 8003dd4:	7bfb      	ldrb	r3, [r7, #15]
 8003dd6:	4618      	mov	r0, r3
 8003dd8:	3714      	adds	r7, #20
 8003dda:	46bd      	mov	sp, r7
 8003ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003de0:	4770      	bx	lr
 8003de2:	bf00      	nop

08003de4 <HAL_GPIO_Init>:
 8003de4:	b480      	push	{r7}
 8003de6:	b089      	sub	sp, #36	@ 0x24
 8003de8:	af00      	add	r7, sp, #0
 8003dea:	6078      	str	r0, [r7, #4]
 8003dec:	6039      	str	r1, [r7, #0]
 8003dee:	2300      	movs	r3, #0
 8003df0:	617b      	str	r3, [r7, #20]
 8003df2:	2300      	movs	r3, #0
 8003df4:	613b      	str	r3, [r7, #16]
 8003df6:	2300      	movs	r3, #0
 8003df8:	61bb      	str	r3, [r7, #24]
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	61fb      	str	r3, [r7, #28]
 8003dfe:	e16b      	b.n	80040d8 <HAL_GPIO_Init+0x2f4>
 8003e00:	2201      	movs	r2, #1
 8003e02:	69fb      	ldr	r3, [r7, #28]
 8003e04:	fa02 f303 	lsl.w	r3, r2, r3
 8003e08:	617b      	str	r3, [r7, #20]
 8003e0a:	683b      	ldr	r3, [r7, #0]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	697a      	ldr	r2, [r7, #20]
 8003e10:	4013      	ands	r3, r2
 8003e12:	613b      	str	r3, [r7, #16]
 8003e14:	693a      	ldr	r2, [r7, #16]
 8003e16:	697b      	ldr	r3, [r7, #20]
 8003e18:	429a      	cmp	r2, r3
 8003e1a:	f040 815a 	bne.w	80040d2 <HAL_GPIO_Init+0x2ee>
 8003e1e:	683b      	ldr	r3, [r7, #0]
 8003e20:	685b      	ldr	r3, [r3, #4]
 8003e22:	f003 0303 	and.w	r3, r3, #3
 8003e26:	2b01      	cmp	r3, #1
 8003e28:	d005      	beq.n	8003e36 <HAL_GPIO_Init+0x52>
 8003e2a:	683b      	ldr	r3, [r7, #0]
 8003e2c:	685b      	ldr	r3, [r3, #4]
 8003e2e:	f003 0303 	and.w	r3, r3, #3
 8003e32:	2b02      	cmp	r3, #2
 8003e34:	d130      	bne.n	8003e98 <HAL_GPIO_Init+0xb4>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	689b      	ldr	r3, [r3, #8]
 8003e3a:	61bb      	str	r3, [r7, #24]
 8003e3c:	69fb      	ldr	r3, [r7, #28]
 8003e3e:	005b      	lsls	r3, r3, #1
 8003e40:	2203      	movs	r2, #3
 8003e42:	fa02 f303 	lsl.w	r3, r2, r3
 8003e46:	43db      	mvns	r3, r3
 8003e48:	69ba      	ldr	r2, [r7, #24]
 8003e4a:	4013      	ands	r3, r2
 8003e4c:	61bb      	str	r3, [r7, #24]
 8003e4e:	683b      	ldr	r3, [r7, #0]
 8003e50:	68da      	ldr	r2, [r3, #12]
 8003e52:	69fb      	ldr	r3, [r7, #28]
 8003e54:	005b      	lsls	r3, r3, #1
 8003e56:	fa02 f303 	lsl.w	r3, r2, r3
 8003e5a:	69ba      	ldr	r2, [r7, #24]
 8003e5c:	4313      	orrs	r3, r2
 8003e5e:	61bb      	str	r3, [r7, #24]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	69ba      	ldr	r2, [r7, #24]
 8003e64:	609a      	str	r2, [r3, #8]
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	685b      	ldr	r3, [r3, #4]
 8003e6a:	61bb      	str	r3, [r7, #24]
 8003e6c:	2201      	movs	r2, #1
 8003e6e:	69fb      	ldr	r3, [r7, #28]
 8003e70:	fa02 f303 	lsl.w	r3, r2, r3
 8003e74:	43db      	mvns	r3, r3
 8003e76:	69ba      	ldr	r2, [r7, #24]
 8003e78:	4013      	ands	r3, r2
 8003e7a:	61bb      	str	r3, [r7, #24]
 8003e7c:	683b      	ldr	r3, [r7, #0]
 8003e7e:	685b      	ldr	r3, [r3, #4]
 8003e80:	091b      	lsrs	r3, r3, #4
 8003e82:	f003 0201 	and.w	r2, r3, #1
 8003e86:	69fb      	ldr	r3, [r7, #28]
 8003e88:	fa02 f303 	lsl.w	r3, r2, r3
 8003e8c:	69ba      	ldr	r2, [r7, #24]
 8003e8e:	4313      	orrs	r3, r2
 8003e90:	61bb      	str	r3, [r7, #24]
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	69ba      	ldr	r2, [r7, #24]
 8003e96:	605a      	str	r2, [r3, #4]
 8003e98:	683b      	ldr	r3, [r7, #0]
 8003e9a:	685b      	ldr	r3, [r3, #4]
 8003e9c:	f003 0303 	and.w	r3, r3, #3
 8003ea0:	2b03      	cmp	r3, #3
 8003ea2:	d017      	beq.n	8003ed4 <HAL_GPIO_Init+0xf0>
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	68db      	ldr	r3, [r3, #12]
 8003ea8:	61bb      	str	r3, [r7, #24]
 8003eaa:	69fb      	ldr	r3, [r7, #28]
 8003eac:	005b      	lsls	r3, r3, #1
 8003eae:	2203      	movs	r2, #3
 8003eb0:	fa02 f303 	lsl.w	r3, r2, r3
 8003eb4:	43db      	mvns	r3, r3
 8003eb6:	69ba      	ldr	r2, [r7, #24]
 8003eb8:	4013      	ands	r3, r2
 8003eba:	61bb      	str	r3, [r7, #24]
 8003ebc:	683b      	ldr	r3, [r7, #0]
 8003ebe:	689a      	ldr	r2, [r3, #8]
 8003ec0:	69fb      	ldr	r3, [r7, #28]
 8003ec2:	005b      	lsls	r3, r3, #1
 8003ec4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ec8:	69ba      	ldr	r2, [r7, #24]
 8003eca:	4313      	orrs	r3, r2
 8003ecc:	61bb      	str	r3, [r7, #24]
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	69ba      	ldr	r2, [r7, #24]
 8003ed2:	60da      	str	r2, [r3, #12]
 8003ed4:	683b      	ldr	r3, [r7, #0]
 8003ed6:	685b      	ldr	r3, [r3, #4]
 8003ed8:	f003 0303 	and.w	r3, r3, #3
 8003edc:	2b02      	cmp	r3, #2
 8003ede:	d123      	bne.n	8003f28 <HAL_GPIO_Init+0x144>
 8003ee0:	69fb      	ldr	r3, [r7, #28]
 8003ee2:	08da      	lsrs	r2, r3, #3
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	3208      	adds	r2, #8
 8003ee8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003eec:	61bb      	str	r3, [r7, #24]
 8003eee:	69fb      	ldr	r3, [r7, #28]
 8003ef0:	f003 0307 	and.w	r3, r3, #7
 8003ef4:	009b      	lsls	r3, r3, #2
 8003ef6:	220f      	movs	r2, #15
 8003ef8:	fa02 f303 	lsl.w	r3, r2, r3
 8003efc:	43db      	mvns	r3, r3
 8003efe:	69ba      	ldr	r2, [r7, #24]
 8003f00:	4013      	ands	r3, r2
 8003f02:	61bb      	str	r3, [r7, #24]
 8003f04:	683b      	ldr	r3, [r7, #0]
 8003f06:	691a      	ldr	r2, [r3, #16]
 8003f08:	69fb      	ldr	r3, [r7, #28]
 8003f0a:	f003 0307 	and.w	r3, r3, #7
 8003f0e:	009b      	lsls	r3, r3, #2
 8003f10:	fa02 f303 	lsl.w	r3, r2, r3
 8003f14:	69ba      	ldr	r2, [r7, #24]
 8003f16:	4313      	orrs	r3, r2
 8003f18:	61bb      	str	r3, [r7, #24]
 8003f1a:	69fb      	ldr	r3, [r7, #28]
 8003f1c:	08da      	lsrs	r2, r3, #3
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	3208      	adds	r2, #8
 8003f22:	69b9      	ldr	r1, [r7, #24]
 8003f24:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	61bb      	str	r3, [r7, #24]
 8003f2e:	69fb      	ldr	r3, [r7, #28]
 8003f30:	005b      	lsls	r3, r3, #1
 8003f32:	2203      	movs	r2, #3
 8003f34:	fa02 f303 	lsl.w	r3, r2, r3
 8003f38:	43db      	mvns	r3, r3
 8003f3a:	69ba      	ldr	r2, [r7, #24]
 8003f3c:	4013      	ands	r3, r2
 8003f3e:	61bb      	str	r3, [r7, #24]
 8003f40:	683b      	ldr	r3, [r7, #0]
 8003f42:	685b      	ldr	r3, [r3, #4]
 8003f44:	f003 0203 	and.w	r2, r3, #3
 8003f48:	69fb      	ldr	r3, [r7, #28]
 8003f4a:	005b      	lsls	r3, r3, #1
 8003f4c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f50:	69ba      	ldr	r2, [r7, #24]
 8003f52:	4313      	orrs	r3, r2
 8003f54:	61bb      	str	r3, [r7, #24]
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	69ba      	ldr	r2, [r7, #24]
 8003f5a:	601a      	str	r2, [r3, #0]
 8003f5c:	683b      	ldr	r3, [r7, #0]
 8003f5e:	685b      	ldr	r3, [r3, #4]
 8003f60:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	f000 80b4 	beq.w	80040d2 <HAL_GPIO_Init+0x2ee>
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	60fb      	str	r3, [r7, #12]
 8003f6e:	4b60      	ldr	r3, [pc, #384]	@ (80040f0 <HAL_GPIO_Init+0x30c>)
 8003f70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f72:	4a5f      	ldr	r2, [pc, #380]	@ (80040f0 <HAL_GPIO_Init+0x30c>)
 8003f74:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003f78:	6453      	str	r3, [r2, #68]	@ 0x44
 8003f7a:	4b5d      	ldr	r3, [pc, #372]	@ (80040f0 <HAL_GPIO_Init+0x30c>)
 8003f7c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f7e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003f82:	60fb      	str	r3, [r7, #12]
 8003f84:	68fb      	ldr	r3, [r7, #12]
 8003f86:	4a5b      	ldr	r2, [pc, #364]	@ (80040f4 <HAL_GPIO_Init+0x310>)
 8003f88:	69fb      	ldr	r3, [r7, #28]
 8003f8a:	089b      	lsrs	r3, r3, #2
 8003f8c:	3302      	adds	r3, #2
 8003f8e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003f92:	61bb      	str	r3, [r7, #24]
 8003f94:	69fb      	ldr	r3, [r7, #28]
 8003f96:	f003 0303 	and.w	r3, r3, #3
 8003f9a:	009b      	lsls	r3, r3, #2
 8003f9c:	220f      	movs	r2, #15
 8003f9e:	fa02 f303 	lsl.w	r3, r2, r3
 8003fa2:	43db      	mvns	r3, r3
 8003fa4:	69ba      	ldr	r2, [r7, #24]
 8003fa6:	4013      	ands	r3, r2
 8003fa8:	61bb      	str	r3, [r7, #24]
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	4a52      	ldr	r2, [pc, #328]	@ (80040f8 <HAL_GPIO_Init+0x314>)
 8003fae:	4293      	cmp	r3, r2
 8003fb0:	d02b      	beq.n	800400a <HAL_GPIO_Init+0x226>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	4a51      	ldr	r2, [pc, #324]	@ (80040fc <HAL_GPIO_Init+0x318>)
 8003fb6:	4293      	cmp	r3, r2
 8003fb8:	d025      	beq.n	8004006 <HAL_GPIO_Init+0x222>
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	4a50      	ldr	r2, [pc, #320]	@ (8004100 <HAL_GPIO_Init+0x31c>)
 8003fbe:	4293      	cmp	r3, r2
 8003fc0:	d01f      	beq.n	8004002 <HAL_GPIO_Init+0x21e>
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	4a4f      	ldr	r2, [pc, #316]	@ (8004104 <HAL_GPIO_Init+0x320>)
 8003fc6:	4293      	cmp	r3, r2
 8003fc8:	d019      	beq.n	8003ffe <HAL_GPIO_Init+0x21a>
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	4a4e      	ldr	r2, [pc, #312]	@ (8004108 <HAL_GPIO_Init+0x324>)
 8003fce:	4293      	cmp	r3, r2
 8003fd0:	d013      	beq.n	8003ffa <HAL_GPIO_Init+0x216>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	4a4d      	ldr	r2, [pc, #308]	@ (800410c <HAL_GPIO_Init+0x328>)
 8003fd6:	4293      	cmp	r3, r2
 8003fd8:	d00d      	beq.n	8003ff6 <HAL_GPIO_Init+0x212>
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	4a4c      	ldr	r2, [pc, #304]	@ (8004110 <HAL_GPIO_Init+0x32c>)
 8003fde:	4293      	cmp	r3, r2
 8003fe0:	d007      	beq.n	8003ff2 <HAL_GPIO_Init+0x20e>
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	4a4b      	ldr	r2, [pc, #300]	@ (8004114 <HAL_GPIO_Init+0x330>)
 8003fe6:	4293      	cmp	r3, r2
 8003fe8:	d101      	bne.n	8003fee <HAL_GPIO_Init+0x20a>
 8003fea:	2307      	movs	r3, #7
 8003fec:	e00e      	b.n	800400c <HAL_GPIO_Init+0x228>
 8003fee:	2308      	movs	r3, #8
 8003ff0:	e00c      	b.n	800400c <HAL_GPIO_Init+0x228>
 8003ff2:	2306      	movs	r3, #6
 8003ff4:	e00a      	b.n	800400c <HAL_GPIO_Init+0x228>
 8003ff6:	2305      	movs	r3, #5
 8003ff8:	e008      	b.n	800400c <HAL_GPIO_Init+0x228>
 8003ffa:	2304      	movs	r3, #4
 8003ffc:	e006      	b.n	800400c <HAL_GPIO_Init+0x228>
 8003ffe:	2303      	movs	r3, #3
 8004000:	e004      	b.n	800400c <HAL_GPIO_Init+0x228>
 8004002:	2302      	movs	r3, #2
 8004004:	e002      	b.n	800400c <HAL_GPIO_Init+0x228>
 8004006:	2301      	movs	r3, #1
 8004008:	e000      	b.n	800400c <HAL_GPIO_Init+0x228>
 800400a:	2300      	movs	r3, #0
 800400c:	69fa      	ldr	r2, [r7, #28]
 800400e:	f002 0203 	and.w	r2, r2, #3
 8004012:	0092      	lsls	r2, r2, #2
 8004014:	4093      	lsls	r3, r2
 8004016:	69ba      	ldr	r2, [r7, #24]
 8004018:	4313      	orrs	r3, r2
 800401a:	61bb      	str	r3, [r7, #24]
 800401c:	4935      	ldr	r1, [pc, #212]	@ (80040f4 <HAL_GPIO_Init+0x310>)
 800401e:	69fb      	ldr	r3, [r7, #28]
 8004020:	089b      	lsrs	r3, r3, #2
 8004022:	3302      	adds	r3, #2
 8004024:	69ba      	ldr	r2, [r7, #24]
 8004026:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800402a:	4b3b      	ldr	r3, [pc, #236]	@ (8004118 <HAL_GPIO_Init+0x334>)
 800402c:	689b      	ldr	r3, [r3, #8]
 800402e:	61bb      	str	r3, [r7, #24]
 8004030:	693b      	ldr	r3, [r7, #16]
 8004032:	43db      	mvns	r3, r3
 8004034:	69ba      	ldr	r2, [r7, #24]
 8004036:	4013      	ands	r3, r2
 8004038:	61bb      	str	r3, [r7, #24]
 800403a:	683b      	ldr	r3, [r7, #0]
 800403c:	685b      	ldr	r3, [r3, #4]
 800403e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004042:	2b00      	cmp	r3, #0
 8004044:	d003      	beq.n	800404e <HAL_GPIO_Init+0x26a>
 8004046:	69ba      	ldr	r2, [r7, #24]
 8004048:	693b      	ldr	r3, [r7, #16]
 800404a:	4313      	orrs	r3, r2
 800404c:	61bb      	str	r3, [r7, #24]
 800404e:	4a32      	ldr	r2, [pc, #200]	@ (8004118 <HAL_GPIO_Init+0x334>)
 8004050:	69bb      	ldr	r3, [r7, #24]
 8004052:	6093      	str	r3, [r2, #8]
 8004054:	4b30      	ldr	r3, [pc, #192]	@ (8004118 <HAL_GPIO_Init+0x334>)
 8004056:	68db      	ldr	r3, [r3, #12]
 8004058:	61bb      	str	r3, [r7, #24]
 800405a:	693b      	ldr	r3, [r7, #16]
 800405c:	43db      	mvns	r3, r3
 800405e:	69ba      	ldr	r2, [r7, #24]
 8004060:	4013      	ands	r3, r2
 8004062:	61bb      	str	r3, [r7, #24]
 8004064:	683b      	ldr	r3, [r7, #0]
 8004066:	685b      	ldr	r3, [r3, #4]
 8004068:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800406c:	2b00      	cmp	r3, #0
 800406e:	d003      	beq.n	8004078 <HAL_GPIO_Init+0x294>
 8004070:	69ba      	ldr	r2, [r7, #24]
 8004072:	693b      	ldr	r3, [r7, #16]
 8004074:	4313      	orrs	r3, r2
 8004076:	61bb      	str	r3, [r7, #24]
 8004078:	4a27      	ldr	r2, [pc, #156]	@ (8004118 <HAL_GPIO_Init+0x334>)
 800407a:	69bb      	ldr	r3, [r7, #24]
 800407c:	60d3      	str	r3, [r2, #12]
 800407e:	4b26      	ldr	r3, [pc, #152]	@ (8004118 <HAL_GPIO_Init+0x334>)
 8004080:	685b      	ldr	r3, [r3, #4]
 8004082:	61bb      	str	r3, [r7, #24]
 8004084:	693b      	ldr	r3, [r7, #16]
 8004086:	43db      	mvns	r3, r3
 8004088:	69ba      	ldr	r2, [r7, #24]
 800408a:	4013      	ands	r3, r2
 800408c:	61bb      	str	r3, [r7, #24]
 800408e:	683b      	ldr	r3, [r7, #0]
 8004090:	685b      	ldr	r3, [r3, #4]
 8004092:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004096:	2b00      	cmp	r3, #0
 8004098:	d003      	beq.n	80040a2 <HAL_GPIO_Init+0x2be>
 800409a:	69ba      	ldr	r2, [r7, #24]
 800409c:	693b      	ldr	r3, [r7, #16]
 800409e:	4313      	orrs	r3, r2
 80040a0:	61bb      	str	r3, [r7, #24]
 80040a2:	4a1d      	ldr	r2, [pc, #116]	@ (8004118 <HAL_GPIO_Init+0x334>)
 80040a4:	69bb      	ldr	r3, [r7, #24]
 80040a6:	6053      	str	r3, [r2, #4]
 80040a8:	4b1b      	ldr	r3, [pc, #108]	@ (8004118 <HAL_GPIO_Init+0x334>)
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	61bb      	str	r3, [r7, #24]
 80040ae:	693b      	ldr	r3, [r7, #16]
 80040b0:	43db      	mvns	r3, r3
 80040b2:	69ba      	ldr	r2, [r7, #24]
 80040b4:	4013      	ands	r3, r2
 80040b6:	61bb      	str	r3, [r7, #24]
 80040b8:	683b      	ldr	r3, [r7, #0]
 80040ba:	685b      	ldr	r3, [r3, #4]
 80040bc:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	d003      	beq.n	80040cc <HAL_GPIO_Init+0x2e8>
 80040c4:	69ba      	ldr	r2, [r7, #24]
 80040c6:	693b      	ldr	r3, [r7, #16]
 80040c8:	4313      	orrs	r3, r2
 80040ca:	61bb      	str	r3, [r7, #24]
 80040cc:	4a12      	ldr	r2, [pc, #72]	@ (8004118 <HAL_GPIO_Init+0x334>)
 80040ce:	69bb      	ldr	r3, [r7, #24]
 80040d0:	6013      	str	r3, [r2, #0]
 80040d2:	69fb      	ldr	r3, [r7, #28]
 80040d4:	3301      	adds	r3, #1
 80040d6:	61fb      	str	r3, [r7, #28]
 80040d8:	69fb      	ldr	r3, [r7, #28]
 80040da:	2b0f      	cmp	r3, #15
 80040dc:	f67f ae90 	bls.w	8003e00 <HAL_GPIO_Init+0x1c>
 80040e0:	bf00      	nop
 80040e2:	bf00      	nop
 80040e4:	3724      	adds	r7, #36	@ 0x24
 80040e6:	46bd      	mov	sp, r7
 80040e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ec:	4770      	bx	lr
 80040ee:	bf00      	nop
 80040f0:	40023800 	.word	0x40023800
 80040f4:	40013800 	.word	0x40013800
 80040f8:	40020000 	.word	0x40020000
 80040fc:	40020400 	.word	0x40020400
 8004100:	40020800 	.word	0x40020800
 8004104:	40020c00 	.word	0x40020c00
 8004108:	40021000 	.word	0x40021000
 800410c:	40021400 	.word	0x40021400
 8004110:	40021800 	.word	0x40021800
 8004114:	40021c00 	.word	0x40021c00
 8004118:	40013c00 	.word	0x40013c00

0800411c <HAL_GPIO_ReadPin>:
 800411c:	b480      	push	{r7}
 800411e:	b085      	sub	sp, #20
 8004120:	af00      	add	r7, sp, #0
 8004122:	6078      	str	r0, [r7, #4]
 8004124:	460b      	mov	r3, r1
 8004126:	807b      	strh	r3, [r7, #2]
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	691a      	ldr	r2, [r3, #16]
 800412c:	887b      	ldrh	r3, [r7, #2]
 800412e:	4013      	ands	r3, r2
 8004130:	2b00      	cmp	r3, #0
 8004132:	d002      	beq.n	800413a <HAL_GPIO_ReadPin+0x1e>
 8004134:	2301      	movs	r3, #1
 8004136:	73fb      	strb	r3, [r7, #15]
 8004138:	e001      	b.n	800413e <HAL_GPIO_ReadPin+0x22>
 800413a:	2300      	movs	r3, #0
 800413c:	73fb      	strb	r3, [r7, #15]
 800413e:	7bfb      	ldrb	r3, [r7, #15]
 8004140:	4618      	mov	r0, r3
 8004142:	3714      	adds	r7, #20
 8004144:	46bd      	mov	sp, r7
 8004146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800414a:	4770      	bx	lr

0800414c <HAL_GPIO_WritePin>:
 800414c:	b480      	push	{r7}
 800414e:	b083      	sub	sp, #12
 8004150:	af00      	add	r7, sp, #0
 8004152:	6078      	str	r0, [r7, #4]
 8004154:	460b      	mov	r3, r1
 8004156:	807b      	strh	r3, [r7, #2]
 8004158:	4613      	mov	r3, r2
 800415a:	707b      	strb	r3, [r7, #1]
 800415c:	787b      	ldrb	r3, [r7, #1]
 800415e:	2b00      	cmp	r3, #0
 8004160:	d003      	beq.n	800416a <HAL_GPIO_WritePin+0x1e>
 8004162:	887a      	ldrh	r2, [r7, #2]
 8004164:	687b      	ldr	r3, [r7, #4]
 8004166:	619a      	str	r2, [r3, #24]
 8004168:	e003      	b.n	8004172 <HAL_GPIO_WritePin+0x26>
 800416a:	887b      	ldrh	r3, [r7, #2]
 800416c:	041a      	lsls	r2, r3, #16
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	619a      	str	r2, [r3, #24]
 8004172:	bf00      	nop
 8004174:	370c      	adds	r7, #12
 8004176:	46bd      	mov	sp, r7
 8004178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800417c:	4770      	bx	lr
	...

08004180 <HAL_GPIO_EXTI_IRQHandler>:
 8004180:	b580      	push	{r7, lr}
 8004182:	b082      	sub	sp, #8
 8004184:	af00      	add	r7, sp, #0
 8004186:	4603      	mov	r3, r0
 8004188:	80fb      	strh	r3, [r7, #6]
 800418a:	4b08      	ldr	r3, [pc, #32]	@ (80041ac <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800418c:	695a      	ldr	r2, [r3, #20]
 800418e:	88fb      	ldrh	r3, [r7, #6]
 8004190:	4013      	ands	r3, r2
 8004192:	2b00      	cmp	r3, #0
 8004194:	d006      	beq.n	80041a4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8004196:	4a05      	ldr	r2, [pc, #20]	@ (80041ac <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004198:	88fb      	ldrh	r3, [r7, #6]
 800419a:	6153      	str	r3, [r2, #20]
 800419c:	88fb      	ldrh	r3, [r7, #6]
 800419e:	4618      	mov	r0, r3
 80041a0:	f000 f806 	bl	80041b0 <HAL_GPIO_EXTI_Callback>
 80041a4:	bf00      	nop
 80041a6:	3708      	adds	r7, #8
 80041a8:	46bd      	mov	sp, r7
 80041aa:	bd80      	pop	{r7, pc}
 80041ac:	40013c00 	.word	0x40013c00

080041b0 <HAL_GPIO_EXTI_Callback>:
 80041b0:	b480      	push	{r7}
 80041b2:	b083      	sub	sp, #12
 80041b4:	af00      	add	r7, sp, #0
 80041b6:	4603      	mov	r3, r0
 80041b8:	80fb      	strh	r3, [r7, #6]
 80041ba:	bf00      	nop
 80041bc:	370c      	adds	r7, #12
 80041be:	46bd      	mov	sp, r7
 80041c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041c4:	4770      	bx	lr
	...

080041c8 <HAL_I2C_Init>:
 80041c8:	b580      	push	{r7, lr}
 80041ca:	b084      	sub	sp, #16
 80041cc:	af00      	add	r7, sp, #0
 80041ce:	6078      	str	r0, [r7, #4]
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	2b00      	cmp	r3, #0
 80041d4:	d101      	bne.n	80041da <HAL_I2C_Init+0x12>
 80041d6:	2301      	movs	r3, #1
 80041d8:	e12b      	b.n	8004432 <HAL_I2C_Init+0x26a>
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80041e0:	b2db      	uxtb	r3, r3
 80041e2:	2b00      	cmp	r3, #0
 80041e4:	d106      	bne.n	80041f4 <HAL_I2C_Init+0x2c>
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	2200      	movs	r2, #0
 80041ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80041ee:	6878      	ldr	r0, [r7, #4]
 80041f0:	f7fd ff68 	bl	80020c4 <HAL_I2C_MspInit>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	2224      	movs	r2, #36	@ 0x24
 80041f8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	681a      	ldr	r2, [r3, #0]
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	f022 0201 	bic.w	r2, r2, #1
 800420a:	601a      	str	r2, [r3, #0]
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	681a      	ldr	r2, [r3, #0]
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800421a:	601a      	str	r2, [r3, #0]
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	681a      	ldr	r2, [r3, #0]
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800422a:	601a      	str	r2, [r3, #0]
 800422c:	f000 fd4c 	bl	8004cc8 <HAL_RCC_GetPCLK1Freq>
 8004230:	60f8      	str	r0, [r7, #12]
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	685b      	ldr	r3, [r3, #4]
 8004236:	4a81      	ldr	r2, [pc, #516]	@ (800443c <HAL_I2C_Init+0x274>)
 8004238:	4293      	cmp	r3, r2
 800423a:	d807      	bhi.n	800424c <HAL_I2C_Init+0x84>
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	4a80      	ldr	r2, [pc, #512]	@ (8004440 <HAL_I2C_Init+0x278>)
 8004240:	4293      	cmp	r3, r2
 8004242:	bf94      	ite	ls
 8004244:	2301      	movls	r3, #1
 8004246:	2300      	movhi	r3, #0
 8004248:	b2db      	uxtb	r3, r3
 800424a:	e006      	b.n	800425a <HAL_I2C_Init+0x92>
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	4a7d      	ldr	r2, [pc, #500]	@ (8004444 <HAL_I2C_Init+0x27c>)
 8004250:	4293      	cmp	r3, r2
 8004252:	bf94      	ite	ls
 8004254:	2301      	movls	r3, #1
 8004256:	2300      	movhi	r3, #0
 8004258:	b2db      	uxtb	r3, r3
 800425a:	2b00      	cmp	r3, #0
 800425c:	d001      	beq.n	8004262 <HAL_I2C_Init+0x9a>
 800425e:	2301      	movs	r3, #1
 8004260:	e0e7      	b.n	8004432 <HAL_I2C_Init+0x26a>
 8004262:	68fb      	ldr	r3, [r7, #12]
 8004264:	4a78      	ldr	r2, [pc, #480]	@ (8004448 <HAL_I2C_Init+0x280>)
 8004266:	fba2 2303 	umull	r2, r3, r2, r3
 800426a:	0c9b      	lsrs	r3, r3, #18
 800426c:	60bb      	str	r3, [r7, #8]
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	685b      	ldr	r3, [r3, #4]
 8004274:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	68ba      	ldr	r2, [r7, #8]
 800427e:	430a      	orrs	r2, r1
 8004280:	605a      	str	r2, [r3, #4]
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	6a1b      	ldr	r3, [r3, #32]
 8004288:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	685b      	ldr	r3, [r3, #4]
 8004290:	4a6a      	ldr	r2, [pc, #424]	@ (800443c <HAL_I2C_Init+0x274>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d802      	bhi.n	800429c <HAL_I2C_Init+0xd4>
 8004296:	68bb      	ldr	r3, [r7, #8]
 8004298:	3301      	adds	r3, #1
 800429a:	e009      	b.n	80042b0 <HAL_I2C_Init+0xe8>
 800429c:	68bb      	ldr	r3, [r7, #8]
 800429e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80042a2:	fb02 f303 	mul.w	r3, r2, r3
 80042a6:	4a69      	ldr	r2, [pc, #420]	@ (800444c <HAL_I2C_Init+0x284>)
 80042a8:	fba2 2303 	umull	r2, r3, r2, r3
 80042ac:	099b      	lsrs	r3, r3, #6
 80042ae:	3301      	adds	r3, #1
 80042b0:	687a      	ldr	r2, [r7, #4]
 80042b2:	6812      	ldr	r2, [r2, #0]
 80042b4:	430b      	orrs	r3, r1
 80042b6:	6213      	str	r3, [r2, #32]
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	69db      	ldr	r3, [r3, #28]
 80042be:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80042c2:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	685b      	ldr	r3, [r3, #4]
 80042ca:	495c      	ldr	r1, [pc, #368]	@ (800443c <HAL_I2C_Init+0x274>)
 80042cc:	428b      	cmp	r3, r1
 80042ce:	d819      	bhi.n	8004304 <HAL_I2C_Init+0x13c>
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	1e59      	subs	r1, r3, #1
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	685b      	ldr	r3, [r3, #4]
 80042d8:	005b      	lsls	r3, r3, #1
 80042da:	fbb1 f3f3 	udiv	r3, r1, r3
 80042de:	1c59      	adds	r1, r3, #1
 80042e0:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80042e4:	400b      	ands	r3, r1
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	d00a      	beq.n	8004300 <HAL_I2C_Init+0x138>
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	1e59      	subs	r1, r3, #1
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	685b      	ldr	r3, [r3, #4]
 80042f2:	005b      	lsls	r3, r3, #1
 80042f4:	fbb1 f3f3 	udiv	r3, r1, r3
 80042f8:	3301      	adds	r3, #1
 80042fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80042fe:	e051      	b.n	80043a4 <HAL_I2C_Init+0x1dc>
 8004300:	2304      	movs	r3, #4
 8004302:	e04f      	b.n	80043a4 <HAL_I2C_Init+0x1dc>
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	689b      	ldr	r3, [r3, #8]
 8004308:	2b00      	cmp	r3, #0
 800430a:	d111      	bne.n	8004330 <HAL_I2C_Init+0x168>
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	1e58      	subs	r0, r3, #1
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	6859      	ldr	r1, [r3, #4]
 8004314:	460b      	mov	r3, r1
 8004316:	005b      	lsls	r3, r3, #1
 8004318:	440b      	add	r3, r1
 800431a:	fbb0 f3f3 	udiv	r3, r0, r3
 800431e:	3301      	adds	r3, #1
 8004320:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004324:	2b00      	cmp	r3, #0
 8004326:	bf0c      	ite	eq
 8004328:	2301      	moveq	r3, #1
 800432a:	2300      	movne	r3, #0
 800432c:	b2db      	uxtb	r3, r3
 800432e:	e012      	b.n	8004356 <HAL_I2C_Init+0x18e>
 8004330:	68fb      	ldr	r3, [r7, #12]
 8004332:	1e58      	subs	r0, r3, #1
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	6859      	ldr	r1, [r3, #4]
 8004338:	460b      	mov	r3, r1
 800433a:	009b      	lsls	r3, r3, #2
 800433c:	440b      	add	r3, r1
 800433e:	0099      	lsls	r1, r3, #2
 8004340:	440b      	add	r3, r1
 8004342:	fbb0 f3f3 	udiv	r3, r0, r3
 8004346:	3301      	adds	r3, #1
 8004348:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800434c:	2b00      	cmp	r3, #0
 800434e:	bf0c      	ite	eq
 8004350:	2301      	moveq	r3, #1
 8004352:	2300      	movne	r3, #0
 8004354:	b2db      	uxtb	r3, r3
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <HAL_I2C_Init+0x196>
 800435a:	2301      	movs	r3, #1
 800435c:	e022      	b.n	80043a4 <HAL_I2C_Init+0x1dc>
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	689b      	ldr	r3, [r3, #8]
 8004362:	2b00      	cmp	r3, #0
 8004364:	d10e      	bne.n	8004384 <HAL_I2C_Init+0x1bc>
 8004366:	68fb      	ldr	r3, [r7, #12]
 8004368:	1e58      	subs	r0, r3, #1
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	6859      	ldr	r1, [r3, #4]
 800436e:	460b      	mov	r3, r1
 8004370:	005b      	lsls	r3, r3, #1
 8004372:	440b      	add	r3, r1
 8004374:	fbb0 f3f3 	udiv	r3, r0, r3
 8004378:	3301      	adds	r3, #1
 800437a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800437e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004382:	e00f      	b.n	80043a4 <HAL_I2C_Init+0x1dc>
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	1e58      	subs	r0, r3, #1
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	6859      	ldr	r1, [r3, #4]
 800438c:	460b      	mov	r3, r1
 800438e:	009b      	lsls	r3, r3, #2
 8004390:	440b      	add	r3, r1
 8004392:	0099      	lsls	r1, r3, #2
 8004394:	440b      	add	r3, r1
 8004396:	fbb0 f3f3 	udiv	r3, r0, r3
 800439a:	3301      	adds	r3, #1
 800439c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043a0:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80043a4:	6879      	ldr	r1, [r7, #4]
 80043a6:	6809      	ldr	r1, [r1, #0]
 80043a8:	4313      	orrs	r3, r2
 80043aa:	61cb      	str	r3, [r1, #28]
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	69da      	ldr	r2, [r3, #28]
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	6a1b      	ldr	r3, [r3, #32]
 80043be:	431a      	orrs	r2, r3
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	430a      	orrs	r2, r1
 80043c6:	601a      	str	r2, [r3, #0]
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	689b      	ldr	r3, [r3, #8]
 80043ce:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80043d2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80043d6:	687a      	ldr	r2, [r7, #4]
 80043d8:	6911      	ldr	r1, [r2, #16]
 80043da:	687a      	ldr	r2, [r7, #4]
 80043dc:	68d2      	ldr	r2, [r2, #12]
 80043de:	4311      	orrs	r1, r2
 80043e0:	687a      	ldr	r2, [r7, #4]
 80043e2:	6812      	ldr	r2, [r2, #0]
 80043e4:	430b      	orrs	r3, r1
 80043e6:	6093      	str	r3, [r2, #8]
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	68db      	ldr	r3, [r3, #12]
 80043ee:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	695a      	ldr	r2, [r3, #20]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	699b      	ldr	r3, [r3, #24]
 80043fa:	431a      	orrs	r2, r3
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	430a      	orrs	r2, r1
 8004402:	60da      	str	r2, [r3, #12]
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	681a      	ldr	r2, [r3, #0]
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	f042 0201 	orr.w	r2, r2, #1
 8004412:	601a      	str	r2, [r3, #0]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	2200      	movs	r2, #0
 8004418:	641a      	str	r2, [r3, #64]	@ 0x40
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	2220      	movs	r2, #32
 800441e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	2200      	movs	r2, #0
 8004426:	631a      	str	r2, [r3, #48]	@ 0x30
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	2200      	movs	r2, #0
 800442c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004430:	2300      	movs	r3, #0
 8004432:	4618      	mov	r0, r3
 8004434:	3710      	adds	r7, #16
 8004436:	46bd      	mov	sp, r7
 8004438:	bd80      	pop	{r7, pc}
 800443a:	bf00      	nop
 800443c:	000186a0 	.word	0x000186a0
 8004440:	001e847f 	.word	0x001e847f
 8004444:	003d08ff 	.word	0x003d08ff
 8004448:	431bde83 	.word	0x431bde83
 800444c:	10624dd3 	.word	0x10624dd3

08004450 <HAL_RCC_OscConfig>:
 8004450:	b580      	push	{r7, lr}
 8004452:	b086      	sub	sp, #24
 8004454:	af00      	add	r7, sp, #0
 8004456:	6078      	str	r0, [r7, #4]
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	2b00      	cmp	r3, #0
 800445c:	d101      	bne.n	8004462 <HAL_RCC_OscConfig+0x12>
 800445e:	2301      	movs	r3, #1
 8004460:	e267      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	f003 0301 	and.w	r3, r3, #1
 800446a:	2b00      	cmp	r3, #0
 800446c:	d075      	beq.n	800455a <HAL_RCC_OscConfig+0x10a>
 800446e:	4b88      	ldr	r3, [pc, #544]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004470:	689b      	ldr	r3, [r3, #8]
 8004472:	f003 030c 	and.w	r3, r3, #12
 8004476:	2b04      	cmp	r3, #4
 8004478:	d00c      	beq.n	8004494 <HAL_RCC_OscConfig+0x44>
 800447a:	4b85      	ldr	r3, [pc, #532]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 800447c:	689b      	ldr	r3, [r3, #8]
 800447e:	f003 030c 	and.w	r3, r3, #12
 8004482:	2b08      	cmp	r3, #8
 8004484:	d112      	bne.n	80044ac <HAL_RCC_OscConfig+0x5c>
 8004486:	4b82      	ldr	r3, [pc, #520]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004488:	685b      	ldr	r3, [r3, #4]
 800448a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800448e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004492:	d10b      	bne.n	80044ac <HAL_RCC_OscConfig+0x5c>
 8004494:	4b7e      	ldr	r3, [pc, #504]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800449c:	2b00      	cmp	r3, #0
 800449e:	d05b      	beq.n	8004558 <HAL_RCC_OscConfig+0x108>
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	685b      	ldr	r3, [r3, #4]
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d157      	bne.n	8004558 <HAL_RCC_OscConfig+0x108>
 80044a8:	2301      	movs	r3, #1
 80044aa:	e242      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	685b      	ldr	r3, [r3, #4]
 80044b0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80044b4:	d106      	bne.n	80044c4 <HAL_RCC_OscConfig+0x74>
 80044b6:	4b76      	ldr	r3, [pc, #472]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	4a75      	ldr	r2, [pc, #468]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044bc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80044c0:	6013      	str	r3, [r2, #0]
 80044c2:	e01d      	b.n	8004500 <HAL_RCC_OscConfig+0xb0>
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	685b      	ldr	r3, [r3, #4]
 80044c8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80044cc:	d10c      	bne.n	80044e8 <HAL_RCC_OscConfig+0x98>
 80044ce:	4b70      	ldr	r3, [pc, #448]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	4a6f      	ldr	r2, [pc, #444]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044d4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80044d8:	6013      	str	r3, [r2, #0]
 80044da:	4b6d      	ldr	r3, [pc, #436]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	4a6c      	ldr	r2, [pc, #432]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044e0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80044e4:	6013      	str	r3, [r2, #0]
 80044e6:	e00b      	b.n	8004500 <HAL_RCC_OscConfig+0xb0>
 80044e8:	4b69      	ldr	r3, [pc, #420]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	4a68      	ldr	r2, [pc, #416]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044ee:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80044f2:	6013      	str	r3, [r2, #0]
 80044f4:	4b66      	ldr	r3, [pc, #408]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	4a65      	ldr	r2, [pc, #404]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80044fa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80044fe:	6013      	str	r3, [r2, #0]
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	685b      	ldr	r3, [r3, #4]
 8004504:	2b00      	cmp	r3, #0
 8004506:	d013      	beq.n	8004530 <HAL_RCC_OscConfig+0xe0>
 8004508:	f7fe fc18 	bl	8002d3c <HAL_GetTick>
 800450c:	6138      	str	r0, [r7, #16]
 800450e:	e008      	b.n	8004522 <HAL_RCC_OscConfig+0xd2>
 8004510:	f7fe fc14 	bl	8002d3c <HAL_GetTick>
 8004514:	4602      	mov	r2, r0
 8004516:	693b      	ldr	r3, [r7, #16]
 8004518:	1ad3      	subs	r3, r2, r3
 800451a:	2b64      	cmp	r3, #100	@ 0x64
 800451c:	d901      	bls.n	8004522 <HAL_RCC_OscConfig+0xd2>
 800451e:	2303      	movs	r3, #3
 8004520:	e207      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004522:	4b5b      	ldr	r3, [pc, #364]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800452a:	2b00      	cmp	r3, #0
 800452c:	d0f0      	beq.n	8004510 <HAL_RCC_OscConfig+0xc0>
 800452e:	e014      	b.n	800455a <HAL_RCC_OscConfig+0x10a>
 8004530:	f7fe fc04 	bl	8002d3c <HAL_GetTick>
 8004534:	6138      	str	r0, [r7, #16]
 8004536:	e008      	b.n	800454a <HAL_RCC_OscConfig+0xfa>
 8004538:	f7fe fc00 	bl	8002d3c <HAL_GetTick>
 800453c:	4602      	mov	r2, r0
 800453e:	693b      	ldr	r3, [r7, #16]
 8004540:	1ad3      	subs	r3, r2, r3
 8004542:	2b64      	cmp	r3, #100	@ 0x64
 8004544:	d901      	bls.n	800454a <HAL_RCC_OscConfig+0xfa>
 8004546:	2303      	movs	r3, #3
 8004548:	e1f3      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 800454a:	4b51      	ldr	r3, [pc, #324]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004552:	2b00      	cmp	r3, #0
 8004554:	d1f0      	bne.n	8004538 <HAL_RCC_OscConfig+0xe8>
 8004556:	e000      	b.n	800455a <HAL_RCC_OscConfig+0x10a>
 8004558:	bf00      	nop
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	f003 0302 	and.w	r3, r3, #2
 8004562:	2b00      	cmp	r3, #0
 8004564:	d063      	beq.n	800462e <HAL_RCC_OscConfig+0x1de>
 8004566:	4b4a      	ldr	r3, [pc, #296]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004568:	689b      	ldr	r3, [r3, #8]
 800456a:	f003 030c 	and.w	r3, r3, #12
 800456e:	2b00      	cmp	r3, #0
 8004570:	d00b      	beq.n	800458a <HAL_RCC_OscConfig+0x13a>
 8004572:	4b47      	ldr	r3, [pc, #284]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004574:	689b      	ldr	r3, [r3, #8]
 8004576:	f003 030c 	and.w	r3, r3, #12
 800457a:	2b08      	cmp	r3, #8
 800457c:	d11c      	bne.n	80045b8 <HAL_RCC_OscConfig+0x168>
 800457e:	4b44      	ldr	r3, [pc, #272]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004580:	685b      	ldr	r3, [r3, #4]
 8004582:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004586:	2b00      	cmp	r3, #0
 8004588:	d116      	bne.n	80045b8 <HAL_RCC_OscConfig+0x168>
 800458a:	4b41      	ldr	r3, [pc, #260]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	f003 0302 	and.w	r3, r3, #2
 8004592:	2b00      	cmp	r3, #0
 8004594:	d005      	beq.n	80045a2 <HAL_RCC_OscConfig+0x152>
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	68db      	ldr	r3, [r3, #12]
 800459a:	2b01      	cmp	r3, #1
 800459c:	d001      	beq.n	80045a2 <HAL_RCC_OscConfig+0x152>
 800459e:	2301      	movs	r3, #1
 80045a0:	e1c7      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 80045a2:	4b3b      	ldr	r3, [pc, #236]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	691b      	ldr	r3, [r3, #16]
 80045ae:	00db      	lsls	r3, r3, #3
 80045b0:	4937      	ldr	r1, [pc, #220]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80045b2:	4313      	orrs	r3, r2
 80045b4:	600b      	str	r3, [r1, #0]
 80045b6:	e03a      	b.n	800462e <HAL_RCC_OscConfig+0x1de>
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	68db      	ldr	r3, [r3, #12]
 80045bc:	2b00      	cmp	r3, #0
 80045be:	d020      	beq.n	8004602 <HAL_RCC_OscConfig+0x1b2>
 80045c0:	4b34      	ldr	r3, [pc, #208]	@ (8004694 <HAL_RCC_OscConfig+0x244>)
 80045c2:	2201      	movs	r2, #1
 80045c4:	601a      	str	r2, [r3, #0]
 80045c6:	f7fe fbb9 	bl	8002d3c <HAL_GetTick>
 80045ca:	6138      	str	r0, [r7, #16]
 80045cc:	e008      	b.n	80045e0 <HAL_RCC_OscConfig+0x190>
 80045ce:	f7fe fbb5 	bl	8002d3c <HAL_GetTick>
 80045d2:	4602      	mov	r2, r0
 80045d4:	693b      	ldr	r3, [r7, #16]
 80045d6:	1ad3      	subs	r3, r2, r3
 80045d8:	2b02      	cmp	r3, #2
 80045da:	d901      	bls.n	80045e0 <HAL_RCC_OscConfig+0x190>
 80045dc:	2303      	movs	r3, #3
 80045de:	e1a8      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 80045e0:	4b2b      	ldr	r3, [pc, #172]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	f003 0302 	and.w	r3, r3, #2
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d0f0      	beq.n	80045ce <HAL_RCC_OscConfig+0x17e>
 80045ec:	4b28      	ldr	r3, [pc, #160]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	691b      	ldr	r3, [r3, #16]
 80045f8:	00db      	lsls	r3, r3, #3
 80045fa:	4925      	ldr	r1, [pc, #148]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 80045fc:	4313      	orrs	r3, r2
 80045fe:	600b      	str	r3, [r1, #0]
 8004600:	e015      	b.n	800462e <HAL_RCC_OscConfig+0x1de>
 8004602:	4b24      	ldr	r3, [pc, #144]	@ (8004694 <HAL_RCC_OscConfig+0x244>)
 8004604:	2200      	movs	r2, #0
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	f7fe fb98 	bl	8002d3c <HAL_GetTick>
 800460c:	6138      	str	r0, [r7, #16]
 800460e:	e008      	b.n	8004622 <HAL_RCC_OscConfig+0x1d2>
 8004610:	f7fe fb94 	bl	8002d3c <HAL_GetTick>
 8004614:	4602      	mov	r2, r0
 8004616:	693b      	ldr	r3, [r7, #16]
 8004618:	1ad3      	subs	r3, r2, r3
 800461a:	2b02      	cmp	r3, #2
 800461c:	d901      	bls.n	8004622 <HAL_RCC_OscConfig+0x1d2>
 800461e:	2303      	movs	r3, #3
 8004620:	e187      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004622:	4b1b      	ldr	r3, [pc, #108]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	f003 0302 	and.w	r3, r3, #2
 800462a:	2b00      	cmp	r3, #0
 800462c:	d1f0      	bne.n	8004610 <HAL_RCC_OscConfig+0x1c0>
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	f003 0308 	and.w	r3, r3, #8
 8004636:	2b00      	cmp	r3, #0
 8004638:	d036      	beq.n	80046a8 <HAL_RCC_OscConfig+0x258>
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	695b      	ldr	r3, [r3, #20]
 800463e:	2b00      	cmp	r3, #0
 8004640:	d016      	beq.n	8004670 <HAL_RCC_OscConfig+0x220>
 8004642:	4b15      	ldr	r3, [pc, #84]	@ (8004698 <HAL_RCC_OscConfig+0x248>)
 8004644:	2201      	movs	r2, #1
 8004646:	601a      	str	r2, [r3, #0]
 8004648:	f7fe fb78 	bl	8002d3c <HAL_GetTick>
 800464c:	6138      	str	r0, [r7, #16]
 800464e:	e008      	b.n	8004662 <HAL_RCC_OscConfig+0x212>
 8004650:	f7fe fb74 	bl	8002d3c <HAL_GetTick>
 8004654:	4602      	mov	r2, r0
 8004656:	693b      	ldr	r3, [r7, #16]
 8004658:	1ad3      	subs	r3, r2, r3
 800465a:	2b02      	cmp	r3, #2
 800465c:	d901      	bls.n	8004662 <HAL_RCC_OscConfig+0x212>
 800465e:	2303      	movs	r3, #3
 8004660:	e167      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004662:	4b0b      	ldr	r3, [pc, #44]	@ (8004690 <HAL_RCC_OscConfig+0x240>)
 8004664:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004666:	f003 0302 	and.w	r3, r3, #2
 800466a:	2b00      	cmp	r3, #0
 800466c:	d0f0      	beq.n	8004650 <HAL_RCC_OscConfig+0x200>
 800466e:	e01b      	b.n	80046a8 <HAL_RCC_OscConfig+0x258>
 8004670:	4b09      	ldr	r3, [pc, #36]	@ (8004698 <HAL_RCC_OscConfig+0x248>)
 8004672:	2200      	movs	r2, #0
 8004674:	601a      	str	r2, [r3, #0]
 8004676:	f7fe fb61 	bl	8002d3c <HAL_GetTick>
 800467a:	6138      	str	r0, [r7, #16]
 800467c:	e00e      	b.n	800469c <HAL_RCC_OscConfig+0x24c>
 800467e:	f7fe fb5d 	bl	8002d3c <HAL_GetTick>
 8004682:	4602      	mov	r2, r0
 8004684:	693b      	ldr	r3, [r7, #16]
 8004686:	1ad3      	subs	r3, r2, r3
 8004688:	2b02      	cmp	r3, #2
 800468a:	d907      	bls.n	800469c <HAL_RCC_OscConfig+0x24c>
 800468c:	2303      	movs	r3, #3
 800468e:	e150      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004690:	40023800 	.word	0x40023800
 8004694:	42470000 	.word	0x42470000
 8004698:	42470e80 	.word	0x42470e80
 800469c:	4b88      	ldr	r3, [pc, #544]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800469e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80046a0:	f003 0302 	and.w	r3, r3, #2
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	d1ea      	bne.n	800467e <HAL_RCC_OscConfig+0x22e>
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	f003 0304 	and.w	r3, r3, #4
 80046b0:	2b00      	cmp	r3, #0
 80046b2:	f000 8097 	beq.w	80047e4 <HAL_RCC_OscConfig+0x394>
 80046b6:	2300      	movs	r3, #0
 80046b8:	75fb      	strb	r3, [r7, #23]
 80046ba:	4b81      	ldr	r3, [pc, #516]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80046bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046be:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d10f      	bne.n	80046e6 <HAL_RCC_OscConfig+0x296>
 80046c6:	2300      	movs	r3, #0
 80046c8:	60bb      	str	r3, [r7, #8]
 80046ca:	4b7d      	ldr	r3, [pc, #500]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80046cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046ce:	4a7c      	ldr	r2, [pc, #496]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80046d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80046d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80046d6:	4b7a      	ldr	r3, [pc, #488]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80046d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80046de:	60bb      	str	r3, [r7, #8]
 80046e0:	68bb      	ldr	r3, [r7, #8]
 80046e2:	2301      	movs	r3, #1
 80046e4:	75fb      	strb	r3, [r7, #23]
 80046e6:	4b77      	ldr	r3, [pc, #476]	@ (80048c4 <HAL_RCC_OscConfig+0x474>)
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80046ee:	2b00      	cmp	r3, #0
 80046f0:	d118      	bne.n	8004724 <HAL_RCC_OscConfig+0x2d4>
 80046f2:	4b74      	ldr	r3, [pc, #464]	@ (80048c4 <HAL_RCC_OscConfig+0x474>)
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	4a73      	ldr	r2, [pc, #460]	@ (80048c4 <HAL_RCC_OscConfig+0x474>)
 80046f8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80046fc:	6013      	str	r3, [r2, #0]
 80046fe:	f7fe fb1d 	bl	8002d3c <HAL_GetTick>
 8004702:	6138      	str	r0, [r7, #16]
 8004704:	e008      	b.n	8004718 <HAL_RCC_OscConfig+0x2c8>
 8004706:	f7fe fb19 	bl	8002d3c <HAL_GetTick>
 800470a:	4602      	mov	r2, r0
 800470c:	693b      	ldr	r3, [r7, #16]
 800470e:	1ad3      	subs	r3, r2, r3
 8004710:	2b02      	cmp	r3, #2
 8004712:	d901      	bls.n	8004718 <HAL_RCC_OscConfig+0x2c8>
 8004714:	2303      	movs	r3, #3
 8004716:	e10c      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004718:	4b6a      	ldr	r3, [pc, #424]	@ (80048c4 <HAL_RCC_OscConfig+0x474>)
 800471a:	681b      	ldr	r3, [r3, #0]
 800471c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004720:	2b00      	cmp	r3, #0
 8004722:	d0f0      	beq.n	8004706 <HAL_RCC_OscConfig+0x2b6>
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	689b      	ldr	r3, [r3, #8]
 8004728:	2b01      	cmp	r3, #1
 800472a:	d106      	bne.n	800473a <HAL_RCC_OscConfig+0x2ea>
 800472c:	4b64      	ldr	r3, [pc, #400]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800472e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004730:	4a63      	ldr	r2, [pc, #396]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004732:	f043 0301 	orr.w	r3, r3, #1
 8004736:	6713      	str	r3, [r2, #112]	@ 0x70
 8004738:	e01c      	b.n	8004774 <HAL_RCC_OscConfig+0x324>
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	689b      	ldr	r3, [r3, #8]
 800473e:	2b05      	cmp	r3, #5
 8004740:	d10c      	bne.n	800475c <HAL_RCC_OscConfig+0x30c>
 8004742:	4b5f      	ldr	r3, [pc, #380]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004744:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004746:	4a5e      	ldr	r2, [pc, #376]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004748:	f043 0304 	orr.w	r3, r3, #4
 800474c:	6713      	str	r3, [r2, #112]	@ 0x70
 800474e:	4b5c      	ldr	r3, [pc, #368]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004750:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004752:	4a5b      	ldr	r2, [pc, #364]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004754:	f043 0301 	orr.w	r3, r3, #1
 8004758:	6713      	str	r3, [r2, #112]	@ 0x70
 800475a:	e00b      	b.n	8004774 <HAL_RCC_OscConfig+0x324>
 800475c:	4b58      	ldr	r3, [pc, #352]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800475e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004760:	4a57      	ldr	r2, [pc, #348]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004762:	f023 0301 	bic.w	r3, r3, #1
 8004766:	6713      	str	r3, [r2, #112]	@ 0x70
 8004768:	4b55      	ldr	r3, [pc, #340]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800476a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800476c:	4a54      	ldr	r2, [pc, #336]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800476e:	f023 0304 	bic.w	r3, r3, #4
 8004772:	6713      	str	r3, [r2, #112]	@ 0x70
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	689b      	ldr	r3, [r3, #8]
 8004778:	2b00      	cmp	r3, #0
 800477a:	d015      	beq.n	80047a8 <HAL_RCC_OscConfig+0x358>
 800477c:	f7fe fade 	bl	8002d3c <HAL_GetTick>
 8004780:	6138      	str	r0, [r7, #16]
 8004782:	e00a      	b.n	800479a <HAL_RCC_OscConfig+0x34a>
 8004784:	f7fe fada 	bl	8002d3c <HAL_GetTick>
 8004788:	4602      	mov	r2, r0
 800478a:	693b      	ldr	r3, [r7, #16]
 800478c:	1ad3      	subs	r3, r2, r3
 800478e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004792:	4293      	cmp	r3, r2
 8004794:	d901      	bls.n	800479a <HAL_RCC_OscConfig+0x34a>
 8004796:	2303      	movs	r3, #3
 8004798:	e0cb      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 800479a:	4b49      	ldr	r3, [pc, #292]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800479c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800479e:	f003 0302 	and.w	r3, r3, #2
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d0ee      	beq.n	8004784 <HAL_RCC_OscConfig+0x334>
 80047a6:	e014      	b.n	80047d2 <HAL_RCC_OscConfig+0x382>
 80047a8:	f7fe fac8 	bl	8002d3c <HAL_GetTick>
 80047ac:	6138      	str	r0, [r7, #16]
 80047ae:	e00a      	b.n	80047c6 <HAL_RCC_OscConfig+0x376>
 80047b0:	f7fe fac4 	bl	8002d3c <HAL_GetTick>
 80047b4:	4602      	mov	r2, r0
 80047b6:	693b      	ldr	r3, [r7, #16]
 80047b8:	1ad3      	subs	r3, r2, r3
 80047ba:	f241 3288 	movw	r2, #5000	@ 0x1388
 80047be:	4293      	cmp	r3, r2
 80047c0:	d901      	bls.n	80047c6 <HAL_RCC_OscConfig+0x376>
 80047c2:	2303      	movs	r3, #3
 80047c4:	e0b5      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 80047c6:	4b3e      	ldr	r3, [pc, #248]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80047c8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80047ca:	f003 0302 	and.w	r3, r3, #2
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	d1ee      	bne.n	80047b0 <HAL_RCC_OscConfig+0x360>
 80047d2:	7dfb      	ldrb	r3, [r7, #23]
 80047d4:	2b01      	cmp	r3, #1
 80047d6:	d105      	bne.n	80047e4 <HAL_RCC_OscConfig+0x394>
 80047d8:	4b39      	ldr	r3, [pc, #228]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80047da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047dc:	4a38      	ldr	r2, [pc, #224]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80047de:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80047e2:	6413      	str	r3, [r2, #64]	@ 0x40
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	699b      	ldr	r3, [r3, #24]
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	f000 80a1 	beq.w	8004930 <HAL_RCC_OscConfig+0x4e0>
 80047ee:	4b34      	ldr	r3, [pc, #208]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80047f0:	689b      	ldr	r3, [r3, #8]
 80047f2:	f003 030c 	and.w	r3, r3, #12
 80047f6:	2b08      	cmp	r3, #8
 80047f8:	d05c      	beq.n	80048b4 <HAL_RCC_OscConfig+0x464>
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	699b      	ldr	r3, [r3, #24]
 80047fe:	2b02      	cmp	r3, #2
 8004800:	d141      	bne.n	8004886 <HAL_RCC_OscConfig+0x436>
 8004802:	4b31      	ldr	r3, [pc, #196]	@ (80048c8 <HAL_RCC_OscConfig+0x478>)
 8004804:	2200      	movs	r2, #0
 8004806:	601a      	str	r2, [r3, #0]
 8004808:	f7fe fa98 	bl	8002d3c <HAL_GetTick>
 800480c:	6138      	str	r0, [r7, #16]
 800480e:	e008      	b.n	8004822 <HAL_RCC_OscConfig+0x3d2>
 8004810:	f7fe fa94 	bl	8002d3c <HAL_GetTick>
 8004814:	4602      	mov	r2, r0
 8004816:	693b      	ldr	r3, [r7, #16]
 8004818:	1ad3      	subs	r3, r2, r3
 800481a:	2b02      	cmp	r3, #2
 800481c:	d901      	bls.n	8004822 <HAL_RCC_OscConfig+0x3d2>
 800481e:	2303      	movs	r3, #3
 8004820:	e087      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004822:	4b27      	ldr	r3, [pc, #156]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800482a:	2b00      	cmp	r3, #0
 800482c:	d1f0      	bne.n	8004810 <HAL_RCC_OscConfig+0x3c0>
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	69da      	ldr	r2, [r3, #28]
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	6a1b      	ldr	r3, [r3, #32]
 8004836:	431a      	orrs	r2, r3
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800483c:	019b      	lsls	r3, r3, #6
 800483e:	431a      	orrs	r2, r3
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004844:	085b      	lsrs	r3, r3, #1
 8004846:	3b01      	subs	r3, #1
 8004848:	041b      	lsls	r3, r3, #16
 800484a:	431a      	orrs	r2, r3
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004850:	061b      	lsls	r3, r3, #24
 8004852:	491b      	ldr	r1, [pc, #108]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 8004854:	4313      	orrs	r3, r2
 8004856:	604b      	str	r3, [r1, #4]
 8004858:	4b1b      	ldr	r3, [pc, #108]	@ (80048c8 <HAL_RCC_OscConfig+0x478>)
 800485a:	2201      	movs	r2, #1
 800485c:	601a      	str	r2, [r3, #0]
 800485e:	f7fe fa6d 	bl	8002d3c <HAL_GetTick>
 8004862:	6138      	str	r0, [r7, #16]
 8004864:	e008      	b.n	8004878 <HAL_RCC_OscConfig+0x428>
 8004866:	f7fe fa69 	bl	8002d3c <HAL_GetTick>
 800486a:	4602      	mov	r2, r0
 800486c:	693b      	ldr	r3, [r7, #16]
 800486e:	1ad3      	subs	r3, r2, r3
 8004870:	2b02      	cmp	r3, #2
 8004872:	d901      	bls.n	8004878 <HAL_RCC_OscConfig+0x428>
 8004874:	2303      	movs	r3, #3
 8004876:	e05c      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004878:	4b11      	ldr	r3, [pc, #68]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004880:	2b00      	cmp	r3, #0
 8004882:	d0f0      	beq.n	8004866 <HAL_RCC_OscConfig+0x416>
 8004884:	e054      	b.n	8004930 <HAL_RCC_OscConfig+0x4e0>
 8004886:	4b10      	ldr	r3, [pc, #64]	@ (80048c8 <HAL_RCC_OscConfig+0x478>)
 8004888:	2200      	movs	r2, #0
 800488a:	601a      	str	r2, [r3, #0]
 800488c:	f7fe fa56 	bl	8002d3c <HAL_GetTick>
 8004890:	6138      	str	r0, [r7, #16]
 8004892:	e008      	b.n	80048a6 <HAL_RCC_OscConfig+0x456>
 8004894:	f7fe fa52 	bl	8002d3c <HAL_GetTick>
 8004898:	4602      	mov	r2, r0
 800489a:	693b      	ldr	r3, [r7, #16]
 800489c:	1ad3      	subs	r3, r2, r3
 800489e:	2b02      	cmp	r3, #2
 80048a0:	d901      	bls.n	80048a6 <HAL_RCC_OscConfig+0x456>
 80048a2:	2303      	movs	r3, #3
 80048a4:	e045      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 80048a6:	4b06      	ldr	r3, [pc, #24]	@ (80048c0 <HAL_RCC_OscConfig+0x470>)
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d1f0      	bne.n	8004894 <HAL_RCC_OscConfig+0x444>
 80048b2:	e03d      	b.n	8004930 <HAL_RCC_OscConfig+0x4e0>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	699b      	ldr	r3, [r3, #24]
 80048b8:	2b01      	cmp	r3, #1
 80048ba:	d107      	bne.n	80048cc <HAL_RCC_OscConfig+0x47c>
 80048bc:	2301      	movs	r3, #1
 80048be:	e038      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 80048c0:	40023800 	.word	0x40023800
 80048c4:	40007000 	.word	0x40007000
 80048c8:	42470060 	.word	0x42470060
 80048cc:	4b1b      	ldr	r3, [pc, #108]	@ (800493c <HAL_RCC_OscConfig+0x4ec>)
 80048ce:	685b      	ldr	r3, [r3, #4]
 80048d0:	60fb      	str	r3, [r7, #12]
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	699b      	ldr	r3, [r3, #24]
 80048d6:	2b01      	cmp	r3, #1
 80048d8:	d028      	beq.n	800492c <HAL_RCC_OscConfig+0x4dc>
 80048da:	68fb      	ldr	r3, [r7, #12]
 80048dc:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	69db      	ldr	r3, [r3, #28]
 80048e4:	429a      	cmp	r2, r3
 80048e6:	d121      	bne.n	800492c <HAL_RCC_OscConfig+0x4dc>
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	6a1b      	ldr	r3, [r3, #32]
 80048f2:	429a      	cmp	r2, r3
 80048f4:	d11a      	bne.n	800492c <HAL_RCC_OscConfig+0x4dc>
 80048f6:	68fa      	ldr	r2, [r7, #12]
 80048f8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80048fc:	4013      	ands	r3, r2
 80048fe:	687a      	ldr	r2, [r7, #4]
 8004900:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004902:	0192      	lsls	r2, r2, #6
 8004904:	4293      	cmp	r3, r2
 8004906:	d111      	bne.n	800492c <HAL_RCC_OscConfig+0x4dc>
 8004908:	68fb      	ldr	r3, [r7, #12]
 800490a:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004912:	085b      	lsrs	r3, r3, #1
 8004914:	3b01      	subs	r3, #1
 8004916:	041b      	lsls	r3, r3, #16
 8004918:	429a      	cmp	r2, r3
 800491a:	d107      	bne.n	800492c <HAL_RCC_OscConfig+0x4dc>
 800491c:	68fb      	ldr	r3, [r7, #12]
 800491e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004926:	061b      	lsls	r3, r3, #24
 8004928:	429a      	cmp	r2, r3
 800492a:	d001      	beq.n	8004930 <HAL_RCC_OscConfig+0x4e0>
 800492c:	2301      	movs	r3, #1
 800492e:	e000      	b.n	8004932 <HAL_RCC_OscConfig+0x4e2>
 8004930:	2300      	movs	r3, #0
 8004932:	4618      	mov	r0, r3
 8004934:	3718      	adds	r7, #24
 8004936:	46bd      	mov	sp, r7
 8004938:	bd80      	pop	{r7, pc}
 800493a:	bf00      	nop
 800493c:	40023800 	.word	0x40023800

08004940 <HAL_RCC_ClockConfig>:
 8004940:	b580      	push	{r7, lr}
 8004942:	b084      	sub	sp, #16
 8004944:	af00      	add	r7, sp, #0
 8004946:	6078      	str	r0, [r7, #4]
 8004948:	6039      	str	r1, [r7, #0]
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	2b00      	cmp	r3, #0
 800494e:	d101      	bne.n	8004954 <HAL_RCC_ClockConfig+0x14>
 8004950:	2301      	movs	r3, #1
 8004952:	e0cc      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 8004954:	4b68      	ldr	r3, [pc, #416]	@ (8004af8 <HAL_RCC_ClockConfig+0x1b8>)
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	f003 0307 	and.w	r3, r3, #7
 800495c:	683a      	ldr	r2, [r7, #0]
 800495e:	429a      	cmp	r2, r3
 8004960:	d90c      	bls.n	800497c <HAL_RCC_ClockConfig+0x3c>
 8004962:	4b65      	ldr	r3, [pc, #404]	@ (8004af8 <HAL_RCC_ClockConfig+0x1b8>)
 8004964:	683a      	ldr	r2, [r7, #0]
 8004966:	b2d2      	uxtb	r2, r2
 8004968:	701a      	strb	r2, [r3, #0]
 800496a:	4b63      	ldr	r3, [pc, #396]	@ (8004af8 <HAL_RCC_ClockConfig+0x1b8>)
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	f003 0307 	and.w	r3, r3, #7
 8004972:	683a      	ldr	r2, [r7, #0]
 8004974:	429a      	cmp	r2, r3
 8004976:	d001      	beq.n	800497c <HAL_RCC_ClockConfig+0x3c>
 8004978:	2301      	movs	r3, #1
 800497a:	e0b8      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	f003 0302 	and.w	r3, r3, #2
 8004984:	2b00      	cmp	r3, #0
 8004986:	d020      	beq.n	80049ca <HAL_RCC_ClockConfig+0x8a>
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	f003 0304 	and.w	r3, r3, #4
 8004990:	2b00      	cmp	r3, #0
 8004992:	d005      	beq.n	80049a0 <HAL_RCC_ClockConfig+0x60>
 8004994:	4b59      	ldr	r3, [pc, #356]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004996:	689b      	ldr	r3, [r3, #8]
 8004998:	4a58      	ldr	r2, [pc, #352]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 800499a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800499e:	6093      	str	r3, [r2, #8]
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	f003 0308 	and.w	r3, r3, #8
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d005      	beq.n	80049b8 <HAL_RCC_ClockConfig+0x78>
 80049ac:	4b53      	ldr	r3, [pc, #332]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 80049ae:	689b      	ldr	r3, [r3, #8]
 80049b0:	4a52      	ldr	r2, [pc, #328]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 80049b2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80049b6:	6093      	str	r3, [r2, #8]
 80049b8:	4b50      	ldr	r3, [pc, #320]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 80049ba:	689b      	ldr	r3, [r3, #8]
 80049bc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	689b      	ldr	r3, [r3, #8]
 80049c4:	494d      	ldr	r1, [pc, #308]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 80049c6:	4313      	orrs	r3, r2
 80049c8:	608b      	str	r3, [r1, #8]
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	f003 0301 	and.w	r3, r3, #1
 80049d2:	2b00      	cmp	r3, #0
 80049d4:	d044      	beq.n	8004a60 <HAL_RCC_ClockConfig+0x120>
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	685b      	ldr	r3, [r3, #4]
 80049da:	2b01      	cmp	r3, #1
 80049dc:	d107      	bne.n	80049ee <HAL_RCC_ClockConfig+0xae>
 80049de:	4b47      	ldr	r3, [pc, #284]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d119      	bne.n	8004a1e <HAL_RCC_ClockConfig+0xde>
 80049ea:	2301      	movs	r3, #1
 80049ec:	e07f      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	685b      	ldr	r3, [r3, #4]
 80049f2:	2b02      	cmp	r3, #2
 80049f4:	d003      	beq.n	80049fe <HAL_RCC_ClockConfig+0xbe>
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	685b      	ldr	r3, [r3, #4]
 80049fa:	2b03      	cmp	r3, #3
 80049fc:	d107      	bne.n	8004a0e <HAL_RCC_ClockConfig+0xce>
 80049fe:	4b3f      	ldr	r3, [pc, #252]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d109      	bne.n	8004a1e <HAL_RCC_ClockConfig+0xde>
 8004a0a:	2301      	movs	r3, #1
 8004a0c:	e06f      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 8004a0e:	4b3b      	ldr	r3, [pc, #236]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	f003 0302 	and.w	r3, r3, #2
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d101      	bne.n	8004a1e <HAL_RCC_ClockConfig+0xde>
 8004a1a:	2301      	movs	r3, #1
 8004a1c:	e067      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 8004a1e:	4b37      	ldr	r3, [pc, #220]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004a20:	689b      	ldr	r3, [r3, #8]
 8004a22:	f023 0203 	bic.w	r2, r3, #3
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	685b      	ldr	r3, [r3, #4]
 8004a2a:	4934      	ldr	r1, [pc, #208]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004a2c:	4313      	orrs	r3, r2
 8004a2e:	608b      	str	r3, [r1, #8]
 8004a30:	f7fe f984 	bl	8002d3c <HAL_GetTick>
 8004a34:	60f8      	str	r0, [r7, #12]
 8004a36:	e00a      	b.n	8004a4e <HAL_RCC_ClockConfig+0x10e>
 8004a38:	f7fe f980 	bl	8002d3c <HAL_GetTick>
 8004a3c:	4602      	mov	r2, r0
 8004a3e:	68fb      	ldr	r3, [r7, #12]
 8004a40:	1ad3      	subs	r3, r2, r3
 8004a42:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004a46:	4293      	cmp	r3, r2
 8004a48:	d901      	bls.n	8004a4e <HAL_RCC_ClockConfig+0x10e>
 8004a4a:	2303      	movs	r3, #3
 8004a4c:	e04f      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 8004a4e:	4b2b      	ldr	r3, [pc, #172]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004a50:	689b      	ldr	r3, [r3, #8]
 8004a52:	f003 020c 	and.w	r2, r3, #12
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	685b      	ldr	r3, [r3, #4]
 8004a5a:	009b      	lsls	r3, r3, #2
 8004a5c:	429a      	cmp	r2, r3
 8004a5e:	d1eb      	bne.n	8004a38 <HAL_RCC_ClockConfig+0xf8>
 8004a60:	4b25      	ldr	r3, [pc, #148]	@ (8004af8 <HAL_RCC_ClockConfig+0x1b8>)
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	f003 0307 	and.w	r3, r3, #7
 8004a68:	683a      	ldr	r2, [r7, #0]
 8004a6a:	429a      	cmp	r2, r3
 8004a6c:	d20c      	bcs.n	8004a88 <HAL_RCC_ClockConfig+0x148>
 8004a6e:	4b22      	ldr	r3, [pc, #136]	@ (8004af8 <HAL_RCC_ClockConfig+0x1b8>)
 8004a70:	683a      	ldr	r2, [r7, #0]
 8004a72:	b2d2      	uxtb	r2, r2
 8004a74:	701a      	strb	r2, [r3, #0]
 8004a76:	4b20      	ldr	r3, [pc, #128]	@ (8004af8 <HAL_RCC_ClockConfig+0x1b8>)
 8004a78:	681b      	ldr	r3, [r3, #0]
 8004a7a:	f003 0307 	and.w	r3, r3, #7
 8004a7e:	683a      	ldr	r2, [r7, #0]
 8004a80:	429a      	cmp	r2, r3
 8004a82:	d001      	beq.n	8004a88 <HAL_RCC_ClockConfig+0x148>
 8004a84:	2301      	movs	r3, #1
 8004a86:	e032      	b.n	8004aee <HAL_RCC_ClockConfig+0x1ae>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	f003 0304 	and.w	r3, r3, #4
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d008      	beq.n	8004aa6 <HAL_RCC_ClockConfig+0x166>
 8004a94:	4b19      	ldr	r3, [pc, #100]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004a96:	689b      	ldr	r3, [r3, #8]
 8004a98:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	68db      	ldr	r3, [r3, #12]
 8004aa0:	4916      	ldr	r1, [pc, #88]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004aa2:	4313      	orrs	r3, r2
 8004aa4:	608b      	str	r3, [r1, #8]
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	681b      	ldr	r3, [r3, #0]
 8004aaa:	f003 0308 	and.w	r3, r3, #8
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d009      	beq.n	8004ac6 <HAL_RCC_ClockConfig+0x186>
 8004ab2:	4b12      	ldr	r3, [pc, #72]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004ab4:	689b      	ldr	r3, [r3, #8]
 8004ab6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	691b      	ldr	r3, [r3, #16]
 8004abe:	00db      	lsls	r3, r3, #3
 8004ac0:	490e      	ldr	r1, [pc, #56]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004ac2:	4313      	orrs	r3, r2
 8004ac4:	608b      	str	r3, [r1, #8]
 8004ac6:	f000 f82d 	bl	8004b24 <HAL_RCC_GetSysClockFreq>
 8004aca:	4602      	mov	r2, r0
 8004acc:	4b0b      	ldr	r3, [pc, #44]	@ (8004afc <HAL_RCC_ClockConfig+0x1bc>)
 8004ace:	689b      	ldr	r3, [r3, #8]
 8004ad0:	091b      	lsrs	r3, r3, #4
 8004ad2:	f003 030f 	and.w	r3, r3, #15
 8004ad6:	490a      	ldr	r1, [pc, #40]	@ (8004b00 <HAL_RCC_ClockConfig+0x1c0>)
 8004ad8:	5ccb      	ldrb	r3, [r1, r3]
 8004ada:	fa22 f303 	lsr.w	r3, r2, r3
 8004ade:	4a09      	ldr	r2, [pc, #36]	@ (8004b04 <HAL_RCC_ClockConfig+0x1c4>)
 8004ae0:	6013      	str	r3, [r2, #0]
 8004ae2:	4b09      	ldr	r3, [pc, #36]	@ (8004b08 <HAL_RCC_ClockConfig+0x1c8>)
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	f7fe f8e4 	bl	8002cb4 <HAL_InitTick>
 8004aec:	2300      	movs	r3, #0
 8004aee:	4618      	mov	r0, r3
 8004af0:	3710      	adds	r7, #16
 8004af2:	46bd      	mov	sp, r7
 8004af4:	bd80      	pop	{r7, pc}
 8004af6:	bf00      	nop
 8004af8:	40023c00 	.word	0x40023c00
 8004afc:	40023800 	.word	0x40023800
 8004b00:	08009ecc 	.word	0x08009ecc
 8004b04:	20000000 	.word	0x20000000
 8004b08:	20000004 	.word	0x20000004

08004b0c <HAL_RCC_EnableCSS>:
 8004b0c:	b480      	push	{r7}
 8004b0e:	af00      	add	r7, sp, #0
 8004b10:	4b03      	ldr	r3, [pc, #12]	@ (8004b20 <HAL_RCC_EnableCSS+0x14>)
 8004b12:	2201      	movs	r2, #1
 8004b14:	601a      	str	r2, [r3, #0]
 8004b16:	bf00      	nop
 8004b18:	46bd      	mov	sp, r7
 8004b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b1e:	4770      	bx	lr
 8004b20:	4247004c 	.word	0x4247004c

08004b24 <HAL_RCC_GetSysClockFreq>:
 8004b24:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004b28:	b090      	sub	sp, #64	@ 0x40
 8004b2a:	af00      	add	r7, sp, #0
 8004b2c:	2300      	movs	r3, #0
 8004b2e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004b30:	2300      	movs	r3, #0
 8004b32:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004b34:	2300      	movs	r3, #0
 8004b36:	633b      	str	r3, [r7, #48]	@ 0x30
 8004b38:	2300      	movs	r3, #0
 8004b3a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004b3c:	4b59      	ldr	r3, [pc, #356]	@ (8004ca4 <HAL_RCC_GetSysClockFreq+0x180>)
 8004b3e:	689b      	ldr	r3, [r3, #8]
 8004b40:	f003 030c 	and.w	r3, r3, #12
 8004b44:	2b08      	cmp	r3, #8
 8004b46:	d00d      	beq.n	8004b64 <HAL_RCC_GetSysClockFreq+0x40>
 8004b48:	2b08      	cmp	r3, #8
 8004b4a:	f200 80a1 	bhi.w	8004c90 <HAL_RCC_GetSysClockFreq+0x16c>
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d002      	beq.n	8004b58 <HAL_RCC_GetSysClockFreq+0x34>
 8004b52:	2b04      	cmp	r3, #4
 8004b54:	d003      	beq.n	8004b5e <HAL_RCC_GetSysClockFreq+0x3a>
 8004b56:	e09b      	b.n	8004c90 <HAL_RCC_GetSysClockFreq+0x16c>
 8004b58:	4b53      	ldr	r3, [pc, #332]	@ (8004ca8 <HAL_RCC_GetSysClockFreq+0x184>)
 8004b5a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004b5c:	e09b      	b.n	8004c96 <HAL_RCC_GetSysClockFreq+0x172>
 8004b5e:	4b53      	ldr	r3, [pc, #332]	@ (8004cac <HAL_RCC_GetSysClockFreq+0x188>)
 8004b60:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004b62:	e098      	b.n	8004c96 <HAL_RCC_GetSysClockFreq+0x172>
 8004b64:	4b4f      	ldr	r3, [pc, #316]	@ (8004ca4 <HAL_RCC_GetSysClockFreq+0x180>)
 8004b66:	685b      	ldr	r3, [r3, #4]
 8004b68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004b6c:	637b      	str	r3, [r7, #52]	@ 0x34
 8004b6e:	4b4d      	ldr	r3, [pc, #308]	@ (8004ca4 <HAL_RCC_GetSysClockFreq+0x180>)
 8004b70:	685b      	ldr	r3, [r3, #4]
 8004b72:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004b76:	2b00      	cmp	r3, #0
 8004b78:	d028      	beq.n	8004bcc <HAL_RCC_GetSysClockFreq+0xa8>
 8004b7a:	4b4a      	ldr	r3, [pc, #296]	@ (8004ca4 <HAL_RCC_GetSysClockFreq+0x180>)
 8004b7c:	685b      	ldr	r3, [r3, #4]
 8004b7e:	099b      	lsrs	r3, r3, #6
 8004b80:	2200      	movs	r2, #0
 8004b82:	623b      	str	r3, [r7, #32]
 8004b84:	627a      	str	r2, [r7, #36]	@ 0x24
 8004b86:	6a3b      	ldr	r3, [r7, #32]
 8004b88:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004b8c:	2100      	movs	r1, #0
 8004b8e:	4b47      	ldr	r3, [pc, #284]	@ (8004cac <HAL_RCC_GetSysClockFreq+0x188>)
 8004b90:	fb03 f201 	mul.w	r2, r3, r1
 8004b94:	2300      	movs	r3, #0
 8004b96:	fb00 f303 	mul.w	r3, r0, r3
 8004b9a:	4413      	add	r3, r2
 8004b9c:	4a43      	ldr	r2, [pc, #268]	@ (8004cac <HAL_RCC_GetSysClockFreq+0x188>)
 8004b9e:	fba0 1202 	umull	r1, r2, r0, r2
 8004ba2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004ba4:	460a      	mov	r2, r1
 8004ba6:	62ba      	str	r2, [r7, #40]	@ 0x28
 8004ba8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004baa:	4413      	add	r3, r2
 8004bac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004bae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004bb0:	2200      	movs	r2, #0
 8004bb2:	61bb      	str	r3, [r7, #24]
 8004bb4:	61fa      	str	r2, [r7, #28]
 8004bb6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004bba:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8004bbe:	f7fb fb07 	bl	80001d0 <__aeabi_uldivmod>
 8004bc2:	4602      	mov	r2, r0
 8004bc4:	460b      	mov	r3, r1
 8004bc6:	4613      	mov	r3, r2
 8004bc8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004bca:	e053      	b.n	8004c74 <HAL_RCC_GetSysClockFreq+0x150>
 8004bcc:	4b35      	ldr	r3, [pc, #212]	@ (8004ca4 <HAL_RCC_GetSysClockFreq+0x180>)
 8004bce:	685b      	ldr	r3, [r3, #4]
 8004bd0:	099b      	lsrs	r3, r3, #6
 8004bd2:	2200      	movs	r2, #0
 8004bd4:	613b      	str	r3, [r7, #16]
 8004bd6:	617a      	str	r2, [r7, #20]
 8004bd8:	693b      	ldr	r3, [r7, #16]
 8004bda:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8004bde:	f04f 0b00 	mov.w	fp, #0
 8004be2:	4652      	mov	r2, sl
 8004be4:	465b      	mov	r3, fp
 8004be6:	f04f 0000 	mov.w	r0, #0
 8004bea:	f04f 0100 	mov.w	r1, #0
 8004bee:	0159      	lsls	r1, r3, #5
 8004bf0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004bf4:	0150      	lsls	r0, r2, #5
 8004bf6:	4602      	mov	r2, r0
 8004bf8:	460b      	mov	r3, r1
 8004bfa:	ebb2 080a 	subs.w	r8, r2, sl
 8004bfe:	eb63 090b 	sbc.w	r9, r3, fp
 8004c02:	f04f 0200 	mov.w	r2, #0
 8004c06:	f04f 0300 	mov.w	r3, #0
 8004c0a:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8004c0e:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8004c12:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8004c16:	ebb2 0408 	subs.w	r4, r2, r8
 8004c1a:	eb63 0509 	sbc.w	r5, r3, r9
 8004c1e:	f04f 0200 	mov.w	r2, #0
 8004c22:	f04f 0300 	mov.w	r3, #0
 8004c26:	00eb      	lsls	r3, r5, #3
 8004c28:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004c2c:	00e2      	lsls	r2, r4, #3
 8004c2e:	4614      	mov	r4, r2
 8004c30:	461d      	mov	r5, r3
 8004c32:	eb14 030a 	adds.w	r3, r4, sl
 8004c36:	603b      	str	r3, [r7, #0]
 8004c38:	eb45 030b 	adc.w	r3, r5, fp
 8004c3c:	607b      	str	r3, [r7, #4]
 8004c3e:	f04f 0200 	mov.w	r2, #0
 8004c42:	f04f 0300 	mov.w	r3, #0
 8004c46:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004c4a:	4629      	mov	r1, r5
 8004c4c:	028b      	lsls	r3, r1, #10
 8004c4e:	4621      	mov	r1, r4
 8004c50:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004c54:	4621      	mov	r1, r4
 8004c56:	028a      	lsls	r2, r1, #10
 8004c58:	4610      	mov	r0, r2
 8004c5a:	4619      	mov	r1, r3
 8004c5c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004c5e:	2200      	movs	r2, #0
 8004c60:	60bb      	str	r3, [r7, #8]
 8004c62:	60fa      	str	r2, [r7, #12]
 8004c64:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004c68:	f7fb fab2 	bl	80001d0 <__aeabi_uldivmod>
 8004c6c:	4602      	mov	r2, r0
 8004c6e:	460b      	mov	r3, r1
 8004c70:	4613      	mov	r3, r2
 8004c72:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004c74:	4b0b      	ldr	r3, [pc, #44]	@ (8004ca4 <HAL_RCC_GetSysClockFreq+0x180>)
 8004c76:	685b      	ldr	r3, [r3, #4]
 8004c78:	0c1b      	lsrs	r3, r3, #16
 8004c7a:	f003 0303 	and.w	r3, r3, #3
 8004c7e:	3301      	adds	r3, #1
 8004c80:	005b      	lsls	r3, r3, #1
 8004c82:	633b      	str	r3, [r7, #48]	@ 0x30
 8004c84:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004c86:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004c88:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c8c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004c8e:	e002      	b.n	8004c96 <HAL_RCC_GetSysClockFreq+0x172>
 8004c90:	4b05      	ldr	r3, [pc, #20]	@ (8004ca8 <HAL_RCC_GetSysClockFreq+0x184>)
 8004c92:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004c94:	bf00      	nop
 8004c96:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004c98:	4618      	mov	r0, r3
 8004c9a:	3740      	adds	r7, #64	@ 0x40
 8004c9c:	46bd      	mov	sp, r7
 8004c9e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004ca2:	bf00      	nop
 8004ca4:	40023800 	.word	0x40023800
 8004ca8:	00f42400 	.word	0x00f42400
 8004cac:	00b71b00 	.word	0x00b71b00

08004cb0 <HAL_RCC_GetHCLKFreq>:
 8004cb0:	b480      	push	{r7}
 8004cb2:	af00      	add	r7, sp, #0
 8004cb4:	4b03      	ldr	r3, [pc, #12]	@ (8004cc4 <HAL_RCC_GetHCLKFreq+0x14>)
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	4618      	mov	r0, r3
 8004cba:	46bd      	mov	sp, r7
 8004cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cc0:	4770      	bx	lr
 8004cc2:	bf00      	nop
 8004cc4:	20000000 	.word	0x20000000

08004cc8 <HAL_RCC_GetPCLK1Freq>:
 8004cc8:	b580      	push	{r7, lr}
 8004cca:	af00      	add	r7, sp, #0
 8004ccc:	f7ff fff0 	bl	8004cb0 <HAL_RCC_GetHCLKFreq>
 8004cd0:	4602      	mov	r2, r0
 8004cd2:	4b05      	ldr	r3, [pc, #20]	@ (8004ce8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004cd4:	689b      	ldr	r3, [r3, #8]
 8004cd6:	0a9b      	lsrs	r3, r3, #10
 8004cd8:	f003 0307 	and.w	r3, r3, #7
 8004cdc:	4903      	ldr	r1, [pc, #12]	@ (8004cec <HAL_RCC_GetPCLK1Freq+0x24>)
 8004cde:	5ccb      	ldrb	r3, [r1, r3]
 8004ce0:	fa22 f303 	lsr.w	r3, r2, r3
 8004ce4:	4618      	mov	r0, r3
 8004ce6:	bd80      	pop	{r7, pc}
 8004ce8:	40023800 	.word	0x40023800
 8004cec:	08009edc 	.word	0x08009edc

08004cf0 <HAL_RCC_GetPCLK2Freq>:
 8004cf0:	b580      	push	{r7, lr}
 8004cf2:	af00      	add	r7, sp, #0
 8004cf4:	f7ff ffdc 	bl	8004cb0 <HAL_RCC_GetHCLKFreq>
 8004cf8:	4602      	mov	r2, r0
 8004cfa:	4b05      	ldr	r3, [pc, #20]	@ (8004d10 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004cfc:	689b      	ldr	r3, [r3, #8]
 8004cfe:	0b5b      	lsrs	r3, r3, #13
 8004d00:	f003 0307 	and.w	r3, r3, #7
 8004d04:	4903      	ldr	r1, [pc, #12]	@ (8004d14 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004d06:	5ccb      	ldrb	r3, [r1, r3]
 8004d08:	fa22 f303 	lsr.w	r3, r2, r3
 8004d0c:	4618      	mov	r0, r3
 8004d0e:	bd80      	pop	{r7, pc}
 8004d10:	40023800 	.word	0x40023800
 8004d14:	08009edc 	.word	0x08009edc

08004d18 <HAL_RCC_NMI_IRQHandler>:
 8004d18:	b580      	push	{r7, lr}
 8004d1a:	af00      	add	r7, sp, #0
 8004d1c:	4b06      	ldr	r3, [pc, #24]	@ (8004d38 <HAL_RCC_NMI_IRQHandler+0x20>)
 8004d1e:	68db      	ldr	r3, [r3, #12]
 8004d20:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d24:	2b80      	cmp	r3, #128	@ 0x80
 8004d26:	d104      	bne.n	8004d32 <HAL_RCC_NMI_IRQHandler+0x1a>
 8004d28:	f000 f80a 	bl	8004d40 <HAL_RCC_CSSCallback>
 8004d2c:	4b03      	ldr	r3, [pc, #12]	@ (8004d3c <HAL_RCC_NMI_IRQHandler+0x24>)
 8004d2e:	2280      	movs	r2, #128	@ 0x80
 8004d30:	701a      	strb	r2, [r3, #0]
 8004d32:	bf00      	nop
 8004d34:	bd80      	pop	{r7, pc}
 8004d36:	bf00      	nop
 8004d38:	40023800 	.word	0x40023800
 8004d3c:	4002380e 	.word	0x4002380e

08004d40 <HAL_RCC_CSSCallback>:
 8004d40:	b480      	push	{r7}
 8004d42:	af00      	add	r7, sp, #0
 8004d44:	bf00      	nop
 8004d46:	46bd      	mov	sp, r7
 8004d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d4c:	4770      	bx	lr

08004d4e <HAL_SPI_Init>:
 8004d4e:	b580      	push	{r7, lr}
 8004d50:	b082      	sub	sp, #8
 8004d52:	af00      	add	r7, sp, #0
 8004d54:	6078      	str	r0, [r7, #4]
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	d101      	bne.n	8004d60 <HAL_SPI_Init+0x12>
 8004d5c:	2301      	movs	r3, #1
 8004d5e:	e07b      	b.n	8004e58 <HAL_SPI_Init+0x10a>
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d108      	bne.n	8004d7a <HAL_SPI_Init+0x2c>
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	685b      	ldr	r3, [r3, #4]
 8004d6c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004d70:	d009      	beq.n	8004d86 <HAL_SPI_Init+0x38>
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	2200      	movs	r2, #0
 8004d76:	61da      	str	r2, [r3, #28]
 8004d78:	e005      	b.n	8004d86 <HAL_SPI_Init+0x38>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	611a      	str	r2, [r3, #16]
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	2200      	movs	r2, #0
 8004d84:	615a      	str	r2, [r3, #20]
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	2200      	movs	r2, #0
 8004d8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004d92:	b2db      	uxtb	r3, r3
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d106      	bne.n	8004da6 <HAL_SPI_Init+0x58>
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	2200      	movs	r2, #0
 8004d9c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004da0:	6878      	ldr	r0, [r7, #4]
 8004da2:	f7fd f9f9 	bl	8002198 <HAL_SPI_MspInit>
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	2202      	movs	r2, #2
 8004daa:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	681a      	ldr	r2, [r3, #0]
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004dbc:	601a      	str	r2, [r3, #0]
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	685b      	ldr	r3, [r3, #4]
 8004dc2:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	689b      	ldr	r3, [r3, #8]
 8004dca:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8004dce:	431a      	orrs	r2, r3
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	68db      	ldr	r3, [r3, #12]
 8004dd4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004dd8:	431a      	orrs	r2, r3
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	691b      	ldr	r3, [r3, #16]
 8004dde:	f003 0302 	and.w	r3, r3, #2
 8004de2:	431a      	orrs	r2, r3
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	695b      	ldr	r3, [r3, #20]
 8004de8:	f003 0301 	and.w	r3, r3, #1
 8004dec:	431a      	orrs	r2, r3
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	699b      	ldr	r3, [r3, #24]
 8004df2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004df6:	431a      	orrs	r2, r3
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	69db      	ldr	r3, [r3, #28]
 8004dfc:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004e00:	431a      	orrs	r2, r3
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	6a1b      	ldr	r3, [r3, #32]
 8004e06:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004e0a:	ea42 0103 	orr.w	r1, r2, r3
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004e12:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	430a      	orrs	r2, r1
 8004e1c:	601a      	str	r2, [r3, #0]
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	699b      	ldr	r3, [r3, #24]
 8004e22:	0c1b      	lsrs	r3, r3, #16
 8004e24:	f003 0104 	and.w	r1, r3, #4
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e2c:	f003 0210 	and.w	r2, r3, #16
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	430a      	orrs	r2, r1
 8004e36:	605a      	str	r2, [r3, #4]
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	69da      	ldr	r2, [r3, #28]
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	681b      	ldr	r3, [r3, #0]
 8004e42:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004e46:	61da      	str	r2, [r3, #28]
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	2200      	movs	r2, #0
 8004e4c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	2201      	movs	r2, #1
 8004e52:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004e56:	2300      	movs	r3, #0
 8004e58:	4618      	mov	r0, r3
 8004e5a:	3708      	adds	r7, #8
 8004e5c:	46bd      	mov	sp, r7
 8004e5e:	bd80      	pop	{r7, pc}

08004e60 <HAL_TIM_Base_Init>:
 8004e60:	b580      	push	{r7, lr}
 8004e62:	b082      	sub	sp, #8
 8004e64:	af00      	add	r7, sp, #0
 8004e66:	6078      	str	r0, [r7, #4]
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d101      	bne.n	8004e72 <HAL_TIM_Base_Init+0x12>
 8004e6e:	2301      	movs	r3, #1
 8004e70:	e041      	b.n	8004ef6 <HAL_TIM_Base_Init+0x96>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004e78:	b2db      	uxtb	r3, r3
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d106      	bne.n	8004e8c <HAL_TIM_Base_Init+0x2c>
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	2200      	movs	r2, #0
 8004e82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e86:	6878      	ldr	r0, [r7, #4]
 8004e88:	f7fd faac 	bl	80023e4 <HAL_TIM_Base_MspInit>
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	2202      	movs	r2, #2
 8004e90:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681a      	ldr	r2, [r3, #0]
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	3304      	adds	r3, #4
 8004e9c:	4619      	mov	r1, r3
 8004e9e:	4610      	mov	r0, r2
 8004ea0:	f000 fba8 	bl	80055f4 <TIM_Base_SetConfig>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	2201      	movs	r2, #1
 8004ea8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	2201      	movs	r2, #1
 8004eb0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	2201      	movs	r2, #1
 8004eb8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	2201      	movs	r2, #1
 8004ec0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	2201      	movs	r2, #1
 8004ec8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	2201      	movs	r2, #1
 8004ed0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	2201      	movs	r2, #1
 8004ed8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	2201      	movs	r2, #1
 8004ee0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	2201      	movs	r2, #1
 8004ee8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	2201      	movs	r2, #1
 8004ef0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ef4:	2300      	movs	r3, #0
 8004ef6:	4618      	mov	r0, r3
 8004ef8:	3708      	adds	r7, #8
 8004efa:	46bd      	mov	sp, r7
 8004efc:	bd80      	pop	{r7, pc}
	...

08004f00 <HAL_TIM_Base_Start>:
 8004f00:	b480      	push	{r7}
 8004f02:	b085      	sub	sp, #20
 8004f04:	af00      	add	r7, sp, #0
 8004f06:	6078      	str	r0, [r7, #4]
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004f0e:	b2db      	uxtb	r3, r3
 8004f10:	2b01      	cmp	r3, #1
 8004f12:	d001      	beq.n	8004f18 <HAL_TIM_Base_Start+0x18>
 8004f14:	2301      	movs	r3, #1
 8004f16:	e046      	b.n	8004fa6 <HAL_TIM_Base_Start+0xa6>
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	2202      	movs	r2, #2
 8004f1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	4a23      	ldr	r2, [pc, #140]	@ (8004fb4 <HAL_TIM_Base_Start+0xb4>)
 8004f26:	4293      	cmp	r3, r2
 8004f28:	d022      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004f32:	d01d      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	4a1f      	ldr	r2, [pc, #124]	@ (8004fb8 <HAL_TIM_Base_Start+0xb8>)
 8004f3a:	4293      	cmp	r3, r2
 8004f3c:	d018      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	4a1e      	ldr	r2, [pc, #120]	@ (8004fbc <HAL_TIM_Base_Start+0xbc>)
 8004f44:	4293      	cmp	r3, r2
 8004f46:	d013      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4a1c      	ldr	r2, [pc, #112]	@ (8004fc0 <HAL_TIM_Base_Start+0xc0>)
 8004f4e:	4293      	cmp	r3, r2
 8004f50:	d00e      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	4a1b      	ldr	r2, [pc, #108]	@ (8004fc4 <HAL_TIM_Base_Start+0xc4>)
 8004f58:	4293      	cmp	r3, r2
 8004f5a:	d009      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	4a19      	ldr	r2, [pc, #100]	@ (8004fc8 <HAL_TIM_Base_Start+0xc8>)
 8004f62:	4293      	cmp	r3, r2
 8004f64:	d004      	beq.n	8004f70 <HAL_TIM_Base_Start+0x70>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	4a18      	ldr	r2, [pc, #96]	@ (8004fcc <HAL_TIM_Base_Start+0xcc>)
 8004f6c:	4293      	cmp	r3, r2
 8004f6e:	d111      	bne.n	8004f94 <HAL_TIM_Base_Start+0x94>
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	689b      	ldr	r3, [r3, #8]
 8004f76:	f003 0307 	and.w	r3, r3, #7
 8004f7a:	60fb      	str	r3, [r7, #12]
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	2b06      	cmp	r3, #6
 8004f80:	d010      	beq.n	8004fa4 <HAL_TIM_Base_Start+0xa4>
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	681a      	ldr	r2, [r3, #0]
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	f042 0201 	orr.w	r2, r2, #1
 8004f90:	601a      	str	r2, [r3, #0]
 8004f92:	e007      	b.n	8004fa4 <HAL_TIM_Base_Start+0xa4>
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	681a      	ldr	r2, [r3, #0]
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	f042 0201 	orr.w	r2, r2, #1
 8004fa2:	601a      	str	r2, [r3, #0]
 8004fa4:	2300      	movs	r3, #0
 8004fa6:	4618      	mov	r0, r3
 8004fa8:	3714      	adds	r7, #20
 8004faa:	46bd      	mov	sp, r7
 8004fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fb0:	4770      	bx	lr
 8004fb2:	bf00      	nop
 8004fb4:	40010000 	.word	0x40010000
 8004fb8:	40000400 	.word	0x40000400
 8004fbc:	40000800 	.word	0x40000800
 8004fc0:	40000c00 	.word	0x40000c00
 8004fc4:	40010400 	.word	0x40010400
 8004fc8:	40014000 	.word	0x40014000
 8004fcc:	40001800 	.word	0x40001800

08004fd0 <HAL_TIM_PWM_Init>:
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	b082      	sub	sp, #8
 8004fd4:	af00      	add	r7, sp, #0
 8004fd6:	6078      	str	r0, [r7, #4]
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d101      	bne.n	8004fe2 <HAL_TIM_PWM_Init+0x12>
 8004fde:	2301      	movs	r3, #1
 8004fe0:	e041      	b.n	8005066 <HAL_TIM_PWM_Init+0x96>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004fe8:	b2db      	uxtb	r3, r3
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d106      	bne.n	8004ffc <HAL_TIM_PWM_Init+0x2c>
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	2200      	movs	r2, #0
 8004ff2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004ff6:	6878      	ldr	r0, [r7, #4]
 8004ff8:	f7fd f936 	bl	8002268 <HAL_TIM_PWM_MspInit>
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	2202      	movs	r2, #2
 8005000:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681a      	ldr	r2, [r3, #0]
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	3304      	adds	r3, #4
 800500c:	4619      	mov	r1, r3
 800500e:	4610      	mov	r0, r2
 8005010:	f000 faf0 	bl	80055f4 <TIM_Base_SetConfig>
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	2201      	movs	r2, #1
 8005018:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	2201      	movs	r2, #1
 8005020:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	2201      	movs	r2, #1
 8005028:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	2201      	movs	r2, #1
 8005030:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	2201      	movs	r2, #1
 8005038:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	2201      	movs	r2, #1
 8005040:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	2201      	movs	r2, #1
 8005048:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	2201      	movs	r2, #1
 8005050:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	2201      	movs	r2, #1
 8005058:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2201      	movs	r2, #1
 8005060:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005064:	2300      	movs	r3, #0
 8005066:	4618      	mov	r0, r3
 8005068:	3708      	adds	r7, #8
 800506a:	46bd      	mov	sp, r7
 800506c:	bd80      	pop	{r7, pc}
	...

08005070 <HAL_TIM_PWM_Start>:
 8005070:	b580      	push	{r7, lr}
 8005072:	b084      	sub	sp, #16
 8005074:	af00      	add	r7, sp, #0
 8005076:	6078      	str	r0, [r7, #4]
 8005078:	6039      	str	r1, [r7, #0]
 800507a:	683b      	ldr	r3, [r7, #0]
 800507c:	2b00      	cmp	r3, #0
 800507e:	d109      	bne.n	8005094 <HAL_TIM_PWM_Start+0x24>
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005086:	b2db      	uxtb	r3, r3
 8005088:	2b01      	cmp	r3, #1
 800508a:	bf14      	ite	ne
 800508c:	2301      	movne	r3, #1
 800508e:	2300      	moveq	r3, #0
 8005090:	b2db      	uxtb	r3, r3
 8005092:	e022      	b.n	80050da <HAL_TIM_PWM_Start+0x6a>
 8005094:	683b      	ldr	r3, [r7, #0]
 8005096:	2b04      	cmp	r3, #4
 8005098:	d109      	bne.n	80050ae <HAL_TIM_PWM_Start+0x3e>
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80050a0:	b2db      	uxtb	r3, r3
 80050a2:	2b01      	cmp	r3, #1
 80050a4:	bf14      	ite	ne
 80050a6:	2301      	movne	r3, #1
 80050a8:	2300      	moveq	r3, #0
 80050aa:	b2db      	uxtb	r3, r3
 80050ac:	e015      	b.n	80050da <HAL_TIM_PWM_Start+0x6a>
 80050ae:	683b      	ldr	r3, [r7, #0]
 80050b0:	2b08      	cmp	r3, #8
 80050b2:	d109      	bne.n	80050c8 <HAL_TIM_PWM_Start+0x58>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80050ba:	b2db      	uxtb	r3, r3
 80050bc:	2b01      	cmp	r3, #1
 80050be:	bf14      	ite	ne
 80050c0:	2301      	movne	r3, #1
 80050c2:	2300      	moveq	r3, #0
 80050c4:	b2db      	uxtb	r3, r3
 80050c6:	e008      	b.n	80050da <HAL_TIM_PWM_Start+0x6a>
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050ce:	b2db      	uxtb	r3, r3
 80050d0:	2b01      	cmp	r3, #1
 80050d2:	bf14      	ite	ne
 80050d4:	2301      	movne	r3, #1
 80050d6:	2300      	moveq	r3, #0
 80050d8:	b2db      	uxtb	r3, r3
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d001      	beq.n	80050e2 <HAL_TIM_PWM_Start+0x72>
 80050de:	2301      	movs	r3, #1
 80050e0:	e07c      	b.n	80051dc <HAL_TIM_PWM_Start+0x16c>
 80050e2:	683b      	ldr	r3, [r7, #0]
 80050e4:	2b00      	cmp	r3, #0
 80050e6:	d104      	bne.n	80050f2 <HAL_TIM_PWM_Start+0x82>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	2202      	movs	r2, #2
 80050ec:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80050f0:	e013      	b.n	800511a <HAL_TIM_PWM_Start+0xaa>
 80050f2:	683b      	ldr	r3, [r7, #0]
 80050f4:	2b04      	cmp	r3, #4
 80050f6:	d104      	bne.n	8005102 <HAL_TIM_PWM_Start+0x92>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	2202      	movs	r2, #2
 80050fc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005100:	e00b      	b.n	800511a <HAL_TIM_PWM_Start+0xaa>
 8005102:	683b      	ldr	r3, [r7, #0]
 8005104:	2b08      	cmp	r3, #8
 8005106:	d104      	bne.n	8005112 <HAL_TIM_PWM_Start+0xa2>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	2202      	movs	r2, #2
 800510c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005110:	e003      	b.n	800511a <HAL_TIM_PWM_Start+0xaa>
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	2202      	movs	r2, #2
 8005116:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	2201      	movs	r2, #1
 8005120:	6839      	ldr	r1, [r7, #0]
 8005122:	4618      	mov	r0, r3
 8005124:	f000 fd5c 	bl	8005be0 <TIM_CCxChannelCmd>
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	681b      	ldr	r3, [r3, #0]
 800512c:	4a2d      	ldr	r2, [pc, #180]	@ (80051e4 <HAL_TIM_PWM_Start+0x174>)
 800512e:	4293      	cmp	r3, r2
 8005130:	d004      	beq.n	800513c <HAL_TIM_PWM_Start+0xcc>
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	681b      	ldr	r3, [r3, #0]
 8005136:	4a2c      	ldr	r2, [pc, #176]	@ (80051e8 <HAL_TIM_PWM_Start+0x178>)
 8005138:	4293      	cmp	r3, r2
 800513a:	d101      	bne.n	8005140 <HAL_TIM_PWM_Start+0xd0>
 800513c:	2301      	movs	r3, #1
 800513e:	e000      	b.n	8005142 <HAL_TIM_PWM_Start+0xd2>
 8005140:	2300      	movs	r3, #0
 8005142:	2b00      	cmp	r3, #0
 8005144:	d007      	beq.n	8005156 <HAL_TIM_PWM_Start+0xe6>
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005154:	645a      	str	r2, [r3, #68]	@ 0x44
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	681b      	ldr	r3, [r3, #0]
 800515a:	4a22      	ldr	r2, [pc, #136]	@ (80051e4 <HAL_TIM_PWM_Start+0x174>)
 800515c:	4293      	cmp	r3, r2
 800515e:	d022      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005168:	d01d      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	4a1f      	ldr	r2, [pc, #124]	@ (80051ec <HAL_TIM_PWM_Start+0x17c>)
 8005170:	4293      	cmp	r3, r2
 8005172:	d018      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	4a1d      	ldr	r2, [pc, #116]	@ (80051f0 <HAL_TIM_PWM_Start+0x180>)
 800517a:	4293      	cmp	r3, r2
 800517c:	d013      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	4a1c      	ldr	r2, [pc, #112]	@ (80051f4 <HAL_TIM_PWM_Start+0x184>)
 8005184:	4293      	cmp	r3, r2
 8005186:	d00e      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	681b      	ldr	r3, [r3, #0]
 800518c:	4a16      	ldr	r2, [pc, #88]	@ (80051e8 <HAL_TIM_PWM_Start+0x178>)
 800518e:	4293      	cmp	r3, r2
 8005190:	d009      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	4a18      	ldr	r2, [pc, #96]	@ (80051f8 <HAL_TIM_PWM_Start+0x188>)
 8005198:	4293      	cmp	r3, r2
 800519a:	d004      	beq.n	80051a6 <HAL_TIM_PWM_Start+0x136>
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	4a16      	ldr	r2, [pc, #88]	@ (80051fc <HAL_TIM_PWM_Start+0x18c>)
 80051a2:	4293      	cmp	r3, r2
 80051a4:	d111      	bne.n	80051ca <HAL_TIM_PWM_Start+0x15a>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	f003 0307 	and.w	r3, r3, #7
 80051b0:	60fb      	str	r3, [r7, #12]
 80051b2:	68fb      	ldr	r3, [r7, #12]
 80051b4:	2b06      	cmp	r3, #6
 80051b6:	d010      	beq.n	80051da <HAL_TIM_PWM_Start+0x16a>
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	681a      	ldr	r2, [r3, #0]
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	f042 0201 	orr.w	r2, r2, #1
 80051c6:	601a      	str	r2, [r3, #0]
 80051c8:	e007      	b.n	80051da <HAL_TIM_PWM_Start+0x16a>
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	681a      	ldr	r2, [r3, #0]
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	681b      	ldr	r3, [r3, #0]
 80051d4:	f042 0201 	orr.w	r2, r2, #1
 80051d8:	601a      	str	r2, [r3, #0]
 80051da:	2300      	movs	r3, #0
 80051dc:	4618      	mov	r0, r3
 80051de:	3710      	adds	r7, #16
 80051e0:	46bd      	mov	sp, r7
 80051e2:	bd80      	pop	{r7, pc}
 80051e4:	40010000 	.word	0x40010000
 80051e8:	40010400 	.word	0x40010400
 80051ec:	40000400 	.word	0x40000400
 80051f0:	40000800 	.word	0x40000800
 80051f4:	40000c00 	.word	0x40000c00
 80051f8:	40014000 	.word	0x40014000
 80051fc:	40001800 	.word	0x40001800

08005200 <HAL_TIM_PWM_Stop>:
 8005200:	b580      	push	{r7, lr}
 8005202:	b082      	sub	sp, #8
 8005204:	af00      	add	r7, sp, #0
 8005206:	6078      	str	r0, [r7, #4]
 8005208:	6039      	str	r1, [r7, #0]
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	2200      	movs	r2, #0
 8005210:	6839      	ldr	r1, [r7, #0]
 8005212:	4618      	mov	r0, r3
 8005214:	f000 fce4 	bl	8005be0 <TIM_CCxChannelCmd>
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	4a2e      	ldr	r2, [pc, #184]	@ (80052d8 <HAL_TIM_PWM_Stop+0xd8>)
 800521e:	4293      	cmp	r3, r2
 8005220:	d004      	beq.n	800522c <HAL_TIM_PWM_Stop+0x2c>
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	4a2d      	ldr	r2, [pc, #180]	@ (80052dc <HAL_TIM_PWM_Stop+0xdc>)
 8005228:	4293      	cmp	r3, r2
 800522a:	d101      	bne.n	8005230 <HAL_TIM_PWM_Stop+0x30>
 800522c:	2301      	movs	r3, #1
 800522e:	e000      	b.n	8005232 <HAL_TIM_PWM_Stop+0x32>
 8005230:	2300      	movs	r3, #0
 8005232:	2b00      	cmp	r3, #0
 8005234:	d017      	beq.n	8005266 <HAL_TIM_PWM_Stop+0x66>
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	6a1a      	ldr	r2, [r3, #32]
 800523c:	f241 1311 	movw	r3, #4369	@ 0x1111
 8005240:	4013      	ands	r3, r2
 8005242:	2b00      	cmp	r3, #0
 8005244:	d10f      	bne.n	8005266 <HAL_TIM_PWM_Stop+0x66>
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	6a1a      	ldr	r2, [r3, #32]
 800524c:	f240 4344 	movw	r3, #1092	@ 0x444
 8005250:	4013      	ands	r3, r2
 8005252:	2b00      	cmp	r3, #0
 8005254:	d107      	bne.n	8005266 <HAL_TIM_PWM_Stop+0x66>
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005264:	645a      	str	r2, [r3, #68]	@ 0x44
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	6a1a      	ldr	r2, [r3, #32]
 800526c:	f241 1311 	movw	r3, #4369	@ 0x1111
 8005270:	4013      	ands	r3, r2
 8005272:	2b00      	cmp	r3, #0
 8005274:	d10f      	bne.n	8005296 <HAL_TIM_PWM_Stop+0x96>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	6a1a      	ldr	r2, [r3, #32]
 800527c:	f240 4344 	movw	r3, #1092	@ 0x444
 8005280:	4013      	ands	r3, r2
 8005282:	2b00      	cmp	r3, #0
 8005284:	d107      	bne.n	8005296 <HAL_TIM_PWM_Stop+0x96>
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	681a      	ldr	r2, [r3, #0]
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f022 0201 	bic.w	r2, r2, #1
 8005294:	601a      	str	r2, [r3, #0]
 8005296:	683b      	ldr	r3, [r7, #0]
 8005298:	2b00      	cmp	r3, #0
 800529a:	d104      	bne.n	80052a6 <HAL_TIM_PWM_Stop+0xa6>
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	2201      	movs	r2, #1
 80052a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80052a4:	e013      	b.n	80052ce <HAL_TIM_PWM_Stop+0xce>
 80052a6:	683b      	ldr	r3, [r7, #0]
 80052a8:	2b04      	cmp	r3, #4
 80052aa:	d104      	bne.n	80052b6 <HAL_TIM_PWM_Stop+0xb6>
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	2201      	movs	r2, #1
 80052b0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80052b4:	e00b      	b.n	80052ce <HAL_TIM_PWM_Stop+0xce>
 80052b6:	683b      	ldr	r3, [r7, #0]
 80052b8:	2b08      	cmp	r3, #8
 80052ba:	d104      	bne.n	80052c6 <HAL_TIM_PWM_Stop+0xc6>
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	2201      	movs	r2, #1
 80052c0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80052c4:	e003      	b.n	80052ce <HAL_TIM_PWM_Stop+0xce>
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	2201      	movs	r2, #1
 80052ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80052ce:	2300      	movs	r3, #0
 80052d0:	4618      	mov	r0, r3
 80052d2:	3708      	adds	r7, #8
 80052d4:	46bd      	mov	sp, r7
 80052d6:	bd80      	pop	{r7, pc}
 80052d8:	40010000 	.word	0x40010000
 80052dc:	40010400 	.word	0x40010400

080052e0 <HAL_TIM_PWM_ConfigChannel>:
 80052e0:	b580      	push	{r7, lr}
 80052e2:	b086      	sub	sp, #24
 80052e4:	af00      	add	r7, sp, #0
 80052e6:	60f8      	str	r0, [r7, #12]
 80052e8:	60b9      	str	r1, [r7, #8]
 80052ea:	607a      	str	r2, [r7, #4]
 80052ec:	2300      	movs	r3, #0
 80052ee:	75fb      	strb	r3, [r7, #23]
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80052f6:	2b01      	cmp	r3, #1
 80052f8:	d101      	bne.n	80052fe <HAL_TIM_PWM_ConfigChannel+0x1e>
 80052fa:	2302      	movs	r3, #2
 80052fc:	e0ae      	b.n	800545c <HAL_TIM_PWM_ConfigChannel+0x17c>
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	2201      	movs	r2, #1
 8005302:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	2b0c      	cmp	r3, #12
 800530a:	f200 809f 	bhi.w	800544c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800530e:	a201      	add	r2, pc, #4	@ (adr r2, 8005314 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005310:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005314:	08005349 	.word	0x08005349
 8005318:	0800544d 	.word	0x0800544d
 800531c:	0800544d 	.word	0x0800544d
 8005320:	0800544d 	.word	0x0800544d
 8005324:	08005389 	.word	0x08005389
 8005328:	0800544d 	.word	0x0800544d
 800532c:	0800544d 	.word	0x0800544d
 8005330:	0800544d 	.word	0x0800544d
 8005334:	080053cb 	.word	0x080053cb
 8005338:	0800544d 	.word	0x0800544d
 800533c:	0800544d 	.word	0x0800544d
 8005340:	0800544d 	.word	0x0800544d
 8005344:	0800540b 	.word	0x0800540b
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	68b9      	ldr	r1, [r7, #8]
 800534e:	4618      	mov	r0, r3
 8005350:	f000 f9fc 	bl	800574c <TIM_OC1_SetConfig>
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	699a      	ldr	r2, [r3, #24]
 800535a:	68fb      	ldr	r3, [r7, #12]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	f042 0208 	orr.w	r2, r2, #8
 8005362:	619a      	str	r2, [r3, #24]
 8005364:	68fb      	ldr	r3, [r7, #12]
 8005366:	681b      	ldr	r3, [r3, #0]
 8005368:	699a      	ldr	r2, [r3, #24]
 800536a:	68fb      	ldr	r3, [r7, #12]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	f022 0204 	bic.w	r2, r2, #4
 8005372:	619a      	str	r2, [r3, #24]
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	6999      	ldr	r1, [r3, #24]
 800537a:	68bb      	ldr	r3, [r7, #8]
 800537c:	691a      	ldr	r2, [r3, #16]
 800537e:	68fb      	ldr	r3, [r7, #12]
 8005380:	681b      	ldr	r3, [r3, #0]
 8005382:	430a      	orrs	r2, r1
 8005384:	619a      	str	r2, [r3, #24]
 8005386:	e064      	b.n	8005452 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	68b9      	ldr	r1, [r7, #8]
 800538e:	4618      	mov	r0, r3
 8005390:	f000 fa4c 	bl	800582c <TIM_OC2_SetConfig>
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	681b      	ldr	r3, [r3, #0]
 8005398:	699a      	ldr	r2, [r3, #24]
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80053a2:	619a      	str	r2, [r3, #24]
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	699a      	ldr	r2, [r3, #24]
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80053b2:	619a      	str	r2, [r3, #24]
 80053b4:	68fb      	ldr	r3, [r7, #12]
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	6999      	ldr	r1, [r3, #24]
 80053ba:	68bb      	ldr	r3, [r7, #8]
 80053bc:	691b      	ldr	r3, [r3, #16]
 80053be:	021a      	lsls	r2, r3, #8
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	430a      	orrs	r2, r1
 80053c6:	619a      	str	r2, [r3, #24]
 80053c8:	e043      	b.n	8005452 <HAL_TIM_PWM_ConfigChannel+0x172>
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	68b9      	ldr	r1, [r7, #8]
 80053d0:	4618      	mov	r0, r3
 80053d2:	f000 faa1 	bl	8005918 <TIM_OC3_SetConfig>
 80053d6:	68fb      	ldr	r3, [r7, #12]
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	69da      	ldr	r2, [r3, #28]
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	f042 0208 	orr.w	r2, r2, #8
 80053e4:	61da      	str	r2, [r3, #28]
 80053e6:	68fb      	ldr	r3, [r7, #12]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	69da      	ldr	r2, [r3, #28]
 80053ec:	68fb      	ldr	r3, [r7, #12]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	f022 0204 	bic.w	r2, r2, #4
 80053f4:	61da      	str	r2, [r3, #28]
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	69d9      	ldr	r1, [r3, #28]
 80053fc:	68bb      	ldr	r3, [r7, #8]
 80053fe:	691a      	ldr	r2, [r3, #16]
 8005400:	68fb      	ldr	r3, [r7, #12]
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	430a      	orrs	r2, r1
 8005406:	61da      	str	r2, [r3, #28]
 8005408:	e023      	b.n	8005452 <HAL_TIM_PWM_ConfigChannel+0x172>
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	68b9      	ldr	r1, [r7, #8]
 8005410:	4618      	mov	r0, r3
 8005412:	f000 faf5 	bl	8005a00 <TIM_OC4_SetConfig>
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	69da      	ldr	r2, [r3, #28]
 800541c:	68fb      	ldr	r3, [r7, #12]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005424:	61da      	str	r2, [r3, #28]
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	69da      	ldr	r2, [r3, #28]
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005434:	61da      	str	r2, [r3, #28]
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	69d9      	ldr	r1, [r3, #28]
 800543c:	68bb      	ldr	r3, [r7, #8]
 800543e:	691b      	ldr	r3, [r3, #16]
 8005440:	021a      	lsls	r2, r3, #8
 8005442:	68fb      	ldr	r3, [r7, #12]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	430a      	orrs	r2, r1
 8005448:	61da      	str	r2, [r3, #28]
 800544a:	e002      	b.n	8005452 <HAL_TIM_PWM_ConfigChannel+0x172>
 800544c:	2301      	movs	r3, #1
 800544e:	75fb      	strb	r3, [r7, #23]
 8005450:	bf00      	nop
 8005452:	68fb      	ldr	r3, [r7, #12]
 8005454:	2200      	movs	r2, #0
 8005456:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800545a:	7dfb      	ldrb	r3, [r7, #23]
 800545c:	4618      	mov	r0, r3
 800545e:	3718      	adds	r7, #24
 8005460:	46bd      	mov	sp, r7
 8005462:	bd80      	pop	{r7, pc}

08005464 <HAL_TIM_ConfigClockSource>:
 8005464:	b580      	push	{r7, lr}
 8005466:	b084      	sub	sp, #16
 8005468:	af00      	add	r7, sp, #0
 800546a:	6078      	str	r0, [r7, #4]
 800546c:	6039      	str	r1, [r7, #0]
 800546e:	2300      	movs	r3, #0
 8005470:	73fb      	strb	r3, [r7, #15]
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005478:	2b01      	cmp	r3, #1
 800547a:	d101      	bne.n	8005480 <HAL_TIM_ConfigClockSource+0x1c>
 800547c:	2302      	movs	r3, #2
 800547e:	e0b4      	b.n	80055ea <HAL_TIM_ConfigClockSource+0x186>
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	2201      	movs	r2, #1
 8005484:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	2202      	movs	r2, #2
 800548c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	689b      	ldr	r3, [r3, #8]
 8005496:	60bb      	str	r3, [r7, #8]
 8005498:	68bb      	ldr	r3, [r7, #8]
 800549a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800549e:	60bb      	str	r3, [r7, #8]
 80054a0:	68bb      	ldr	r3, [r7, #8]
 80054a2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80054a6:	60bb      	str	r3, [r7, #8]
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	68ba      	ldr	r2, [r7, #8]
 80054ae:	609a      	str	r2, [r3, #8]
 80054b0:	683b      	ldr	r3, [r7, #0]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80054b8:	d03e      	beq.n	8005538 <HAL_TIM_ConfigClockSource+0xd4>
 80054ba:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80054be:	f200 8087 	bhi.w	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054c2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80054c6:	f000 8086 	beq.w	80055d6 <HAL_TIM_ConfigClockSource+0x172>
 80054ca:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80054ce:	d87f      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054d0:	2b70      	cmp	r3, #112	@ 0x70
 80054d2:	d01a      	beq.n	800550a <HAL_TIM_ConfigClockSource+0xa6>
 80054d4:	2b70      	cmp	r3, #112	@ 0x70
 80054d6:	d87b      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054d8:	2b60      	cmp	r3, #96	@ 0x60
 80054da:	d050      	beq.n	800557e <HAL_TIM_ConfigClockSource+0x11a>
 80054dc:	2b60      	cmp	r3, #96	@ 0x60
 80054de:	d877      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054e0:	2b50      	cmp	r3, #80	@ 0x50
 80054e2:	d03c      	beq.n	800555e <HAL_TIM_ConfigClockSource+0xfa>
 80054e4:	2b50      	cmp	r3, #80	@ 0x50
 80054e6:	d873      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054e8:	2b40      	cmp	r3, #64	@ 0x40
 80054ea:	d058      	beq.n	800559e <HAL_TIM_ConfigClockSource+0x13a>
 80054ec:	2b40      	cmp	r3, #64	@ 0x40
 80054ee:	d86f      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054f0:	2b30      	cmp	r3, #48	@ 0x30
 80054f2:	d064      	beq.n	80055be <HAL_TIM_ConfigClockSource+0x15a>
 80054f4:	2b30      	cmp	r3, #48	@ 0x30
 80054f6:	d86b      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 80054f8:	2b20      	cmp	r3, #32
 80054fa:	d060      	beq.n	80055be <HAL_TIM_ConfigClockSource+0x15a>
 80054fc:	2b20      	cmp	r3, #32
 80054fe:	d867      	bhi.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 8005500:	2b00      	cmp	r3, #0
 8005502:	d05c      	beq.n	80055be <HAL_TIM_ConfigClockSource+0x15a>
 8005504:	2b10      	cmp	r3, #16
 8005506:	d05a      	beq.n	80055be <HAL_TIM_ConfigClockSource+0x15a>
 8005508:	e062      	b.n	80055d0 <HAL_TIM_ConfigClockSource+0x16c>
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	6818      	ldr	r0, [r3, #0]
 800550e:	683b      	ldr	r3, [r7, #0]
 8005510:	6899      	ldr	r1, [r3, #8]
 8005512:	683b      	ldr	r3, [r7, #0]
 8005514:	685a      	ldr	r2, [r3, #4]
 8005516:	683b      	ldr	r3, [r7, #0]
 8005518:	68db      	ldr	r3, [r3, #12]
 800551a:	f000 fb41 	bl	8005ba0 <TIM_ETR_SetConfig>
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	689b      	ldr	r3, [r3, #8]
 8005524:	60bb      	str	r3, [r7, #8]
 8005526:	68bb      	ldr	r3, [r7, #8]
 8005528:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800552c:	60bb      	str	r3, [r7, #8]
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	68ba      	ldr	r2, [r7, #8]
 8005534:	609a      	str	r2, [r3, #8]
 8005536:	e04f      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	6818      	ldr	r0, [r3, #0]
 800553c:	683b      	ldr	r3, [r7, #0]
 800553e:	6899      	ldr	r1, [r3, #8]
 8005540:	683b      	ldr	r3, [r7, #0]
 8005542:	685a      	ldr	r2, [r3, #4]
 8005544:	683b      	ldr	r3, [r7, #0]
 8005546:	68db      	ldr	r3, [r3, #12]
 8005548:	f000 fb2a 	bl	8005ba0 <TIM_ETR_SetConfig>
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	689a      	ldr	r2, [r3, #8]
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800555a:	609a      	str	r2, [r3, #8]
 800555c:	e03c      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	6818      	ldr	r0, [r3, #0]
 8005562:	683b      	ldr	r3, [r7, #0]
 8005564:	6859      	ldr	r1, [r3, #4]
 8005566:	683b      	ldr	r3, [r7, #0]
 8005568:	68db      	ldr	r3, [r3, #12]
 800556a:	461a      	mov	r2, r3
 800556c:	f000 fa9e 	bl	8005aac <TIM_TI1_ConfigInputStage>
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	2150      	movs	r1, #80	@ 0x50
 8005576:	4618      	mov	r0, r3
 8005578:	f000 faf7 	bl	8005b6a <TIM_ITRx_SetConfig>
 800557c:	e02c      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	6818      	ldr	r0, [r3, #0]
 8005582:	683b      	ldr	r3, [r7, #0]
 8005584:	6859      	ldr	r1, [r3, #4]
 8005586:	683b      	ldr	r3, [r7, #0]
 8005588:	68db      	ldr	r3, [r3, #12]
 800558a:	461a      	mov	r2, r3
 800558c:	f000 fabd 	bl	8005b0a <TIM_TI2_ConfigInputStage>
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	2160      	movs	r1, #96	@ 0x60
 8005596:	4618      	mov	r0, r3
 8005598:	f000 fae7 	bl	8005b6a <TIM_ITRx_SetConfig>
 800559c:	e01c      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	6818      	ldr	r0, [r3, #0]
 80055a2:	683b      	ldr	r3, [r7, #0]
 80055a4:	6859      	ldr	r1, [r3, #4]
 80055a6:	683b      	ldr	r3, [r7, #0]
 80055a8:	68db      	ldr	r3, [r3, #12]
 80055aa:	461a      	mov	r2, r3
 80055ac:	f000 fa7e 	bl	8005aac <TIM_TI1_ConfigInputStage>
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	2140      	movs	r1, #64	@ 0x40
 80055b6:	4618      	mov	r0, r3
 80055b8:	f000 fad7 	bl	8005b6a <TIM_ITRx_SetConfig>
 80055bc:	e00c      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	681a      	ldr	r2, [r3, #0]
 80055c2:	683b      	ldr	r3, [r7, #0]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	4619      	mov	r1, r3
 80055c8:	4610      	mov	r0, r2
 80055ca:	f000 face 	bl	8005b6a <TIM_ITRx_SetConfig>
 80055ce:	e003      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 80055d0:	2301      	movs	r3, #1
 80055d2:	73fb      	strb	r3, [r7, #15]
 80055d4:	e000      	b.n	80055d8 <HAL_TIM_ConfigClockSource+0x174>
 80055d6:	bf00      	nop
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	2201      	movs	r2, #1
 80055dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	2200      	movs	r2, #0
 80055e4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055e8:	7bfb      	ldrb	r3, [r7, #15]
 80055ea:	4618      	mov	r0, r3
 80055ec:	3710      	adds	r7, #16
 80055ee:	46bd      	mov	sp, r7
 80055f0:	bd80      	pop	{r7, pc}
	...

080055f4 <TIM_Base_SetConfig>:
 80055f4:	b480      	push	{r7}
 80055f6:	b085      	sub	sp, #20
 80055f8:	af00      	add	r7, sp, #0
 80055fa:	6078      	str	r0, [r7, #4]
 80055fc:	6039      	str	r1, [r7, #0]
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	60fb      	str	r3, [r7, #12]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	4a46      	ldr	r2, [pc, #280]	@ (8005720 <TIM_Base_SetConfig+0x12c>)
 8005608:	4293      	cmp	r3, r2
 800560a:	d013      	beq.n	8005634 <TIM_Base_SetConfig+0x40>
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005612:	d00f      	beq.n	8005634 <TIM_Base_SetConfig+0x40>
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	4a43      	ldr	r2, [pc, #268]	@ (8005724 <TIM_Base_SetConfig+0x130>)
 8005618:	4293      	cmp	r3, r2
 800561a:	d00b      	beq.n	8005634 <TIM_Base_SetConfig+0x40>
 800561c:	687b      	ldr	r3, [r7, #4]
 800561e:	4a42      	ldr	r2, [pc, #264]	@ (8005728 <TIM_Base_SetConfig+0x134>)
 8005620:	4293      	cmp	r3, r2
 8005622:	d007      	beq.n	8005634 <TIM_Base_SetConfig+0x40>
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	4a41      	ldr	r2, [pc, #260]	@ (800572c <TIM_Base_SetConfig+0x138>)
 8005628:	4293      	cmp	r3, r2
 800562a:	d003      	beq.n	8005634 <TIM_Base_SetConfig+0x40>
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	4a40      	ldr	r2, [pc, #256]	@ (8005730 <TIM_Base_SetConfig+0x13c>)
 8005630:	4293      	cmp	r3, r2
 8005632:	d108      	bne.n	8005646 <TIM_Base_SetConfig+0x52>
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800563a:	60fb      	str	r3, [r7, #12]
 800563c:	683b      	ldr	r3, [r7, #0]
 800563e:	685b      	ldr	r3, [r3, #4]
 8005640:	68fa      	ldr	r2, [r7, #12]
 8005642:	4313      	orrs	r3, r2
 8005644:	60fb      	str	r3, [r7, #12]
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	4a35      	ldr	r2, [pc, #212]	@ (8005720 <TIM_Base_SetConfig+0x12c>)
 800564a:	4293      	cmp	r3, r2
 800564c:	d02b      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005654:	d027      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	4a32      	ldr	r2, [pc, #200]	@ (8005724 <TIM_Base_SetConfig+0x130>)
 800565a:	4293      	cmp	r3, r2
 800565c:	d023      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	4a31      	ldr	r2, [pc, #196]	@ (8005728 <TIM_Base_SetConfig+0x134>)
 8005662:	4293      	cmp	r3, r2
 8005664:	d01f      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	4a30      	ldr	r2, [pc, #192]	@ (800572c <TIM_Base_SetConfig+0x138>)
 800566a:	4293      	cmp	r3, r2
 800566c:	d01b      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	4a2f      	ldr	r2, [pc, #188]	@ (8005730 <TIM_Base_SetConfig+0x13c>)
 8005672:	4293      	cmp	r3, r2
 8005674:	d017      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	4a2e      	ldr	r2, [pc, #184]	@ (8005734 <TIM_Base_SetConfig+0x140>)
 800567a:	4293      	cmp	r3, r2
 800567c:	d013      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	4a2d      	ldr	r2, [pc, #180]	@ (8005738 <TIM_Base_SetConfig+0x144>)
 8005682:	4293      	cmp	r3, r2
 8005684:	d00f      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	4a2c      	ldr	r2, [pc, #176]	@ (800573c <TIM_Base_SetConfig+0x148>)
 800568a:	4293      	cmp	r3, r2
 800568c:	d00b      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	4a2b      	ldr	r2, [pc, #172]	@ (8005740 <TIM_Base_SetConfig+0x14c>)
 8005692:	4293      	cmp	r3, r2
 8005694:	d007      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	4a2a      	ldr	r2, [pc, #168]	@ (8005744 <TIM_Base_SetConfig+0x150>)
 800569a:	4293      	cmp	r3, r2
 800569c:	d003      	beq.n	80056a6 <TIM_Base_SetConfig+0xb2>
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	4a29      	ldr	r2, [pc, #164]	@ (8005748 <TIM_Base_SetConfig+0x154>)
 80056a2:	4293      	cmp	r3, r2
 80056a4:	d108      	bne.n	80056b8 <TIM_Base_SetConfig+0xc4>
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80056ac:	60fb      	str	r3, [r7, #12]
 80056ae:	683b      	ldr	r3, [r7, #0]
 80056b0:	68db      	ldr	r3, [r3, #12]
 80056b2:	68fa      	ldr	r2, [r7, #12]
 80056b4:	4313      	orrs	r3, r2
 80056b6:	60fb      	str	r3, [r7, #12]
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80056be:	683b      	ldr	r3, [r7, #0]
 80056c0:	695b      	ldr	r3, [r3, #20]
 80056c2:	4313      	orrs	r3, r2
 80056c4:	60fb      	str	r3, [r7, #12]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	68fa      	ldr	r2, [r7, #12]
 80056ca:	601a      	str	r2, [r3, #0]
 80056cc:	683b      	ldr	r3, [r7, #0]
 80056ce:	689a      	ldr	r2, [r3, #8]
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80056d4:	683b      	ldr	r3, [r7, #0]
 80056d6:	681a      	ldr	r2, [r3, #0]
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	629a      	str	r2, [r3, #40]	@ 0x28
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	4a10      	ldr	r2, [pc, #64]	@ (8005720 <TIM_Base_SetConfig+0x12c>)
 80056e0:	4293      	cmp	r3, r2
 80056e2:	d003      	beq.n	80056ec <TIM_Base_SetConfig+0xf8>
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	4a12      	ldr	r2, [pc, #72]	@ (8005730 <TIM_Base_SetConfig+0x13c>)
 80056e8:	4293      	cmp	r3, r2
 80056ea:	d103      	bne.n	80056f4 <TIM_Base_SetConfig+0x100>
 80056ec:	683b      	ldr	r3, [r7, #0]
 80056ee:	691a      	ldr	r2, [r3, #16]
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	2201      	movs	r2, #1
 80056f8:	615a      	str	r2, [r3, #20]
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	691b      	ldr	r3, [r3, #16]
 80056fe:	f003 0301 	and.w	r3, r3, #1
 8005702:	2b01      	cmp	r3, #1
 8005704:	d105      	bne.n	8005712 <TIM_Base_SetConfig+0x11e>
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	691b      	ldr	r3, [r3, #16]
 800570a:	f023 0201 	bic.w	r2, r3, #1
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	611a      	str	r2, [r3, #16]
 8005712:	bf00      	nop
 8005714:	3714      	adds	r7, #20
 8005716:	46bd      	mov	sp, r7
 8005718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800571c:	4770      	bx	lr
 800571e:	bf00      	nop
 8005720:	40010000 	.word	0x40010000
 8005724:	40000400 	.word	0x40000400
 8005728:	40000800 	.word	0x40000800
 800572c:	40000c00 	.word	0x40000c00
 8005730:	40010400 	.word	0x40010400
 8005734:	40014000 	.word	0x40014000
 8005738:	40014400 	.word	0x40014400
 800573c:	40014800 	.word	0x40014800
 8005740:	40001800 	.word	0x40001800
 8005744:	40001c00 	.word	0x40001c00
 8005748:	40002000 	.word	0x40002000

0800574c <TIM_OC1_SetConfig>:
 800574c:	b480      	push	{r7}
 800574e:	b087      	sub	sp, #28
 8005750:	af00      	add	r7, sp, #0
 8005752:	6078      	str	r0, [r7, #4]
 8005754:	6039      	str	r1, [r7, #0]
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	6a1b      	ldr	r3, [r3, #32]
 800575a:	617b      	str	r3, [r7, #20]
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	6a1b      	ldr	r3, [r3, #32]
 8005760:	f023 0201 	bic.w	r2, r3, #1
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	621a      	str	r2, [r3, #32]
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	685b      	ldr	r3, [r3, #4]
 800576c:	613b      	str	r3, [r7, #16]
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	699b      	ldr	r3, [r3, #24]
 8005772:	60fb      	str	r3, [r7, #12]
 8005774:	68fb      	ldr	r3, [r7, #12]
 8005776:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800577a:	60fb      	str	r3, [r7, #12]
 800577c:	68fb      	ldr	r3, [r7, #12]
 800577e:	f023 0303 	bic.w	r3, r3, #3
 8005782:	60fb      	str	r3, [r7, #12]
 8005784:	683b      	ldr	r3, [r7, #0]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	68fa      	ldr	r2, [r7, #12]
 800578a:	4313      	orrs	r3, r2
 800578c:	60fb      	str	r3, [r7, #12]
 800578e:	697b      	ldr	r3, [r7, #20]
 8005790:	f023 0302 	bic.w	r3, r3, #2
 8005794:	617b      	str	r3, [r7, #20]
 8005796:	683b      	ldr	r3, [r7, #0]
 8005798:	689b      	ldr	r3, [r3, #8]
 800579a:	697a      	ldr	r2, [r7, #20]
 800579c:	4313      	orrs	r3, r2
 800579e:	617b      	str	r3, [r7, #20]
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	4a20      	ldr	r2, [pc, #128]	@ (8005824 <TIM_OC1_SetConfig+0xd8>)
 80057a4:	4293      	cmp	r3, r2
 80057a6:	d003      	beq.n	80057b0 <TIM_OC1_SetConfig+0x64>
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	4a1f      	ldr	r2, [pc, #124]	@ (8005828 <TIM_OC1_SetConfig+0xdc>)
 80057ac:	4293      	cmp	r3, r2
 80057ae:	d10c      	bne.n	80057ca <TIM_OC1_SetConfig+0x7e>
 80057b0:	697b      	ldr	r3, [r7, #20]
 80057b2:	f023 0308 	bic.w	r3, r3, #8
 80057b6:	617b      	str	r3, [r7, #20]
 80057b8:	683b      	ldr	r3, [r7, #0]
 80057ba:	68db      	ldr	r3, [r3, #12]
 80057bc:	697a      	ldr	r2, [r7, #20]
 80057be:	4313      	orrs	r3, r2
 80057c0:	617b      	str	r3, [r7, #20]
 80057c2:	697b      	ldr	r3, [r7, #20]
 80057c4:	f023 0304 	bic.w	r3, r3, #4
 80057c8:	617b      	str	r3, [r7, #20]
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	4a15      	ldr	r2, [pc, #84]	@ (8005824 <TIM_OC1_SetConfig+0xd8>)
 80057ce:	4293      	cmp	r3, r2
 80057d0:	d003      	beq.n	80057da <TIM_OC1_SetConfig+0x8e>
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	4a14      	ldr	r2, [pc, #80]	@ (8005828 <TIM_OC1_SetConfig+0xdc>)
 80057d6:	4293      	cmp	r3, r2
 80057d8:	d111      	bne.n	80057fe <TIM_OC1_SetConfig+0xb2>
 80057da:	693b      	ldr	r3, [r7, #16]
 80057dc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80057e0:	613b      	str	r3, [r7, #16]
 80057e2:	693b      	ldr	r3, [r7, #16]
 80057e4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80057e8:	613b      	str	r3, [r7, #16]
 80057ea:	683b      	ldr	r3, [r7, #0]
 80057ec:	695b      	ldr	r3, [r3, #20]
 80057ee:	693a      	ldr	r2, [r7, #16]
 80057f0:	4313      	orrs	r3, r2
 80057f2:	613b      	str	r3, [r7, #16]
 80057f4:	683b      	ldr	r3, [r7, #0]
 80057f6:	699b      	ldr	r3, [r3, #24]
 80057f8:	693a      	ldr	r2, [r7, #16]
 80057fa:	4313      	orrs	r3, r2
 80057fc:	613b      	str	r3, [r7, #16]
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	693a      	ldr	r2, [r7, #16]
 8005802:	605a      	str	r2, [r3, #4]
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	68fa      	ldr	r2, [r7, #12]
 8005808:	619a      	str	r2, [r3, #24]
 800580a:	683b      	ldr	r3, [r7, #0]
 800580c:	685a      	ldr	r2, [r3, #4]
 800580e:	687b      	ldr	r3, [r7, #4]
 8005810:	635a      	str	r2, [r3, #52]	@ 0x34
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	697a      	ldr	r2, [r7, #20]
 8005816:	621a      	str	r2, [r3, #32]
 8005818:	bf00      	nop
 800581a:	371c      	adds	r7, #28
 800581c:	46bd      	mov	sp, r7
 800581e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005822:	4770      	bx	lr
 8005824:	40010000 	.word	0x40010000
 8005828:	40010400 	.word	0x40010400

0800582c <TIM_OC2_SetConfig>:
 800582c:	b480      	push	{r7}
 800582e:	b087      	sub	sp, #28
 8005830:	af00      	add	r7, sp, #0
 8005832:	6078      	str	r0, [r7, #4]
 8005834:	6039      	str	r1, [r7, #0]
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	6a1b      	ldr	r3, [r3, #32]
 800583a:	617b      	str	r3, [r7, #20]
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	6a1b      	ldr	r3, [r3, #32]
 8005840:	f023 0210 	bic.w	r2, r3, #16
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	621a      	str	r2, [r3, #32]
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	685b      	ldr	r3, [r3, #4]
 800584c:	613b      	str	r3, [r7, #16]
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	699b      	ldr	r3, [r3, #24]
 8005852:	60fb      	str	r3, [r7, #12]
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800585a:	60fb      	str	r3, [r7, #12]
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005862:	60fb      	str	r3, [r7, #12]
 8005864:	683b      	ldr	r3, [r7, #0]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	021b      	lsls	r3, r3, #8
 800586a:	68fa      	ldr	r2, [r7, #12]
 800586c:	4313      	orrs	r3, r2
 800586e:	60fb      	str	r3, [r7, #12]
 8005870:	697b      	ldr	r3, [r7, #20]
 8005872:	f023 0320 	bic.w	r3, r3, #32
 8005876:	617b      	str	r3, [r7, #20]
 8005878:	683b      	ldr	r3, [r7, #0]
 800587a:	689b      	ldr	r3, [r3, #8]
 800587c:	011b      	lsls	r3, r3, #4
 800587e:	697a      	ldr	r2, [r7, #20]
 8005880:	4313      	orrs	r3, r2
 8005882:	617b      	str	r3, [r7, #20]
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	4a22      	ldr	r2, [pc, #136]	@ (8005910 <TIM_OC2_SetConfig+0xe4>)
 8005888:	4293      	cmp	r3, r2
 800588a:	d003      	beq.n	8005894 <TIM_OC2_SetConfig+0x68>
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	4a21      	ldr	r2, [pc, #132]	@ (8005914 <TIM_OC2_SetConfig+0xe8>)
 8005890:	4293      	cmp	r3, r2
 8005892:	d10d      	bne.n	80058b0 <TIM_OC2_SetConfig+0x84>
 8005894:	697b      	ldr	r3, [r7, #20]
 8005896:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800589a:	617b      	str	r3, [r7, #20]
 800589c:	683b      	ldr	r3, [r7, #0]
 800589e:	68db      	ldr	r3, [r3, #12]
 80058a0:	011b      	lsls	r3, r3, #4
 80058a2:	697a      	ldr	r2, [r7, #20]
 80058a4:	4313      	orrs	r3, r2
 80058a6:	617b      	str	r3, [r7, #20]
 80058a8:	697b      	ldr	r3, [r7, #20]
 80058aa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80058ae:	617b      	str	r3, [r7, #20]
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	4a17      	ldr	r2, [pc, #92]	@ (8005910 <TIM_OC2_SetConfig+0xe4>)
 80058b4:	4293      	cmp	r3, r2
 80058b6:	d003      	beq.n	80058c0 <TIM_OC2_SetConfig+0x94>
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	4a16      	ldr	r2, [pc, #88]	@ (8005914 <TIM_OC2_SetConfig+0xe8>)
 80058bc:	4293      	cmp	r3, r2
 80058be:	d113      	bne.n	80058e8 <TIM_OC2_SetConfig+0xbc>
 80058c0:	693b      	ldr	r3, [r7, #16]
 80058c2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80058c6:	613b      	str	r3, [r7, #16]
 80058c8:	693b      	ldr	r3, [r7, #16]
 80058ca:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80058ce:	613b      	str	r3, [r7, #16]
 80058d0:	683b      	ldr	r3, [r7, #0]
 80058d2:	695b      	ldr	r3, [r3, #20]
 80058d4:	009b      	lsls	r3, r3, #2
 80058d6:	693a      	ldr	r2, [r7, #16]
 80058d8:	4313      	orrs	r3, r2
 80058da:	613b      	str	r3, [r7, #16]
 80058dc:	683b      	ldr	r3, [r7, #0]
 80058de:	699b      	ldr	r3, [r3, #24]
 80058e0:	009b      	lsls	r3, r3, #2
 80058e2:	693a      	ldr	r2, [r7, #16]
 80058e4:	4313      	orrs	r3, r2
 80058e6:	613b      	str	r3, [r7, #16]
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	693a      	ldr	r2, [r7, #16]
 80058ec:	605a      	str	r2, [r3, #4]
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	68fa      	ldr	r2, [r7, #12]
 80058f2:	619a      	str	r2, [r3, #24]
 80058f4:	683b      	ldr	r3, [r7, #0]
 80058f6:	685a      	ldr	r2, [r3, #4]
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	639a      	str	r2, [r3, #56]	@ 0x38
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	697a      	ldr	r2, [r7, #20]
 8005900:	621a      	str	r2, [r3, #32]
 8005902:	bf00      	nop
 8005904:	371c      	adds	r7, #28
 8005906:	46bd      	mov	sp, r7
 8005908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800590c:	4770      	bx	lr
 800590e:	bf00      	nop
 8005910:	40010000 	.word	0x40010000
 8005914:	40010400 	.word	0x40010400

08005918 <TIM_OC3_SetConfig>:
 8005918:	b480      	push	{r7}
 800591a:	b087      	sub	sp, #28
 800591c:	af00      	add	r7, sp, #0
 800591e:	6078      	str	r0, [r7, #4]
 8005920:	6039      	str	r1, [r7, #0]
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	6a1b      	ldr	r3, [r3, #32]
 8005926:	617b      	str	r3, [r7, #20]
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	6a1b      	ldr	r3, [r3, #32]
 800592c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	621a      	str	r2, [r3, #32]
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	685b      	ldr	r3, [r3, #4]
 8005938:	613b      	str	r3, [r7, #16]
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	69db      	ldr	r3, [r3, #28]
 800593e:	60fb      	str	r3, [r7, #12]
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005946:	60fb      	str	r3, [r7, #12]
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	f023 0303 	bic.w	r3, r3, #3
 800594e:	60fb      	str	r3, [r7, #12]
 8005950:	683b      	ldr	r3, [r7, #0]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	68fa      	ldr	r2, [r7, #12]
 8005956:	4313      	orrs	r3, r2
 8005958:	60fb      	str	r3, [r7, #12]
 800595a:	697b      	ldr	r3, [r7, #20]
 800595c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005960:	617b      	str	r3, [r7, #20]
 8005962:	683b      	ldr	r3, [r7, #0]
 8005964:	689b      	ldr	r3, [r3, #8]
 8005966:	021b      	lsls	r3, r3, #8
 8005968:	697a      	ldr	r2, [r7, #20]
 800596a:	4313      	orrs	r3, r2
 800596c:	617b      	str	r3, [r7, #20]
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	4a21      	ldr	r2, [pc, #132]	@ (80059f8 <TIM_OC3_SetConfig+0xe0>)
 8005972:	4293      	cmp	r3, r2
 8005974:	d003      	beq.n	800597e <TIM_OC3_SetConfig+0x66>
 8005976:	687b      	ldr	r3, [r7, #4]
 8005978:	4a20      	ldr	r2, [pc, #128]	@ (80059fc <TIM_OC3_SetConfig+0xe4>)
 800597a:	4293      	cmp	r3, r2
 800597c:	d10d      	bne.n	800599a <TIM_OC3_SetConfig+0x82>
 800597e:	697b      	ldr	r3, [r7, #20]
 8005980:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005984:	617b      	str	r3, [r7, #20]
 8005986:	683b      	ldr	r3, [r7, #0]
 8005988:	68db      	ldr	r3, [r3, #12]
 800598a:	021b      	lsls	r3, r3, #8
 800598c:	697a      	ldr	r2, [r7, #20]
 800598e:	4313      	orrs	r3, r2
 8005990:	617b      	str	r3, [r7, #20]
 8005992:	697b      	ldr	r3, [r7, #20]
 8005994:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005998:	617b      	str	r3, [r7, #20]
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	4a16      	ldr	r2, [pc, #88]	@ (80059f8 <TIM_OC3_SetConfig+0xe0>)
 800599e:	4293      	cmp	r3, r2
 80059a0:	d003      	beq.n	80059aa <TIM_OC3_SetConfig+0x92>
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	4a15      	ldr	r2, [pc, #84]	@ (80059fc <TIM_OC3_SetConfig+0xe4>)
 80059a6:	4293      	cmp	r3, r2
 80059a8:	d113      	bne.n	80059d2 <TIM_OC3_SetConfig+0xba>
 80059aa:	693b      	ldr	r3, [r7, #16]
 80059ac:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80059b0:	613b      	str	r3, [r7, #16]
 80059b2:	693b      	ldr	r3, [r7, #16]
 80059b4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80059b8:	613b      	str	r3, [r7, #16]
 80059ba:	683b      	ldr	r3, [r7, #0]
 80059bc:	695b      	ldr	r3, [r3, #20]
 80059be:	011b      	lsls	r3, r3, #4
 80059c0:	693a      	ldr	r2, [r7, #16]
 80059c2:	4313      	orrs	r3, r2
 80059c4:	613b      	str	r3, [r7, #16]
 80059c6:	683b      	ldr	r3, [r7, #0]
 80059c8:	699b      	ldr	r3, [r3, #24]
 80059ca:	011b      	lsls	r3, r3, #4
 80059cc:	693a      	ldr	r2, [r7, #16]
 80059ce:	4313      	orrs	r3, r2
 80059d0:	613b      	str	r3, [r7, #16]
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	693a      	ldr	r2, [r7, #16]
 80059d6:	605a      	str	r2, [r3, #4]
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	68fa      	ldr	r2, [r7, #12]
 80059dc:	61da      	str	r2, [r3, #28]
 80059de:	683b      	ldr	r3, [r7, #0]
 80059e0:	685a      	ldr	r2, [r3, #4]
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	697a      	ldr	r2, [r7, #20]
 80059ea:	621a      	str	r2, [r3, #32]
 80059ec:	bf00      	nop
 80059ee:	371c      	adds	r7, #28
 80059f0:	46bd      	mov	sp, r7
 80059f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f6:	4770      	bx	lr
 80059f8:	40010000 	.word	0x40010000
 80059fc:	40010400 	.word	0x40010400

08005a00 <TIM_OC4_SetConfig>:
 8005a00:	b480      	push	{r7}
 8005a02:	b087      	sub	sp, #28
 8005a04:	af00      	add	r7, sp, #0
 8005a06:	6078      	str	r0, [r7, #4]
 8005a08:	6039      	str	r1, [r7, #0]
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	6a1b      	ldr	r3, [r3, #32]
 8005a0e:	613b      	str	r3, [r7, #16]
 8005a10:	687b      	ldr	r3, [r7, #4]
 8005a12:	6a1b      	ldr	r3, [r3, #32]
 8005a14:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	621a      	str	r2, [r3, #32]
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	685b      	ldr	r3, [r3, #4]
 8005a20:	617b      	str	r3, [r7, #20]
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	69db      	ldr	r3, [r3, #28]
 8005a26:	60fb      	str	r3, [r7, #12]
 8005a28:	68fb      	ldr	r3, [r7, #12]
 8005a2a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005a2e:	60fb      	str	r3, [r7, #12]
 8005a30:	68fb      	ldr	r3, [r7, #12]
 8005a32:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005a36:	60fb      	str	r3, [r7, #12]
 8005a38:	683b      	ldr	r3, [r7, #0]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	021b      	lsls	r3, r3, #8
 8005a3e:	68fa      	ldr	r2, [r7, #12]
 8005a40:	4313      	orrs	r3, r2
 8005a42:	60fb      	str	r3, [r7, #12]
 8005a44:	693b      	ldr	r3, [r7, #16]
 8005a46:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005a4a:	613b      	str	r3, [r7, #16]
 8005a4c:	683b      	ldr	r3, [r7, #0]
 8005a4e:	689b      	ldr	r3, [r3, #8]
 8005a50:	031b      	lsls	r3, r3, #12
 8005a52:	693a      	ldr	r2, [r7, #16]
 8005a54:	4313      	orrs	r3, r2
 8005a56:	613b      	str	r3, [r7, #16]
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	4a12      	ldr	r2, [pc, #72]	@ (8005aa4 <TIM_OC4_SetConfig+0xa4>)
 8005a5c:	4293      	cmp	r3, r2
 8005a5e:	d003      	beq.n	8005a68 <TIM_OC4_SetConfig+0x68>
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	4a11      	ldr	r2, [pc, #68]	@ (8005aa8 <TIM_OC4_SetConfig+0xa8>)
 8005a64:	4293      	cmp	r3, r2
 8005a66:	d109      	bne.n	8005a7c <TIM_OC4_SetConfig+0x7c>
 8005a68:	697b      	ldr	r3, [r7, #20]
 8005a6a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005a6e:	617b      	str	r3, [r7, #20]
 8005a70:	683b      	ldr	r3, [r7, #0]
 8005a72:	695b      	ldr	r3, [r3, #20]
 8005a74:	019b      	lsls	r3, r3, #6
 8005a76:	697a      	ldr	r2, [r7, #20]
 8005a78:	4313      	orrs	r3, r2
 8005a7a:	617b      	str	r3, [r7, #20]
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	697a      	ldr	r2, [r7, #20]
 8005a80:	605a      	str	r2, [r3, #4]
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	68fa      	ldr	r2, [r7, #12]
 8005a86:	61da      	str	r2, [r3, #28]
 8005a88:	683b      	ldr	r3, [r7, #0]
 8005a8a:	685a      	ldr	r2, [r3, #4]
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	693a      	ldr	r2, [r7, #16]
 8005a94:	621a      	str	r2, [r3, #32]
 8005a96:	bf00      	nop
 8005a98:	371c      	adds	r7, #28
 8005a9a:	46bd      	mov	sp, r7
 8005a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aa0:	4770      	bx	lr
 8005aa2:	bf00      	nop
 8005aa4:	40010000 	.word	0x40010000
 8005aa8:	40010400 	.word	0x40010400

08005aac <TIM_TI1_ConfigInputStage>:
 8005aac:	b480      	push	{r7}
 8005aae:	b087      	sub	sp, #28
 8005ab0:	af00      	add	r7, sp, #0
 8005ab2:	60f8      	str	r0, [r7, #12]
 8005ab4:	60b9      	str	r1, [r7, #8]
 8005ab6:	607a      	str	r2, [r7, #4]
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	6a1b      	ldr	r3, [r3, #32]
 8005abc:	617b      	str	r3, [r7, #20]
 8005abe:	68fb      	ldr	r3, [r7, #12]
 8005ac0:	6a1b      	ldr	r3, [r3, #32]
 8005ac2:	f023 0201 	bic.w	r2, r3, #1
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	621a      	str	r2, [r3, #32]
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	699b      	ldr	r3, [r3, #24]
 8005ace:	613b      	str	r3, [r7, #16]
 8005ad0:	693b      	ldr	r3, [r7, #16]
 8005ad2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005ad6:	613b      	str	r3, [r7, #16]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	011b      	lsls	r3, r3, #4
 8005adc:	693a      	ldr	r2, [r7, #16]
 8005ade:	4313      	orrs	r3, r2
 8005ae0:	613b      	str	r3, [r7, #16]
 8005ae2:	697b      	ldr	r3, [r7, #20]
 8005ae4:	f023 030a 	bic.w	r3, r3, #10
 8005ae8:	617b      	str	r3, [r7, #20]
 8005aea:	697a      	ldr	r2, [r7, #20]
 8005aec:	68bb      	ldr	r3, [r7, #8]
 8005aee:	4313      	orrs	r3, r2
 8005af0:	617b      	str	r3, [r7, #20]
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	693a      	ldr	r2, [r7, #16]
 8005af6:	619a      	str	r2, [r3, #24]
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	697a      	ldr	r2, [r7, #20]
 8005afc:	621a      	str	r2, [r3, #32]
 8005afe:	bf00      	nop
 8005b00:	371c      	adds	r7, #28
 8005b02:	46bd      	mov	sp, r7
 8005b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b08:	4770      	bx	lr

08005b0a <TIM_TI2_ConfigInputStage>:
 8005b0a:	b480      	push	{r7}
 8005b0c:	b087      	sub	sp, #28
 8005b0e:	af00      	add	r7, sp, #0
 8005b10:	60f8      	str	r0, [r7, #12]
 8005b12:	60b9      	str	r1, [r7, #8]
 8005b14:	607a      	str	r2, [r7, #4]
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	6a1b      	ldr	r3, [r3, #32]
 8005b1a:	617b      	str	r3, [r7, #20]
 8005b1c:	68fb      	ldr	r3, [r7, #12]
 8005b1e:	6a1b      	ldr	r3, [r3, #32]
 8005b20:	f023 0210 	bic.w	r2, r3, #16
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	621a      	str	r2, [r3, #32]
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	699b      	ldr	r3, [r3, #24]
 8005b2c:	613b      	str	r3, [r7, #16]
 8005b2e:	693b      	ldr	r3, [r7, #16]
 8005b30:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005b34:	613b      	str	r3, [r7, #16]
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	031b      	lsls	r3, r3, #12
 8005b3a:	693a      	ldr	r2, [r7, #16]
 8005b3c:	4313      	orrs	r3, r2
 8005b3e:	613b      	str	r3, [r7, #16]
 8005b40:	697b      	ldr	r3, [r7, #20]
 8005b42:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005b46:	617b      	str	r3, [r7, #20]
 8005b48:	68bb      	ldr	r3, [r7, #8]
 8005b4a:	011b      	lsls	r3, r3, #4
 8005b4c:	697a      	ldr	r2, [r7, #20]
 8005b4e:	4313      	orrs	r3, r2
 8005b50:	617b      	str	r3, [r7, #20]
 8005b52:	68fb      	ldr	r3, [r7, #12]
 8005b54:	693a      	ldr	r2, [r7, #16]
 8005b56:	619a      	str	r2, [r3, #24]
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	697a      	ldr	r2, [r7, #20]
 8005b5c:	621a      	str	r2, [r3, #32]
 8005b5e:	bf00      	nop
 8005b60:	371c      	adds	r7, #28
 8005b62:	46bd      	mov	sp, r7
 8005b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b68:	4770      	bx	lr

08005b6a <TIM_ITRx_SetConfig>:
 8005b6a:	b480      	push	{r7}
 8005b6c:	b085      	sub	sp, #20
 8005b6e:	af00      	add	r7, sp, #0
 8005b70:	6078      	str	r0, [r7, #4]
 8005b72:	6039      	str	r1, [r7, #0]
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	689b      	ldr	r3, [r3, #8]
 8005b78:	60fb      	str	r3, [r7, #12]
 8005b7a:	68fb      	ldr	r3, [r7, #12]
 8005b7c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005b80:	60fb      	str	r3, [r7, #12]
 8005b82:	683a      	ldr	r2, [r7, #0]
 8005b84:	68fb      	ldr	r3, [r7, #12]
 8005b86:	4313      	orrs	r3, r2
 8005b88:	f043 0307 	orr.w	r3, r3, #7
 8005b8c:	60fb      	str	r3, [r7, #12]
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	68fa      	ldr	r2, [r7, #12]
 8005b92:	609a      	str	r2, [r3, #8]
 8005b94:	bf00      	nop
 8005b96:	3714      	adds	r7, #20
 8005b98:	46bd      	mov	sp, r7
 8005b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b9e:	4770      	bx	lr

08005ba0 <TIM_ETR_SetConfig>:
 8005ba0:	b480      	push	{r7}
 8005ba2:	b087      	sub	sp, #28
 8005ba4:	af00      	add	r7, sp, #0
 8005ba6:	60f8      	str	r0, [r7, #12]
 8005ba8:	60b9      	str	r1, [r7, #8]
 8005baa:	607a      	str	r2, [r7, #4]
 8005bac:	603b      	str	r3, [r7, #0]
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	689b      	ldr	r3, [r3, #8]
 8005bb2:	617b      	str	r3, [r7, #20]
 8005bb4:	697b      	ldr	r3, [r7, #20]
 8005bb6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005bba:	617b      	str	r3, [r7, #20]
 8005bbc:	683b      	ldr	r3, [r7, #0]
 8005bbe:	021a      	lsls	r2, r3, #8
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	431a      	orrs	r2, r3
 8005bc4:	68bb      	ldr	r3, [r7, #8]
 8005bc6:	4313      	orrs	r3, r2
 8005bc8:	697a      	ldr	r2, [r7, #20]
 8005bca:	4313      	orrs	r3, r2
 8005bcc:	617b      	str	r3, [r7, #20]
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	697a      	ldr	r2, [r7, #20]
 8005bd2:	609a      	str	r2, [r3, #8]
 8005bd4:	bf00      	nop
 8005bd6:	371c      	adds	r7, #28
 8005bd8:	46bd      	mov	sp, r7
 8005bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bde:	4770      	bx	lr

08005be0 <TIM_CCxChannelCmd>:
 8005be0:	b480      	push	{r7}
 8005be2:	b087      	sub	sp, #28
 8005be4:	af00      	add	r7, sp, #0
 8005be6:	60f8      	str	r0, [r7, #12]
 8005be8:	60b9      	str	r1, [r7, #8]
 8005bea:	607a      	str	r2, [r7, #4]
 8005bec:	68bb      	ldr	r3, [r7, #8]
 8005bee:	f003 031f 	and.w	r3, r3, #31
 8005bf2:	2201      	movs	r2, #1
 8005bf4:	fa02 f303 	lsl.w	r3, r2, r3
 8005bf8:	617b      	str	r3, [r7, #20]
 8005bfa:	68fb      	ldr	r3, [r7, #12]
 8005bfc:	6a1a      	ldr	r2, [r3, #32]
 8005bfe:	697b      	ldr	r3, [r7, #20]
 8005c00:	43db      	mvns	r3, r3
 8005c02:	401a      	ands	r2, r3
 8005c04:	68fb      	ldr	r3, [r7, #12]
 8005c06:	621a      	str	r2, [r3, #32]
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	6a1a      	ldr	r2, [r3, #32]
 8005c0c:	68bb      	ldr	r3, [r7, #8]
 8005c0e:	f003 031f 	and.w	r3, r3, #31
 8005c12:	6879      	ldr	r1, [r7, #4]
 8005c14:	fa01 f303 	lsl.w	r3, r1, r3
 8005c18:	431a      	orrs	r2, r3
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	621a      	str	r2, [r3, #32]
 8005c1e:	bf00      	nop
 8005c20:	371c      	adds	r7, #28
 8005c22:	46bd      	mov	sp, r7
 8005c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c28:	4770      	bx	lr
	...

08005c2c <HAL_TIMEx_MasterConfigSynchronization>:
 8005c2c:	b480      	push	{r7}
 8005c2e:	b085      	sub	sp, #20
 8005c30:	af00      	add	r7, sp, #0
 8005c32:	6078      	str	r0, [r7, #4]
 8005c34:	6039      	str	r1, [r7, #0]
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005c3c:	2b01      	cmp	r3, #1
 8005c3e:	d101      	bne.n	8005c44 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005c40:	2302      	movs	r3, #2
 8005c42:	e05a      	b.n	8005cfa <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	2201      	movs	r2, #1
 8005c48:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	2202      	movs	r2, #2
 8005c50:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	685b      	ldr	r3, [r3, #4]
 8005c5a:	60fb      	str	r3, [r7, #12]
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	681b      	ldr	r3, [r3, #0]
 8005c60:	689b      	ldr	r3, [r3, #8]
 8005c62:	60bb      	str	r3, [r7, #8]
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005c6a:	60fb      	str	r3, [r7, #12]
 8005c6c:	683b      	ldr	r3, [r7, #0]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	68fa      	ldr	r2, [r7, #12]
 8005c72:	4313      	orrs	r3, r2
 8005c74:	60fb      	str	r3, [r7, #12]
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	68fa      	ldr	r2, [r7, #12]
 8005c7c:	605a      	str	r2, [r3, #4]
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	681b      	ldr	r3, [r3, #0]
 8005c82:	4a21      	ldr	r2, [pc, #132]	@ (8005d08 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005c84:	4293      	cmp	r3, r2
 8005c86:	d022      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005c90:	d01d      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	4a1d      	ldr	r2, [pc, #116]	@ (8005d0c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005c98:	4293      	cmp	r3, r2
 8005c9a:	d018      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	4a1b      	ldr	r2, [pc, #108]	@ (8005d10 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005ca2:	4293      	cmp	r3, r2
 8005ca4:	d013      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	681b      	ldr	r3, [r3, #0]
 8005caa:	4a1a      	ldr	r2, [pc, #104]	@ (8005d14 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005cac:	4293      	cmp	r3, r2
 8005cae:	d00e      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	4a18      	ldr	r2, [pc, #96]	@ (8005d18 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005cb6:	4293      	cmp	r3, r2
 8005cb8:	d009      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005cba:	687b      	ldr	r3, [r7, #4]
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	4a17      	ldr	r2, [pc, #92]	@ (8005d1c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005cc0:	4293      	cmp	r3, r2
 8005cc2:	d004      	beq.n	8005cce <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	4a15      	ldr	r2, [pc, #84]	@ (8005d20 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005cca:	4293      	cmp	r3, r2
 8005ccc:	d10c      	bne.n	8005ce8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005cce:	68bb      	ldr	r3, [r7, #8]
 8005cd0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005cd4:	60bb      	str	r3, [r7, #8]
 8005cd6:	683b      	ldr	r3, [r7, #0]
 8005cd8:	685b      	ldr	r3, [r3, #4]
 8005cda:	68ba      	ldr	r2, [r7, #8]
 8005cdc:	4313      	orrs	r3, r2
 8005cde:	60bb      	str	r3, [r7, #8]
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	68ba      	ldr	r2, [r7, #8]
 8005ce6:	609a      	str	r2, [r3, #8]
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	2201      	movs	r2, #1
 8005cec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	2200      	movs	r2, #0
 8005cf4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005cf8:	2300      	movs	r3, #0
 8005cfa:	4618      	mov	r0, r3
 8005cfc:	3714      	adds	r7, #20
 8005cfe:	46bd      	mov	sp, r7
 8005d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d04:	4770      	bx	lr
 8005d06:	bf00      	nop
 8005d08:	40010000 	.word	0x40010000
 8005d0c:	40000400 	.word	0x40000400
 8005d10:	40000800 	.word	0x40000800
 8005d14:	40000c00 	.word	0x40000c00
 8005d18:	40010400 	.word	0x40010400
 8005d1c:	40014000 	.word	0x40014000
 8005d20:	40001800 	.word	0x40001800

08005d24 <HAL_TIMEx_ConfigBreakDeadTime>:
 8005d24:	b480      	push	{r7}
 8005d26:	b085      	sub	sp, #20
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	6078      	str	r0, [r7, #4]
 8005d2c:	6039      	str	r1, [r7, #0]
 8005d2e:	2300      	movs	r3, #0
 8005d30:	60fb      	str	r3, [r7, #12]
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005d38:	2b01      	cmp	r3, #1
 8005d3a:	d101      	bne.n	8005d40 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8005d3c:	2302      	movs	r3, #2
 8005d3e:	e03d      	b.n	8005dbc <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	2201      	movs	r2, #1
 8005d44:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d48:	68fb      	ldr	r3, [r7, #12]
 8005d4a:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8005d4e:	683b      	ldr	r3, [r7, #0]
 8005d50:	68db      	ldr	r3, [r3, #12]
 8005d52:	4313      	orrs	r3, r2
 8005d54:	60fb      	str	r3, [r7, #12]
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005d5c:	683b      	ldr	r3, [r7, #0]
 8005d5e:	689b      	ldr	r3, [r3, #8]
 8005d60:	4313      	orrs	r3, r2
 8005d62:	60fb      	str	r3, [r7, #12]
 8005d64:	68fb      	ldr	r3, [r7, #12]
 8005d66:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8005d6a:	683b      	ldr	r3, [r7, #0]
 8005d6c:	685b      	ldr	r3, [r3, #4]
 8005d6e:	4313      	orrs	r3, r2
 8005d70:	60fb      	str	r3, [r7, #12]
 8005d72:	68fb      	ldr	r3, [r7, #12]
 8005d74:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8005d78:	683b      	ldr	r3, [r7, #0]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	4313      	orrs	r3, r2
 8005d7e:	60fb      	str	r3, [r7, #12]
 8005d80:	68fb      	ldr	r3, [r7, #12]
 8005d82:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005d86:	683b      	ldr	r3, [r7, #0]
 8005d88:	691b      	ldr	r3, [r3, #16]
 8005d8a:	4313      	orrs	r3, r2
 8005d8c:	60fb      	str	r3, [r7, #12]
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8005d94:	683b      	ldr	r3, [r7, #0]
 8005d96:	695b      	ldr	r3, [r3, #20]
 8005d98:	4313      	orrs	r3, r2
 8005d9a:	60fb      	str	r3, [r7, #12]
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8005da2:	683b      	ldr	r3, [r7, #0]
 8005da4:	69db      	ldr	r3, [r3, #28]
 8005da6:	4313      	orrs	r3, r2
 8005da8:	60fb      	str	r3, [r7, #12]
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	68fa      	ldr	r2, [r7, #12]
 8005db0:	645a      	str	r2, [r3, #68]	@ 0x44
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	2200      	movs	r2, #0
 8005db6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005dba:	2300      	movs	r3, #0
 8005dbc:	4618      	mov	r0, r3
 8005dbe:	3714      	adds	r7, #20
 8005dc0:	46bd      	mov	sp, r7
 8005dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc6:	4770      	bx	lr

08005dc8 <HAL_UART_Init>:
 8005dc8:	b580      	push	{r7, lr}
 8005dca:	b082      	sub	sp, #8
 8005dcc:	af00      	add	r7, sp, #0
 8005dce:	6078      	str	r0, [r7, #4]
 8005dd0:	687b      	ldr	r3, [r7, #4]
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d101      	bne.n	8005dda <HAL_UART_Init+0x12>
 8005dd6:	2301      	movs	r3, #1
 8005dd8:	e042      	b.n	8005e60 <HAL_UART_Init+0x98>
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005de0:	b2db      	uxtb	r3, r3
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d106      	bne.n	8005df4 <HAL_UART_Init+0x2c>
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	2200      	movs	r2, #0
 8005dea:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005dee:	6878      	ldr	r0, [r7, #4]
 8005df0:	f7fc fc5e 	bl	80026b0 <HAL_UART_MspInit>
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	2224      	movs	r2, #36	@ 0x24
 8005df8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	68da      	ldr	r2, [r3, #12]
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005e0a:	60da      	str	r2, [r3, #12]
 8005e0c:	6878      	ldr	r0, [r7, #4]
 8005e0e:	f000 fea1 	bl	8006b54 <UART_SetConfig>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	691a      	ldr	r2, [r3, #16]
 8005e18:	687b      	ldr	r3, [r7, #4]
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005e20:	611a      	str	r2, [r3, #16]
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	681b      	ldr	r3, [r3, #0]
 8005e26:	695a      	ldr	r2, [r3, #20]
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005e30:	615a      	str	r2, [r3, #20]
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	68da      	ldr	r2, [r3, #12]
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005e40:	60da      	str	r2, [r3, #12]
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	2200      	movs	r2, #0
 8005e46:	645a      	str	r2, [r3, #68]	@ 0x44
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	2220      	movs	r2, #32
 8005e4c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	2220      	movs	r2, #32
 8005e54:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	2200      	movs	r2, #0
 8005e5c:	635a      	str	r2, [r3, #52]	@ 0x34
 8005e5e:	2300      	movs	r3, #0
 8005e60:	4618      	mov	r0, r3
 8005e62:	3708      	adds	r7, #8
 8005e64:	46bd      	mov	sp, r7
 8005e66:	bd80      	pop	{r7, pc}

08005e68 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8005e68:	b580      	push	{r7, lr}
 8005e6a:	b08c      	sub	sp, #48	@ 0x30
 8005e6c:	af00      	add	r7, sp, #0
 8005e6e:	60f8      	str	r0, [r7, #12]
 8005e70:	60b9      	str	r1, [r7, #8]
 8005e72:	4613      	mov	r3, r2
 8005e74:	80fb      	strh	r3, [r7, #6]
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005e7c:	b2db      	uxtb	r3, r3
 8005e7e:	2b20      	cmp	r3, #32
 8005e80:	d14a      	bne.n	8005f18 <HAL_UARTEx_ReceiveToIdle_DMA+0xb0>
 8005e82:	68bb      	ldr	r3, [r7, #8]
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d002      	beq.n	8005e8e <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8005e88:	88fb      	ldrh	r3, [r7, #6]
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d101      	bne.n	8005e92 <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 8005e8e:	2301      	movs	r3, #1
 8005e90:	e043      	b.n	8005f1a <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	2201      	movs	r2, #1
 8005e96:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	2200      	movs	r2, #0
 8005e9c:	635a      	str	r2, [r3, #52]	@ 0x34
 8005e9e:	88fb      	ldrh	r3, [r7, #6]
 8005ea0:	461a      	mov	r2, r3
 8005ea2:	68b9      	ldr	r1, [r7, #8]
 8005ea4:	68f8      	ldr	r0, [r7, #12]
 8005ea6:	f000 fbf5 	bl	8006694 <UART_Start_Receive_DMA>
 8005eaa:	4603      	mov	r3, r0
 8005eac:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8005eb0:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8005eb4:	2b00      	cmp	r3, #0
 8005eb6:	d12c      	bne.n	8005f12 <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ebc:	2b01      	cmp	r3, #1
 8005ebe:	d125      	bne.n	8005f0c <HAL_UARTEx_ReceiveToIdle_DMA+0xa4>
 8005ec0:	2300      	movs	r3, #0
 8005ec2:	613b      	str	r3, [r7, #16]
 8005ec4:	68fb      	ldr	r3, [r7, #12]
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	613b      	str	r3, [r7, #16]
 8005ecc:	68fb      	ldr	r3, [r7, #12]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	685b      	ldr	r3, [r3, #4]
 8005ed2:	613b      	str	r3, [r7, #16]
 8005ed4:	693b      	ldr	r3, [r7, #16]
 8005ed6:	68fb      	ldr	r3, [r7, #12]
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	330c      	adds	r3, #12
 8005edc:	61bb      	str	r3, [r7, #24]
 8005ede:	69bb      	ldr	r3, [r7, #24]
 8005ee0:	e853 3f00 	ldrex	r3, [r3]
 8005ee4:	617b      	str	r3, [r7, #20]
 8005ee6:	697b      	ldr	r3, [r7, #20]
 8005ee8:	f043 0310 	orr.w	r3, r3, #16
 8005eec:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	330c      	adds	r3, #12
 8005ef4:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8005ef6:	627a      	str	r2, [r7, #36]	@ 0x24
 8005ef8:	623b      	str	r3, [r7, #32]
 8005efa:	6a39      	ldr	r1, [r7, #32]
 8005efc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005efe:	e841 2300 	strex	r3, r2, [r1]
 8005f02:	61fb      	str	r3, [r7, #28]
 8005f04:	69fb      	ldr	r3, [r7, #28]
 8005f06:	2b00      	cmp	r3, #0
 8005f08:	d1e5      	bne.n	8005ed6 <HAL_UARTEx_ReceiveToIdle_DMA+0x6e>
 8005f0a:	e002      	b.n	8005f12 <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
 8005f0c:	2301      	movs	r3, #1
 8005f0e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8005f12:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8005f16:	e000      	b.n	8005f1a <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
 8005f18:	2302      	movs	r3, #2
 8005f1a:	4618      	mov	r0, r3
 8005f1c:	3730      	adds	r7, #48	@ 0x30
 8005f1e:	46bd      	mov	sp, r7
 8005f20:	bd80      	pop	{r7, pc}
	...

08005f24 <HAL_UART_IRQHandler>:
 8005f24:	b580      	push	{r7, lr}
 8005f26:	b0ba      	sub	sp, #232	@ 0xe8
 8005f28:	af00      	add	r7, sp, #0
 8005f2a:	6078      	str	r0, [r7, #4]
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	68db      	ldr	r3, [r3, #12]
 8005f3c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005f40:	687b      	ldr	r3, [r7, #4]
 8005f42:	681b      	ldr	r3, [r3, #0]
 8005f44:	695b      	ldr	r3, [r3, #20]
 8005f46:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005f4a:	2300      	movs	r3, #0
 8005f4c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005f50:	2300      	movs	r3, #0
 8005f52:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005f56:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005f5a:	f003 030f 	and.w	r3, r3, #15
 8005f5e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005f62:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d10f      	bne.n	8005f8a <HAL_UART_IRQHandler+0x66>
 8005f6a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005f6e:	f003 0320 	and.w	r3, r3, #32
 8005f72:	2b00      	cmp	r3, #0
 8005f74:	d009      	beq.n	8005f8a <HAL_UART_IRQHandler+0x66>
 8005f76:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005f7a:	f003 0320 	and.w	r3, r3, #32
 8005f7e:	2b00      	cmp	r3, #0
 8005f80:	d003      	beq.n	8005f8a <HAL_UART_IRQHandler+0x66>
 8005f82:	6878      	ldr	r0, [r7, #4]
 8005f84:	f000 fd27 	bl	80069d6 <UART_Receive_IT>
 8005f88:	e25b      	b.n	8006442 <HAL_UART_IRQHandler+0x51e>
 8005f8a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	f000 80de 	beq.w	8006150 <HAL_UART_IRQHandler+0x22c>
 8005f94:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005f98:	f003 0301 	and.w	r3, r3, #1
 8005f9c:	2b00      	cmp	r3, #0
 8005f9e:	d106      	bne.n	8005fae <HAL_UART_IRQHandler+0x8a>
 8005fa0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005fa4:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005fa8:	2b00      	cmp	r3, #0
 8005faa:	f000 80d1 	beq.w	8006150 <HAL_UART_IRQHandler+0x22c>
 8005fae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005fb2:	f003 0301 	and.w	r3, r3, #1
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d00b      	beq.n	8005fd2 <HAL_UART_IRQHandler+0xae>
 8005fba:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005fbe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005fc2:	2b00      	cmp	r3, #0
 8005fc4:	d005      	beq.n	8005fd2 <HAL_UART_IRQHandler+0xae>
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005fca:	f043 0201 	orr.w	r2, r3, #1
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	645a      	str	r2, [r3, #68]	@ 0x44
 8005fd2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005fd6:	f003 0304 	and.w	r3, r3, #4
 8005fda:	2b00      	cmp	r3, #0
 8005fdc:	d00b      	beq.n	8005ff6 <HAL_UART_IRQHandler+0xd2>
 8005fde:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005fe2:	f003 0301 	and.w	r3, r3, #1
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d005      	beq.n	8005ff6 <HAL_UART_IRQHandler+0xd2>
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005fee:	f043 0202 	orr.w	r2, r3, #2
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	645a      	str	r2, [r3, #68]	@ 0x44
 8005ff6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005ffa:	f003 0302 	and.w	r3, r3, #2
 8005ffe:	2b00      	cmp	r3, #0
 8006000:	d00b      	beq.n	800601a <HAL_UART_IRQHandler+0xf6>
 8006002:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006006:	f003 0301 	and.w	r3, r3, #1
 800600a:	2b00      	cmp	r3, #0
 800600c:	d005      	beq.n	800601a <HAL_UART_IRQHandler+0xf6>
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006012:	f043 0204 	orr.w	r2, r3, #4
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	645a      	str	r2, [r3, #68]	@ 0x44
 800601a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800601e:	f003 0308 	and.w	r3, r3, #8
 8006022:	2b00      	cmp	r3, #0
 8006024:	d011      	beq.n	800604a <HAL_UART_IRQHandler+0x126>
 8006026:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800602a:	f003 0320 	and.w	r3, r3, #32
 800602e:	2b00      	cmp	r3, #0
 8006030:	d105      	bne.n	800603e <HAL_UART_IRQHandler+0x11a>
 8006032:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006036:	f003 0301 	and.w	r3, r3, #1
 800603a:	2b00      	cmp	r3, #0
 800603c:	d005      	beq.n	800604a <HAL_UART_IRQHandler+0x126>
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006042:	f043 0208 	orr.w	r2, r3, #8
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	645a      	str	r2, [r3, #68]	@ 0x44
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800604e:	2b00      	cmp	r3, #0
 8006050:	f000 81f2 	beq.w	8006438 <HAL_UART_IRQHandler+0x514>
 8006054:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006058:	f003 0320 	and.w	r3, r3, #32
 800605c:	2b00      	cmp	r3, #0
 800605e:	d008      	beq.n	8006072 <HAL_UART_IRQHandler+0x14e>
 8006060:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006064:	f003 0320 	and.w	r3, r3, #32
 8006068:	2b00      	cmp	r3, #0
 800606a:	d002      	beq.n	8006072 <HAL_UART_IRQHandler+0x14e>
 800606c:	6878      	ldr	r0, [r7, #4]
 800606e:	f000 fcb2 	bl	80069d6 <UART_Receive_IT>
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	695b      	ldr	r3, [r3, #20]
 8006078:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800607c:	2b40      	cmp	r3, #64	@ 0x40
 800607e:	bf0c      	ite	eq
 8006080:	2301      	moveq	r3, #1
 8006082:	2300      	movne	r3, #0
 8006084:	b2db      	uxtb	r3, r3
 8006086:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800608e:	f003 0308 	and.w	r3, r3, #8
 8006092:	2b00      	cmp	r3, #0
 8006094:	d103      	bne.n	800609e <HAL_UART_IRQHandler+0x17a>
 8006096:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800609a:	2b00      	cmp	r3, #0
 800609c:	d04f      	beq.n	800613e <HAL_UART_IRQHandler+0x21a>
 800609e:	6878      	ldr	r0, [r7, #4]
 80060a0:	f000 fbba 	bl	8006818 <UART_EndRxTransfer>
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	695b      	ldr	r3, [r3, #20]
 80060aa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80060ae:	2b40      	cmp	r3, #64	@ 0x40
 80060b0:	d141      	bne.n	8006136 <HAL_UART_IRQHandler+0x212>
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	3314      	adds	r3, #20
 80060b8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80060bc:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80060c0:	e853 3f00 	ldrex	r3, [r3]
 80060c4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80060c8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80060cc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80060d0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80060d4:	687b      	ldr	r3, [r7, #4]
 80060d6:	681b      	ldr	r3, [r3, #0]
 80060d8:	3314      	adds	r3, #20
 80060da:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80060de:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80060e2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80060e6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80060ea:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80060ee:	e841 2300 	strex	r3, r2, [r1]
 80060f2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80060f6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d1d9      	bne.n	80060b2 <HAL_UART_IRQHandler+0x18e>
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006102:	2b00      	cmp	r3, #0
 8006104:	d013      	beq.n	800612e <HAL_UART_IRQHandler+0x20a>
 8006106:	687b      	ldr	r3, [r7, #4]
 8006108:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800610a:	4a7e      	ldr	r2, [pc, #504]	@ (8006304 <HAL_UART_IRQHandler+0x3e0>)
 800610c:	651a      	str	r2, [r3, #80]	@ 0x50
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006112:	4618      	mov	r0, r3
 8006114:	f7fd fbda 	bl	80038cc <HAL_DMA_Abort_IT>
 8006118:	4603      	mov	r3, r0
 800611a:	2b00      	cmp	r3, #0
 800611c:	d016      	beq.n	800614c <HAL_UART_IRQHandler+0x228>
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006122:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006124:	687a      	ldr	r2, [r7, #4]
 8006126:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8006128:	4610      	mov	r0, r2
 800612a:	4798      	blx	r3
 800612c:	e00e      	b.n	800614c <HAL_UART_IRQHandler+0x228>
 800612e:	6878      	ldr	r0, [r7, #4]
 8006130:	f000 f9a8 	bl	8006484 <HAL_UART_ErrorCallback>
 8006134:	e00a      	b.n	800614c <HAL_UART_IRQHandler+0x228>
 8006136:	6878      	ldr	r0, [r7, #4]
 8006138:	f000 f9a4 	bl	8006484 <HAL_UART_ErrorCallback>
 800613c:	e006      	b.n	800614c <HAL_UART_IRQHandler+0x228>
 800613e:	6878      	ldr	r0, [r7, #4]
 8006140:	f000 f9a0 	bl	8006484 <HAL_UART_ErrorCallback>
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	2200      	movs	r2, #0
 8006148:	645a      	str	r2, [r3, #68]	@ 0x44
 800614a:	e175      	b.n	8006438 <HAL_UART_IRQHandler+0x514>
 800614c:	bf00      	nop
 800614e:	e173      	b.n	8006438 <HAL_UART_IRQHandler+0x514>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006154:	2b01      	cmp	r3, #1
 8006156:	f040 814f 	bne.w	80063f8 <HAL_UART_IRQHandler+0x4d4>
 800615a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800615e:	f003 0310 	and.w	r3, r3, #16
 8006162:	2b00      	cmp	r3, #0
 8006164:	f000 8148 	beq.w	80063f8 <HAL_UART_IRQHandler+0x4d4>
 8006168:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800616c:	f003 0310 	and.w	r3, r3, #16
 8006170:	2b00      	cmp	r3, #0
 8006172:	f000 8141 	beq.w	80063f8 <HAL_UART_IRQHandler+0x4d4>
 8006176:	2300      	movs	r3, #0
 8006178:	60bb      	str	r3, [r7, #8]
 800617a:	687b      	ldr	r3, [r7, #4]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	60bb      	str	r3, [r7, #8]
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	685b      	ldr	r3, [r3, #4]
 8006188:	60bb      	str	r3, [r7, #8]
 800618a:	68bb      	ldr	r3, [r7, #8]
 800618c:	687b      	ldr	r3, [r7, #4]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	695b      	ldr	r3, [r3, #20]
 8006192:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006196:	2b40      	cmp	r3, #64	@ 0x40
 8006198:	f040 80b6 	bne.w	8006308 <HAL_UART_IRQHandler+0x3e4>
 800619c:	687b      	ldr	r3, [r7, #4]
 800619e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	685b      	ldr	r3, [r3, #4]
 80061a4:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80061a8:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	f000 8145 	beq.w	800643c <HAL_UART_IRQHandler+0x518>
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80061b6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80061ba:	429a      	cmp	r2, r3
 80061bc:	f080 813e 	bcs.w	800643c <HAL_UART_IRQHandler+0x518>
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80061c6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80061cc:	69db      	ldr	r3, [r3, #28]
 80061ce:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80061d2:	f000 8088 	beq.w	80062e6 <HAL_UART_IRQHandler+0x3c2>
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	330c      	adds	r3, #12
 80061dc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80061e0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80061e4:	e853 3f00 	ldrex	r3, [r3]
 80061e8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80061ec:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80061f0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80061f4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	330c      	adds	r3, #12
 80061fe:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8006202:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006206:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800620a:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800620e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006212:	e841 2300 	strex	r3, r2, [r1]
 8006216:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800621a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800621e:	2b00      	cmp	r3, #0
 8006220:	d1d9      	bne.n	80061d6 <HAL_UART_IRQHandler+0x2b2>
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	3314      	adds	r3, #20
 8006228:	677b      	str	r3, [r7, #116]	@ 0x74
 800622a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800622c:	e853 3f00 	ldrex	r3, [r3]
 8006230:	673b      	str	r3, [r7, #112]	@ 0x70
 8006232:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006234:	f023 0301 	bic.w	r3, r3, #1
 8006238:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800623c:	687b      	ldr	r3, [r7, #4]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	3314      	adds	r3, #20
 8006242:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006246:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800624a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800624c:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800624e:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8006252:	e841 2300 	strex	r3, r2, [r1]
 8006256:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006258:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800625a:	2b00      	cmp	r3, #0
 800625c:	d1e1      	bne.n	8006222 <HAL_UART_IRQHandler+0x2fe>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	3314      	adds	r3, #20
 8006264:	663b      	str	r3, [r7, #96]	@ 0x60
 8006266:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006268:	e853 3f00 	ldrex	r3, [r3]
 800626c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800626e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006270:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006274:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006278:	687b      	ldr	r3, [r7, #4]
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	3314      	adds	r3, #20
 800627e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8006282:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006284:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006286:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006288:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800628a:	e841 2300 	strex	r3, r2, [r1]
 800628e:	667b      	str	r3, [r7, #100]	@ 0x64
 8006290:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006292:	2b00      	cmp	r3, #0
 8006294:	d1e3      	bne.n	800625e <HAL_UART_IRQHandler+0x33a>
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	2220      	movs	r2, #32
 800629a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	2200      	movs	r2, #0
 80062a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	330c      	adds	r3, #12
 80062aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80062ac:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80062ae:	e853 3f00 	ldrex	r3, [r3]
 80062b2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80062b4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80062b6:	f023 0310 	bic.w	r3, r3, #16
 80062ba:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	681b      	ldr	r3, [r3, #0]
 80062c2:	330c      	adds	r3, #12
 80062c4:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80062c8:	65ba      	str	r2, [r7, #88]	@ 0x58
 80062ca:	657b      	str	r3, [r7, #84]	@ 0x54
 80062cc:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80062ce:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80062d0:	e841 2300 	strex	r3, r2, [r1]
 80062d4:	653b      	str	r3, [r7, #80]	@ 0x50
 80062d6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d1e3      	bne.n	80062a4 <HAL_UART_IRQHandler+0x380>
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80062e0:	4618      	mov	r0, r3
 80062e2:	f7fd fa83 	bl	80037ec <HAL_DMA_Abort>
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	2202      	movs	r2, #2
 80062ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80062f4:	b29b      	uxth	r3, r3
 80062f6:	1ad3      	subs	r3, r2, r3
 80062f8:	b29b      	uxth	r3, r3
 80062fa:	4619      	mov	r1, r3
 80062fc:	6878      	ldr	r0, [r7, #4]
 80062fe:	f7fa f8f7 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006302:	e09b      	b.n	800643c <HAL_UART_IRQHandler+0x518>
 8006304:	080068df 	.word	0x080068df
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006310:	b29b      	uxth	r3, r3
 8006312:	1ad3      	subs	r3, r2, r3
 8006314:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800631c:	b29b      	uxth	r3, r3
 800631e:	2b00      	cmp	r3, #0
 8006320:	f000 808e 	beq.w	8006440 <HAL_UART_IRQHandler+0x51c>
 8006324:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006328:	2b00      	cmp	r3, #0
 800632a:	f000 8089 	beq.w	8006440 <HAL_UART_IRQHandler+0x51c>
 800632e:	687b      	ldr	r3, [r7, #4]
 8006330:	681b      	ldr	r3, [r3, #0]
 8006332:	330c      	adds	r3, #12
 8006334:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006336:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006338:	e853 3f00 	ldrex	r3, [r3]
 800633c:	637b      	str	r3, [r7, #52]	@ 0x34
 800633e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006340:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006344:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	681b      	ldr	r3, [r3, #0]
 800634c:	330c      	adds	r3, #12
 800634e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8006352:	647a      	str	r2, [r7, #68]	@ 0x44
 8006354:	643b      	str	r3, [r7, #64]	@ 0x40
 8006356:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006358:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800635a:	e841 2300 	strex	r3, r2, [r1]
 800635e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006360:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006362:	2b00      	cmp	r3, #0
 8006364:	d1e3      	bne.n	800632e <HAL_UART_IRQHandler+0x40a>
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	681b      	ldr	r3, [r3, #0]
 800636a:	3314      	adds	r3, #20
 800636c:	627b      	str	r3, [r7, #36]	@ 0x24
 800636e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006370:	e853 3f00 	ldrex	r3, [r3]
 8006374:	623b      	str	r3, [r7, #32]
 8006376:	6a3b      	ldr	r3, [r7, #32]
 8006378:	f023 0301 	bic.w	r3, r3, #1
 800637c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	3314      	adds	r3, #20
 8006386:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800638a:	633a      	str	r2, [r7, #48]	@ 0x30
 800638c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800638e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006390:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006392:	e841 2300 	strex	r3, r2, [r1]
 8006396:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006398:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800639a:	2b00      	cmp	r3, #0
 800639c:	d1e3      	bne.n	8006366 <HAL_UART_IRQHandler+0x442>
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	2220      	movs	r2, #32
 80063a2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	2200      	movs	r2, #0
 80063aa:	631a      	str	r2, [r3, #48]	@ 0x30
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	330c      	adds	r3, #12
 80063b2:	613b      	str	r3, [r7, #16]
 80063b4:	693b      	ldr	r3, [r7, #16]
 80063b6:	e853 3f00 	ldrex	r3, [r3]
 80063ba:	60fb      	str	r3, [r7, #12]
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	f023 0310 	bic.w	r3, r3, #16
 80063c2:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	330c      	adds	r3, #12
 80063cc:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80063d0:	61fa      	str	r2, [r7, #28]
 80063d2:	61bb      	str	r3, [r7, #24]
 80063d4:	69b9      	ldr	r1, [r7, #24]
 80063d6:	69fa      	ldr	r2, [r7, #28]
 80063d8:	e841 2300 	strex	r3, r2, [r1]
 80063dc:	617b      	str	r3, [r7, #20]
 80063de:	697b      	ldr	r3, [r7, #20]
 80063e0:	2b00      	cmp	r3, #0
 80063e2:	d1e3      	bne.n	80063ac <HAL_UART_IRQHandler+0x488>
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	2202      	movs	r2, #2
 80063e8:	635a      	str	r2, [r3, #52]	@ 0x34
 80063ea:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80063ee:	4619      	mov	r1, r3
 80063f0:	6878      	ldr	r0, [r7, #4]
 80063f2:	f7fa f87d 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 80063f6:	e023      	b.n	8006440 <HAL_UART_IRQHandler+0x51c>
 80063f8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80063fc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006400:	2b00      	cmp	r3, #0
 8006402:	d009      	beq.n	8006418 <HAL_UART_IRQHandler+0x4f4>
 8006404:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006408:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800640c:	2b00      	cmp	r3, #0
 800640e:	d003      	beq.n	8006418 <HAL_UART_IRQHandler+0x4f4>
 8006410:	6878      	ldr	r0, [r7, #4]
 8006412:	f000 fa78 	bl	8006906 <UART_Transmit_IT>
 8006416:	e014      	b.n	8006442 <HAL_UART_IRQHandler+0x51e>
 8006418:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800641c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006420:	2b00      	cmp	r3, #0
 8006422:	d00e      	beq.n	8006442 <HAL_UART_IRQHandler+0x51e>
 8006424:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006428:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800642c:	2b00      	cmp	r3, #0
 800642e:	d008      	beq.n	8006442 <HAL_UART_IRQHandler+0x51e>
 8006430:	6878      	ldr	r0, [r7, #4]
 8006432:	f000 fab8 	bl	80069a6 <UART_EndTransmit_IT>
 8006436:	e004      	b.n	8006442 <HAL_UART_IRQHandler+0x51e>
 8006438:	bf00      	nop
 800643a:	e002      	b.n	8006442 <HAL_UART_IRQHandler+0x51e>
 800643c:	bf00      	nop
 800643e:	e000      	b.n	8006442 <HAL_UART_IRQHandler+0x51e>
 8006440:	bf00      	nop
 8006442:	37e8      	adds	r7, #232	@ 0xe8
 8006444:	46bd      	mov	sp, r7
 8006446:	bd80      	pop	{r7, pc}

08006448 <HAL_UART_TxCpltCallback>:
 8006448:	b480      	push	{r7}
 800644a:	b083      	sub	sp, #12
 800644c:	af00      	add	r7, sp, #0
 800644e:	6078      	str	r0, [r7, #4]
 8006450:	bf00      	nop
 8006452:	370c      	adds	r7, #12
 8006454:	46bd      	mov	sp, r7
 8006456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800645a:	4770      	bx	lr

0800645c <HAL_UART_RxCpltCallback>:
 800645c:	b480      	push	{r7}
 800645e:	b083      	sub	sp, #12
 8006460:	af00      	add	r7, sp, #0
 8006462:	6078      	str	r0, [r7, #4]
 8006464:	bf00      	nop
 8006466:	370c      	adds	r7, #12
 8006468:	46bd      	mov	sp, r7
 800646a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800646e:	4770      	bx	lr

08006470 <HAL_UART_RxHalfCpltCallback>:
 8006470:	b480      	push	{r7}
 8006472:	b083      	sub	sp, #12
 8006474:	af00      	add	r7, sp, #0
 8006476:	6078      	str	r0, [r7, #4]
 8006478:	bf00      	nop
 800647a:	370c      	adds	r7, #12
 800647c:	46bd      	mov	sp, r7
 800647e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006482:	4770      	bx	lr

08006484 <HAL_UART_ErrorCallback>:
 8006484:	b480      	push	{r7}
 8006486:	b083      	sub	sp, #12
 8006488:	af00      	add	r7, sp, #0
 800648a:	6078      	str	r0, [r7, #4]
 800648c:	bf00      	nop
 800648e:	370c      	adds	r7, #12
 8006490:	46bd      	mov	sp, r7
 8006492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006496:	4770      	bx	lr

08006498 <UART_DMAReceiveCplt>:
 8006498:	b580      	push	{r7, lr}
 800649a:	b09c      	sub	sp, #112	@ 0x70
 800649c:	af00      	add	r7, sp, #0
 800649e:	6078      	str	r0, [r7, #4]
 80064a0:	687b      	ldr	r3, [r7, #4]
 80064a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064a4:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80064b0:	2b00      	cmp	r3, #0
 80064b2:	d172      	bne.n	800659a <UART_DMAReceiveCplt+0x102>
 80064b4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80064b6:	2200      	movs	r2, #0
 80064b8:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80064ba:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	330c      	adds	r3, #12
 80064c0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80064c2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80064c4:	e853 3f00 	ldrex	r3, [r3]
 80064c8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80064ca:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80064cc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80064d0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80064d2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	330c      	adds	r3, #12
 80064d8:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 80064da:	65ba      	str	r2, [r7, #88]	@ 0x58
 80064dc:	657b      	str	r3, [r7, #84]	@ 0x54
 80064de:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80064e0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80064e2:	e841 2300 	strex	r3, r2, [r1]
 80064e6:	653b      	str	r3, [r7, #80]	@ 0x50
 80064e8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	d1e5      	bne.n	80064ba <UART_DMAReceiveCplt+0x22>
 80064ee:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80064f0:	681b      	ldr	r3, [r3, #0]
 80064f2:	3314      	adds	r3, #20
 80064f4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80064f6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80064f8:	e853 3f00 	ldrex	r3, [r3]
 80064fc:	637b      	str	r3, [r7, #52]	@ 0x34
 80064fe:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006500:	f023 0301 	bic.w	r3, r3, #1
 8006504:	667b      	str	r3, [r7, #100]	@ 0x64
 8006506:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	3314      	adds	r3, #20
 800650c:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800650e:	647a      	str	r2, [r7, #68]	@ 0x44
 8006510:	643b      	str	r3, [r7, #64]	@ 0x40
 8006512:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006514:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006516:	e841 2300 	strex	r3, r2, [r1]
 800651a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800651c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800651e:	2b00      	cmp	r3, #0
 8006520:	d1e5      	bne.n	80064ee <UART_DMAReceiveCplt+0x56>
 8006522:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	3314      	adds	r3, #20
 8006528:	627b      	str	r3, [r7, #36]	@ 0x24
 800652a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800652c:	e853 3f00 	ldrex	r3, [r3]
 8006530:	623b      	str	r3, [r7, #32]
 8006532:	6a3b      	ldr	r3, [r7, #32]
 8006534:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006538:	663b      	str	r3, [r7, #96]	@ 0x60
 800653a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800653c:	681b      	ldr	r3, [r3, #0]
 800653e:	3314      	adds	r3, #20
 8006540:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8006542:	633a      	str	r2, [r7, #48]	@ 0x30
 8006544:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006546:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006548:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800654a:	e841 2300 	strex	r3, r2, [r1]
 800654e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006550:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006552:	2b00      	cmp	r3, #0
 8006554:	d1e5      	bne.n	8006522 <UART_DMAReceiveCplt+0x8a>
 8006556:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006558:	2220      	movs	r2, #32
 800655a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800655e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006562:	2b01      	cmp	r3, #1
 8006564:	d119      	bne.n	800659a <UART_DMAReceiveCplt+0x102>
 8006566:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006568:	681b      	ldr	r3, [r3, #0]
 800656a:	330c      	adds	r3, #12
 800656c:	613b      	str	r3, [r7, #16]
 800656e:	693b      	ldr	r3, [r7, #16]
 8006570:	e853 3f00 	ldrex	r3, [r3]
 8006574:	60fb      	str	r3, [r7, #12]
 8006576:	68fb      	ldr	r3, [r7, #12]
 8006578:	f023 0310 	bic.w	r3, r3, #16
 800657c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800657e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	330c      	adds	r3, #12
 8006584:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8006586:	61fa      	str	r2, [r7, #28]
 8006588:	61bb      	str	r3, [r7, #24]
 800658a:	69b9      	ldr	r1, [r7, #24]
 800658c:	69fa      	ldr	r2, [r7, #28]
 800658e:	e841 2300 	strex	r3, r2, [r1]
 8006592:	617b      	str	r3, [r7, #20]
 8006594:	697b      	ldr	r3, [r7, #20]
 8006596:	2b00      	cmp	r3, #0
 8006598:	d1e5      	bne.n	8006566 <UART_DMAReceiveCplt+0xce>
 800659a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800659c:	2200      	movs	r2, #0
 800659e:	635a      	str	r2, [r3, #52]	@ 0x34
 80065a0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80065a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80065a4:	2b01      	cmp	r3, #1
 80065a6:	d106      	bne.n	80065b6 <UART_DMAReceiveCplt+0x11e>
 80065a8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80065aa:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80065ac:	4619      	mov	r1, r3
 80065ae:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80065b0:	f7f9 ff9e 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 80065b4:	e002      	b.n	80065bc <UART_DMAReceiveCplt+0x124>
 80065b6:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80065b8:	f7ff ff50 	bl	800645c <HAL_UART_RxCpltCallback>
 80065bc:	bf00      	nop
 80065be:	3770      	adds	r7, #112	@ 0x70
 80065c0:	46bd      	mov	sp, r7
 80065c2:	bd80      	pop	{r7, pc}

080065c4 <UART_DMARxHalfCplt>:
 80065c4:	b580      	push	{r7, lr}
 80065c6:	b084      	sub	sp, #16
 80065c8:	af00      	add	r7, sp, #0
 80065ca:	6078      	str	r0, [r7, #4]
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80065d0:	60fb      	str	r3, [r7, #12]
 80065d2:	68fb      	ldr	r3, [r7, #12]
 80065d4:	2201      	movs	r2, #1
 80065d6:	635a      	str	r2, [r3, #52]	@ 0x34
 80065d8:	68fb      	ldr	r3, [r7, #12]
 80065da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80065dc:	2b01      	cmp	r3, #1
 80065de:	d108      	bne.n	80065f2 <UART_DMARxHalfCplt+0x2e>
 80065e0:	68fb      	ldr	r3, [r7, #12]
 80065e2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80065e4:	085b      	lsrs	r3, r3, #1
 80065e6:	b29b      	uxth	r3, r3
 80065e8:	4619      	mov	r1, r3
 80065ea:	68f8      	ldr	r0, [r7, #12]
 80065ec:	f7f9 ff80 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 80065f0:	e002      	b.n	80065f8 <UART_DMARxHalfCplt+0x34>
 80065f2:	68f8      	ldr	r0, [r7, #12]
 80065f4:	f7ff ff3c 	bl	8006470 <HAL_UART_RxHalfCpltCallback>
 80065f8:	bf00      	nop
 80065fa:	3710      	adds	r7, #16
 80065fc:	46bd      	mov	sp, r7
 80065fe:	bd80      	pop	{r7, pc}

08006600 <UART_DMAError>:
 8006600:	b580      	push	{r7, lr}
 8006602:	b084      	sub	sp, #16
 8006604:	af00      	add	r7, sp, #0
 8006606:	6078      	str	r0, [r7, #4]
 8006608:	2300      	movs	r3, #0
 800660a:	60fb      	str	r3, [r7, #12]
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006610:	60bb      	str	r3, [r7, #8]
 8006612:	68bb      	ldr	r3, [r7, #8]
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	695b      	ldr	r3, [r3, #20]
 8006618:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800661c:	2b80      	cmp	r3, #128	@ 0x80
 800661e:	bf0c      	ite	eq
 8006620:	2301      	moveq	r3, #1
 8006622:	2300      	movne	r3, #0
 8006624:	b2db      	uxtb	r3, r3
 8006626:	60fb      	str	r3, [r7, #12]
 8006628:	68bb      	ldr	r3, [r7, #8]
 800662a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800662e:	b2db      	uxtb	r3, r3
 8006630:	2b21      	cmp	r3, #33	@ 0x21
 8006632:	d108      	bne.n	8006646 <UART_DMAError+0x46>
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	2b00      	cmp	r3, #0
 8006638:	d005      	beq.n	8006646 <UART_DMAError+0x46>
 800663a:	68bb      	ldr	r3, [r7, #8]
 800663c:	2200      	movs	r2, #0
 800663e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006640:	68b8      	ldr	r0, [r7, #8]
 8006642:	f000 f8c1 	bl	80067c8 <UART_EndTxTransfer>
 8006646:	68bb      	ldr	r3, [r7, #8]
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	695b      	ldr	r3, [r3, #20]
 800664c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006650:	2b40      	cmp	r3, #64	@ 0x40
 8006652:	bf0c      	ite	eq
 8006654:	2301      	moveq	r3, #1
 8006656:	2300      	movne	r3, #0
 8006658:	b2db      	uxtb	r3, r3
 800665a:	60fb      	str	r3, [r7, #12]
 800665c:	68bb      	ldr	r3, [r7, #8]
 800665e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006662:	b2db      	uxtb	r3, r3
 8006664:	2b22      	cmp	r3, #34	@ 0x22
 8006666:	d108      	bne.n	800667a <UART_DMAError+0x7a>
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	2b00      	cmp	r3, #0
 800666c:	d005      	beq.n	800667a <UART_DMAError+0x7a>
 800666e:	68bb      	ldr	r3, [r7, #8]
 8006670:	2200      	movs	r2, #0
 8006672:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006674:	68b8      	ldr	r0, [r7, #8]
 8006676:	f000 f8cf 	bl	8006818 <UART_EndRxTransfer>
 800667a:	68bb      	ldr	r3, [r7, #8]
 800667c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800667e:	f043 0210 	orr.w	r2, r3, #16
 8006682:	68bb      	ldr	r3, [r7, #8]
 8006684:	645a      	str	r2, [r3, #68]	@ 0x44
 8006686:	68b8      	ldr	r0, [r7, #8]
 8006688:	f7ff fefc 	bl	8006484 <HAL_UART_ErrorCallback>
 800668c:	bf00      	nop
 800668e:	3710      	adds	r7, #16
 8006690:	46bd      	mov	sp, r7
 8006692:	bd80      	pop	{r7, pc}

08006694 <UART_Start_Receive_DMA>:
 8006694:	b580      	push	{r7, lr}
 8006696:	b098      	sub	sp, #96	@ 0x60
 8006698:	af00      	add	r7, sp, #0
 800669a:	60f8      	str	r0, [r7, #12]
 800669c:	60b9      	str	r1, [r7, #8]
 800669e:	4613      	mov	r3, r2
 80066a0:	80fb      	strh	r3, [r7, #6]
 80066a2:	68ba      	ldr	r2, [r7, #8]
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	88fa      	ldrh	r2, [r7, #6]
 80066ac:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80066ae:	68fb      	ldr	r3, [r7, #12]
 80066b0:	2200      	movs	r2, #0
 80066b2:	645a      	str	r2, [r3, #68]	@ 0x44
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	2222      	movs	r2, #34	@ 0x22
 80066b8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80066bc:	68fb      	ldr	r3, [r7, #12]
 80066be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80066c0:	4a3e      	ldr	r2, [pc, #248]	@ (80067bc <UART_Start_Receive_DMA+0x128>)
 80066c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80066c8:	4a3d      	ldr	r2, [pc, #244]	@ (80067c0 <UART_Start_Receive_DMA+0x12c>)
 80066ca:	641a      	str	r2, [r3, #64]	@ 0x40
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80066d0:	4a3c      	ldr	r2, [pc, #240]	@ (80067c4 <UART_Start_Receive_DMA+0x130>)
 80066d2:	64da      	str	r2, [r3, #76]	@ 0x4c
 80066d4:	68fb      	ldr	r3, [r7, #12]
 80066d6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80066d8:	2200      	movs	r2, #0
 80066da:	651a      	str	r2, [r3, #80]	@ 0x50
 80066dc:	f107 0308 	add.w	r3, r7, #8
 80066e0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	3304      	adds	r3, #4
 80066ec:	4619      	mov	r1, r3
 80066ee:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80066f0:	681a      	ldr	r2, [r3, #0]
 80066f2:	88fb      	ldrh	r3, [r7, #6]
 80066f4:	f7fd f822 	bl	800373c <HAL_DMA_Start_IT>
 80066f8:	2300      	movs	r3, #0
 80066fa:	613b      	str	r3, [r7, #16]
 80066fc:	68fb      	ldr	r3, [r7, #12]
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	681b      	ldr	r3, [r3, #0]
 8006702:	613b      	str	r3, [r7, #16]
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	685b      	ldr	r3, [r3, #4]
 800670a:	613b      	str	r3, [r7, #16]
 800670c:	693b      	ldr	r3, [r7, #16]
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	691b      	ldr	r3, [r3, #16]
 8006712:	2b00      	cmp	r3, #0
 8006714:	d019      	beq.n	800674a <UART_Start_Receive_DMA+0xb6>
 8006716:	68fb      	ldr	r3, [r7, #12]
 8006718:	681b      	ldr	r3, [r3, #0]
 800671a:	330c      	adds	r3, #12
 800671c:	643b      	str	r3, [r7, #64]	@ 0x40
 800671e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006720:	e853 3f00 	ldrex	r3, [r3]
 8006724:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006726:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006728:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800672c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800672e:	68fb      	ldr	r3, [r7, #12]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	330c      	adds	r3, #12
 8006734:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006736:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8006738:	64bb      	str	r3, [r7, #72]	@ 0x48
 800673a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800673c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800673e:	e841 2300 	strex	r3, r2, [r1]
 8006742:	647b      	str	r3, [r7, #68]	@ 0x44
 8006744:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006746:	2b00      	cmp	r3, #0
 8006748:	d1e5      	bne.n	8006716 <UART_Start_Receive_DMA+0x82>
 800674a:	68fb      	ldr	r3, [r7, #12]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	3314      	adds	r3, #20
 8006750:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006752:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006754:	e853 3f00 	ldrex	r3, [r3]
 8006758:	62bb      	str	r3, [r7, #40]	@ 0x28
 800675a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800675c:	f043 0301 	orr.w	r3, r3, #1
 8006760:	657b      	str	r3, [r7, #84]	@ 0x54
 8006762:	68fb      	ldr	r3, [r7, #12]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	3314      	adds	r3, #20
 8006768:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800676a:	63ba      	str	r2, [r7, #56]	@ 0x38
 800676c:	637b      	str	r3, [r7, #52]	@ 0x34
 800676e:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8006770:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8006772:	e841 2300 	strex	r3, r2, [r1]
 8006776:	633b      	str	r3, [r7, #48]	@ 0x30
 8006778:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800677a:	2b00      	cmp	r3, #0
 800677c:	d1e5      	bne.n	800674a <UART_Start_Receive_DMA+0xb6>
 800677e:	68fb      	ldr	r3, [r7, #12]
 8006780:	681b      	ldr	r3, [r3, #0]
 8006782:	3314      	adds	r3, #20
 8006784:	61bb      	str	r3, [r7, #24]
 8006786:	69bb      	ldr	r3, [r7, #24]
 8006788:	e853 3f00 	ldrex	r3, [r3]
 800678c:	617b      	str	r3, [r7, #20]
 800678e:	697b      	ldr	r3, [r7, #20]
 8006790:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006794:	653b      	str	r3, [r7, #80]	@ 0x50
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	3314      	adds	r3, #20
 800679c:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800679e:	627a      	str	r2, [r7, #36]	@ 0x24
 80067a0:	623b      	str	r3, [r7, #32]
 80067a2:	6a39      	ldr	r1, [r7, #32]
 80067a4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80067a6:	e841 2300 	strex	r3, r2, [r1]
 80067aa:	61fb      	str	r3, [r7, #28]
 80067ac:	69fb      	ldr	r3, [r7, #28]
 80067ae:	2b00      	cmp	r3, #0
 80067b0:	d1e5      	bne.n	800677e <UART_Start_Receive_DMA+0xea>
 80067b2:	2300      	movs	r3, #0
 80067b4:	4618      	mov	r0, r3
 80067b6:	3760      	adds	r7, #96	@ 0x60
 80067b8:	46bd      	mov	sp, r7
 80067ba:	bd80      	pop	{r7, pc}
 80067bc:	08006499 	.word	0x08006499
 80067c0:	080065c5 	.word	0x080065c5
 80067c4:	08006601 	.word	0x08006601

080067c8 <UART_EndTxTransfer>:
 80067c8:	b480      	push	{r7}
 80067ca:	b089      	sub	sp, #36	@ 0x24
 80067cc:	af00      	add	r7, sp, #0
 80067ce:	6078      	str	r0, [r7, #4]
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	681b      	ldr	r3, [r3, #0]
 80067d4:	330c      	adds	r3, #12
 80067d6:	60fb      	str	r3, [r7, #12]
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	e853 3f00 	ldrex	r3, [r3]
 80067de:	60bb      	str	r3, [r7, #8]
 80067e0:	68bb      	ldr	r3, [r7, #8]
 80067e2:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 80067e6:	61fb      	str	r3, [r7, #28]
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	330c      	adds	r3, #12
 80067ee:	69fa      	ldr	r2, [r7, #28]
 80067f0:	61ba      	str	r2, [r7, #24]
 80067f2:	617b      	str	r3, [r7, #20]
 80067f4:	6979      	ldr	r1, [r7, #20]
 80067f6:	69ba      	ldr	r2, [r7, #24]
 80067f8:	e841 2300 	strex	r3, r2, [r1]
 80067fc:	613b      	str	r3, [r7, #16]
 80067fe:	693b      	ldr	r3, [r7, #16]
 8006800:	2b00      	cmp	r3, #0
 8006802:	d1e5      	bne.n	80067d0 <UART_EndTxTransfer+0x8>
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	2220      	movs	r2, #32
 8006808:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800680c:	bf00      	nop
 800680e:	3724      	adds	r7, #36	@ 0x24
 8006810:	46bd      	mov	sp, r7
 8006812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006816:	4770      	bx	lr

08006818 <UART_EndRxTransfer>:
 8006818:	b480      	push	{r7}
 800681a:	b095      	sub	sp, #84	@ 0x54
 800681c:	af00      	add	r7, sp, #0
 800681e:	6078      	str	r0, [r7, #4]
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	330c      	adds	r3, #12
 8006826:	637b      	str	r3, [r7, #52]	@ 0x34
 8006828:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800682a:	e853 3f00 	ldrex	r3, [r3]
 800682e:	633b      	str	r3, [r7, #48]	@ 0x30
 8006830:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006832:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006836:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	330c      	adds	r3, #12
 800683e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8006840:	643a      	str	r2, [r7, #64]	@ 0x40
 8006842:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006844:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8006846:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006848:	e841 2300 	strex	r3, r2, [r1]
 800684c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800684e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006850:	2b00      	cmp	r3, #0
 8006852:	d1e5      	bne.n	8006820 <UART_EndRxTransfer+0x8>
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	3314      	adds	r3, #20
 800685a:	623b      	str	r3, [r7, #32]
 800685c:	6a3b      	ldr	r3, [r7, #32]
 800685e:	e853 3f00 	ldrex	r3, [r3]
 8006862:	61fb      	str	r3, [r7, #28]
 8006864:	69fb      	ldr	r3, [r7, #28]
 8006866:	f023 0301 	bic.w	r3, r3, #1
 800686a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	3314      	adds	r3, #20
 8006872:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006874:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006876:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006878:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800687a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800687c:	e841 2300 	strex	r3, r2, [r1]
 8006880:	627b      	str	r3, [r7, #36]	@ 0x24
 8006882:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006884:	2b00      	cmp	r3, #0
 8006886:	d1e5      	bne.n	8006854 <UART_EndRxTransfer+0x3c>
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800688c:	2b01      	cmp	r3, #1
 800688e:	d119      	bne.n	80068c4 <UART_EndRxTransfer+0xac>
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	681b      	ldr	r3, [r3, #0]
 8006894:	330c      	adds	r3, #12
 8006896:	60fb      	str	r3, [r7, #12]
 8006898:	68fb      	ldr	r3, [r7, #12]
 800689a:	e853 3f00 	ldrex	r3, [r3]
 800689e:	60bb      	str	r3, [r7, #8]
 80068a0:	68bb      	ldr	r3, [r7, #8]
 80068a2:	f023 0310 	bic.w	r3, r3, #16
 80068a6:	647b      	str	r3, [r7, #68]	@ 0x44
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	681b      	ldr	r3, [r3, #0]
 80068ac:	330c      	adds	r3, #12
 80068ae:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80068b0:	61ba      	str	r2, [r7, #24]
 80068b2:	617b      	str	r3, [r7, #20]
 80068b4:	6979      	ldr	r1, [r7, #20]
 80068b6:	69ba      	ldr	r2, [r7, #24]
 80068b8:	e841 2300 	strex	r3, r2, [r1]
 80068bc:	613b      	str	r3, [r7, #16]
 80068be:	693b      	ldr	r3, [r7, #16]
 80068c0:	2b00      	cmp	r3, #0
 80068c2:	d1e5      	bne.n	8006890 <UART_EndRxTransfer+0x78>
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	2220      	movs	r2, #32
 80068c8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	2200      	movs	r2, #0
 80068d0:	631a      	str	r2, [r3, #48]	@ 0x30
 80068d2:	bf00      	nop
 80068d4:	3754      	adds	r7, #84	@ 0x54
 80068d6:	46bd      	mov	sp, r7
 80068d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068dc:	4770      	bx	lr

080068de <UART_DMAAbortOnError>:
 80068de:	b580      	push	{r7, lr}
 80068e0:	b084      	sub	sp, #16
 80068e2:	af00      	add	r7, sp, #0
 80068e4:	6078      	str	r0, [r7, #4]
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80068ea:	60fb      	str	r3, [r7, #12]
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	2200      	movs	r2, #0
 80068f0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80068f2:	68fb      	ldr	r3, [r7, #12]
 80068f4:	2200      	movs	r2, #0
 80068f6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80068f8:	68f8      	ldr	r0, [r7, #12]
 80068fa:	f7ff fdc3 	bl	8006484 <HAL_UART_ErrorCallback>
 80068fe:	bf00      	nop
 8006900:	3710      	adds	r7, #16
 8006902:	46bd      	mov	sp, r7
 8006904:	bd80      	pop	{r7, pc}

08006906 <UART_Transmit_IT>:
 8006906:	b480      	push	{r7}
 8006908:	b085      	sub	sp, #20
 800690a:	af00      	add	r7, sp, #0
 800690c:	6078      	str	r0, [r7, #4]
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006914:	b2db      	uxtb	r3, r3
 8006916:	2b21      	cmp	r3, #33	@ 0x21
 8006918:	d13e      	bne.n	8006998 <UART_Transmit_IT+0x92>
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	689b      	ldr	r3, [r3, #8]
 800691e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006922:	d114      	bne.n	800694e <UART_Transmit_IT+0x48>
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	691b      	ldr	r3, [r3, #16]
 8006928:	2b00      	cmp	r3, #0
 800692a:	d110      	bne.n	800694e <UART_Transmit_IT+0x48>
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	6a1b      	ldr	r3, [r3, #32]
 8006930:	60fb      	str	r3, [r7, #12]
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	881b      	ldrh	r3, [r3, #0]
 8006936:	461a      	mov	r2, r3
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	681b      	ldr	r3, [r3, #0]
 800693c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006940:	605a      	str	r2, [r3, #4]
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	6a1b      	ldr	r3, [r3, #32]
 8006946:	1c9a      	adds	r2, r3, #2
 8006948:	687b      	ldr	r3, [r7, #4]
 800694a:	621a      	str	r2, [r3, #32]
 800694c:	e008      	b.n	8006960 <UART_Transmit_IT+0x5a>
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	6a1b      	ldr	r3, [r3, #32]
 8006952:	1c59      	adds	r1, r3, #1
 8006954:	687a      	ldr	r2, [r7, #4]
 8006956:	6211      	str	r1, [r2, #32]
 8006958:	781a      	ldrb	r2, [r3, #0]
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	681b      	ldr	r3, [r3, #0]
 800695e:	605a      	str	r2, [r3, #4]
 8006960:	687b      	ldr	r3, [r7, #4]
 8006962:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006964:	b29b      	uxth	r3, r3
 8006966:	3b01      	subs	r3, #1
 8006968:	b29b      	uxth	r3, r3
 800696a:	687a      	ldr	r2, [r7, #4]
 800696c:	4619      	mov	r1, r3
 800696e:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8006970:	2b00      	cmp	r3, #0
 8006972:	d10f      	bne.n	8006994 <UART_Transmit_IT+0x8e>
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	68da      	ldr	r2, [r3, #12]
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8006982:	60da      	str	r2, [r3, #12]
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	681b      	ldr	r3, [r3, #0]
 8006988:	68da      	ldr	r2, [r3, #12]
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	681b      	ldr	r3, [r3, #0]
 800698e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006992:	60da      	str	r2, [r3, #12]
 8006994:	2300      	movs	r3, #0
 8006996:	e000      	b.n	800699a <UART_Transmit_IT+0x94>
 8006998:	2302      	movs	r3, #2
 800699a:	4618      	mov	r0, r3
 800699c:	3714      	adds	r7, #20
 800699e:	46bd      	mov	sp, r7
 80069a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069a4:	4770      	bx	lr

080069a6 <UART_EndTransmit_IT>:
 80069a6:	b580      	push	{r7, lr}
 80069a8:	b082      	sub	sp, #8
 80069aa:	af00      	add	r7, sp, #0
 80069ac:	6078      	str	r0, [r7, #4]
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	68da      	ldr	r2, [r3, #12]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80069bc:	60da      	str	r2, [r3, #12]
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	2220      	movs	r2, #32
 80069c2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80069c6:	6878      	ldr	r0, [r7, #4]
 80069c8:	f7ff fd3e 	bl	8006448 <HAL_UART_TxCpltCallback>
 80069cc:	2300      	movs	r3, #0
 80069ce:	4618      	mov	r0, r3
 80069d0:	3708      	adds	r7, #8
 80069d2:	46bd      	mov	sp, r7
 80069d4:	bd80      	pop	{r7, pc}

080069d6 <UART_Receive_IT>:
 80069d6:	b580      	push	{r7, lr}
 80069d8:	b08c      	sub	sp, #48	@ 0x30
 80069da:	af00      	add	r7, sp, #0
 80069dc:	6078      	str	r0, [r7, #4]
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80069e4:	b2db      	uxtb	r3, r3
 80069e6:	2b22      	cmp	r3, #34	@ 0x22
 80069e8:	f040 80ae 	bne.w	8006b48 <UART_Receive_IT+0x172>
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	689b      	ldr	r3, [r3, #8]
 80069f0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80069f4:	d117      	bne.n	8006a26 <UART_Receive_IT+0x50>
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	691b      	ldr	r3, [r3, #16]
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	d113      	bne.n	8006a26 <UART_Receive_IT+0x50>
 80069fe:	2300      	movs	r3, #0
 8006a00:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006a06:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	685b      	ldr	r3, [r3, #4]
 8006a0e:	b29b      	uxth	r3, r3
 8006a10:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006a14:	b29a      	uxth	r2, r3
 8006a16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006a18:	801a      	strh	r2, [r3, #0]
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006a1e:	1c9a      	adds	r2, r3, #2
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	629a      	str	r2, [r3, #40]	@ 0x28
 8006a24:	e026      	b.n	8006a74 <UART_Receive_IT+0x9e>
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006a2a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006a2c:	2300      	movs	r3, #0
 8006a2e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	689b      	ldr	r3, [r3, #8]
 8006a34:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006a38:	d007      	beq.n	8006a4a <UART_Receive_IT+0x74>
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	689b      	ldr	r3, [r3, #8]
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d10a      	bne.n	8006a58 <UART_Receive_IT+0x82>
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	691b      	ldr	r3, [r3, #16]
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	d106      	bne.n	8006a58 <UART_Receive_IT+0x82>
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	685b      	ldr	r3, [r3, #4]
 8006a50:	b2da      	uxtb	r2, r3
 8006a52:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006a54:	701a      	strb	r2, [r3, #0]
 8006a56:	e008      	b.n	8006a6a <UART_Receive_IT+0x94>
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	685b      	ldr	r3, [r3, #4]
 8006a5e:	b2db      	uxtb	r3, r3
 8006a60:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006a64:	b2da      	uxtb	r2, r3
 8006a66:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006a68:	701a      	strb	r2, [r3, #0]
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006a6e:	1c5a      	adds	r2, r3, #1
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	629a      	str	r2, [r3, #40]	@ 0x28
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006a78:	b29b      	uxth	r3, r3
 8006a7a:	3b01      	subs	r3, #1
 8006a7c:	b29b      	uxth	r3, r3
 8006a7e:	687a      	ldr	r2, [r7, #4]
 8006a80:	4619      	mov	r1, r3
 8006a82:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8006a84:	2b00      	cmp	r3, #0
 8006a86:	d15d      	bne.n	8006b44 <UART_Receive_IT+0x16e>
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	68da      	ldr	r2, [r3, #12]
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	681b      	ldr	r3, [r3, #0]
 8006a92:	f022 0220 	bic.w	r2, r2, #32
 8006a96:	60da      	str	r2, [r3, #12]
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	681b      	ldr	r3, [r3, #0]
 8006a9c:	68da      	ldr	r2, [r3, #12]
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8006aa6:	60da      	str	r2, [r3, #12]
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	695a      	ldr	r2, [r3, #20]
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	681b      	ldr	r3, [r3, #0]
 8006ab2:	f022 0201 	bic.w	r2, r2, #1
 8006ab6:	615a      	str	r2, [r3, #20]
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	2220      	movs	r2, #32
 8006abc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	2200      	movs	r2, #0
 8006ac4:	635a      	str	r2, [r3, #52]	@ 0x34
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006aca:	2b01      	cmp	r3, #1
 8006acc:	d135      	bne.n	8006b3a <UART_Receive_IT+0x164>
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	2200      	movs	r2, #0
 8006ad2:	631a      	str	r2, [r3, #48]	@ 0x30
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	681b      	ldr	r3, [r3, #0]
 8006ad8:	330c      	adds	r3, #12
 8006ada:	617b      	str	r3, [r7, #20]
 8006adc:	697b      	ldr	r3, [r7, #20]
 8006ade:	e853 3f00 	ldrex	r3, [r3]
 8006ae2:	613b      	str	r3, [r7, #16]
 8006ae4:	693b      	ldr	r3, [r7, #16]
 8006ae6:	f023 0310 	bic.w	r3, r3, #16
 8006aea:	627b      	str	r3, [r7, #36]	@ 0x24
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	681b      	ldr	r3, [r3, #0]
 8006af0:	330c      	adds	r3, #12
 8006af2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006af4:	623a      	str	r2, [r7, #32]
 8006af6:	61fb      	str	r3, [r7, #28]
 8006af8:	69f9      	ldr	r1, [r7, #28]
 8006afa:	6a3a      	ldr	r2, [r7, #32]
 8006afc:	e841 2300 	strex	r3, r2, [r1]
 8006b00:	61bb      	str	r3, [r7, #24]
 8006b02:	69bb      	ldr	r3, [r7, #24]
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d1e5      	bne.n	8006ad4 <UART_Receive_IT+0xfe>
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	681b      	ldr	r3, [r3, #0]
 8006b0e:	f003 0310 	and.w	r3, r3, #16
 8006b12:	2b10      	cmp	r3, #16
 8006b14:	d10a      	bne.n	8006b2c <UART_Receive_IT+0x156>
 8006b16:	2300      	movs	r3, #0
 8006b18:	60fb      	str	r3, [r7, #12]
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	681b      	ldr	r3, [r3, #0]
 8006b1e:	681b      	ldr	r3, [r3, #0]
 8006b20:	60fb      	str	r3, [r7, #12]
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	681b      	ldr	r3, [r3, #0]
 8006b26:	685b      	ldr	r3, [r3, #4]
 8006b28:	60fb      	str	r3, [r7, #12]
 8006b2a:	68fb      	ldr	r3, [r7, #12]
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006b30:	4619      	mov	r1, r3
 8006b32:	6878      	ldr	r0, [r7, #4]
 8006b34:	f7f9 fcdc 	bl	80004f0 <HAL_UARTEx_RxEventCallback>
 8006b38:	e002      	b.n	8006b40 <UART_Receive_IT+0x16a>
 8006b3a:	6878      	ldr	r0, [r7, #4]
 8006b3c:	f7ff fc8e 	bl	800645c <HAL_UART_RxCpltCallback>
 8006b40:	2300      	movs	r3, #0
 8006b42:	e002      	b.n	8006b4a <UART_Receive_IT+0x174>
 8006b44:	2300      	movs	r3, #0
 8006b46:	e000      	b.n	8006b4a <UART_Receive_IT+0x174>
 8006b48:	2302      	movs	r3, #2
 8006b4a:	4618      	mov	r0, r3
 8006b4c:	3730      	adds	r7, #48	@ 0x30
 8006b4e:	46bd      	mov	sp, r7
 8006b50:	bd80      	pop	{r7, pc}
	...

08006b54 <UART_SetConfig>:
 8006b54:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006b58:	b0c0      	sub	sp, #256	@ 0x100
 8006b5a:	af00      	add	r7, sp, #0
 8006b5c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8006b60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b64:	681b      	ldr	r3, [r3, #0]
 8006b66:	691b      	ldr	r3, [r3, #16]
 8006b68:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8006b6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b70:	68d9      	ldr	r1, [r3, #12]
 8006b72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b76:	681a      	ldr	r2, [r3, #0]
 8006b78:	ea40 0301 	orr.w	r3, r0, r1
 8006b7c:	6113      	str	r3, [r2, #16]
 8006b7e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b82:	689a      	ldr	r2, [r3, #8]
 8006b84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b88:	691b      	ldr	r3, [r3, #16]
 8006b8a:	431a      	orrs	r2, r3
 8006b8c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b90:	695b      	ldr	r3, [r3, #20]
 8006b92:	431a      	orrs	r2, r3
 8006b94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b98:	69db      	ldr	r3, [r3, #28]
 8006b9a:	4313      	orrs	r3, r2
 8006b9c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8006ba0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	68db      	ldr	r3, [r3, #12]
 8006ba8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8006bac:	f021 010c 	bic.w	r1, r1, #12
 8006bb0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006bb4:	681a      	ldr	r2, [r3, #0]
 8006bb6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8006bba:	430b      	orrs	r3, r1
 8006bbc:	60d3      	str	r3, [r2, #12]
 8006bbe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	695b      	ldr	r3, [r3, #20]
 8006bc6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8006bca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006bce:	6999      	ldr	r1, [r3, #24]
 8006bd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006bd4:	681a      	ldr	r2, [r3, #0]
 8006bd6:	ea40 0301 	orr.w	r3, r0, r1
 8006bda:	6153      	str	r3, [r2, #20]
 8006bdc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006be0:	681a      	ldr	r2, [r3, #0]
 8006be2:	4b8f      	ldr	r3, [pc, #572]	@ (8006e20 <UART_SetConfig+0x2cc>)
 8006be4:	429a      	cmp	r2, r3
 8006be6:	d005      	beq.n	8006bf4 <UART_SetConfig+0xa0>
 8006be8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006bec:	681a      	ldr	r2, [r3, #0]
 8006bee:	4b8d      	ldr	r3, [pc, #564]	@ (8006e24 <UART_SetConfig+0x2d0>)
 8006bf0:	429a      	cmp	r2, r3
 8006bf2:	d104      	bne.n	8006bfe <UART_SetConfig+0xaa>
 8006bf4:	f7fe f87c 	bl	8004cf0 <HAL_RCC_GetPCLK2Freq>
 8006bf8:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006bfc:	e003      	b.n	8006c06 <UART_SetConfig+0xb2>
 8006bfe:	f7fe f863 	bl	8004cc8 <HAL_RCC_GetPCLK1Freq>
 8006c02:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006c06:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006c0a:	69db      	ldr	r3, [r3, #28]
 8006c0c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006c10:	f040 810c 	bne.w	8006e2c <UART_SetConfig+0x2d8>
 8006c14:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006c18:	2200      	movs	r2, #0
 8006c1a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8006c1e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8006c22:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8006c26:	4622      	mov	r2, r4
 8006c28:	462b      	mov	r3, r5
 8006c2a:	1891      	adds	r1, r2, r2
 8006c2c:	65b9      	str	r1, [r7, #88]	@ 0x58
 8006c2e:	415b      	adcs	r3, r3
 8006c30:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006c32:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8006c36:	4621      	mov	r1, r4
 8006c38:	eb12 0801 	adds.w	r8, r2, r1
 8006c3c:	4629      	mov	r1, r5
 8006c3e:	eb43 0901 	adc.w	r9, r3, r1
 8006c42:	f04f 0200 	mov.w	r2, #0
 8006c46:	f04f 0300 	mov.w	r3, #0
 8006c4a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006c4e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006c52:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006c56:	4690      	mov	r8, r2
 8006c58:	4699      	mov	r9, r3
 8006c5a:	4623      	mov	r3, r4
 8006c5c:	eb18 0303 	adds.w	r3, r8, r3
 8006c60:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006c64:	462b      	mov	r3, r5
 8006c66:	eb49 0303 	adc.w	r3, r9, r3
 8006c6a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006c6e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006c72:	685b      	ldr	r3, [r3, #4]
 8006c74:	2200      	movs	r2, #0
 8006c76:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006c7a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8006c7e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8006c82:	460b      	mov	r3, r1
 8006c84:	18db      	adds	r3, r3, r3
 8006c86:	653b      	str	r3, [r7, #80]	@ 0x50
 8006c88:	4613      	mov	r3, r2
 8006c8a:	eb42 0303 	adc.w	r3, r2, r3
 8006c8e:	657b      	str	r3, [r7, #84]	@ 0x54
 8006c90:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8006c94:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8006c98:	f7f9 fa9a 	bl	80001d0 <__aeabi_uldivmod>
 8006c9c:	4602      	mov	r2, r0
 8006c9e:	460b      	mov	r3, r1
 8006ca0:	4b61      	ldr	r3, [pc, #388]	@ (8006e28 <UART_SetConfig+0x2d4>)
 8006ca2:	fba3 2302 	umull	r2, r3, r3, r2
 8006ca6:	095b      	lsrs	r3, r3, #5
 8006ca8:	011c      	lsls	r4, r3, #4
 8006caa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006cae:	2200      	movs	r2, #0
 8006cb0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006cb4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8006cb8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8006cbc:	4642      	mov	r2, r8
 8006cbe:	464b      	mov	r3, r9
 8006cc0:	1891      	adds	r1, r2, r2
 8006cc2:	64b9      	str	r1, [r7, #72]	@ 0x48
 8006cc4:	415b      	adcs	r3, r3
 8006cc6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006cc8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006ccc:	4641      	mov	r1, r8
 8006cce:	eb12 0a01 	adds.w	sl, r2, r1
 8006cd2:	4649      	mov	r1, r9
 8006cd4:	eb43 0b01 	adc.w	fp, r3, r1
 8006cd8:	f04f 0200 	mov.w	r2, #0
 8006cdc:	f04f 0300 	mov.w	r3, #0
 8006ce0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006ce4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006ce8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006cec:	4692      	mov	sl, r2
 8006cee:	469b      	mov	fp, r3
 8006cf0:	4643      	mov	r3, r8
 8006cf2:	eb1a 0303 	adds.w	r3, sl, r3
 8006cf6:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006cfa:	464b      	mov	r3, r9
 8006cfc:	eb4b 0303 	adc.w	r3, fp, r3
 8006d00:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006d04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d08:	685b      	ldr	r3, [r3, #4]
 8006d0a:	2200      	movs	r2, #0
 8006d0c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006d10:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8006d14:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8006d18:	460b      	mov	r3, r1
 8006d1a:	18db      	adds	r3, r3, r3
 8006d1c:	643b      	str	r3, [r7, #64]	@ 0x40
 8006d1e:	4613      	mov	r3, r2
 8006d20:	eb42 0303 	adc.w	r3, r2, r3
 8006d24:	647b      	str	r3, [r7, #68]	@ 0x44
 8006d26:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006d2a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8006d2e:	f7f9 fa4f 	bl	80001d0 <__aeabi_uldivmod>
 8006d32:	4602      	mov	r2, r0
 8006d34:	460b      	mov	r3, r1
 8006d36:	4611      	mov	r1, r2
 8006d38:	4b3b      	ldr	r3, [pc, #236]	@ (8006e28 <UART_SetConfig+0x2d4>)
 8006d3a:	fba3 2301 	umull	r2, r3, r3, r1
 8006d3e:	095b      	lsrs	r3, r3, #5
 8006d40:	2264      	movs	r2, #100	@ 0x64
 8006d42:	fb02 f303 	mul.w	r3, r2, r3
 8006d46:	1acb      	subs	r3, r1, r3
 8006d48:	00db      	lsls	r3, r3, #3
 8006d4a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8006d4e:	4b36      	ldr	r3, [pc, #216]	@ (8006e28 <UART_SetConfig+0x2d4>)
 8006d50:	fba3 2302 	umull	r2, r3, r3, r2
 8006d54:	095b      	lsrs	r3, r3, #5
 8006d56:	005b      	lsls	r3, r3, #1
 8006d58:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006d5c:	441c      	add	r4, r3
 8006d5e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006d62:	2200      	movs	r2, #0
 8006d64:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006d68:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8006d6c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8006d70:	4642      	mov	r2, r8
 8006d72:	464b      	mov	r3, r9
 8006d74:	1891      	adds	r1, r2, r2
 8006d76:	63b9      	str	r1, [r7, #56]	@ 0x38
 8006d78:	415b      	adcs	r3, r3
 8006d7a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006d7c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006d80:	4641      	mov	r1, r8
 8006d82:	1851      	adds	r1, r2, r1
 8006d84:	6339      	str	r1, [r7, #48]	@ 0x30
 8006d86:	4649      	mov	r1, r9
 8006d88:	414b      	adcs	r3, r1
 8006d8a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006d8c:	f04f 0200 	mov.w	r2, #0
 8006d90:	f04f 0300 	mov.w	r3, #0
 8006d94:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8006d98:	4659      	mov	r1, fp
 8006d9a:	00cb      	lsls	r3, r1, #3
 8006d9c:	4651      	mov	r1, sl
 8006d9e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006da2:	4651      	mov	r1, sl
 8006da4:	00ca      	lsls	r2, r1, #3
 8006da6:	4610      	mov	r0, r2
 8006da8:	4619      	mov	r1, r3
 8006daa:	4603      	mov	r3, r0
 8006dac:	4642      	mov	r2, r8
 8006dae:	189b      	adds	r3, r3, r2
 8006db0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006db4:	464b      	mov	r3, r9
 8006db6:	460a      	mov	r2, r1
 8006db8:	eb42 0303 	adc.w	r3, r2, r3
 8006dbc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006dc0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006dc4:	685b      	ldr	r3, [r3, #4]
 8006dc6:	2200      	movs	r2, #0
 8006dc8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8006dcc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006dd0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006dd4:	460b      	mov	r3, r1
 8006dd6:	18db      	adds	r3, r3, r3
 8006dd8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006dda:	4613      	mov	r3, r2
 8006ddc:	eb42 0303 	adc.w	r3, r2, r3
 8006de0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006de2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006de6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8006dea:	f7f9 f9f1 	bl	80001d0 <__aeabi_uldivmod>
 8006dee:	4602      	mov	r2, r0
 8006df0:	460b      	mov	r3, r1
 8006df2:	4b0d      	ldr	r3, [pc, #52]	@ (8006e28 <UART_SetConfig+0x2d4>)
 8006df4:	fba3 1302 	umull	r1, r3, r3, r2
 8006df8:	095b      	lsrs	r3, r3, #5
 8006dfa:	2164      	movs	r1, #100	@ 0x64
 8006dfc:	fb01 f303 	mul.w	r3, r1, r3
 8006e00:	1ad3      	subs	r3, r2, r3
 8006e02:	00db      	lsls	r3, r3, #3
 8006e04:	3332      	adds	r3, #50	@ 0x32
 8006e06:	4a08      	ldr	r2, [pc, #32]	@ (8006e28 <UART_SetConfig+0x2d4>)
 8006e08:	fba2 2303 	umull	r2, r3, r2, r3
 8006e0c:	095b      	lsrs	r3, r3, #5
 8006e0e:	f003 0207 	and.w	r2, r3, #7
 8006e12:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006e16:	681b      	ldr	r3, [r3, #0]
 8006e18:	4422      	add	r2, r4
 8006e1a:	609a      	str	r2, [r3, #8]
 8006e1c:	e106      	b.n	800702c <UART_SetConfig+0x4d8>
 8006e1e:	bf00      	nop
 8006e20:	40011000 	.word	0x40011000
 8006e24:	40011400 	.word	0x40011400
 8006e28:	51eb851f 	.word	0x51eb851f
 8006e2c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006e30:	2200      	movs	r2, #0
 8006e32:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006e36:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8006e3a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8006e3e:	4642      	mov	r2, r8
 8006e40:	464b      	mov	r3, r9
 8006e42:	1891      	adds	r1, r2, r2
 8006e44:	6239      	str	r1, [r7, #32]
 8006e46:	415b      	adcs	r3, r3
 8006e48:	627b      	str	r3, [r7, #36]	@ 0x24
 8006e4a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006e4e:	4641      	mov	r1, r8
 8006e50:	1854      	adds	r4, r2, r1
 8006e52:	4649      	mov	r1, r9
 8006e54:	eb43 0501 	adc.w	r5, r3, r1
 8006e58:	f04f 0200 	mov.w	r2, #0
 8006e5c:	f04f 0300 	mov.w	r3, #0
 8006e60:	00eb      	lsls	r3, r5, #3
 8006e62:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006e66:	00e2      	lsls	r2, r4, #3
 8006e68:	4614      	mov	r4, r2
 8006e6a:	461d      	mov	r5, r3
 8006e6c:	4643      	mov	r3, r8
 8006e6e:	18e3      	adds	r3, r4, r3
 8006e70:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006e74:	464b      	mov	r3, r9
 8006e76:	eb45 0303 	adc.w	r3, r5, r3
 8006e7a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006e7e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006e82:	685b      	ldr	r3, [r3, #4]
 8006e84:	2200      	movs	r2, #0
 8006e86:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006e8a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006e8e:	f04f 0200 	mov.w	r2, #0
 8006e92:	f04f 0300 	mov.w	r3, #0
 8006e96:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8006e9a:	4629      	mov	r1, r5
 8006e9c:	008b      	lsls	r3, r1, #2
 8006e9e:	4621      	mov	r1, r4
 8006ea0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006ea4:	4621      	mov	r1, r4
 8006ea6:	008a      	lsls	r2, r1, #2
 8006ea8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8006eac:	f7f9 f990 	bl	80001d0 <__aeabi_uldivmod>
 8006eb0:	4602      	mov	r2, r0
 8006eb2:	460b      	mov	r3, r1
 8006eb4:	4b60      	ldr	r3, [pc, #384]	@ (8007038 <UART_SetConfig+0x4e4>)
 8006eb6:	fba3 2302 	umull	r2, r3, r3, r2
 8006eba:	095b      	lsrs	r3, r3, #5
 8006ebc:	011c      	lsls	r4, r3, #4
 8006ebe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006ec2:	2200      	movs	r2, #0
 8006ec4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006ec8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8006ecc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006ed0:	4642      	mov	r2, r8
 8006ed2:	464b      	mov	r3, r9
 8006ed4:	1891      	adds	r1, r2, r2
 8006ed6:	61b9      	str	r1, [r7, #24]
 8006ed8:	415b      	adcs	r3, r3
 8006eda:	61fb      	str	r3, [r7, #28]
 8006edc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006ee0:	4641      	mov	r1, r8
 8006ee2:	1851      	adds	r1, r2, r1
 8006ee4:	6139      	str	r1, [r7, #16]
 8006ee6:	4649      	mov	r1, r9
 8006ee8:	414b      	adcs	r3, r1
 8006eea:	617b      	str	r3, [r7, #20]
 8006eec:	f04f 0200 	mov.w	r2, #0
 8006ef0:	f04f 0300 	mov.w	r3, #0
 8006ef4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006ef8:	4659      	mov	r1, fp
 8006efa:	00cb      	lsls	r3, r1, #3
 8006efc:	4651      	mov	r1, sl
 8006efe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006f02:	4651      	mov	r1, sl
 8006f04:	00ca      	lsls	r2, r1, #3
 8006f06:	4610      	mov	r0, r2
 8006f08:	4619      	mov	r1, r3
 8006f0a:	4603      	mov	r3, r0
 8006f0c:	4642      	mov	r2, r8
 8006f0e:	189b      	adds	r3, r3, r2
 8006f10:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006f14:	464b      	mov	r3, r9
 8006f16:	460a      	mov	r2, r1
 8006f18:	eb42 0303 	adc.w	r3, r2, r3
 8006f1c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006f20:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006f24:	685b      	ldr	r3, [r3, #4]
 8006f26:	2200      	movs	r2, #0
 8006f28:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006f2a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8006f2c:	f04f 0200 	mov.w	r2, #0
 8006f30:	f04f 0300 	mov.w	r3, #0
 8006f34:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8006f38:	4649      	mov	r1, r9
 8006f3a:	008b      	lsls	r3, r1, #2
 8006f3c:	4641      	mov	r1, r8
 8006f3e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006f42:	4641      	mov	r1, r8
 8006f44:	008a      	lsls	r2, r1, #2
 8006f46:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8006f4a:	f7f9 f941 	bl	80001d0 <__aeabi_uldivmod>
 8006f4e:	4602      	mov	r2, r0
 8006f50:	460b      	mov	r3, r1
 8006f52:	4611      	mov	r1, r2
 8006f54:	4b38      	ldr	r3, [pc, #224]	@ (8007038 <UART_SetConfig+0x4e4>)
 8006f56:	fba3 2301 	umull	r2, r3, r3, r1
 8006f5a:	095b      	lsrs	r3, r3, #5
 8006f5c:	2264      	movs	r2, #100	@ 0x64
 8006f5e:	fb02 f303 	mul.w	r3, r2, r3
 8006f62:	1acb      	subs	r3, r1, r3
 8006f64:	011b      	lsls	r3, r3, #4
 8006f66:	3332      	adds	r3, #50	@ 0x32
 8006f68:	4a33      	ldr	r2, [pc, #204]	@ (8007038 <UART_SetConfig+0x4e4>)
 8006f6a:	fba2 2303 	umull	r2, r3, r2, r3
 8006f6e:	095b      	lsrs	r3, r3, #5
 8006f70:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006f74:	441c      	add	r4, r3
 8006f76:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006f7a:	2200      	movs	r2, #0
 8006f7c:	673b      	str	r3, [r7, #112]	@ 0x70
 8006f7e:	677a      	str	r2, [r7, #116]	@ 0x74
 8006f80:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8006f84:	4642      	mov	r2, r8
 8006f86:	464b      	mov	r3, r9
 8006f88:	1891      	adds	r1, r2, r2
 8006f8a:	60b9      	str	r1, [r7, #8]
 8006f8c:	415b      	adcs	r3, r3
 8006f8e:	60fb      	str	r3, [r7, #12]
 8006f90:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006f94:	4641      	mov	r1, r8
 8006f96:	1851      	adds	r1, r2, r1
 8006f98:	6039      	str	r1, [r7, #0]
 8006f9a:	4649      	mov	r1, r9
 8006f9c:	414b      	adcs	r3, r1
 8006f9e:	607b      	str	r3, [r7, #4]
 8006fa0:	f04f 0200 	mov.w	r2, #0
 8006fa4:	f04f 0300 	mov.w	r3, #0
 8006fa8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006fac:	4659      	mov	r1, fp
 8006fae:	00cb      	lsls	r3, r1, #3
 8006fb0:	4651      	mov	r1, sl
 8006fb2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006fb6:	4651      	mov	r1, sl
 8006fb8:	00ca      	lsls	r2, r1, #3
 8006fba:	4610      	mov	r0, r2
 8006fbc:	4619      	mov	r1, r3
 8006fbe:	4603      	mov	r3, r0
 8006fc0:	4642      	mov	r2, r8
 8006fc2:	189b      	adds	r3, r3, r2
 8006fc4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006fc6:	464b      	mov	r3, r9
 8006fc8:	460a      	mov	r2, r1
 8006fca:	eb42 0303 	adc.w	r3, r2, r3
 8006fce:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006fd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006fd4:	685b      	ldr	r3, [r3, #4]
 8006fd6:	2200      	movs	r2, #0
 8006fd8:	663b      	str	r3, [r7, #96]	@ 0x60
 8006fda:	667a      	str	r2, [r7, #100]	@ 0x64
 8006fdc:	f04f 0200 	mov.w	r2, #0
 8006fe0:	f04f 0300 	mov.w	r3, #0
 8006fe4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8006fe8:	4649      	mov	r1, r9
 8006fea:	008b      	lsls	r3, r1, #2
 8006fec:	4641      	mov	r1, r8
 8006fee:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006ff2:	4641      	mov	r1, r8
 8006ff4:	008a      	lsls	r2, r1, #2
 8006ff6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8006ffa:	f7f9 f8e9 	bl	80001d0 <__aeabi_uldivmod>
 8006ffe:	4602      	mov	r2, r0
 8007000:	460b      	mov	r3, r1
 8007002:	4b0d      	ldr	r3, [pc, #52]	@ (8007038 <UART_SetConfig+0x4e4>)
 8007004:	fba3 1302 	umull	r1, r3, r3, r2
 8007008:	095b      	lsrs	r3, r3, #5
 800700a:	2164      	movs	r1, #100	@ 0x64
 800700c:	fb01 f303 	mul.w	r3, r1, r3
 8007010:	1ad3      	subs	r3, r2, r3
 8007012:	011b      	lsls	r3, r3, #4
 8007014:	3332      	adds	r3, #50	@ 0x32
 8007016:	4a08      	ldr	r2, [pc, #32]	@ (8007038 <UART_SetConfig+0x4e4>)
 8007018:	fba2 2303 	umull	r2, r3, r2, r3
 800701c:	095b      	lsrs	r3, r3, #5
 800701e:	f003 020f 	and.w	r2, r3, #15
 8007022:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007026:	681b      	ldr	r3, [r3, #0]
 8007028:	4422      	add	r2, r4
 800702a:	609a      	str	r2, [r3, #8]
 800702c:	bf00      	nop
 800702e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8007032:	46bd      	mov	sp, r7
 8007034:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007038:	51eb851f 	.word	0x51eb851f

0800703c <__NVIC_SetPriority>:
 800703c:	b480      	push	{r7}
 800703e:	b083      	sub	sp, #12
 8007040:	af00      	add	r7, sp, #0
 8007042:	4603      	mov	r3, r0
 8007044:	6039      	str	r1, [r7, #0]
 8007046:	71fb      	strb	r3, [r7, #7]
 8007048:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800704c:	2b00      	cmp	r3, #0
 800704e:	db0a      	blt.n	8007066 <__NVIC_SetPriority+0x2a>
 8007050:	683b      	ldr	r3, [r7, #0]
 8007052:	b2da      	uxtb	r2, r3
 8007054:	490c      	ldr	r1, [pc, #48]	@ (8007088 <__NVIC_SetPriority+0x4c>)
 8007056:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800705a:	0112      	lsls	r2, r2, #4
 800705c:	b2d2      	uxtb	r2, r2
 800705e:	440b      	add	r3, r1
 8007060:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8007064:	e00a      	b.n	800707c <__NVIC_SetPriority+0x40>
 8007066:	683b      	ldr	r3, [r7, #0]
 8007068:	b2da      	uxtb	r2, r3
 800706a:	4908      	ldr	r1, [pc, #32]	@ (800708c <__NVIC_SetPriority+0x50>)
 800706c:	79fb      	ldrb	r3, [r7, #7]
 800706e:	f003 030f 	and.w	r3, r3, #15
 8007072:	3b04      	subs	r3, #4
 8007074:	0112      	lsls	r2, r2, #4
 8007076:	b2d2      	uxtb	r2, r2
 8007078:	440b      	add	r3, r1
 800707a:	761a      	strb	r2, [r3, #24]
 800707c:	bf00      	nop
 800707e:	370c      	adds	r7, #12
 8007080:	46bd      	mov	sp, r7
 8007082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007086:	4770      	bx	lr
 8007088:	e000e100 	.word	0xe000e100
 800708c:	e000ed00 	.word	0xe000ed00

08007090 <SVC_Setup>:
 8007090:	b580      	push	{r7, lr}
 8007092:	af00      	add	r7, sp, #0
 8007094:	2100      	movs	r1, #0
 8007096:	f06f 0004 	mvn.w	r0, #4
 800709a:	f7ff ffcf 	bl	800703c <__NVIC_SetPriority>
 800709e:	bf00      	nop
 80070a0:	bd80      	pop	{r7, pc}
	...

080070a4 <osKernelInitialize>:
 80070a4:	b480      	push	{r7}
 80070a6:	b083      	sub	sp, #12
 80070a8:	af00      	add	r7, sp, #0
 80070aa:	f3ef 8305 	mrs	r3, IPSR
 80070ae:	603b      	str	r3, [r7, #0]
 80070b0:	683b      	ldr	r3, [r7, #0]
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	d003      	beq.n	80070be <osKernelInitialize+0x1a>
 80070b6:	f06f 0305 	mvn.w	r3, #5
 80070ba:	607b      	str	r3, [r7, #4]
 80070bc:	e00c      	b.n	80070d8 <osKernelInitialize+0x34>
 80070be:	4b0a      	ldr	r3, [pc, #40]	@ (80070e8 <osKernelInitialize+0x44>)
 80070c0:	681b      	ldr	r3, [r3, #0]
 80070c2:	2b00      	cmp	r3, #0
 80070c4:	d105      	bne.n	80070d2 <osKernelInitialize+0x2e>
 80070c6:	4b08      	ldr	r3, [pc, #32]	@ (80070e8 <osKernelInitialize+0x44>)
 80070c8:	2201      	movs	r2, #1
 80070ca:	601a      	str	r2, [r3, #0]
 80070cc:	2300      	movs	r3, #0
 80070ce:	607b      	str	r3, [r7, #4]
 80070d0:	e002      	b.n	80070d8 <osKernelInitialize+0x34>
 80070d2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80070d6:	607b      	str	r3, [r7, #4]
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	4618      	mov	r0, r3
 80070dc:	370c      	adds	r7, #12
 80070de:	46bd      	mov	sp, r7
 80070e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070e4:	4770      	bx	lr
 80070e6:	bf00      	nop
 80070e8:	20000980 	.word	0x20000980

080070ec <osKernelStart>:
 80070ec:	b580      	push	{r7, lr}
 80070ee:	b082      	sub	sp, #8
 80070f0:	af00      	add	r7, sp, #0
 80070f2:	f3ef 8305 	mrs	r3, IPSR
 80070f6:	603b      	str	r3, [r7, #0]
 80070f8:	683b      	ldr	r3, [r7, #0]
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	d003      	beq.n	8007106 <osKernelStart+0x1a>
 80070fe:	f06f 0305 	mvn.w	r3, #5
 8007102:	607b      	str	r3, [r7, #4]
 8007104:	e010      	b.n	8007128 <osKernelStart+0x3c>
 8007106:	4b0b      	ldr	r3, [pc, #44]	@ (8007134 <osKernelStart+0x48>)
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	2b01      	cmp	r3, #1
 800710c:	d109      	bne.n	8007122 <osKernelStart+0x36>
 800710e:	f7ff ffbf 	bl	8007090 <SVC_Setup>
 8007112:	4b08      	ldr	r3, [pc, #32]	@ (8007134 <osKernelStart+0x48>)
 8007114:	2202      	movs	r2, #2
 8007116:	601a      	str	r2, [r3, #0]
 8007118:	f001 f892 	bl	8008240 <vTaskStartScheduler>
 800711c:	2300      	movs	r3, #0
 800711e:	607b      	str	r3, [r7, #4]
 8007120:	e002      	b.n	8007128 <osKernelStart+0x3c>
 8007122:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8007126:	607b      	str	r3, [r7, #4]
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	4618      	mov	r0, r3
 800712c:	3708      	adds	r7, #8
 800712e:	46bd      	mov	sp, r7
 8007130:	bd80      	pop	{r7, pc}
 8007132:	bf00      	nop
 8007134:	20000980 	.word	0x20000980

08007138 <osThreadNew>:
 8007138:	b580      	push	{r7, lr}
 800713a:	b08e      	sub	sp, #56	@ 0x38
 800713c:	af04      	add	r7, sp, #16
 800713e:	60f8      	str	r0, [r7, #12]
 8007140:	60b9      	str	r1, [r7, #8]
 8007142:	607a      	str	r2, [r7, #4]
 8007144:	2300      	movs	r3, #0
 8007146:	613b      	str	r3, [r7, #16]
 8007148:	f3ef 8305 	mrs	r3, IPSR
 800714c:	617b      	str	r3, [r7, #20]
 800714e:	697b      	ldr	r3, [r7, #20]
 8007150:	2b00      	cmp	r3, #0
 8007152:	d17e      	bne.n	8007252 <osThreadNew+0x11a>
 8007154:	68fb      	ldr	r3, [r7, #12]
 8007156:	2b00      	cmp	r3, #0
 8007158:	d07b      	beq.n	8007252 <osThreadNew+0x11a>
 800715a:	2380      	movs	r3, #128	@ 0x80
 800715c:	623b      	str	r3, [r7, #32]
 800715e:	2318      	movs	r3, #24
 8007160:	61fb      	str	r3, [r7, #28]
 8007162:	2300      	movs	r3, #0
 8007164:	627b      	str	r3, [r7, #36]	@ 0x24
 8007166:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800716a:	61bb      	str	r3, [r7, #24]
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	2b00      	cmp	r3, #0
 8007170:	d045      	beq.n	80071fe <osThreadNew+0xc6>
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	681b      	ldr	r3, [r3, #0]
 8007176:	2b00      	cmp	r3, #0
 8007178:	d002      	beq.n	8007180 <osThreadNew+0x48>
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	681b      	ldr	r3, [r3, #0]
 800717e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	699b      	ldr	r3, [r3, #24]
 8007184:	2b00      	cmp	r3, #0
 8007186:	d002      	beq.n	800718e <osThreadNew+0x56>
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	699b      	ldr	r3, [r3, #24]
 800718c:	61fb      	str	r3, [r7, #28]
 800718e:	69fb      	ldr	r3, [r7, #28]
 8007190:	2b00      	cmp	r3, #0
 8007192:	d008      	beq.n	80071a6 <osThreadNew+0x6e>
 8007194:	69fb      	ldr	r3, [r7, #28]
 8007196:	2b38      	cmp	r3, #56	@ 0x38
 8007198:	d805      	bhi.n	80071a6 <osThreadNew+0x6e>
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	685b      	ldr	r3, [r3, #4]
 800719e:	f003 0301 	and.w	r3, r3, #1
 80071a2:	2b00      	cmp	r3, #0
 80071a4:	d001      	beq.n	80071aa <osThreadNew+0x72>
 80071a6:	2300      	movs	r3, #0
 80071a8:	e054      	b.n	8007254 <osThreadNew+0x11c>
 80071aa:	687b      	ldr	r3, [r7, #4]
 80071ac:	695b      	ldr	r3, [r3, #20]
 80071ae:	2b00      	cmp	r3, #0
 80071b0:	d003      	beq.n	80071ba <osThreadNew+0x82>
 80071b2:	687b      	ldr	r3, [r7, #4]
 80071b4:	695b      	ldr	r3, [r3, #20]
 80071b6:	089b      	lsrs	r3, r3, #2
 80071b8:	623b      	str	r3, [r7, #32]
 80071ba:	687b      	ldr	r3, [r7, #4]
 80071bc:	689b      	ldr	r3, [r3, #8]
 80071be:	2b00      	cmp	r3, #0
 80071c0:	d00e      	beq.n	80071e0 <osThreadNew+0xa8>
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	68db      	ldr	r3, [r3, #12]
 80071c6:	2ba7      	cmp	r3, #167	@ 0xa7
 80071c8:	d90a      	bls.n	80071e0 <osThreadNew+0xa8>
 80071ca:	687b      	ldr	r3, [r7, #4]
 80071cc:	691b      	ldr	r3, [r3, #16]
 80071ce:	2b00      	cmp	r3, #0
 80071d0:	d006      	beq.n	80071e0 <osThreadNew+0xa8>
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	695b      	ldr	r3, [r3, #20]
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d002      	beq.n	80071e0 <osThreadNew+0xa8>
 80071da:	2301      	movs	r3, #1
 80071dc:	61bb      	str	r3, [r7, #24]
 80071de:	e010      	b.n	8007202 <osThreadNew+0xca>
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	689b      	ldr	r3, [r3, #8]
 80071e4:	2b00      	cmp	r3, #0
 80071e6:	d10c      	bne.n	8007202 <osThreadNew+0xca>
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	68db      	ldr	r3, [r3, #12]
 80071ec:	2b00      	cmp	r3, #0
 80071ee:	d108      	bne.n	8007202 <osThreadNew+0xca>
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	691b      	ldr	r3, [r3, #16]
 80071f4:	2b00      	cmp	r3, #0
 80071f6:	d104      	bne.n	8007202 <osThreadNew+0xca>
 80071f8:	2300      	movs	r3, #0
 80071fa:	61bb      	str	r3, [r7, #24]
 80071fc:	e001      	b.n	8007202 <osThreadNew+0xca>
 80071fe:	2300      	movs	r3, #0
 8007200:	61bb      	str	r3, [r7, #24]
 8007202:	69bb      	ldr	r3, [r7, #24]
 8007204:	2b01      	cmp	r3, #1
 8007206:	d110      	bne.n	800722a <osThreadNew+0xf2>
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	691b      	ldr	r3, [r3, #16]
 800720c:	687a      	ldr	r2, [r7, #4]
 800720e:	6892      	ldr	r2, [r2, #8]
 8007210:	9202      	str	r2, [sp, #8]
 8007212:	9301      	str	r3, [sp, #4]
 8007214:	69fb      	ldr	r3, [r7, #28]
 8007216:	9300      	str	r3, [sp, #0]
 8007218:	68bb      	ldr	r3, [r7, #8]
 800721a:	6a3a      	ldr	r2, [r7, #32]
 800721c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800721e:	68f8      	ldr	r0, [r7, #12]
 8007220:	f000 fe1a 	bl	8007e58 <xTaskCreateStatic>
 8007224:	4603      	mov	r3, r0
 8007226:	613b      	str	r3, [r7, #16]
 8007228:	e013      	b.n	8007252 <osThreadNew+0x11a>
 800722a:	69bb      	ldr	r3, [r7, #24]
 800722c:	2b00      	cmp	r3, #0
 800722e:	d110      	bne.n	8007252 <osThreadNew+0x11a>
 8007230:	6a3b      	ldr	r3, [r7, #32]
 8007232:	b29a      	uxth	r2, r3
 8007234:	f107 0310 	add.w	r3, r7, #16
 8007238:	9301      	str	r3, [sp, #4]
 800723a:	69fb      	ldr	r3, [r7, #28]
 800723c:	9300      	str	r3, [sp, #0]
 800723e:	68bb      	ldr	r3, [r7, #8]
 8007240:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8007242:	68f8      	ldr	r0, [r7, #12]
 8007244:	f000 fe68 	bl	8007f18 <xTaskCreate>
 8007248:	4603      	mov	r3, r0
 800724a:	2b01      	cmp	r3, #1
 800724c:	d001      	beq.n	8007252 <osThreadNew+0x11a>
 800724e:	2300      	movs	r3, #0
 8007250:	613b      	str	r3, [r7, #16]
 8007252:	693b      	ldr	r3, [r7, #16]
 8007254:	4618      	mov	r0, r3
 8007256:	3728      	adds	r7, #40	@ 0x28
 8007258:	46bd      	mov	sp, r7
 800725a:	bd80      	pop	{r7, pc}

0800725c <osDelay>:
 800725c:	b580      	push	{r7, lr}
 800725e:	b084      	sub	sp, #16
 8007260:	af00      	add	r7, sp, #0
 8007262:	6078      	str	r0, [r7, #4]
 8007264:	f3ef 8305 	mrs	r3, IPSR
 8007268:	60bb      	str	r3, [r7, #8]
 800726a:	68bb      	ldr	r3, [r7, #8]
 800726c:	2b00      	cmp	r3, #0
 800726e:	d003      	beq.n	8007278 <osDelay+0x1c>
 8007270:	f06f 0305 	mvn.w	r3, #5
 8007274:	60fb      	str	r3, [r7, #12]
 8007276:	e007      	b.n	8007288 <osDelay+0x2c>
 8007278:	2300      	movs	r3, #0
 800727a:	60fb      	str	r3, [r7, #12]
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	2b00      	cmp	r3, #0
 8007280:	d002      	beq.n	8007288 <osDelay+0x2c>
 8007282:	6878      	ldr	r0, [r7, #4]
 8007284:	f000 ffa6 	bl	80081d4 <vTaskDelay>
 8007288:	68fb      	ldr	r3, [r7, #12]
 800728a:	4618      	mov	r0, r3
 800728c:	3710      	adds	r7, #16
 800728e:	46bd      	mov	sp, r7
 8007290:	bd80      	pop	{r7, pc}
	...

08007294 <vApplicationGetIdleTaskMemory>:
 8007294:	b480      	push	{r7}
 8007296:	b085      	sub	sp, #20
 8007298:	af00      	add	r7, sp, #0
 800729a:	60f8      	str	r0, [r7, #12]
 800729c:	60b9      	str	r1, [r7, #8]
 800729e:	607a      	str	r2, [r7, #4]
 80072a0:	68fb      	ldr	r3, [r7, #12]
 80072a2:	4a07      	ldr	r2, [pc, #28]	@ (80072c0 <vApplicationGetIdleTaskMemory+0x2c>)
 80072a4:	601a      	str	r2, [r3, #0]
 80072a6:	68bb      	ldr	r3, [r7, #8]
 80072a8:	4a06      	ldr	r2, [pc, #24]	@ (80072c4 <vApplicationGetIdleTaskMemory+0x30>)
 80072aa:	601a      	str	r2, [r3, #0]
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	2280      	movs	r2, #128	@ 0x80
 80072b0:	601a      	str	r2, [r3, #0]
 80072b2:	bf00      	nop
 80072b4:	3714      	adds	r7, #20
 80072b6:	46bd      	mov	sp, r7
 80072b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072bc:	4770      	bx	lr
 80072be:	bf00      	nop
 80072c0:	20000984 	.word	0x20000984
 80072c4:	20000a2c 	.word	0x20000a2c

080072c8 <vApplicationGetTimerTaskMemory>:
 80072c8:	b480      	push	{r7}
 80072ca:	b085      	sub	sp, #20
 80072cc:	af00      	add	r7, sp, #0
 80072ce:	60f8      	str	r0, [r7, #12]
 80072d0:	60b9      	str	r1, [r7, #8]
 80072d2:	607a      	str	r2, [r7, #4]
 80072d4:	68fb      	ldr	r3, [r7, #12]
 80072d6:	4a07      	ldr	r2, [pc, #28]	@ (80072f4 <vApplicationGetTimerTaskMemory+0x2c>)
 80072d8:	601a      	str	r2, [r3, #0]
 80072da:	68bb      	ldr	r3, [r7, #8]
 80072dc:	4a06      	ldr	r2, [pc, #24]	@ (80072f8 <vApplicationGetTimerTaskMemory+0x30>)
 80072de:	601a      	str	r2, [r3, #0]
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80072e6:	601a      	str	r2, [r3, #0]
 80072e8:	bf00      	nop
 80072ea:	3714      	adds	r7, #20
 80072ec:	46bd      	mov	sp, r7
 80072ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072f2:	4770      	bx	lr
 80072f4:	20000c2c 	.word	0x20000c2c
 80072f8:	20000cd4 	.word	0x20000cd4

080072fc <vListInitialise>:
 80072fc:	b480      	push	{r7}
 80072fe:	b083      	sub	sp, #12
 8007300:	af00      	add	r7, sp, #0
 8007302:	6078      	str	r0, [r7, #4]
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	f103 0208 	add.w	r2, r3, #8
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	605a      	str	r2, [r3, #4]
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8007314:	609a      	str	r2, [r3, #8]
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	f103 0208 	add.w	r2, r3, #8
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	60da      	str	r2, [r3, #12]
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	f103 0208 	add.w	r2, r3, #8
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	611a      	str	r2, [r3, #16]
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	2200      	movs	r2, #0
 800732e:	601a      	str	r2, [r3, #0]
 8007330:	bf00      	nop
 8007332:	370c      	adds	r7, #12
 8007334:	46bd      	mov	sp, r7
 8007336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800733a:	4770      	bx	lr

0800733c <vListInitialiseItem>:
 800733c:	b480      	push	{r7}
 800733e:	b083      	sub	sp, #12
 8007340:	af00      	add	r7, sp, #0
 8007342:	6078      	str	r0, [r7, #4]
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	2200      	movs	r2, #0
 8007348:	611a      	str	r2, [r3, #16]
 800734a:	bf00      	nop
 800734c:	370c      	adds	r7, #12
 800734e:	46bd      	mov	sp, r7
 8007350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007354:	4770      	bx	lr

08007356 <vListInsertEnd>:
 8007356:	b480      	push	{r7}
 8007358:	b085      	sub	sp, #20
 800735a:	af00      	add	r7, sp, #0
 800735c:	6078      	str	r0, [r7, #4]
 800735e:	6039      	str	r1, [r7, #0]
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	685b      	ldr	r3, [r3, #4]
 8007364:	60fb      	str	r3, [r7, #12]
 8007366:	683b      	ldr	r3, [r7, #0]
 8007368:	68fa      	ldr	r2, [r7, #12]
 800736a:	605a      	str	r2, [r3, #4]
 800736c:	68fb      	ldr	r3, [r7, #12]
 800736e:	689a      	ldr	r2, [r3, #8]
 8007370:	683b      	ldr	r3, [r7, #0]
 8007372:	609a      	str	r2, [r3, #8]
 8007374:	68fb      	ldr	r3, [r7, #12]
 8007376:	689b      	ldr	r3, [r3, #8]
 8007378:	683a      	ldr	r2, [r7, #0]
 800737a:	605a      	str	r2, [r3, #4]
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	683a      	ldr	r2, [r7, #0]
 8007380:	609a      	str	r2, [r3, #8]
 8007382:	683b      	ldr	r3, [r7, #0]
 8007384:	687a      	ldr	r2, [r7, #4]
 8007386:	611a      	str	r2, [r3, #16]
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	681b      	ldr	r3, [r3, #0]
 800738c:	1c5a      	adds	r2, r3, #1
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	601a      	str	r2, [r3, #0]
 8007392:	bf00      	nop
 8007394:	3714      	adds	r7, #20
 8007396:	46bd      	mov	sp, r7
 8007398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739c:	4770      	bx	lr

0800739e <vListInsert>:
 800739e:	b480      	push	{r7}
 80073a0:	b085      	sub	sp, #20
 80073a2:	af00      	add	r7, sp, #0
 80073a4:	6078      	str	r0, [r7, #4]
 80073a6:	6039      	str	r1, [r7, #0]
 80073a8:	683b      	ldr	r3, [r7, #0]
 80073aa:	681b      	ldr	r3, [r3, #0]
 80073ac:	60bb      	str	r3, [r7, #8]
 80073ae:	68bb      	ldr	r3, [r7, #8]
 80073b0:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80073b4:	d103      	bne.n	80073be <vListInsert+0x20>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	691b      	ldr	r3, [r3, #16]
 80073ba:	60fb      	str	r3, [r7, #12]
 80073bc:	e00c      	b.n	80073d8 <vListInsert+0x3a>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	3308      	adds	r3, #8
 80073c2:	60fb      	str	r3, [r7, #12]
 80073c4:	e002      	b.n	80073cc <vListInsert+0x2e>
 80073c6:	68fb      	ldr	r3, [r7, #12]
 80073c8:	685b      	ldr	r3, [r3, #4]
 80073ca:	60fb      	str	r3, [r7, #12]
 80073cc:	68fb      	ldr	r3, [r7, #12]
 80073ce:	685b      	ldr	r3, [r3, #4]
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	68ba      	ldr	r2, [r7, #8]
 80073d4:	429a      	cmp	r2, r3
 80073d6:	d2f6      	bcs.n	80073c6 <vListInsert+0x28>
 80073d8:	68fb      	ldr	r3, [r7, #12]
 80073da:	685a      	ldr	r2, [r3, #4]
 80073dc:	683b      	ldr	r3, [r7, #0]
 80073de:	605a      	str	r2, [r3, #4]
 80073e0:	683b      	ldr	r3, [r7, #0]
 80073e2:	685b      	ldr	r3, [r3, #4]
 80073e4:	683a      	ldr	r2, [r7, #0]
 80073e6:	609a      	str	r2, [r3, #8]
 80073e8:	683b      	ldr	r3, [r7, #0]
 80073ea:	68fa      	ldr	r2, [r7, #12]
 80073ec:	609a      	str	r2, [r3, #8]
 80073ee:	68fb      	ldr	r3, [r7, #12]
 80073f0:	683a      	ldr	r2, [r7, #0]
 80073f2:	605a      	str	r2, [r3, #4]
 80073f4:	683b      	ldr	r3, [r7, #0]
 80073f6:	687a      	ldr	r2, [r7, #4]
 80073f8:	611a      	str	r2, [r3, #16]
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	1c5a      	adds	r2, r3, #1
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	601a      	str	r2, [r3, #0]
 8007404:	bf00      	nop
 8007406:	3714      	adds	r7, #20
 8007408:	46bd      	mov	sp, r7
 800740a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800740e:	4770      	bx	lr

08007410 <uxListRemove>:
 8007410:	b480      	push	{r7}
 8007412:	b085      	sub	sp, #20
 8007414:	af00      	add	r7, sp, #0
 8007416:	6078      	str	r0, [r7, #4]
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	691b      	ldr	r3, [r3, #16]
 800741c:	60fb      	str	r3, [r7, #12]
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	685b      	ldr	r3, [r3, #4]
 8007422:	687a      	ldr	r2, [r7, #4]
 8007424:	6892      	ldr	r2, [r2, #8]
 8007426:	609a      	str	r2, [r3, #8]
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	689b      	ldr	r3, [r3, #8]
 800742c:	687a      	ldr	r2, [r7, #4]
 800742e:	6852      	ldr	r2, [r2, #4]
 8007430:	605a      	str	r2, [r3, #4]
 8007432:	68fb      	ldr	r3, [r7, #12]
 8007434:	685b      	ldr	r3, [r3, #4]
 8007436:	687a      	ldr	r2, [r7, #4]
 8007438:	429a      	cmp	r2, r3
 800743a:	d103      	bne.n	8007444 <uxListRemove+0x34>
 800743c:	687b      	ldr	r3, [r7, #4]
 800743e:	689a      	ldr	r2, [r3, #8]
 8007440:	68fb      	ldr	r3, [r7, #12]
 8007442:	605a      	str	r2, [r3, #4]
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	2200      	movs	r2, #0
 8007448:	611a      	str	r2, [r3, #16]
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	681b      	ldr	r3, [r3, #0]
 800744e:	1e5a      	subs	r2, r3, #1
 8007450:	68fb      	ldr	r3, [r7, #12]
 8007452:	601a      	str	r2, [r3, #0]
 8007454:	68fb      	ldr	r3, [r7, #12]
 8007456:	681b      	ldr	r3, [r3, #0]
 8007458:	4618      	mov	r0, r3
 800745a:	3714      	adds	r7, #20
 800745c:	46bd      	mov	sp, r7
 800745e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007462:	4770      	bx	lr

08007464 <xQueueGenericReset>:
 8007464:	b580      	push	{r7, lr}
 8007466:	b084      	sub	sp, #16
 8007468:	af00      	add	r7, sp, #0
 800746a:	6078      	str	r0, [r7, #4]
 800746c:	6039      	str	r1, [r7, #0]
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	60fb      	str	r3, [r7, #12]
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	2b00      	cmp	r3, #0
 8007476:	d10b      	bne.n	8007490 <xQueueGenericReset+0x2c>
 8007478:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800747c:	f383 8811 	msr	BASEPRI, r3
 8007480:	f3bf 8f6f 	isb	sy
 8007484:	f3bf 8f4f 	dsb	sy
 8007488:	60bb      	str	r3, [r7, #8]
 800748a:	bf00      	nop
 800748c:	bf00      	nop
 800748e:	e7fd      	b.n	800748c <xQueueGenericReset+0x28>
 8007490:	f002 f8aa 	bl	80095e8 <vPortEnterCritical>
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	681a      	ldr	r2, [r3, #0]
 8007498:	68fb      	ldr	r3, [r7, #12]
 800749a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800749c:	68f9      	ldr	r1, [r7, #12]
 800749e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80074a0:	fb01 f303 	mul.w	r3, r1, r3
 80074a4:	441a      	add	r2, r3
 80074a6:	68fb      	ldr	r3, [r7, #12]
 80074a8:	609a      	str	r2, [r3, #8]
 80074aa:	68fb      	ldr	r3, [r7, #12]
 80074ac:	2200      	movs	r2, #0
 80074ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80074b0:	68fb      	ldr	r3, [r7, #12]
 80074b2:	681a      	ldr	r2, [r3, #0]
 80074b4:	68fb      	ldr	r3, [r7, #12]
 80074b6:	605a      	str	r2, [r3, #4]
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	681a      	ldr	r2, [r3, #0]
 80074bc:	68fb      	ldr	r3, [r7, #12]
 80074be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80074c0:	3b01      	subs	r3, #1
 80074c2:	68f9      	ldr	r1, [r7, #12]
 80074c4:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80074c6:	fb01 f303 	mul.w	r3, r1, r3
 80074ca:	441a      	add	r2, r3
 80074cc:	68fb      	ldr	r3, [r7, #12]
 80074ce:	60da      	str	r2, [r3, #12]
 80074d0:	68fb      	ldr	r3, [r7, #12]
 80074d2:	22ff      	movs	r2, #255	@ 0xff
 80074d4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	22ff      	movs	r2, #255	@ 0xff
 80074dc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80074e0:	683b      	ldr	r3, [r7, #0]
 80074e2:	2b00      	cmp	r3, #0
 80074e4:	d114      	bne.n	8007510 <xQueueGenericReset+0xac>
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	691b      	ldr	r3, [r3, #16]
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	d01a      	beq.n	8007524 <xQueueGenericReset+0xc0>
 80074ee:	68fb      	ldr	r3, [r7, #12]
 80074f0:	3310      	adds	r3, #16
 80074f2:	4618      	mov	r0, r3
 80074f4:	f001 f942 	bl	800877c <xTaskRemoveFromEventList>
 80074f8:	4603      	mov	r3, r0
 80074fa:	2b00      	cmp	r3, #0
 80074fc:	d012      	beq.n	8007524 <xQueueGenericReset+0xc0>
 80074fe:	4b0d      	ldr	r3, [pc, #52]	@ (8007534 <xQueueGenericReset+0xd0>)
 8007500:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007504:	601a      	str	r2, [r3, #0]
 8007506:	f3bf 8f4f 	dsb	sy
 800750a:	f3bf 8f6f 	isb	sy
 800750e:	e009      	b.n	8007524 <xQueueGenericReset+0xc0>
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	3310      	adds	r3, #16
 8007514:	4618      	mov	r0, r3
 8007516:	f7ff fef1 	bl	80072fc <vListInitialise>
 800751a:	68fb      	ldr	r3, [r7, #12]
 800751c:	3324      	adds	r3, #36	@ 0x24
 800751e:	4618      	mov	r0, r3
 8007520:	f7ff feec 	bl	80072fc <vListInitialise>
 8007524:	f002 f892 	bl	800964c <vPortExitCritical>
 8007528:	2301      	movs	r3, #1
 800752a:	4618      	mov	r0, r3
 800752c:	3710      	adds	r7, #16
 800752e:	46bd      	mov	sp, r7
 8007530:	bd80      	pop	{r7, pc}
 8007532:	bf00      	nop
 8007534:	e000ed04 	.word	0xe000ed04

08007538 <xQueueGenericCreateStatic>:
 8007538:	b580      	push	{r7, lr}
 800753a:	b08e      	sub	sp, #56	@ 0x38
 800753c:	af02      	add	r7, sp, #8
 800753e:	60f8      	str	r0, [r7, #12]
 8007540:	60b9      	str	r1, [r7, #8]
 8007542:	607a      	str	r2, [r7, #4]
 8007544:	603b      	str	r3, [r7, #0]
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	2b00      	cmp	r3, #0
 800754a:	d10b      	bne.n	8007564 <xQueueGenericCreateStatic+0x2c>
 800754c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007550:	f383 8811 	msr	BASEPRI, r3
 8007554:	f3bf 8f6f 	isb	sy
 8007558:	f3bf 8f4f 	dsb	sy
 800755c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800755e:	bf00      	nop
 8007560:	bf00      	nop
 8007562:	e7fd      	b.n	8007560 <xQueueGenericCreateStatic+0x28>
 8007564:	683b      	ldr	r3, [r7, #0]
 8007566:	2b00      	cmp	r3, #0
 8007568:	d10b      	bne.n	8007582 <xQueueGenericCreateStatic+0x4a>
 800756a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800756e:	f383 8811 	msr	BASEPRI, r3
 8007572:	f3bf 8f6f 	isb	sy
 8007576:	f3bf 8f4f 	dsb	sy
 800757a:	627b      	str	r3, [r7, #36]	@ 0x24
 800757c:	bf00      	nop
 800757e:	bf00      	nop
 8007580:	e7fd      	b.n	800757e <xQueueGenericCreateStatic+0x46>
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	2b00      	cmp	r3, #0
 8007586:	d002      	beq.n	800758e <xQueueGenericCreateStatic+0x56>
 8007588:	68bb      	ldr	r3, [r7, #8]
 800758a:	2b00      	cmp	r3, #0
 800758c:	d001      	beq.n	8007592 <xQueueGenericCreateStatic+0x5a>
 800758e:	2301      	movs	r3, #1
 8007590:	e000      	b.n	8007594 <xQueueGenericCreateStatic+0x5c>
 8007592:	2300      	movs	r3, #0
 8007594:	2b00      	cmp	r3, #0
 8007596:	d10b      	bne.n	80075b0 <xQueueGenericCreateStatic+0x78>
 8007598:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800759c:	f383 8811 	msr	BASEPRI, r3
 80075a0:	f3bf 8f6f 	isb	sy
 80075a4:	f3bf 8f4f 	dsb	sy
 80075a8:	623b      	str	r3, [r7, #32]
 80075aa:	bf00      	nop
 80075ac:	bf00      	nop
 80075ae:	e7fd      	b.n	80075ac <xQueueGenericCreateStatic+0x74>
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	2b00      	cmp	r3, #0
 80075b4:	d102      	bne.n	80075bc <xQueueGenericCreateStatic+0x84>
 80075b6:	68bb      	ldr	r3, [r7, #8]
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d101      	bne.n	80075c0 <xQueueGenericCreateStatic+0x88>
 80075bc:	2301      	movs	r3, #1
 80075be:	e000      	b.n	80075c2 <xQueueGenericCreateStatic+0x8a>
 80075c0:	2300      	movs	r3, #0
 80075c2:	2b00      	cmp	r3, #0
 80075c4:	d10b      	bne.n	80075de <xQueueGenericCreateStatic+0xa6>
 80075c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075ca:	f383 8811 	msr	BASEPRI, r3
 80075ce:	f3bf 8f6f 	isb	sy
 80075d2:	f3bf 8f4f 	dsb	sy
 80075d6:	61fb      	str	r3, [r7, #28]
 80075d8:	bf00      	nop
 80075da:	bf00      	nop
 80075dc:	e7fd      	b.n	80075da <xQueueGenericCreateStatic+0xa2>
 80075de:	2350      	movs	r3, #80	@ 0x50
 80075e0:	617b      	str	r3, [r7, #20]
 80075e2:	697b      	ldr	r3, [r7, #20]
 80075e4:	2b50      	cmp	r3, #80	@ 0x50
 80075e6:	d00b      	beq.n	8007600 <xQueueGenericCreateStatic+0xc8>
 80075e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075ec:	f383 8811 	msr	BASEPRI, r3
 80075f0:	f3bf 8f6f 	isb	sy
 80075f4:	f3bf 8f4f 	dsb	sy
 80075f8:	61bb      	str	r3, [r7, #24]
 80075fa:	bf00      	nop
 80075fc:	bf00      	nop
 80075fe:	e7fd      	b.n	80075fc <xQueueGenericCreateStatic+0xc4>
 8007600:	697b      	ldr	r3, [r7, #20]
 8007602:	683b      	ldr	r3, [r7, #0]
 8007604:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007606:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007608:	2b00      	cmp	r3, #0
 800760a:	d00d      	beq.n	8007628 <xQueueGenericCreateStatic+0xf0>
 800760c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800760e:	2201      	movs	r2, #1
 8007610:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007614:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8007618:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800761a:	9300      	str	r3, [sp, #0]
 800761c:	4613      	mov	r3, r2
 800761e:	687a      	ldr	r2, [r7, #4]
 8007620:	68b9      	ldr	r1, [r7, #8]
 8007622:	68f8      	ldr	r0, [r7, #12]
 8007624:	f000 f805 	bl	8007632 <prvInitialiseNewQueue>
 8007628:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800762a:	4618      	mov	r0, r3
 800762c:	3730      	adds	r7, #48	@ 0x30
 800762e:	46bd      	mov	sp, r7
 8007630:	bd80      	pop	{r7, pc}

08007632 <prvInitialiseNewQueue>:
 8007632:	b580      	push	{r7, lr}
 8007634:	b084      	sub	sp, #16
 8007636:	af00      	add	r7, sp, #0
 8007638:	60f8      	str	r0, [r7, #12]
 800763a:	60b9      	str	r1, [r7, #8]
 800763c:	607a      	str	r2, [r7, #4]
 800763e:	70fb      	strb	r3, [r7, #3]
 8007640:	68bb      	ldr	r3, [r7, #8]
 8007642:	2b00      	cmp	r3, #0
 8007644:	d103      	bne.n	800764e <prvInitialiseNewQueue+0x1c>
 8007646:	69bb      	ldr	r3, [r7, #24]
 8007648:	69ba      	ldr	r2, [r7, #24]
 800764a:	601a      	str	r2, [r3, #0]
 800764c:	e002      	b.n	8007654 <prvInitialiseNewQueue+0x22>
 800764e:	69bb      	ldr	r3, [r7, #24]
 8007650:	687a      	ldr	r2, [r7, #4]
 8007652:	601a      	str	r2, [r3, #0]
 8007654:	69bb      	ldr	r3, [r7, #24]
 8007656:	68fa      	ldr	r2, [r7, #12]
 8007658:	63da      	str	r2, [r3, #60]	@ 0x3c
 800765a:	69bb      	ldr	r3, [r7, #24]
 800765c:	68ba      	ldr	r2, [r7, #8]
 800765e:	641a      	str	r2, [r3, #64]	@ 0x40
 8007660:	2101      	movs	r1, #1
 8007662:	69b8      	ldr	r0, [r7, #24]
 8007664:	f7ff fefe 	bl	8007464 <xQueueGenericReset>
 8007668:	69bb      	ldr	r3, [r7, #24]
 800766a:	78fa      	ldrb	r2, [r7, #3]
 800766c:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8007670:	bf00      	nop
 8007672:	3710      	adds	r7, #16
 8007674:	46bd      	mov	sp, r7
 8007676:	bd80      	pop	{r7, pc}

08007678 <xQueueGenericSend>:
 8007678:	b580      	push	{r7, lr}
 800767a:	b08e      	sub	sp, #56	@ 0x38
 800767c:	af00      	add	r7, sp, #0
 800767e:	60f8      	str	r0, [r7, #12]
 8007680:	60b9      	str	r1, [r7, #8]
 8007682:	607a      	str	r2, [r7, #4]
 8007684:	603b      	str	r3, [r7, #0]
 8007686:	2300      	movs	r3, #0
 8007688:	637b      	str	r3, [r7, #52]	@ 0x34
 800768a:	68fb      	ldr	r3, [r7, #12]
 800768c:	633b      	str	r3, [r7, #48]	@ 0x30
 800768e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007690:	2b00      	cmp	r3, #0
 8007692:	d10b      	bne.n	80076ac <xQueueGenericSend+0x34>
 8007694:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007698:	f383 8811 	msr	BASEPRI, r3
 800769c:	f3bf 8f6f 	isb	sy
 80076a0:	f3bf 8f4f 	dsb	sy
 80076a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80076a6:	bf00      	nop
 80076a8:	bf00      	nop
 80076aa:	e7fd      	b.n	80076a8 <xQueueGenericSend+0x30>
 80076ac:	68bb      	ldr	r3, [r7, #8]
 80076ae:	2b00      	cmp	r3, #0
 80076b0:	d103      	bne.n	80076ba <xQueueGenericSend+0x42>
 80076b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80076b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80076b6:	2b00      	cmp	r3, #0
 80076b8:	d101      	bne.n	80076be <xQueueGenericSend+0x46>
 80076ba:	2301      	movs	r3, #1
 80076bc:	e000      	b.n	80076c0 <xQueueGenericSend+0x48>
 80076be:	2300      	movs	r3, #0
 80076c0:	2b00      	cmp	r3, #0
 80076c2:	d10b      	bne.n	80076dc <xQueueGenericSend+0x64>
 80076c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076c8:	f383 8811 	msr	BASEPRI, r3
 80076cc:	f3bf 8f6f 	isb	sy
 80076d0:	f3bf 8f4f 	dsb	sy
 80076d4:	627b      	str	r3, [r7, #36]	@ 0x24
 80076d6:	bf00      	nop
 80076d8:	bf00      	nop
 80076da:	e7fd      	b.n	80076d8 <xQueueGenericSend+0x60>
 80076dc:	683b      	ldr	r3, [r7, #0]
 80076de:	2b02      	cmp	r3, #2
 80076e0:	d103      	bne.n	80076ea <xQueueGenericSend+0x72>
 80076e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80076e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80076e6:	2b01      	cmp	r3, #1
 80076e8:	d101      	bne.n	80076ee <xQueueGenericSend+0x76>
 80076ea:	2301      	movs	r3, #1
 80076ec:	e000      	b.n	80076f0 <xQueueGenericSend+0x78>
 80076ee:	2300      	movs	r3, #0
 80076f0:	2b00      	cmp	r3, #0
 80076f2:	d10b      	bne.n	800770c <xQueueGenericSend+0x94>
 80076f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076f8:	f383 8811 	msr	BASEPRI, r3
 80076fc:	f3bf 8f6f 	isb	sy
 8007700:	f3bf 8f4f 	dsb	sy
 8007704:	623b      	str	r3, [r7, #32]
 8007706:	bf00      	nop
 8007708:	bf00      	nop
 800770a:	e7fd      	b.n	8007708 <xQueueGenericSend+0x90>
 800770c:	f001 f9fc 	bl	8008b08 <xTaskGetSchedulerState>
 8007710:	4603      	mov	r3, r0
 8007712:	2b00      	cmp	r3, #0
 8007714:	d102      	bne.n	800771c <xQueueGenericSend+0xa4>
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	2b00      	cmp	r3, #0
 800771a:	d101      	bne.n	8007720 <xQueueGenericSend+0xa8>
 800771c:	2301      	movs	r3, #1
 800771e:	e000      	b.n	8007722 <xQueueGenericSend+0xaa>
 8007720:	2300      	movs	r3, #0
 8007722:	2b00      	cmp	r3, #0
 8007724:	d10b      	bne.n	800773e <xQueueGenericSend+0xc6>
 8007726:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800772a:	f383 8811 	msr	BASEPRI, r3
 800772e:	f3bf 8f6f 	isb	sy
 8007732:	f3bf 8f4f 	dsb	sy
 8007736:	61fb      	str	r3, [r7, #28]
 8007738:	bf00      	nop
 800773a:	bf00      	nop
 800773c:	e7fd      	b.n	800773a <xQueueGenericSend+0xc2>
 800773e:	f001 ff53 	bl	80095e8 <vPortEnterCritical>
 8007742:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007744:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007746:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007748:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800774a:	429a      	cmp	r2, r3
 800774c:	d302      	bcc.n	8007754 <xQueueGenericSend+0xdc>
 800774e:	683b      	ldr	r3, [r7, #0]
 8007750:	2b02      	cmp	r3, #2
 8007752:	d129      	bne.n	80077a8 <xQueueGenericSend+0x130>
 8007754:	683a      	ldr	r2, [r7, #0]
 8007756:	68b9      	ldr	r1, [r7, #8]
 8007758:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800775a:	f000 fa0f 	bl	8007b7c <prvCopyDataToQueue>
 800775e:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8007760:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007762:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007764:	2b00      	cmp	r3, #0
 8007766:	d010      	beq.n	800778a <xQueueGenericSend+0x112>
 8007768:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800776a:	3324      	adds	r3, #36	@ 0x24
 800776c:	4618      	mov	r0, r3
 800776e:	f001 f805 	bl	800877c <xTaskRemoveFromEventList>
 8007772:	4603      	mov	r3, r0
 8007774:	2b00      	cmp	r3, #0
 8007776:	d013      	beq.n	80077a0 <xQueueGenericSend+0x128>
 8007778:	4b3f      	ldr	r3, [pc, #252]	@ (8007878 <xQueueGenericSend+0x200>)
 800777a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800777e:	601a      	str	r2, [r3, #0]
 8007780:	f3bf 8f4f 	dsb	sy
 8007784:	f3bf 8f6f 	isb	sy
 8007788:	e00a      	b.n	80077a0 <xQueueGenericSend+0x128>
 800778a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800778c:	2b00      	cmp	r3, #0
 800778e:	d007      	beq.n	80077a0 <xQueueGenericSend+0x128>
 8007790:	4b39      	ldr	r3, [pc, #228]	@ (8007878 <xQueueGenericSend+0x200>)
 8007792:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007796:	601a      	str	r2, [r3, #0]
 8007798:	f3bf 8f4f 	dsb	sy
 800779c:	f3bf 8f6f 	isb	sy
 80077a0:	f001 ff54 	bl	800964c <vPortExitCritical>
 80077a4:	2301      	movs	r3, #1
 80077a6:	e063      	b.n	8007870 <xQueueGenericSend+0x1f8>
 80077a8:	687b      	ldr	r3, [r7, #4]
 80077aa:	2b00      	cmp	r3, #0
 80077ac:	d103      	bne.n	80077b6 <xQueueGenericSend+0x13e>
 80077ae:	f001 ff4d 	bl	800964c <vPortExitCritical>
 80077b2:	2300      	movs	r3, #0
 80077b4:	e05c      	b.n	8007870 <xQueueGenericSend+0x1f8>
 80077b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80077b8:	2b00      	cmp	r3, #0
 80077ba:	d106      	bne.n	80077ca <xQueueGenericSend+0x152>
 80077bc:	f107 0314 	add.w	r3, r7, #20
 80077c0:	4618      	mov	r0, r3
 80077c2:	f001 f83f 	bl	8008844 <vTaskInternalSetTimeOutState>
 80077c6:	2301      	movs	r3, #1
 80077c8:	637b      	str	r3, [r7, #52]	@ 0x34
 80077ca:	f001 ff3f 	bl	800964c <vPortExitCritical>
 80077ce:	f000 fda7 	bl	8008320 <vTaskSuspendAll>
 80077d2:	f001 ff09 	bl	80095e8 <vPortEnterCritical>
 80077d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077d8:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80077dc:	b25b      	sxtb	r3, r3
 80077de:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80077e2:	d103      	bne.n	80077ec <xQueueGenericSend+0x174>
 80077e4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077e6:	2200      	movs	r2, #0
 80077e8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80077ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077ee:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80077f2:	b25b      	sxtb	r3, r3
 80077f4:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80077f8:	d103      	bne.n	8007802 <xQueueGenericSend+0x18a>
 80077fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077fc:	2200      	movs	r2, #0
 80077fe:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007802:	f001 ff23 	bl	800964c <vPortExitCritical>
 8007806:	1d3a      	adds	r2, r7, #4
 8007808:	f107 0314 	add.w	r3, r7, #20
 800780c:	4611      	mov	r1, r2
 800780e:	4618      	mov	r0, r3
 8007810:	f001 f82e 	bl	8008870 <xTaskCheckForTimeOut>
 8007814:	4603      	mov	r3, r0
 8007816:	2b00      	cmp	r3, #0
 8007818:	d124      	bne.n	8007864 <xQueueGenericSend+0x1ec>
 800781a:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800781c:	f000 faa6 	bl	8007d6c <prvIsQueueFull>
 8007820:	4603      	mov	r3, r0
 8007822:	2b00      	cmp	r3, #0
 8007824:	d018      	beq.n	8007858 <xQueueGenericSend+0x1e0>
 8007826:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007828:	3310      	adds	r3, #16
 800782a:	687a      	ldr	r2, [r7, #4]
 800782c:	4611      	mov	r1, r2
 800782e:	4618      	mov	r0, r3
 8007830:	f000 ff52 	bl	80086d8 <vTaskPlaceOnEventList>
 8007834:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8007836:	f000 fa31 	bl	8007c9c <prvUnlockQueue>
 800783a:	f000 fd7f 	bl	800833c <xTaskResumeAll>
 800783e:	4603      	mov	r3, r0
 8007840:	2b00      	cmp	r3, #0
 8007842:	f47f af7c 	bne.w	800773e <xQueueGenericSend+0xc6>
 8007846:	4b0c      	ldr	r3, [pc, #48]	@ (8007878 <xQueueGenericSend+0x200>)
 8007848:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800784c:	601a      	str	r2, [r3, #0]
 800784e:	f3bf 8f4f 	dsb	sy
 8007852:	f3bf 8f6f 	isb	sy
 8007856:	e772      	b.n	800773e <xQueueGenericSend+0xc6>
 8007858:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800785a:	f000 fa1f 	bl	8007c9c <prvUnlockQueue>
 800785e:	f000 fd6d 	bl	800833c <xTaskResumeAll>
 8007862:	e76c      	b.n	800773e <xQueueGenericSend+0xc6>
 8007864:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8007866:	f000 fa19 	bl	8007c9c <prvUnlockQueue>
 800786a:	f000 fd67 	bl	800833c <xTaskResumeAll>
 800786e:	2300      	movs	r3, #0
 8007870:	4618      	mov	r0, r3
 8007872:	3738      	adds	r7, #56	@ 0x38
 8007874:	46bd      	mov	sp, r7
 8007876:	bd80      	pop	{r7, pc}
 8007878:	e000ed04 	.word	0xe000ed04

0800787c <xQueueGenericSendFromISR>:
 800787c:	b580      	push	{r7, lr}
 800787e:	b090      	sub	sp, #64	@ 0x40
 8007880:	af00      	add	r7, sp, #0
 8007882:	60f8      	str	r0, [r7, #12]
 8007884:	60b9      	str	r1, [r7, #8]
 8007886:	607a      	str	r2, [r7, #4]
 8007888:	603b      	str	r3, [r7, #0]
 800788a:	68fb      	ldr	r3, [r7, #12]
 800788c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800788e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007890:	2b00      	cmp	r3, #0
 8007892:	d10b      	bne.n	80078ac <xQueueGenericSendFromISR+0x30>
 8007894:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007898:	f383 8811 	msr	BASEPRI, r3
 800789c:	f3bf 8f6f 	isb	sy
 80078a0:	f3bf 8f4f 	dsb	sy
 80078a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80078a6:	bf00      	nop
 80078a8:	bf00      	nop
 80078aa:	e7fd      	b.n	80078a8 <xQueueGenericSendFromISR+0x2c>
 80078ac:	68bb      	ldr	r3, [r7, #8]
 80078ae:	2b00      	cmp	r3, #0
 80078b0:	d103      	bne.n	80078ba <xQueueGenericSendFromISR+0x3e>
 80078b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80078b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	d101      	bne.n	80078be <xQueueGenericSendFromISR+0x42>
 80078ba:	2301      	movs	r3, #1
 80078bc:	e000      	b.n	80078c0 <xQueueGenericSendFromISR+0x44>
 80078be:	2300      	movs	r3, #0
 80078c0:	2b00      	cmp	r3, #0
 80078c2:	d10b      	bne.n	80078dc <xQueueGenericSendFromISR+0x60>
 80078c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078c8:	f383 8811 	msr	BASEPRI, r3
 80078cc:	f3bf 8f6f 	isb	sy
 80078d0:	f3bf 8f4f 	dsb	sy
 80078d4:	627b      	str	r3, [r7, #36]	@ 0x24
 80078d6:	bf00      	nop
 80078d8:	bf00      	nop
 80078da:	e7fd      	b.n	80078d8 <xQueueGenericSendFromISR+0x5c>
 80078dc:	683b      	ldr	r3, [r7, #0]
 80078de:	2b02      	cmp	r3, #2
 80078e0:	d103      	bne.n	80078ea <xQueueGenericSendFromISR+0x6e>
 80078e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80078e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80078e6:	2b01      	cmp	r3, #1
 80078e8:	d101      	bne.n	80078ee <xQueueGenericSendFromISR+0x72>
 80078ea:	2301      	movs	r3, #1
 80078ec:	e000      	b.n	80078f0 <xQueueGenericSendFromISR+0x74>
 80078ee:	2300      	movs	r3, #0
 80078f0:	2b00      	cmp	r3, #0
 80078f2:	d10b      	bne.n	800790c <xQueueGenericSendFromISR+0x90>
 80078f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078f8:	f383 8811 	msr	BASEPRI, r3
 80078fc:	f3bf 8f6f 	isb	sy
 8007900:	f3bf 8f4f 	dsb	sy
 8007904:	623b      	str	r3, [r7, #32]
 8007906:	bf00      	nop
 8007908:	bf00      	nop
 800790a:	e7fd      	b.n	8007908 <xQueueGenericSendFromISR+0x8c>
 800790c:	f001 ff4c 	bl	80097a8 <vPortValidateInterruptPriority>
 8007910:	f3ef 8211 	mrs	r2, BASEPRI
 8007914:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007918:	f383 8811 	msr	BASEPRI, r3
 800791c:	f3bf 8f6f 	isb	sy
 8007920:	f3bf 8f4f 	dsb	sy
 8007924:	61fa      	str	r2, [r7, #28]
 8007926:	61bb      	str	r3, [r7, #24]
 8007928:	69fb      	ldr	r3, [r7, #28]
 800792a:	637b      	str	r3, [r7, #52]	@ 0x34
 800792c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800792e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007930:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007932:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007934:	429a      	cmp	r2, r3
 8007936:	d302      	bcc.n	800793e <xQueueGenericSendFromISR+0xc2>
 8007938:	683b      	ldr	r3, [r7, #0]
 800793a:	2b02      	cmp	r3, #2
 800793c:	d12f      	bne.n	800799e <xQueueGenericSendFromISR+0x122>
 800793e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007940:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007944:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8007948:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800794a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800794c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800794e:	683a      	ldr	r2, [r7, #0]
 8007950:	68b9      	ldr	r1, [r7, #8]
 8007952:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8007954:	f000 f912 	bl	8007b7c <prvCopyDataToQueue>
 8007958:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 800795c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007960:	d112      	bne.n	8007988 <xQueueGenericSendFromISR+0x10c>
 8007962:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007964:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007966:	2b00      	cmp	r3, #0
 8007968:	d016      	beq.n	8007998 <xQueueGenericSendFromISR+0x11c>
 800796a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800796c:	3324      	adds	r3, #36	@ 0x24
 800796e:	4618      	mov	r0, r3
 8007970:	f000 ff04 	bl	800877c <xTaskRemoveFromEventList>
 8007974:	4603      	mov	r3, r0
 8007976:	2b00      	cmp	r3, #0
 8007978:	d00e      	beq.n	8007998 <xQueueGenericSendFromISR+0x11c>
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	2b00      	cmp	r3, #0
 800797e:	d00b      	beq.n	8007998 <xQueueGenericSendFromISR+0x11c>
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	2201      	movs	r2, #1
 8007984:	601a      	str	r2, [r3, #0]
 8007986:	e007      	b.n	8007998 <xQueueGenericSendFromISR+0x11c>
 8007988:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800798c:	3301      	adds	r3, #1
 800798e:	b2db      	uxtb	r3, r3
 8007990:	b25a      	sxtb	r2, r3
 8007992:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007994:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007998:	2301      	movs	r3, #1
 800799a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800799c:	e001      	b.n	80079a2 <xQueueGenericSendFromISR+0x126>
 800799e:	2300      	movs	r3, #0
 80079a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80079a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80079a4:	617b      	str	r3, [r7, #20]
 80079a6:	697b      	ldr	r3, [r7, #20]
 80079a8:	f383 8811 	msr	BASEPRI, r3
 80079ac:	bf00      	nop
 80079ae:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80079b0:	4618      	mov	r0, r3
 80079b2:	3740      	adds	r7, #64	@ 0x40
 80079b4:	46bd      	mov	sp, r7
 80079b6:	bd80      	pop	{r7, pc}

080079b8 <xQueueReceive>:
 80079b8:	b580      	push	{r7, lr}
 80079ba:	b08c      	sub	sp, #48	@ 0x30
 80079bc:	af00      	add	r7, sp, #0
 80079be:	60f8      	str	r0, [r7, #12]
 80079c0:	60b9      	str	r1, [r7, #8]
 80079c2:	607a      	str	r2, [r7, #4]
 80079c4:	2300      	movs	r3, #0
 80079c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80079c8:	68fb      	ldr	r3, [r7, #12]
 80079ca:	62bb      	str	r3, [r7, #40]	@ 0x28
 80079cc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80079ce:	2b00      	cmp	r3, #0
 80079d0:	d10b      	bne.n	80079ea <xQueueReceive+0x32>
 80079d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079d6:	f383 8811 	msr	BASEPRI, r3
 80079da:	f3bf 8f6f 	isb	sy
 80079de:	f3bf 8f4f 	dsb	sy
 80079e2:	623b      	str	r3, [r7, #32]
 80079e4:	bf00      	nop
 80079e6:	bf00      	nop
 80079e8:	e7fd      	b.n	80079e6 <xQueueReceive+0x2e>
 80079ea:	68bb      	ldr	r3, [r7, #8]
 80079ec:	2b00      	cmp	r3, #0
 80079ee:	d103      	bne.n	80079f8 <xQueueReceive+0x40>
 80079f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80079f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80079f4:	2b00      	cmp	r3, #0
 80079f6:	d101      	bne.n	80079fc <xQueueReceive+0x44>
 80079f8:	2301      	movs	r3, #1
 80079fa:	e000      	b.n	80079fe <xQueueReceive+0x46>
 80079fc:	2300      	movs	r3, #0
 80079fe:	2b00      	cmp	r3, #0
 8007a00:	d10b      	bne.n	8007a1a <xQueueReceive+0x62>
 8007a02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a06:	f383 8811 	msr	BASEPRI, r3
 8007a0a:	f3bf 8f6f 	isb	sy
 8007a0e:	f3bf 8f4f 	dsb	sy
 8007a12:	61fb      	str	r3, [r7, #28]
 8007a14:	bf00      	nop
 8007a16:	bf00      	nop
 8007a18:	e7fd      	b.n	8007a16 <xQueueReceive+0x5e>
 8007a1a:	f001 f875 	bl	8008b08 <xTaskGetSchedulerState>
 8007a1e:	4603      	mov	r3, r0
 8007a20:	2b00      	cmp	r3, #0
 8007a22:	d102      	bne.n	8007a2a <xQueueReceive+0x72>
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	2b00      	cmp	r3, #0
 8007a28:	d101      	bne.n	8007a2e <xQueueReceive+0x76>
 8007a2a:	2301      	movs	r3, #1
 8007a2c:	e000      	b.n	8007a30 <xQueueReceive+0x78>
 8007a2e:	2300      	movs	r3, #0
 8007a30:	2b00      	cmp	r3, #0
 8007a32:	d10b      	bne.n	8007a4c <xQueueReceive+0x94>
 8007a34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a38:	f383 8811 	msr	BASEPRI, r3
 8007a3c:	f3bf 8f6f 	isb	sy
 8007a40:	f3bf 8f4f 	dsb	sy
 8007a44:	61bb      	str	r3, [r7, #24]
 8007a46:	bf00      	nop
 8007a48:	bf00      	nop
 8007a4a:	e7fd      	b.n	8007a48 <xQueueReceive+0x90>
 8007a4c:	f001 fdcc 	bl	80095e8 <vPortEnterCritical>
 8007a50:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007a52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007a54:	627b      	str	r3, [r7, #36]	@ 0x24
 8007a56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007a58:	2b00      	cmp	r3, #0
 8007a5a:	d01f      	beq.n	8007a9c <xQueueReceive+0xe4>
 8007a5c:	68b9      	ldr	r1, [r7, #8]
 8007a5e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007a60:	f000 f8f6 	bl	8007c50 <prvCopyDataFromQueue>
 8007a64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007a66:	1e5a      	subs	r2, r3, #1
 8007a68:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007a6a:	639a      	str	r2, [r3, #56]	@ 0x38
 8007a6c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007a6e:	691b      	ldr	r3, [r3, #16]
 8007a70:	2b00      	cmp	r3, #0
 8007a72:	d00f      	beq.n	8007a94 <xQueueReceive+0xdc>
 8007a74:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007a76:	3310      	adds	r3, #16
 8007a78:	4618      	mov	r0, r3
 8007a7a:	f000 fe7f 	bl	800877c <xTaskRemoveFromEventList>
 8007a7e:	4603      	mov	r3, r0
 8007a80:	2b00      	cmp	r3, #0
 8007a82:	d007      	beq.n	8007a94 <xQueueReceive+0xdc>
 8007a84:	4b3c      	ldr	r3, [pc, #240]	@ (8007b78 <xQueueReceive+0x1c0>)
 8007a86:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007a8a:	601a      	str	r2, [r3, #0]
 8007a8c:	f3bf 8f4f 	dsb	sy
 8007a90:	f3bf 8f6f 	isb	sy
 8007a94:	f001 fdda 	bl	800964c <vPortExitCritical>
 8007a98:	2301      	movs	r3, #1
 8007a9a:	e069      	b.n	8007b70 <xQueueReceive+0x1b8>
 8007a9c:	687b      	ldr	r3, [r7, #4]
 8007a9e:	2b00      	cmp	r3, #0
 8007aa0:	d103      	bne.n	8007aaa <xQueueReceive+0xf2>
 8007aa2:	f001 fdd3 	bl	800964c <vPortExitCritical>
 8007aa6:	2300      	movs	r3, #0
 8007aa8:	e062      	b.n	8007b70 <xQueueReceive+0x1b8>
 8007aaa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007aac:	2b00      	cmp	r3, #0
 8007aae:	d106      	bne.n	8007abe <xQueueReceive+0x106>
 8007ab0:	f107 0310 	add.w	r3, r7, #16
 8007ab4:	4618      	mov	r0, r3
 8007ab6:	f000 fec5 	bl	8008844 <vTaskInternalSetTimeOutState>
 8007aba:	2301      	movs	r3, #1
 8007abc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007abe:	f001 fdc5 	bl	800964c <vPortExitCritical>
 8007ac2:	f000 fc2d 	bl	8008320 <vTaskSuspendAll>
 8007ac6:	f001 fd8f 	bl	80095e8 <vPortEnterCritical>
 8007aca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007acc:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8007ad0:	b25b      	sxtb	r3, r3
 8007ad2:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007ad6:	d103      	bne.n	8007ae0 <xQueueReceive+0x128>
 8007ad8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007ada:	2200      	movs	r2, #0
 8007adc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007ae0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007ae2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007ae6:	b25b      	sxtb	r3, r3
 8007ae8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007aec:	d103      	bne.n	8007af6 <xQueueReceive+0x13e>
 8007aee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007af0:	2200      	movs	r2, #0
 8007af2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007af6:	f001 fda9 	bl	800964c <vPortExitCritical>
 8007afa:	1d3a      	adds	r2, r7, #4
 8007afc:	f107 0310 	add.w	r3, r7, #16
 8007b00:	4611      	mov	r1, r2
 8007b02:	4618      	mov	r0, r3
 8007b04:	f000 feb4 	bl	8008870 <xTaskCheckForTimeOut>
 8007b08:	4603      	mov	r3, r0
 8007b0a:	2b00      	cmp	r3, #0
 8007b0c:	d123      	bne.n	8007b56 <xQueueReceive+0x19e>
 8007b0e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007b10:	f000 f916 	bl	8007d40 <prvIsQueueEmpty>
 8007b14:	4603      	mov	r3, r0
 8007b16:	2b00      	cmp	r3, #0
 8007b18:	d017      	beq.n	8007b4a <xQueueReceive+0x192>
 8007b1a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007b1c:	3324      	adds	r3, #36	@ 0x24
 8007b1e:	687a      	ldr	r2, [r7, #4]
 8007b20:	4611      	mov	r1, r2
 8007b22:	4618      	mov	r0, r3
 8007b24:	f000 fdd8 	bl	80086d8 <vTaskPlaceOnEventList>
 8007b28:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007b2a:	f000 f8b7 	bl	8007c9c <prvUnlockQueue>
 8007b2e:	f000 fc05 	bl	800833c <xTaskResumeAll>
 8007b32:	4603      	mov	r3, r0
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d189      	bne.n	8007a4c <xQueueReceive+0x94>
 8007b38:	4b0f      	ldr	r3, [pc, #60]	@ (8007b78 <xQueueReceive+0x1c0>)
 8007b3a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b3e:	601a      	str	r2, [r3, #0]
 8007b40:	f3bf 8f4f 	dsb	sy
 8007b44:	f3bf 8f6f 	isb	sy
 8007b48:	e780      	b.n	8007a4c <xQueueReceive+0x94>
 8007b4a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007b4c:	f000 f8a6 	bl	8007c9c <prvUnlockQueue>
 8007b50:	f000 fbf4 	bl	800833c <xTaskResumeAll>
 8007b54:	e77a      	b.n	8007a4c <xQueueReceive+0x94>
 8007b56:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007b58:	f000 f8a0 	bl	8007c9c <prvUnlockQueue>
 8007b5c:	f000 fbee 	bl	800833c <xTaskResumeAll>
 8007b60:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8007b62:	f000 f8ed 	bl	8007d40 <prvIsQueueEmpty>
 8007b66:	4603      	mov	r3, r0
 8007b68:	2b00      	cmp	r3, #0
 8007b6a:	f43f af6f 	beq.w	8007a4c <xQueueReceive+0x94>
 8007b6e:	2300      	movs	r3, #0
 8007b70:	4618      	mov	r0, r3
 8007b72:	3730      	adds	r7, #48	@ 0x30
 8007b74:	46bd      	mov	sp, r7
 8007b76:	bd80      	pop	{r7, pc}
 8007b78:	e000ed04 	.word	0xe000ed04

08007b7c <prvCopyDataToQueue>:
 8007b7c:	b580      	push	{r7, lr}
 8007b7e:	b086      	sub	sp, #24
 8007b80:	af00      	add	r7, sp, #0
 8007b82:	60f8      	str	r0, [r7, #12]
 8007b84:	60b9      	str	r1, [r7, #8]
 8007b86:	607a      	str	r2, [r7, #4]
 8007b88:	2300      	movs	r3, #0
 8007b8a:	617b      	str	r3, [r7, #20]
 8007b8c:	68fb      	ldr	r3, [r7, #12]
 8007b8e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007b90:	613b      	str	r3, [r7, #16]
 8007b92:	68fb      	ldr	r3, [r7, #12]
 8007b94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007b96:	2b00      	cmp	r3, #0
 8007b98:	d10d      	bne.n	8007bb6 <prvCopyDataToQueue+0x3a>
 8007b9a:	68fb      	ldr	r3, [r7, #12]
 8007b9c:	681b      	ldr	r3, [r3, #0]
 8007b9e:	2b00      	cmp	r3, #0
 8007ba0:	d14d      	bne.n	8007c3e <prvCopyDataToQueue+0xc2>
 8007ba2:	68fb      	ldr	r3, [r7, #12]
 8007ba4:	689b      	ldr	r3, [r3, #8]
 8007ba6:	4618      	mov	r0, r3
 8007ba8:	f000 ffcc 	bl	8008b44 <xTaskPriorityDisinherit>
 8007bac:	6178      	str	r0, [r7, #20]
 8007bae:	68fb      	ldr	r3, [r7, #12]
 8007bb0:	2200      	movs	r2, #0
 8007bb2:	609a      	str	r2, [r3, #8]
 8007bb4:	e043      	b.n	8007c3e <prvCopyDataToQueue+0xc2>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	2b00      	cmp	r3, #0
 8007bba:	d119      	bne.n	8007bf0 <prvCopyDataToQueue+0x74>
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	6858      	ldr	r0, [r3, #4]
 8007bc0:	68fb      	ldr	r3, [r7, #12]
 8007bc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007bc4:	461a      	mov	r2, r3
 8007bc6:	68b9      	ldr	r1, [r7, #8]
 8007bc8:	f002 f8a2 	bl	8009d10 <memcpy>
 8007bcc:	68fb      	ldr	r3, [r7, #12]
 8007bce:	685a      	ldr	r2, [r3, #4]
 8007bd0:	68fb      	ldr	r3, [r7, #12]
 8007bd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007bd4:	441a      	add	r2, r3
 8007bd6:	68fb      	ldr	r3, [r7, #12]
 8007bd8:	605a      	str	r2, [r3, #4]
 8007bda:	68fb      	ldr	r3, [r7, #12]
 8007bdc:	685a      	ldr	r2, [r3, #4]
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	689b      	ldr	r3, [r3, #8]
 8007be2:	429a      	cmp	r2, r3
 8007be4:	d32b      	bcc.n	8007c3e <prvCopyDataToQueue+0xc2>
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	681a      	ldr	r2, [r3, #0]
 8007bea:	68fb      	ldr	r3, [r7, #12]
 8007bec:	605a      	str	r2, [r3, #4]
 8007bee:	e026      	b.n	8007c3e <prvCopyDataToQueue+0xc2>
 8007bf0:	68fb      	ldr	r3, [r7, #12]
 8007bf2:	68d8      	ldr	r0, [r3, #12]
 8007bf4:	68fb      	ldr	r3, [r7, #12]
 8007bf6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007bf8:	461a      	mov	r2, r3
 8007bfa:	68b9      	ldr	r1, [r7, #8]
 8007bfc:	f002 f888 	bl	8009d10 <memcpy>
 8007c00:	68fb      	ldr	r3, [r7, #12]
 8007c02:	68da      	ldr	r2, [r3, #12]
 8007c04:	68fb      	ldr	r3, [r7, #12]
 8007c06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c08:	425b      	negs	r3, r3
 8007c0a:	441a      	add	r2, r3
 8007c0c:	68fb      	ldr	r3, [r7, #12]
 8007c0e:	60da      	str	r2, [r3, #12]
 8007c10:	68fb      	ldr	r3, [r7, #12]
 8007c12:	68da      	ldr	r2, [r3, #12]
 8007c14:	68fb      	ldr	r3, [r7, #12]
 8007c16:	681b      	ldr	r3, [r3, #0]
 8007c18:	429a      	cmp	r2, r3
 8007c1a:	d207      	bcs.n	8007c2c <prvCopyDataToQueue+0xb0>
 8007c1c:	68fb      	ldr	r3, [r7, #12]
 8007c1e:	689a      	ldr	r2, [r3, #8]
 8007c20:	68fb      	ldr	r3, [r7, #12]
 8007c22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c24:	425b      	negs	r3, r3
 8007c26:	441a      	add	r2, r3
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	60da      	str	r2, [r3, #12]
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	2b02      	cmp	r3, #2
 8007c30:	d105      	bne.n	8007c3e <prvCopyDataToQueue+0xc2>
 8007c32:	693b      	ldr	r3, [r7, #16]
 8007c34:	2b00      	cmp	r3, #0
 8007c36:	d002      	beq.n	8007c3e <prvCopyDataToQueue+0xc2>
 8007c38:	693b      	ldr	r3, [r7, #16]
 8007c3a:	3b01      	subs	r3, #1
 8007c3c:	613b      	str	r3, [r7, #16]
 8007c3e:	693b      	ldr	r3, [r7, #16]
 8007c40:	1c5a      	adds	r2, r3, #1
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	639a      	str	r2, [r3, #56]	@ 0x38
 8007c46:	697b      	ldr	r3, [r7, #20]
 8007c48:	4618      	mov	r0, r3
 8007c4a:	3718      	adds	r7, #24
 8007c4c:	46bd      	mov	sp, r7
 8007c4e:	bd80      	pop	{r7, pc}

08007c50 <prvCopyDataFromQueue>:
 8007c50:	b580      	push	{r7, lr}
 8007c52:	b082      	sub	sp, #8
 8007c54:	af00      	add	r7, sp, #0
 8007c56:	6078      	str	r0, [r7, #4]
 8007c58:	6039      	str	r1, [r7, #0]
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c5e:	2b00      	cmp	r3, #0
 8007c60:	d018      	beq.n	8007c94 <prvCopyDataFromQueue+0x44>
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	68da      	ldr	r2, [r3, #12]
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c6a:	441a      	add	r2, r3
 8007c6c:	687b      	ldr	r3, [r7, #4]
 8007c6e:	60da      	str	r2, [r3, #12]
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	68da      	ldr	r2, [r3, #12]
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	689b      	ldr	r3, [r3, #8]
 8007c78:	429a      	cmp	r2, r3
 8007c7a:	d303      	bcc.n	8007c84 <prvCopyDataFromQueue+0x34>
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	681a      	ldr	r2, [r3, #0]
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	60da      	str	r2, [r3, #12]
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	68d9      	ldr	r1, [r3, #12]
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c8c:	461a      	mov	r2, r3
 8007c8e:	6838      	ldr	r0, [r7, #0]
 8007c90:	f002 f83e 	bl	8009d10 <memcpy>
 8007c94:	bf00      	nop
 8007c96:	3708      	adds	r7, #8
 8007c98:	46bd      	mov	sp, r7
 8007c9a:	bd80      	pop	{r7, pc}

08007c9c <prvUnlockQueue>:
 8007c9c:	b580      	push	{r7, lr}
 8007c9e:	b084      	sub	sp, #16
 8007ca0:	af00      	add	r7, sp, #0
 8007ca2:	6078      	str	r0, [r7, #4]
 8007ca4:	f001 fca0 	bl	80095e8 <vPortEnterCritical>
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007cae:	73fb      	strb	r3, [r7, #15]
 8007cb0:	e011      	b.n	8007cd6 <prvUnlockQueue+0x3a>
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007cb6:	2b00      	cmp	r3, #0
 8007cb8:	d012      	beq.n	8007ce0 <prvUnlockQueue+0x44>
 8007cba:	687b      	ldr	r3, [r7, #4]
 8007cbc:	3324      	adds	r3, #36	@ 0x24
 8007cbe:	4618      	mov	r0, r3
 8007cc0:	f000 fd5c 	bl	800877c <xTaskRemoveFromEventList>
 8007cc4:	4603      	mov	r3, r0
 8007cc6:	2b00      	cmp	r3, #0
 8007cc8:	d001      	beq.n	8007cce <prvUnlockQueue+0x32>
 8007cca:	f000 fe35 	bl	8008938 <vTaskMissedYield>
 8007cce:	7bfb      	ldrb	r3, [r7, #15]
 8007cd0:	3b01      	subs	r3, #1
 8007cd2:	b2db      	uxtb	r3, r3
 8007cd4:	73fb      	strb	r3, [r7, #15]
 8007cd6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8007cda:	2b00      	cmp	r3, #0
 8007cdc:	dce9      	bgt.n	8007cb2 <prvUnlockQueue+0x16>
 8007cde:	e000      	b.n	8007ce2 <prvUnlockQueue+0x46>
 8007ce0:	bf00      	nop
 8007ce2:	687b      	ldr	r3, [r7, #4]
 8007ce4:	22ff      	movs	r2, #255	@ 0xff
 8007ce6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007cea:	f001 fcaf 	bl	800964c <vPortExitCritical>
 8007cee:	f001 fc7b 	bl	80095e8 <vPortEnterCritical>
 8007cf2:	687b      	ldr	r3, [r7, #4]
 8007cf4:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8007cf8:	73bb      	strb	r3, [r7, #14]
 8007cfa:	e011      	b.n	8007d20 <prvUnlockQueue+0x84>
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	691b      	ldr	r3, [r3, #16]
 8007d00:	2b00      	cmp	r3, #0
 8007d02:	d012      	beq.n	8007d2a <prvUnlockQueue+0x8e>
 8007d04:	687b      	ldr	r3, [r7, #4]
 8007d06:	3310      	adds	r3, #16
 8007d08:	4618      	mov	r0, r3
 8007d0a:	f000 fd37 	bl	800877c <xTaskRemoveFromEventList>
 8007d0e:	4603      	mov	r3, r0
 8007d10:	2b00      	cmp	r3, #0
 8007d12:	d001      	beq.n	8007d18 <prvUnlockQueue+0x7c>
 8007d14:	f000 fe10 	bl	8008938 <vTaskMissedYield>
 8007d18:	7bbb      	ldrb	r3, [r7, #14]
 8007d1a:	3b01      	subs	r3, #1
 8007d1c:	b2db      	uxtb	r3, r3
 8007d1e:	73bb      	strb	r3, [r7, #14]
 8007d20:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007d24:	2b00      	cmp	r3, #0
 8007d26:	dce9      	bgt.n	8007cfc <prvUnlockQueue+0x60>
 8007d28:	e000      	b.n	8007d2c <prvUnlockQueue+0x90>
 8007d2a:	bf00      	nop
 8007d2c:	687b      	ldr	r3, [r7, #4]
 8007d2e:	22ff      	movs	r2, #255	@ 0xff
 8007d30:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007d34:	f001 fc8a 	bl	800964c <vPortExitCritical>
 8007d38:	bf00      	nop
 8007d3a:	3710      	adds	r7, #16
 8007d3c:	46bd      	mov	sp, r7
 8007d3e:	bd80      	pop	{r7, pc}

08007d40 <prvIsQueueEmpty>:
 8007d40:	b580      	push	{r7, lr}
 8007d42:	b084      	sub	sp, #16
 8007d44:	af00      	add	r7, sp, #0
 8007d46:	6078      	str	r0, [r7, #4]
 8007d48:	f001 fc4e 	bl	80095e8 <vPortEnterCritical>
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d102      	bne.n	8007d5a <prvIsQueueEmpty+0x1a>
 8007d54:	2301      	movs	r3, #1
 8007d56:	60fb      	str	r3, [r7, #12]
 8007d58:	e001      	b.n	8007d5e <prvIsQueueEmpty+0x1e>
 8007d5a:	2300      	movs	r3, #0
 8007d5c:	60fb      	str	r3, [r7, #12]
 8007d5e:	f001 fc75 	bl	800964c <vPortExitCritical>
 8007d62:	68fb      	ldr	r3, [r7, #12]
 8007d64:	4618      	mov	r0, r3
 8007d66:	3710      	adds	r7, #16
 8007d68:	46bd      	mov	sp, r7
 8007d6a:	bd80      	pop	{r7, pc}

08007d6c <prvIsQueueFull>:
 8007d6c:	b580      	push	{r7, lr}
 8007d6e:	b084      	sub	sp, #16
 8007d70:	af00      	add	r7, sp, #0
 8007d72:	6078      	str	r0, [r7, #4]
 8007d74:	f001 fc38 	bl	80095e8 <vPortEnterCritical>
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007d80:	429a      	cmp	r2, r3
 8007d82:	d102      	bne.n	8007d8a <prvIsQueueFull+0x1e>
 8007d84:	2301      	movs	r3, #1
 8007d86:	60fb      	str	r3, [r7, #12]
 8007d88:	e001      	b.n	8007d8e <prvIsQueueFull+0x22>
 8007d8a:	2300      	movs	r3, #0
 8007d8c:	60fb      	str	r3, [r7, #12]
 8007d8e:	f001 fc5d 	bl	800964c <vPortExitCritical>
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	4618      	mov	r0, r3
 8007d96:	3710      	adds	r7, #16
 8007d98:	46bd      	mov	sp, r7
 8007d9a:	bd80      	pop	{r7, pc}

08007d9c <vQueueAddToRegistry>:
 8007d9c:	b480      	push	{r7}
 8007d9e:	b085      	sub	sp, #20
 8007da0:	af00      	add	r7, sp, #0
 8007da2:	6078      	str	r0, [r7, #4]
 8007da4:	6039      	str	r1, [r7, #0]
 8007da6:	2300      	movs	r3, #0
 8007da8:	60fb      	str	r3, [r7, #12]
 8007daa:	e014      	b.n	8007dd6 <vQueueAddToRegistry+0x3a>
 8007dac:	4a0f      	ldr	r2, [pc, #60]	@ (8007dec <vQueueAddToRegistry+0x50>)
 8007dae:	68fb      	ldr	r3, [r7, #12]
 8007db0:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8007db4:	2b00      	cmp	r3, #0
 8007db6:	d10b      	bne.n	8007dd0 <vQueueAddToRegistry+0x34>
 8007db8:	490c      	ldr	r1, [pc, #48]	@ (8007dec <vQueueAddToRegistry+0x50>)
 8007dba:	68fb      	ldr	r3, [r7, #12]
 8007dbc:	683a      	ldr	r2, [r7, #0]
 8007dbe:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8007dc2:	4a0a      	ldr	r2, [pc, #40]	@ (8007dec <vQueueAddToRegistry+0x50>)
 8007dc4:	68fb      	ldr	r3, [r7, #12]
 8007dc6:	00db      	lsls	r3, r3, #3
 8007dc8:	4413      	add	r3, r2
 8007dca:	687a      	ldr	r2, [r7, #4]
 8007dcc:	605a      	str	r2, [r3, #4]
 8007dce:	e006      	b.n	8007dde <vQueueAddToRegistry+0x42>
 8007dd0:	68fb      	ldr	r3, [r7, #12]
 8007dd2:	3301      	adds	r3, #1
 8007dd4:	60fb      	str	r3, [r7, #12]
 8007dd6:	68fb      	ldr	r3, [r7, #12]
 8007dd8:	2b07      	cmp	r3, #7
 8007dda:	d9e7      	bls.n	8007dac <vQueueAddToRegistry+0x10>
 8007ddc:	bf00      	nop
 8007dde:	bf00      	nop
 8007de0:	3714      	adds	r7, #20
 8007de2:	46bd      	mov	sp, r7
 8007de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007de8:	4770      	bx	lr
 8007dea:	bf00      	nop
 8007dec:	200010d4 	.word	0x200010d4

08007df0 <vQueueWaitForMessageRestricted>:
 8007df0:	b580      	push	{r7, lr}
 8007df2:	b086      	sub	sp, #24
 8007df4:	af00      	add	r7, sp, #0
 8007df6:	60f8      	str	r0, [r7, #12]
 8007df8:	60b9      	str	r1, [r7, #8]
 8007dfa:	607a      	str	r2, [r7, #4]
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	617b      	str	r3, [r7, #20]
 8007e00:	f001 fbf2 	bl	80095e8 <vPortEnterCritical>
 8007e04:	697b      	ldr	r3, [r7, #20]
 8007e06:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8007e0a:	b25b      	sxtb	r3, r3
 8007e0c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007e10:	d103      	bne.n	8007e1a <vQueueWaitForMessageRestricted+0x2a>
 8007e12:	697b      	ldr	r3, [r7, #20]
 8007e14:	2200      	movs	r2, #0
 8007e16:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007e1a:	697b      	ldr	r3, [r7, #20]
 8007e1c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8007e20:	b25b      	sxtb	r3, r3
 8007e22:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007e26:	d103      	bne.n	8007e30 <vQueueWaitForMessageRestricted+0x40>
 8007e28:	697b      	ldr	r3, [r7, #20]
 8007e2a:	2200      	movs	r2, #0
 8007e2c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007e30:	f001 fc0c 	bl	800964c <vPortExitCritical>
 8007e34:	697b      	ldr	r3, [r7, #20]
 8007e36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007e38:	2b00      	cmp	r3, #0
 8007e3a:	d106      	bne.n	8007e4a <vQueueWaitForMessageRestricted+0x5a>
 8007e3c:	697b      	ldr	r3, [r7, #20]
 8007e3e:	3324      	adds	r3, #36	@ 0x24
 8007e40:	687a      	ldr	r2, [r7, #4]
 8007e42:	68b9      	ldr	r1, [r7, #8]
 8007e44:	4618      	mov	r0, r3
 8007e46:	f000 fc6d 	bl	8008724 <vTaskPlaceOnEventListRestricted>
 8007e4a:	6978      	ldr	r0, [r7, #20]
 8007e4c:	f7ff ff26 	bl	8007c9c <prvUnlockQueue>
 8007e50:	bf00      	nop
 8007e52:	3718      	adds	r7, #24
 8007e54:	46bd      	mov	sp, r7
 8007e56:	bd80      	pop	{r7, pc}

08007e58 <xTaskCreateStatic>:
 8007e58:	b580      	push	{r7, lr}
 8007e5a:	b08e      	sub	sp, #56	@ 0x38
 8007e5c:	af04      	add	r7, sp, #16
 8007e5e:	60f8      	str	r0, [r7, #12]
 8007e60:	60b9      	str	r1, [r7, #8]
 8007e62:	607a      	str	r2, [r7, #4]
 8007e64:	603b      	str	r3, [r7, #0]
 8007e66:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007e68:	2b00      	cmp	r3, #0
 8007e6a:	d10b      	bne.n	8007e84 <xTaskCreateStatic+0x2c>
 8007e6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e70:	f383 8811 	msr	BASEPRI, r3
 8007e74:	f3bf 8f6f 	isb	sy
 8007e78:	f3bf 8f4f 	dsb	sy
 8007e7c:	623b      	str	r3, [r7, #32]
 8007e7e:	bf00      	nop
 8007e80:	bf00      	nop
 8007e82:	e7fd      	b.n	8007e80 <xTaskCreateStatic+0x28>
 8007e84:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007e86:	2b00      	cmp	r3, #0
 8007e88:	d10b      	bne.n	8007ea2 <xTaskCreateStatic+0x4a>
 8007e8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e8e:	f383 8811 	msr	BASEPRI, r3
 8007e92:	f3bf 8f6f 	isb	sy
 8007e96:	f3bf 8f4f 	dsb	sy
 8007e9a:	61fb      	str	r3, [r7, #28]
 8007e9c:	bf00      	nop
 8007e9e:	bf00      	nop
 8007ea0:	e7fd      	b.n	8007e9e <xTaskCreateStatic+0x46>
 8007ea2:	23a8      	movs	r3, #168	@ 0xa8
 8007ea4:	613b      	str	r3, [r7, #16]
 8007ea6:	693b      	ldr	r3, [r7, #16]
 8007ea8:	2ba8      	cmp	r3, #168	@ 0xa8
 8007eaa:	d00b      	beq.n	8007ec4 <xTaskCreateStatic+0x6c>
 8007eac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007eb0:	f383 8811 	msr	BASEPRI, r3
 8007eb4:	f3bf 8f6f 	isb	sy
 8007eb8:	f3bf 8f4f 	dsb	sy
 8007ebc:	61bb      	str	r3, [r7, #24]
 8007ebe:	bf00      	nop
 8007ec0:	bf00      	nop
 8007ec2:	e7fd      	b.n	8007ec0 <xTaskCreateStatic+0x68>
 8007ec4:	693b      	ldr	r3, [r7, #16]
 8007ec6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ec8:	2b00      	cmp	r3, #0
 8007eca:	d01e      	beq.n	8007f0a <xTaskCreateStatic+0xb2>
 8007ecc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007ece:	2b00      	cmp	r3, #0
 8007ed0:	d01b      	beq.n	8007f0a <xTaskCreateStatic+0xb2>
 8007ed2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ed4:	627b      	str	r3, [r7, #36]	@ 0x24
 8007ed6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007ed8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8007eda:	631a      	str	r2, [r3, #48]	@ 0x30
 8007edc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007ede:	2202      	movs	r2, #2
 8007ee0:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8007ee4:	2300      	movs	r3, #0
 8007ee6:	9303      	str	r3, [sp, #12]
 8007ee8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007eea:	9302      	str	r3, [sp, #8]
 8007eec:	f107 0314 	add.w	r3, r7, #20
 8007ef0:	9301      	str	r3, [sp, #4]
 8007ef2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007ef4:	9300      	str	r3, [sp, #0]
 8007ef6:	683b      	ldr	r3, [r7, #0]
 8007ef8:	687a      	ldr	r2, [r7, #4]
 8007efa:	68b9      	ldr	r1, [r7, #8]
 8007efc:	68f8      	ldr	r0, [r7, #12]
 8007efe:	f000 f851 	bl	8007fa4 <prvInitialiseNewTask>
 8007f02:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8007f04:	f000 f8f6 	bl	80080f4 <prvAddNewTaskToReadyList>
 8007f08:	e001      	b.n	8007f0e <xTaskCreateStatic+0xb6>
 8007f0a:	2300      	movs	r3, #0
 8007f0c:	617b      	str	r3, [r7, #20]
 8007f0e:	697b      	ldr	r3, [r7, #20]
 8007f10:	4618      	mov	r0, r3
 8007f12:	3728      	adds	r7, #40	@ 0x28
 8007f14:	46bd      	mov	sp, r7
 8007f16:	bd80      	pop	{r7, pc}

08007f18 <xTaskCreate>:
 8007f18:	b580      	push	{r7, lr}
 8007f1a:	b08c      	sub	sp, #48	@ 0x30
 8007f1c:	af04      	add	r7, sp, #16
 8007f1e:	60f8      	str	r0, [r7, #12]
 8007f20:	60b9      	str	r1, [r7, #8]
 8007f22:	603b      	str	r3, [r7, #0]
 8007f24:	4613      	mov	r3, r2
 8007f26:	80fb      	strh	r3, [r7, #6]
 8007f28:	88fb      	ldrh	r3, [r7, #6]
 8007f2a:	009b      	lsls	r3, r3, #2
 8007f2c:	4618      	mov	r0, r3
 8007f2e:	f001 fc7d 	bl	800982c <pvPortMalloc>
 8007f32:	6178      	str	r0, [r7, #20]
 8007f34:	697b      	ldr	r3, [r7, #20]
 8007f36:	2b00      	cmp	r3, #0
 8007f38:	d00e      	beq.n	8007f58 <xTaskCreate+0x40>
 8007f3a:	20a8      	movs	r0, #168	@ 0xa8
 8007f3c:	f001 fc76 	bl	800982c <pvPortMalloc>
 8007f40:	61f8      	str	r0, [r7, #28]
 8007f42:	69fb      	ldr	r3, [r7, #28]
 8007f44:	2b00      	cmp	r3, #0
 8007f46:	d003      	beq.n	8007f50 <xTaskCreate+0x38>
 8007f48:	69fb      	ldr	r3, [r7, #28]
 8007f4a:	697a      	ldr	r2, [r7, #20]
 8007f4c:	631a      	str	r2, [r3, #48]	@ 0x30
 8007f4e:	e005      	b.n	8007f5c <xTaskCreate+0x44>
 8007f50:	6978      	ldr	r0, [r7, #20]
 8007f52:	f001 fd39 	bl	80099c8 <vPortFree>
 8007f56:	e001      	b.n	8007f5c <xTaskCreate+0x44>
 8007f58:	2300      	movs	r3, #0
 8007f5a:	61fb      	str	r3, [r7, #28]
 8007f5c:	69fb      	ldr	r3, [r7, #28]
 8007f5e:	2b00      	cmp	r3, #0
 8007f60:	d017      	beq.n	8007f92 <xTaskCreate+0x7a>
 8007f62:	69fb      	ldr	r3, [r7, #28]
 8007f64:	2200      	movs	r2, #0
 8007f66:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8007f6a:	88fa      	ldrh	r2, [r7, #6]
 8007f6c:	2300      	movs	r3, #0
 8007f6e:	9303      	str	r3, [sp, #12]
 8007f70:	69fb      	ldr	r3, [r7, #28]
 8007f72:	9302      	str	r3, [sp, #8]
 8007f74:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007f76:	9301      	str	r3, [sp, #4]
 8007f78:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007f7a:	9300      	str	r3, [sp, #0]
 8007f7c:	683b      	ldr	r3, [r7, #0]
 8007f7e:	68b9      	ldr	r1, [r7, #8]
 8007f80:	68f8      	ldr	r0, [r7, #12]
 8007f82:	f000 f80f 	bl	8007fa4 <prvInitialiseNewTask>
 8007f86:	69f8      	ldr	r0, [r7, #28]
 8007f88:	f000 f8b4 	bl	80080f4 <prvAddNewTaskToReadyList>
 8007f8c:	2301      	movs	r3, #1
 8007f8e:	61bb      	str	r3, [r7, #24]
 8007f90:	e002      	b.n	8007f98 <xTaskCreate+0x80>
 8007f92:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8007f96:	61bb      	str	r3, [r7, #24]
 8007f98:	69bb      	ldr	r3, [r7, #24]
 8007f9a:	4618      	mov	r0, r3
 8007f9c:	3720      	adds	r7, #32
 8007f9e:	46bd      	mov	sp, r7
 8007fa0:	bd80      	pop	{r7, pc}
	...

08007fa4 <prvInitialiseNewTask>:
 8007fa4:	b580      	push	{r7, lr}
 8007fa6:	b088      	sub	sp, #32
 8007fa8:	af00      	add	r7, sp, #0
 8007faa:	60f8      	str	r0, [r7, #12]
 8007fac:	60b9      	str	r1, [r7, #8]
 8007fae:	607a      	str	r2, [r7, #4]
 8007fb0:	603b      	str	r3, [r7, #0]
 8007fb2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007fb4:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	009b      	lsls	r3, r3, #2
 8007fba:	461a      	mov	r2, r3
 8007fbc:	21a5      	movs	r1, #165	@ 0xa5
 8007fbe:	f001 fe23 	bl	8009c08 <memset>
 8007fc2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007fc4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8007fcc:	3b01      	subs	r3, #1
 8007fce:	009b      	lsls	r3, r3, #2
 8007fd0:	4413      	add	r3, r2
 8007fd2:	61bb      	str	r3, [r7, #24]
 8007fd4:	69bb      	ldr	r3, [r7, #24]
 8007fd6:	f023 0307 	bic.w	r3, r3, #7
 8007fda:	61bb      	str	r3, [r7, #24]
 8007fdc:	69bb      	ldr	r3, [r7, #24]
 8007fde:	f003 0307 	and.w	r3, r3, #7
 8007fe2:	2b00      	cmp	r3, #0
 8007fe4:	d00b      	beq.n	8007ffe <prvInitialiseNewTask+0x5a>
 8007fe6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fea:	f383 8811 	msr	BASEPRI, r3
 8007fee:	f3bf 8f6f 	isb	sy
 8007ff2:	f3bf 8f4f 	dsb	sy
 8007ff6:	617b      	str	r3, [r7, #20]
 8007ff8:	bf00      	nop
 8007ffa:	bf00      	nop
 8007ffc:	e7fd      	b.n	8007ffa <prvInitialiseNewTask+0x56>
 8007ffe:	68bb      	ldr	r3, [r7, #8]
 8008000:	2b00      	cmp	r3, #0
 8008002:	d01f      	beq.n	8008044 <prvInitialiseNewTask+0xa0>
 8008004:	2300      	movs	r3, #0
 8008006:	61fb      	str	r3, [r7, #28]
 8008008:	e012      	b.n	8008030 <prvInitialiseNewTask+0x8c>
 800800a:	68ba      	ldr	r2, [r7, #8]
 800800c:	69fb      	ldr	r3, [r7, #28]
 800800e:	4413      	add	r3, r2
 8008010:	7819      	ldrb	r1, [r3, #0]
 8008012:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008014:	69fb      	ldr	r3, [r7, #28]
 8008016:	4413      	add	r3, r2
 8008018:	3334      	adds	r3, #52	@ 0x34
 800801a:	460a      	mov	r2, r1
 800801c:	701a      	strb	r2, [r3, #0]
 800801e:	68ba      	ldr	r2, [r7, #8]
 8008020:	69fb      	ldr	r3, [r7, #28]
 8008022:	4413      	add	r3, r2
 8008024:	781b      	ldrb	r3, [r3, #0]
 8008026:	2b00      	cmp	r3, #0
 8008028:	d006      	beq.n	8008038 <prvInitialiseNewTask+0x94>
 800802a:	69fb      	ldr	r3, [r7, #28]
 800802c:	3301      	adds	r3, #1
 800802e:	61fb      	str	r3, [r7, #28]
 8008030:	69fb      	ldr	r3, [r7, #28]
 8008032:	2b0f      	cmp	r3, #15
 8008034:	d9e9      	bls.n	800800a <prvInitialiseNewTask+0x66>
 8008036:	e000      	b.n	800803a <prvInitialiseNewTask+0x96>
 8008038:	bf00      	nop
 800803a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800803c:	2200      	movs	r2, #0
 800803e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8008042:	e003      	b.n	800804c <prvInitialiseNewTask+0xa8>
 8008044:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008046:	2200      	movs	r2, #0
 8008048:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800804c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800804e:	2b37      	cmp	r3, #55	@ 0x37
 8008050:	d901      	bls.n	8008056 <prvInitialiseNewTask+0xb2>
 8008052:	2337      	movs	r3, #55	@ 0x37
 8008054:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008056:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008058:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800805a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800805c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800805e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8008060:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008062:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008064:	2200      	movs	r2, #0
 8008066:	651a      	str	r2, [r3, #80]	@ 0x50
 8008068:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800806a:	3304      	adds	r3, #4
 800806c:	4618      	mov	r0, r3
 800806e:	f7ff f965 	bl	800733c <vListInitialiseItem>
 8008072:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008074:	3318      	adds	r3, #24
 8008076:	4618      	mov	r0, r3
 8008078:	f7ff f960 	bl	800733c <vListInitialiseItem>
 800807c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800807e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008080:	611a      	str	r2, [r3, #16]
 8008082:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008084:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8008088:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800808a:	619a      	str	r2, [r3, #24]
 800808c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800808e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008090:	625a      	str	r2, [r3, #36]	@ 0x24
 8008092:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008094:	2200      	movs	r2, #0
 8008096:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800809a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800809c:	2200      	movs	r2, #0
 800809e:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 80080a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080a4:	3354      	adds	r3, #84	@ 0x54
 80080a6:	224c      	movs	r2, #76	@ 0x4c
 80080a8:	2100      	movs	r1, #0
 80080aa:	4618      	mov	r0, r3
 80080ac:	f001 fdac 	bl	8009c08 <memset>
 80080b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080b2:	4a0d      	ldr	r2, [pc, #52]	@ (80080e8 <prvInitialiseNewTask+0x144>)
 80080b4:	659a      	str	r2, [r3, #88]	@ 0x58
 80080b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080b8:	4a0c      	ldr	r2, [pc, #48]	@ (80080ec <prvInitialiseNewTask+0x148>)
 80080ba:	65da      	str	r2, [r3, #92]	@ 0x5c
 80080bc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080be:	4a0c      	ldr	r2, [pc, #48]	@ (80080f0 <prvInitialiseNewTask+0x14c>)
 80080c0:	661a      	str	r2, [r3, #96]	@ 0x60
 80080c2:	683a      	ldr	r2, [r7, #0]
 80080c4:	68f9      	ldr	r1, [r7, #12]
 80080c6:	69b8      	ldr	r0, [r7, #24]
 80080c8:	f001 f95a 	bl	8009380 <pxPortInitialiseStack>
 80080cc:	4602      	mov	r2, r0
 80080ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080d0:	601a      	str	r2, [r3, #0]
 80080d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80080d4:	2b00      	cmp	r3, #0
 80080d6:	d002      	beq.n	80080de <prvInitialiseNewTask+0x13a>
 80080d8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80080da:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80080dc:	601a      	str	r2, [r3, #0]
 80080de:	bf00      	nop
 80080e0:	3720      	adds	r7, #32
 80080e2:	46bd      	mov	sp, r7
 80080e4:	bd80      	pop	{r7, pc}
 80080e6:	bf00      	nop
 80080e8:	20005368 	.word	0x20005368
 80080ec:	200053d0 	.word	0x200053d0
 80080f0:	20005438 	.word	0x20005438

080080f4 <prvAddNewTaskToReadyList>:
 80080f4:	b580      	push	{r7, lr}
 80080f6:	b082      	sub	sp, #8
 80080f8:	af00      	add	r7, sp, #0
 80080fa:	6078      	str	r0, [r7, #4]
 80080fc:	f001 fa74 	bl	80095e8 <vPortEnterCritical>
 8008100:	4b2d      	ldr	r3, [pc, #180]	@ (80081b8 <prvAddNewTaskToReadyList+0xc4>)
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	3301      	adds	r3, #1
 8008106:	4a2c      	ldr	r2, [pc, #176]	@ (80081b8 <prvAddNewTaskToReadyList+0xc4>)
 8008108:	6013      	str	r3, [r2, #0]
 800810a:	4b2c      	ldr	r3, [pc, #176]	@ (80081bc <prvAddNewTaskToReadyList+0xc8>)
 800810c:	681b      	ldr	r3, [r3, #0]
 800810e:	2b00      	cmp	r3, #0
 8008110:	d109      	bne.n	8008126 <prvAddNewTaskToReadyList+0x32>
 8008112:	4a2a      	ldr	r2, [pc, #168]	@ (80081bc <prvAddNewTaskToReadyList+0xc8>)
 8008114:	687b      	ldr	r3, [r7, #4]
 8008116:	6013      	str	r3, [r2, #0]
 8008118:	4b27      	ldr	r3, [pc, #156]	@ (80081b8 <prvAddNewTaskToReadyList+0xc4>)
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	2b01      	cmp	r3, #1
 800811e:	d110      	bne.n	8008142 <prvAddNewTaskToReadyList+0x4e>
 8008120:	f000 fc2e 	bl	8008980 <prvInitialiseTaskLists>
 8008124:	e00d      	b.n	8008142 <prvAddNewTaskToReadyList+0x4e>
 8008126:	4b26      	ldr	r3, [pc, #152]	@ (80081c0 <prvAddNewTaskToReadyList+0xcc>)
 8008128:	681b      	ldr	r3, [r3, #0]
 800812a:	2b00      	cmp	r3, #0
 800812c:	d109      	bne.n	8008142 <prvAddNewTaskToReadyList+0x4e>
 800812e:	4b23      	ldr	r3, [pc, #140]	@ (80081bc <prvAddNewTaskToReadyList+0xc8>)
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008138:	429a      	cmp	r2, r3
 800813a:	d802      	bhi.n	8008142 <prvAddNewTaskToReadyList+0x4e>
 800813c:	4a1f      	ldr	r2, [pc, #124]	@ (80081bc <prvAddNewTaskToReadyList+0xc8>)
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	6013      	str	r3, [r2, #0]
 8008142:	4b20      	ldr	r3, [pc, #128]	@ (80081c4 <prvAddNewTaskToReadyList+0xd0>)
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	3301      	adds	r3, #1
 8008148:	4a1e      	ldr	r2, [pc, #120]	@ (80081c4 <prvAddNewTaskToReadyList+0xd0>)
 800814a:	6013      	str	r3, [r2, #0]
 800814c:	4b1d      	ldr	r3, [pc, #116]	@ (80081c4 <prvAddNewTaskToReadyList+0xd0>)
 800814e:	681a      	ldr	r2, [r3, #0]
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	645a      	str	r2, [r3, #68]	@ 0x44
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008158:	4b1b      	ldr	r3, [pc, #108]	@ (80081c8 <prvAddNewTaskToReadyList+0xd4>)
 800815a:	681b      	ldr	r3, [r3, #0]
 800815c:	429a      	cmp	r2, r3
 800815e:	d903      	bls.n	8008168 <prvAddNewTaskToReadyList+0x74>
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008164:	4a18      	ldr	r2, [pc, #96]	@ (80081c8 <prvAddNewTaskToReadyList+0xd4>)
 8008166:	6013      	str	r3, [r2, #0]
 8008168:	687b      	ldr	r3, [r7, #4]
 800816a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800816c:	4613      	mov	r3, r2
 800816e:	009b      	lsls	r3, r3, #2
 8008170:	4413      	add	r3, r2
 8008172:	009b      	lsls	r3, r3, #2
 8008174:	4a15      	ldr	r2, [pc, #84]	@ (80081cc <prvAddNewTaskToReadyList+0xd8>)
 8008176:	441a      	add	r2, r3
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	3304      	adds	r3, #4
 800817c:	4619      	mov	r1, r3
 800817e:	4610      	mov	r0, r2
 8008180:	f7ff f8e9 	bl	8007356 <vListInsertEnd>
 8008184:	f001 fa62 	bl	800964c <vPortExitCritical>
 8008188:	4b0d      	ldr	r3, [pc, #52]	@ (80081c0 <prvAddNewTaskToReadyList+0xcc>)
 800818a:	681b      	ldr	r3, [r3, #0]
 800818c:	2b00      	cmp	r3, #0
 800818e:	d00e      	beq.n	80081ae <prvAddNewTaskToReadyList+0xba>
 8008190:	4b0a      	ldr	r3, [pc, #40]	@ (80081bc <prvAddNewTaskToReadyList+0xc8>)
 8008192:	681b      	ldr	r3, [r3, #0]
 8008194:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800819a:	429a      	cmp	r2, r3
 800819c:	d207      	bcs.n	80081ae <prvAddNewTaskToReadyList+0xba>
 800819e:	4b0c      	ldr	r3, [pc, #48]	@ (80081d0 <prvAddNewTaskToReadyList+0xdc>)
 80081a0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80081a4:	601a      	str	r2, [r3, #0]
 80081a6:	f3bf 8f4f 	dsb	sy
 80081aa:	f3bf 8f6f 	isb	sy
 80081ae:	bf00      	nop
 80081b0:	3708      	adds	r7, #8
 80081b2:	46bd      	mov	sp, r7
 80081b4:	bd80      	pop	{r7, pc}
 80081b6:	bf00      	nop
 80081b8:	200015e8 	.word	0x200015e8
 80081bc:	20001114 	.word	0x20001114
 80081c0:	200015f4 	.word	0x200015f4
 80081c4:	20001604 	.word	0x20001604
 80081c8:	200015f0 	.word	0x200015f0
 80081cc:	20001118 	.word	0x20001118
 80081d0:	e000ed04 	.word	0xe000ed04

080081d4 <vTaskDelay>:
 80081d4:	b580      	push	{r7, lr}
 80081d6:	b084      	sub	sp, #16
 80081d8:	af00      	add	r7, sp, #0
 80081da:	6078      	str	r0, [r7, #4]
 80081dc:	2300      	movs	r3, #0
 80081de:	60fb      	str	r3, [r7, #12]
 80081e0:	687b      	ldr	r3, [r7, #4]
 80081e2:	2b00      	cmp	r3, #0
 80081e4:	d018      	beq.n	8008218 <vTaskDelay+0x44>
 80081e6:	4b14      	ldr	r3, [pc, #80]	@ (8008238 <vTaskDelay+0x64>)
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	2b00      	cmp	r3, #0
 80081ec:	d00b      	beq.n	8008206 <vTaskDelay+0x32>
 80081ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081f2:	f383 8811 	msr	BASEPRI, r3
 80081f6:	f3bf 8f6f 	isb	sy
 80081fa:	f3bf 8f4f 	dsb	sy
 80081fe:	60bb      	str	r3, [r7, #8]
 8008200:	bf00      	nop
 8008202:	bf00      	nop
 8008204:	e7fd      	b.n	8008202 <vTaskDelay+0x2e>
 8008206:	f000 f88b 	bl	8008320 <vTaskSuspendAll>
 800820a:	2100      	movs	r1, #0
 800820c:	6878      	ldr	r0, [r7, #4]
 800820e:	f000 fd09 	bl	8008c24 <prvAddCurrentTaskToDelayedList>
 8008212:	f000 f893 	bl	800833c <xTaskResumeAll>
 8008216:	60f8      	str	r0, [r7, #12]
 8008218:	68fb      	ldr	r3, [r7, #12]
 800821a:	2b00      	cmp	r3, #0
 800821c:	d107      	bne.n	800822e <vTaskDelay+0x5a>
 800821e:	4b07      	ldr	r3, [pc, #28]	@ (800823c <vTaskDelay+0x68>)
 8008220:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008224:	601a      	str	r2, [r3, #0]
 8008226:	f3bf 8f4f 	dsb	sy
 800822a:	f3bf 8f6f 	isb	sy
 800822e:	bf00      	nop
 8008230:	3710      	adds	r7, #16
 8008232:	46bd      	mov	sp, r7
 8008234:	bd80      	pop	{r7, pc}
 8008236:	bf00      	nop
 8008238:	20001610 	.word	0x20001610
 800823c:	e000ed04 	.word	0xe000ed04

08008240 <vTaskStartScheduler>:
 8008240:	b580      	push	{r7, lr}
 8008242:	b08a      	sub	sp, #40	@ 0x28
 8008244:	af04      	add	r7, sp, #16
 8008246:	2300      	movs	r3, #0
 8008248:	60bb      	str	r3, [r7, #8]
 800824a:	2300      	movs	r3, #0
 800824c:	607b      	str	r3, [r7, #4]
 800824e:	463a      	mov	r2, r7
 8008250:	1d39      	adds	r1, r7, #4
 8008252:	f107 0308 	add.w	r3, r7, #8
 8008256:	4618      	mov	r0, r3
 8008258:	f7ff f81c 	bl	8007294 <vApplicationGetIdleTaskMemory>
 800825c:	6839      	ldr	r1, [r7, #0]
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	68ba      	ldr	r2, [r7, #8]
 8008262:	9202      	str	r2, [sp, #8]
 8008264:	9301      	str	r3, [sp, #4]
 8008266:	2300      	movs	r3, #0
 8008268:	9300      	str	r3, [sp, #0]
 800826a:	2300      	movs	r3, #0
 800826c:	460a      	mov	r2, r1
 800826e:	4924      	ldr	r1, [pc, #144]	@ (8008300 <vTaskStartScheduler+0xc0>)
 8008270:	4824      	ldr	r0, [pc, #144]	@ (8008304 <vTaskStartScheduler+0xc4>)
 8008272:	f7ff fdf1 	bl	8007e58 <xTaskCreateStatic>
 8008276:	4603      	mov	r3, r0
 8008278:	4a23      	ldr	r2, [pc, #140]	@ (8008308 <vTaskStartScheduler+0xc8>)
 800827a:	6013      	str	r3, [r2, #0]
 800827c:	4b22      	ldr	r3, [pc, #136]	@ (8008308 <vTaskStartScheduler+0xc8>)
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	2b00      	cmp	r3, #0
 8008282:	d002      	beq.n	800828a <vTaskStartScheduler+0x4a>
 8008284:	2301      	movs	r3, #1
 8008286:	617b      	str	r3, [r7, #20]
 8008288:	e001      	b.n	800828e <vTaskStartScheduler+0x4e>
 800828a:	2300      	movs	r3, #0
 800828c:	617b      	str	r3, [r7, #20]
 800828e:	697b      	ldr	r3, [r7, #20]
 8008290:	2b01      	cmp	r3, #1
 8008292:	d102      	bne.n	800829a <vTaskStartScheduler+0x5a>
 8008294:	f000 fd1a 	bl	8008ccc <xTimerCreateTimerTask>
 8008298:	6178      	str	r0, [r7, #20]
 800829a:	697b      	ldr	r3, [r7, #20]
 800829c:	2b01      	cmp	r3, #1
 800829e:	d11b      	bne.n	80082d8 <vTaskStartScheduler+0x98>
 80082a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082a4:	f383 8811 	msr	BASEPRI, r3
 80082a8:	f3bf 8f6f 	isb	sy
 80082ac:	f3bf 8f4f 	dsb	sy
 80082b0:	613b      	str	r3, [r7, #16]
 80082b2:	bf00      	nop
 80082b4:	4b15      	ldr	r3, [pc, #84]	@ (800830c <vTaskStartScheduler+0xcc>)
 80082b6:	681b      	ldr	r3, [r3, #0]
 80082b8:	3354      	adds	r3, #84	@ 0x54
 80082ba:	4a15      	ldr	r2, [pc, #84]	@ (8008310 <vTaskStartScheduler+0xd0>)
 80082bc:	6013      	str	r3, [r2, #0]
 80082be:	4b15      	ldr	r3, [pc, #84]	@ (8008314 <vTaskStartScheduler+0xd4>)
 80082c0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80082c4:	601a      	str	r2, [r3, #0]
 80082c6:	4b14      	ldr	r3, [pc, #80]	@ (8008318 <vTaskStartScheduler+0xd8>)
 80082c8:	2201      	movs	r2, #1
 80082ca:	601a      	str	r2, [r3, #0]
 80082cc:	4b13      	ldr	r3, [pc, #76]	@ (800831c <vTaskStartScheduler+0xdc>)
 80082ce:	2200      	movs	r2, #0
 80082d0:	601a      	str	r2, [r3, #0]
 80082d2:	f001 f8e5 	bl	80094a0 <xPortStartScheduler>
 80082d6:	e00f      	b.n	80082f8 <vTaskStartScheduler+0xb8>
 80082d8:	697b      	ldr	r3, [r7, #20]
 80082da:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80082de:	d10b      	bne.n	80082f8 <vTaskStartScheduler+0xb8>
 80082e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082e4:	f383 8811 	msr	BASEPRI, r3
 80082e8:	f3bf 8f6f 	isb	sy
 80082ec:	f3bf 8f4f 	dsb	sy
 80082f0:	60fb      	str	r3, [r7, #12]
 80082f2:	bf00      	nop
 80082f4:	bf00      	nop
 80082f6:	e7fd      	b.n	80082f4 <vTaskStartScheduler+0xb4>
 80082f8:	bf00      	nop
 80082fa:	3718      	adds	r7, #24
 80082fc:	46bd      	mov	sp, r7
 80082fe:	bd80      	pop	{r7, pc}
 8008300:	08009e24 	.word	0x08009e24
 8008304:	08008951 	.word	0x08008951
 8008308:	2000160c 	.word	0x2000160c
 800830c:	20001114 	.word	0x20001114
 8008310:	20000010 	.word	0x20000010
 8008314:	20001608 	.word	0x20001608
 8008318:	200015f4 	.word	0x200015f4
 800831c:	200015ec 	.word	0x200015ec

08008320 <vTaskSuspendAll>:
 8008320:	b480      	push	{r7}
 8008322:	af00      	add	r7, sp, #0
 8008324:	4b04      	ldr	r3, [pc, #16]	@ (8008338 <vTaskSuspendAll+0x18>)
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	3301      	adds	r3, #1
 800832a:	4a03      	ldr	r2, [pc, #12]	@ (8008338 <vTaskSuspendAll+0x18>)
 800832c:	6013      	str	r3, [r2, #0]
 800832e:	bf00      	nop
 8008330:	46bd      	mov	sp, r7
 8008332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008336:	4770      	bx	lr
 8008338:	20001610 	.word	0x20001610

0800833c <xTaskResumeAll>:
 800833c:	b580      	push	{r7, lr}
 800833e:	b084      	sub	sp, #16
 8008340:	af00      	add	r7, sp, #0
 8008342:	2300      	movs	r3, #0
 8008344:	60fb      	str	r3, [r7, #12]
 8008346:	2300      	movs	r3, #0
 8008348:	60bb      	str	r3, [r7, #8]
 800834a:	4b42      	ldr	r3, [pc, #264]	@ (8008454 <xTaskResumeAll+0x118>)
 800834c:	681b      	ldr	r3, [r3, #0]
 800834e:	2b00      	cmp	r3, #0
 8008350:	d10b      	bne.n	800836a <xTaskResumeAll+0x2e>
 8008352:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008356:	f383 8811 	msr	BASEPRI, r3
 800835a:	f3bf 8f6f 	isb	sy
 800835e:	f3bf 8f4f 	dsb	sy
 8008362:	603b      	str	r3, [r7, #0]
 8008364:	bf00      	nop
 8008366:	bf00      	nop
 8008368:	e7fd      	b.n	8008366 <xTaskResumeAll+0x2a>
 800836a:	f001 f93d 	bl	80095e8 <vPortEnterCritical>
 800836e:	4b39      	ldr	r3, [pc, #228]	@ (8008454 <xTaskResumeAll+0x118>)
 8008370:	681b      	ldr	r3, [r3, #0]
 8008372:	3b01      	subs	r3, #1
 8008374:	4a37      	ldr	r2, [pc, #220]	@ (8008454 <xTaskResumeAll+0x118>)
 8008376:	6013      	str	r3, [r2, #0]
 8008378:	4b36      	ldr	r3, [pc, #216]	@ (8008454 <xTaskResumeAll+0x118>)
 800837a:	681b      	ldr	r3, [r3, #0]
 800837c:	2b00      	cmp	r3, #0
 800837e:	d162      	bne.n	8008446 <xTaskResumeAll+0x10a>
 8008380:	4b35      	ldr	r3, [pc, #212]	@ (8008458 <xTaskResumeAll+0x11c>)
 8008382:	681b      	ldr	r3, [r3, #0]
 8008384:	2b00      	cmp	r3, #0
 8008386:	d05e      	beq.n	8008446 <xTaskResumeAll+0x10a>
 8008388:	e02f      	b.n	80083ea <xTaskResumeAll+0xae>
 800838a:	4b34      	ldr	r3, [pc, #208]	@ (800845c <xTaskResumeAll+0x120>)
 800838c:	68db      	ldr	r3, [r3, #12]
 800838e:	68db      	ldr	r3, [r3, #12]
 8008390:	60fb      	str	r3, [r7, #12]
 8008392:	68fb      	ldr	r3, [r7, #12]
 8008394:	3318      	adds	r3, #24
 8008396:	4618      	mov	r0, r3
 8008398:	f7ff f83a 	bl	8007410 <uxListRemove>
 800839c:	68fb      	ldr	r3, [r7, #12]
 800839e:	3304      	adds	r3, #4
 80083a0:	4618      	mov	r0, r3
 80083a2:	f7ff f835 	bl	8007410 <uxListRemove>
 80083a6:	68fb      	ldr	r3, [r7, #12]
 80083a8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80083aa:	4b2d      	ldr	r3, [pc, #180]	@ (8008460 <xTaskResumeAll+0x124>)
 80083ac:	681b      	ldr	r3, [r3, #0]
 80083ae:	429a      	cmp	r2, r3
 80083b0:	d903      	bls.n	80083ba <xTaskResumeAll+0x7e>
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80083b6:	4a2a      	ldr	r2, [pc, #168]	@ (8008460 <xTaskResumeAll+0x124>)
 80083b8:	6013      	str	r3, [r2, #0]
 80083ba:	68fb      	ldr	r3, [r7, #12]
 80083bc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80083be:	4613      	mov	r3, r2
 80083c0:	009b      	lsls	r3, r3, #2
 80083c2:	4413      	add	r3, r2
 80083c4:	009b      	lsls	r3, r3, #2
 80083c6:	4a27      	ldr	r2, [pc, #156]	@ (8008464 <xTaskResumeAll+0x128>)
 80083c8:	441a      	add	r2, r3
 80083ca:	68fb      	ldr	r3, [r7, #12]
 80083cc:	3304      	adds	r3, #4
 80083ce:	4619      	mov	r1, r3
 80083d0:	4610      	mov	r0, r2
 80083d2:	f7fe ffc0 	bl	8007356 <vListInsertEnd>
 80083d6:	68fb      	ldr	r3, [r7, #12]
 80083d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80083da:	4b23      	ldr	r3, [pc, #140]	@ (8008468 <xTaskResumeAll+0x12c>)
 80083dc:	681b      	ldr	r3, [r3, #0]
 80083de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80083e0:	429a      	cmp	r2, r3
 80083e2:	d302      	bcc.n	80083ea <xTaskResumeAll+0xae>
 80083e4:	4b21      	ldr	r3, [pc, #132]	@ (800846c <xTaskResumeAll+0x130>)
 80083e6:	2201      	movs	r2, #1
 80083e8:	601a      	str	r2, [r3, #0]
 80083ea:	4b1c      	ldr	r3, [pc, #112]	@ (800845c <xTaskResumeAll+0x120>)
 80083ec:	681b      	ldr	r3, [r3, #0]
 80083ee:	2b00      	cmp	r3, #0
 80083f0:	d1cb      	bne.n	800838a <xTaskResumeAll+0x4e>
 80083f2:	68fb      	ldr	r3, [r7, #12]
 80083f4:	2b00      	cmp	r3, #0
 80083f6:	d001      	beq.n	80083fc <xTaskResumeAll+0xc0>
 80083f8:	f000 fb66 	bl	8008ac8 <prvResetNextTaskUnblockTime>
 80083fc:	4b1c      	ldr	r3, [pc, #112]	@ (8008470 <xTaskResumeAll+0x134>)
 80083fe:	681b      	ldr	r3, [r3, #0]
 8008400:	607b      	str	r3, [r7, #4]
 8008402:	687b      	ldr	r3, [r7, #4]
 8008404:	2b00      	cmp	r3, #0
 8008406:	d010      	beq.n	800842a <xTaskResumeAll+0xee>
 8008408:	f000 f846 	bl	8008498 <xTaskIncrementTick>
 800840c:	4603      	mov	r3, r0
 800840e:	2b00      	cmp	r3, #0
 8008410:	d002      	beq.n	8008418 <xTaskResumeAll+0xdc>
 8008412:	4b16      	ldr	r3, [pc, #88]	@ (800846c <xTaskResumeAll+0x130>)
 8008414:	2201      	movs	r2, #1
 8008416:	601a      	str	r2, [r3, #0]
 8008418:	687b      	ldr	r3, [r7, #4]
 800841a:	3b01      	subs	r3, #1
 800841c:	607b      	str	r3, [r7, #4]
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	2b00      	cmp	r3, #0
 8008422:	d1f1      	bne.n	8008408 <xTaskResumeAll+0xcc>
 8008424:	4b12      	ldr	r3, [pc, #72]	@ (8008470 <xTaskResumeAll+0x134>)
 8008426:	2200      	movs	r2, #0
 8008428:	601a      	str	r2, [r3, #0]
 800842a:	4b10      	ldr	r3, [pc, #64]	@ (800846c <xTaskResumeAll+0x130>)
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	2b00      	cmp	r3, #0
 8008430:	d009      	beq.n	8008446 <xTaskResumeAll+0x10a>
 8008432:	2301      	movs	r3, #1
 8008434:	60bb      	str	r3, [r7, #8]
 8008436:	4b0f      	ldr	r3, [pc, #60]	@ (8008474 <xTaskResumeAll+0x138>)
 8008438:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800843c:	601a      	str	r2, [r3, #0]
 800843e:	f3bf 8f4f 	dsb	sy
 8008442:	f3bf 8f6f 	isb	sy
 8008446:	f001 f901 	bl	800964c <vPortExitCritical>
 800844a:	68bb      	ldr	r3, [r7, #8]
 800844c:	4618      	mov	r0, r3
 800844e:	3710      	adds	r7, #16
 8008450:	46bd      	mov	sp, r7
 8008452:	bd80      	pop	{r7, pc}
 8008454:	20001610 	.word	0x20001610
 8008458:	200015e8 	.word	0x200015e8
 800845c:	200015a8 	.word	0x200015a8
 8008460:	200015f0 	.word	0x200015f0
 8008464:	20001118 	.word	0x20001118
 8008468:	20001114 	.word	0x20001114
 800846c:	200015fc 	.word	0x200015fc
 8008470:	200015f8 	.word	0x200015f8
 8008474:	e000ed04 	.word	0xe000ed04

08008478 <xTaskGetTickCount>:
 8008478:	b480      	push	{r7}
 800847a:	b083      	sub	sp, #12
 800847c:	af00      	add	r7, sp, #0
 800847e:	4b05      	ldr	r3, [pc, #20]	@ (8008494 <xTaskGetTickCount+0x1c>)
 8008480:	681b      	ldr	r3, [r3, #0]
 8008482:	607b      	str	r3, [r7, #4]
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	4618      	mov	r0, r3
 8008488:	370c      	adds	r7, #12
 800848a:	46bd      	mov	sp, r7
 800848c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008490:	4770      	bx	lr
 8008492:	bf00      	nop
 8008494:	200015ec 	.word	0x200015ec

08008498 <xTaskIncrementTick>:
 8008498:	b580      	push	{r7, lr}
 800849a:	b086      	sub	sp, #24
 800849c:	af00      	add	r7, sp, #0
 800849e:	2300      	movs	r3, #0
 80084a0:	617b      	str	r3, [r7, #20]
 80084a2:	4b4f      	ldr	r3, [pc, #316]	@ (80085e0 <xTaskIncrementTick+0x148>)
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	2b00      	cmp	r3, #0
 80084a8:	f040 8090 	bne.w	80085cc <xTaskIncrementTick+0x134>
 80084ac:	4b4d      	ldr	r3, [pc, #308]	@ (80085e4 <xTaskIncrementTick+0x14c>)
 80084ae:	681b      	ldr	r3, [r3, #0]
 80084b0:	3301      	adds	r3, #1
 80084b2:	613b      	str	r3, [r7, #16]
 80084b4:	4a4b      	ldr	r2, [pc, #300]	@ (80085e4 <xTaskIncrementTick+0x14c>)
 80084b6:	693b      	ldr	r3, [r7, #16]
 80084b8:	6013      	str	r3, [r2, #0]
 80084ba:	693b      	ldr	r3, [r7, #16]
 80084bc:	2b00      	cmp	r3, #0
 80084be:	d121      	bne.n	8008504 <xTaskIncrementTick+0x6c>
 80084c0:	4b49      	ldr	r3, [pc, #292]	@ (80085e8 <xTaskIncrementTick+0x150>)
 80084c2:	681b      	ldr	r3, [r3, #0]
 80084c4:	681b      	ldr	r3, [r3, #0]
 80084c6:	2b00      	cmp	r3, #0
 80084c8:	d00b      	beq.n	80084e2 <xTaskIncrementTick+0x4a>
 80084ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084ce:	f383 8811 	msr	BASEPRI, r3
 80084d2:	f3bf 8f6f 	isb	sy
 80084d6:	f3bf 8f4f 	dsb	sy
 80084da:	603b      	str	r3, [r7, #0]
 80084dc:	bf00      	nop
 80084de:	bf00      	nop
 80084e0:	e7fd      	b.n	80084de <xTaskIncrementTick+0x46>
 80084e2:	4b41      	ldr	r3, [pc, #260]	@ (80085e8 <xTaskIncrementTick+0x150>)
 80084e4:	681b      	ldr	r3, [r3, #0]
 80084e6:	60fb      	str	r3, [r7, #12]
 80084e8:	4b40      	ldr	r3, [pc, #256]	@ (80085ec <xTaskIncrementTick+0x154>)
 80084ea:	681b      	ldr	r3, [r3, #0]
 80084ec:	4a3e      	ldr	r2, [pc, #248]	@ (80085e8 <xTaskIncrementTick+0x150>)
 80084ee:	6013      	str	r3, [r2, #0]
 80084f0:	4a3e      	ldr	r2, [pc, #248]	@ (80085ec <xTaskIncrementTick+0x154>)
 80084f2:	68fb      	ldr	r3, [r7, #12]
 80084f4:	6013      	str	r3, [r2, #0]
 80084f6:	4b3e      	ldr	r3, [pc, #248]	@ (80085f0 <xTaskIncrementTick+0x158>)
 80084f8:	681b      	ldr	r3, [r3, #0]
 80084fa:	3301      	adds	r3, #1
 80084fc:	4a3c      	ldr	r2, [pc, #240]	@ (80085f0 <xTaskIncrementTick+0x158>)
 80084fe:	6013      	str	r3, [r2, #0]
 8008500:	f000 fae2 	bl	8008ac8 <prvResetNextTaskUnblockTime>
 8008504:	4b3b      	ldr	r3, [pc, #236]	@ (80085f4 <xTaskIncrementTick+0x15c>)
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	693a      	ldr	r2, [r7, #16]
 800850a:	429a      	cmp	r2, r3
 800850c:	d349      	bcc.n	80085a2 <xTaskIncrementTick+0x10a>
 800850e:	4b36      	ldr	r3, [pc, #216]	@ (80085e8 <xTaskIncrementTick+0x150>)
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	681b      	ldr	r3, [r3, #0]
 8008514:	2b00      	cmp	r3, #0
 8008516:	d104      	bne.n	8008522 <xTaskIncrementTick+0x8a>
 8008518:	4b36      	ldr	r3, [pc, #216]	@ (80085f4 <xTaskIncrementTick+0x15c>)
 800851a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800851e:	601a      	str	r2, [r3, #0]
 8008520:	e03f      	b.n	80085a2 <xTaskIncrementTick+0x10a>
 8008522:	4b31      	ldr	r3, [pc, #196]	@ (80085e8 <xTaskIncrementTick+0x150>)
 8008524:	681b      	ldr	r3, [r3, #0]
 8008526:	68db      	ldr	r3, [r3, #12]
 8008528:	68db      	ldr	r3, [r3, #12]
 800852a:	60bb      	str	r3, [r7, #8]
 800852c:	68bb      	ldr	r3, [r7, #8]
 800852e:	685b      	ldr	r3, [r3, #4]
 8008530:	607b      	str	r3, [r7, #4]
 8008532:	693a      	ldr	r2, [r7, #16]
 8008534:	687b      	ldr	r3, [r7, #4]
 8008536:	429a      	cmp	r2, r3
 8008538:	d203      	bcs.n	8008542 <xTaskIncrementTick+0xaa>
 800853a:	4a2e      	ldr	r2, [pc, #184]	@ (80085f4 <xTaskIncrementTick+0x15c>)
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	6013      	str	r3, [r2, #0]
 8008540:	e02f      	b.n	80085a2 <xTaskIncrementTick+0x10a>
 8008542:	68bb      	ldr	r3, [r7, #8]
 8008544:	3304      	adds	r3, #4
 8008546:	4618      	mov	r0, r3
 8008548:	f7fe ff62 	bl	8007410 <uxListRemove>
 800854c:	68bb      	ldr	r3, [r7, #8]
 800854e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008550:	2b00      	cmp	r3, #0
 8008552:	d004      	beq.n	800855e <xTaskIncrementTick+0xc6>
 8008554:	68bb      	ldr	r3, [r7, #8]
 8008556:	3318      	adds	r3, #24
 8008558:	4618      	mov	r0, r3
 800855a:	f7fe ff59 	bl	8007410 <uxListRemove>
 800855e:	68bb      	ldr	r3, [r7, #8]
 8008560:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008562:	4b25      	ldr	r3, [pc, #148]	@ (80085f8 <xTaskIncrementTick+0x160>)
 8008564:	681b      	ldr	r3, [r3, #0]
 8008566:	429a      	cmp	r2, r3
 8008568:	d903      	bls.n	8008572 <xTaskIncrementTick+0xda>
 800856a:	68bb      	ldr	r3, [r7, #8]
 800856c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800856e:	4a22      	ldr	r2, [pc, #136]	@ (80085f8 <xTaskIncrementTick+0x160>)
 8008570:	6013      	str	r3, [r2, #0]
 8008572:	68bb      	ldr	r3, [r7, #8]
 8008574:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008576:	4613      	mov	r3, r2
 8008578:	009b      	lsls	r3, r3, #2
 800857a:	4413      	add	r3, r2
 800857c:	009b      	lsls	r3, r3, #2
 800857e:	4a1f      	ldr	r2, [pc, #124]	@ (80085fc <xTaskIncrementTick+0x164>)
 8008580:	441a      	add	r2, r3
 8008582:	68bb      	ldr	r3, [r7, #8]
 8008584:	3304      	adds	r3, #4
 8008586:	4619      	mov	r1, r3
 8008588:	4610      	mov	r0, r2
 800858a:	f7fe fee4 	bl	8007356 <vListInsertEnd>
 800858e:	68bb      	ldr	r3, [r7, #8]
 8008590:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008592:	4b1b      	ldr	r3, [pc, #108]	@ (8008600 <xTaskIncrementTick+0x168>)
 8008594:	681b      	ldr	r3, [r3, #0]
 8008596:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008598:	429a      	cmp	r2, r3
 800859a:	d3b8      	bcc.n	800850e <xTaskIncrementTick+0x76>
 800859c:	2301      	movs	r3, #1
 800859e:	617b      	str	r3, [r7, #20]
 80085a0:	e7b5      	b.n	800850e <xTaskIncrementTick+0x76>
 80085a2:	4b17      	ldr	r3, [pc, #92]	@ (8008600 <xTaskIncrementTick+0x168>)
 80085a4:	681b      	ldr	r3, [r3, #0]
 80085a6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80085a8:	4914      	ldr	r1, [pc, #80]	@ (80085fc <xTaskIncrementTick+0x164>)
 80085aa:	4613      	mov	r3, r2
 80085ac:	009b      	lsls	r3, r3, #2
 80085ae:	4413      	add	r3, r2
 80085b0:	009b      	lsls	r3, r3, #2
 80085b2:	440b      	add	r3, r1
 80085b4:	681b      	ldr	r3, [r3, #0]
 80085b6:	2b01      	cmp	r3, #1
 80085b8:	d901      	bls.n	80085be <xTaskIncrementTick+0x126>
 80085ba:	2301      	movs	r3, #1
 80085bc:	617b      	str	r3, [r7, #20]
 80085be:	4b11      	ldr	r3, [pc, #68]	@ (8008604 <xTaskIncrementTick+0x16c>)
 80085c0:	681b      	ldr	r3, [r3, #0]
 80085c2:	2b00      	cmp	r3, #0
 80085c4:	d007      	beq.n	80085d6 <xTaskIncrementTick+0x13e>
 80085c6:	2301      	movs	r3, #1
 80085c8:	617b      	str	r3, [r7, #20]
 80085ca:	e004      	b.n	80085d6 <xTaskIncrementTick+0x13e>
 80085cc:	4b0e      	ldr	r3, [pc, #56]	@ (8008608 <xTaskIncrementTick+0x170>)
 80085ce:	681b      	ldr	r3, [r3, #0]
 80085d0:	3301      	adds	r3, #1
 80085d2:	4a0d      	ldr	r2, [pc, #52]	@ (8008608 <xTaskIncrementTick+0x170>)
 80085d4:	6013      	str	r3, [r2, #0]
 80085d6:	697b      	ldr	r3, [r7, #20]
 80085d8:	4618      	mov	r0, r3
 80085da:	3718      	adds	r7, #24
 80085dc:	46bd      	mov	sp, r7
 80085de:	bd80      	pop	{r7, pc}
 80085e0:	20001610 	.word	0x20001610
 80085e4:	200015ec 	.word	0x200015ec
 80085e8:	200015a0 	.word	0x200015a0
 80085ec:	200015a4 	.word	0x200015a4
 80085f0:	20001600 	.word	0x20001600
 80085f4:	20001608 	.word	0x20001608
 80085f8:	200015f0 	.word	0x200015f0
 80085fc:	20001118 	.word	0x20001118
 8008600:	20001114 	.word	0x20001114
 8008604:	200015fc 	.word	0x200015fc
 8008608:	200015f8 	.word	0x200015f8

0800860c <vTaskSwitchContext>:
 800860c:	b480      	push	{r7}
 800860e:	b085      	sub	sp, #20
 8008610:	af00      	add	r7, sp, #0
 8008612:	4b2b      	ldr	r3, [pc, #172]	@ (80086c0 <vTaskSwitchContext+0xb4>)
 8008614:	681b      	ldr	r3, [r3, #0]
 8008616:	2b00      	cmp	r3, #0
 8008618:	d003      	beq.n	8008622 <vTaskSwitchContext+0x16>
 800861a:	4b2a      	ldr	r3, [pc, #168]	@ (80086c4 <vTaskSwitchContext+0xb8>)
 800861c:	2201      	movs	r2, #1
 800861e:	601a      	str	r2, [r3, #0]
 8008620:	e047      	b.n	80086b2 <vTaskSwitchContext+0xa6>
 8008622:	4b28      	ldr	r3, [pc, #160]	@ (80086c4 <vTaskSwitchContext+0xb8>)
 8008624:	2200      	movs	r2, #0
 8008626:	601a      	str	r2, [r3, #0]
 8008628:	4b27      	ldr	r3, [pc, #156]	@ (80086c8 <vTaskSwitchContext+0xbc>)
 800862a:	681b      	ldr	r3, [r3, #0]
 800862c:	60fb      	str	r3, [r7, #12]
 800862e:	e011      	b.n	8008654 <vTaskSwitchContext+0x48>
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	2b00      	cmp	r3, #0
 8008634:	d10b      	bne.n	800864e <vTaskSwitchContext+0x42>
 8008636:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800863a:	f383 8811 	msr	BASEPRI, r3
 800863e:	f3bf 8f6f 	isb	sy
 8008642:	f3bf 8f4f 	dsb	sy
 8008646:	607b      	str	r3, [r7, #4]
 8008648:	bf00      	nop
 800864a:	bf00      	nop
 800864c:	e7fd      	b.n	800864a <vTaskSwitchContext+0x3e>
 800864e:	68fb      	ldr	r3, [r7, #12]
 8008650:	3b01      	subs	r3, #1
 8008652:	60fb      	str	r3, [r7, #12]
 8008654:	491d      	ldr	r1, [pc, #116]	@ (80086cc <vTaskSwitchContext+0xc0>)
 8008656:	68fa      	ldr	r2, [r7, #12]
 8008658:	4613      	mov	r3, r2
 800865a:	009b      	lsls	r3, r3, #2
 800865c:	4413      	add	r3, r2
 800865e:	009b      	lsls	r3, r3, #2
 8008660:	440b      	add	r3, r1
 8008662:	681b      	ldr	r3, [r3, #0]
 8008664:	2b00      	cmp	r3, #0
 8008666:	d0e3      	beq.n	8008630 <vTaskSwitchContext+0x24>
 8008668:	68fa      	ldr	r2, [r7, #12]
 800866a:	4613      	mov	r3, r2
 800866c:	009b      	lsls	r3, r3, #2
 800866e:	4413      	add	r3, r2
 8008670:	009b      	lsls	r3, r3, #2
 8008672:	4a16      	ldr	r2, [pc, #88]	@ (80086cc <vTaskSwitchContext+0xc0>)
 8008674:	4413      	add	r3, r2
 8008676:	60bb      	str	r3, [r7, #8]
 8008678:	68bb      	ldr	r3, [r7, #8]
 800867a:	685b      	ldr	r3, [r3, #4]
 800867c:	685a      	ldr	r2, [r3, #4]
 800867e:	68bb      	ldr	r3, [r7, #8]
 8008680:	605a      	str	r2, [r3, #4]
 8008682:	68bb      	ldr	r3, [r7, #8]
 8008684:	685a      	ldr	r2, [r3, #4]
 8008686:	68bb      	ldr	r3, [r7, #8]
 8008688:	3308      	adds	r3, #8
 800868a:	429a      	cmp	r2, r3
 800868c:	d104      	bne.n	8008698 <vTaskSwitchContext+0x8c>
 800868e:	68bb      	ldr	r3, [r7, #8]
 8008690:	685b      	ldr	r3, [r3, #4]
 8008692:	685a      	ldr	r2, [r3, #4]
 8008694:	68bb      	ldr	r3, [r7, #8]
 8008696:	605a      	str	r2, [r3, #4]
 8008698:	68bb      	ldr	r3, [r7, #8]
 800869a:	685b      	ldr	r3, [r3, #4]
 800869c:	68db      	ldr	r3, [r3, #12]
 800869e:	4a0c      	ldr	r2, [pc, #48]	@ (80086d0 <vTaskSwitchContext+0xc4>)
 80086a0:	6013      	str	r3, [r2, #0]
 80086a2:	4a09      	ldr	r2, [pc, #36]	@ (80086c8 <vTaskSwitchContext+0xbc>)
 80086a4:	68fb      	ldr	r3, [r7, #12]
 80086a6:	6013      	str	r3, [r2, #0]
 80086a8:	4b09      	ldr	r3, [pc, #36]	@ (80086d0 <vTaskSwitchContext+0xc4>)
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	3354      	adds	r3, #84	@ 0x54
 80086ae:	4a09      	ldr	r2, [pc, #36]	@ (80086d4 <vTaskSwitchContext+0xc8>)
 80086b0:	6013      	str	r3, [r2, #0]
 80086b2:	bf00      	nop
 80086b4:	3714      	adds	r7, #20
 80086b6:	46bd      	mov	sp, r7
 80086b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086bc:	4770      	bx	lr
 80086be:	bf00      	nop
 80086c0:	20001610 	.word	0x20001610
 80086c4:	200015fc 	.word	0x200015fc
 80086c8:	200015f0 	.word	0x200015f0
 80086cc:	20001118 	.word	0x20001118
 80086d0:	20001114 	.word	0x20001114
 80086d4:	20000010 	.word	0x20000010

080086d8 <vTaskPlaceOnEventList>:
 80086d8:	b580      	push	{r7, lr}
 80086da:	b084      	sub	sp, #16
 80086dc:	af00      	add	r7, sp, #0
 80086de:	6078      	str	r0, [r7, #4]
 80086e0:	6039      	str	r1, [r7, #0]
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	2b00      	cmp	r3, #0
 80086e6:	d10b      	bne.n	8008700 <vTaskPlaceOnEventList+0x28>
 80086e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086ec:	f383 8811 	msr	BASEPRI, r3
 80086f0:	f3bf 8f6f 	isb	sy
 80086f4:	f3bf 8f4f 	dsb	sy
 80086f8:	60fb      	str	r3, [r7, #12]
 80086fa:	bf00      	nop
 80086fc:	bf00      	nop
 80086fe:	e7fd      	b.n	80086fc <vTaskPlaceOnEventList+0x24>
 8008700:	4b07      	ldr	r3, [pc, #28]	@ (8008720 <vTaskPlaceOnEventList+0x48>)
 8008702:	681b      	ldr	r3, [r3, #0]
 8008704:	3318      	adds	r3, #24
 8008706:	4619      	mov	r1, r3
 8008708:	6878      	ldr	r0, [r7, #4]
 800870a:	f7fe fe48 	bl	800739e <vListInsert>
 800870e:	2101      	movs	r1, #1
 8008710:	6838      	ldr	r0, [r7, #0]
 8008712:	f000 fa87 	bl	8008c24 <prvAddCurrentTaskToDelayedList>
 8008716:	bf00      	nop
 8008718:	3710      	adds	r7, #16
 800871a:	46bd      	mov	sp, r7
 800871c:	bd80      	pop	{r7, pc}
 800871e:	bf00      	nop
 8008720:	20001114 	.word	0x20001114

08008724 <vTaskPlaceOnEventListRestricted>:
 8008724:	b580      	push	{r7, lr}
 8008726:	b086      	sub	sp, #24
 8008728:	af00      	add	r7, sp, #0
 800872a:	60f8      	str	r0, [r7, #12]
 800872c:	60b9      	str	r1, [r7, #8]
 800872e:	607a      	str	r2, [r7, #4]
 8008730:	68fb      	ldr	r3, [r7, #12]
 8008732:	2b00      	cmp	r3, #0
 8008734:	d10b      	bne.n	800874e <vTaskPlaceOnEventListRestricted+0x2a>
 8008736:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800873a:	f383 8811 	msr	BASEPRI, r3
 800873e:	f3bf 8f6f 	isb	sy
 8008742:	f3bf 8f4f 	dsb	sy
 8008746:	617b      	str	r3, [r7, #20]
 8008748:	bf00      	nop
 800874a:	bf00      	nop
 800874c:	e7fd      	b.n	800874a <vTaskPlaceOnEventListRestricted+0x26>
 800874e:	4b0a      	ldr	r3, [pc, #40]	@ (8008778 <vTaskPlaceOnEventListRestricted+0x54>)
 8008750:	681b      	ldr	r3, [r3, #0]
 8008752:	3318      	adds	r3, #24
 8008754:	4619      	mov	r1, r3
 8008756:	68f8      	ldr	r0, [r7, #12]
 8008758:	f7fe fdfd 	bl	8007356 <vListInsertEnd>
 800875c:	687b      	ldr	r3, [r7, #4]
 800875e:	2b00      	cmp	r3, #0
 8008760:	d002      	beq.n	8008768 <vTaskPlaceOnEventListRestricted+0x44>
 8008762:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8008766:	60bb      	str	r3, [r7, #8]
 8008768:	6879      	ldr	r1, [r7, #4]
 800876a:	68b8      	ldr	r0, [r7, #8]
 800876c:	f000 fa5a 	bl	8008c24 <prvAddCurrentTaskToDelayedList>
 8008770:	bf00      	nop
 8008772:	3718      	adds	r7, #24
 8008774:	46bd      	mov	sp, r7
 8008776:	bd80      	pop	{r7, pc}
 8008778:	20001114 	.word	0x20001114

0800877c <xTaskRemoveFromEventList>:
 800877c:	b580      	push	{r7, lr}
 800877e:	b086      	sub	sp, #24
 8008780:	af00      	add	r7, sp, #0
 8008782:	6078      	str	r0, [r7, #4]
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	68db      	ldr	r3, [r3, #12]
 8008788:	68db      	ldr	r3, [r3, #12]
 800878a:	613b      	str	r3, [r7, #16]
 800878c:	693b      	ldr	r3, [r7, #16]
 800878e:	2b00      	cmp	r3, #0
 8008790:	d10b      	bne.n	80087aa <xTaskRemoveFromEventList+0x2e>
 8008792:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008796:	f383 8811 	msr	BASEPRI, r3
 800879a:	f3bf 8f6f 	isb	sy
 800879e:	f3bf 8f4f 	dsb	sy
 80087a2:	60fb      	str	r3, [r7, #12]
 80087a4:	bf00      	nop
 80087a6:	bf00      	nop
 80087a8:	e7fd      	b.n	80087a6 <xTaskRemoveFromEventList+0x2a>
 80087aa:	693b      	ldr	r3, [r7, #16]
 80087ac:	3318      	adds	r3, #24
 80087ae:	4618      	mov	r0, r3
 80087b0:	f7fe fe2e 	bl	8007410 <uxListRemove>
 80087b4:	4b1d      	ldr	r3, [pc, #116]	@ (800882c <xTaskRemoveFromEventList+0xb0>)
 80087b6:	681b      	ldr	r3, [r3, #0]
 80087b8:	2b00      	cmp	r3, #0
 80087ba:	d11d      	bne.n	80087f8 <xTaskRemoveFromEventList+0x7c>
 80087bc:	693b      	ldr	r3, [r7, #16]
 80087be:	3304      	adds	r3, #4
 80087c0:	4618      	mov	r0, r3
 80087c2:	f7fe fe25 	bl	8007410 <uxListRemove>
 80087c6:	693b      	ldr	r3, [r7, #16]
 80087c8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80087ca:	4b19      	ldr	r3, [pc, #100]	@ (8008830 <xTaskRemoveFromEventList+0xb4>)
 80087cc:	681b      	ldr	r3, [r3, #0]
 80087ce:	429a      	cmp	r2, r3
 80087d0:	d903      	bls.n	80087da <xTaskRemoveFromEventList+0x5e>
 80087d2:	693b      	ldr	r3, [r7, #16]
 80087d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80087d6:	4a16      	ldr	r2, [pc, #88]	@ (8008830 <xTaskRemoveFromEventList+0xb4>)
 80087d8:	6013      	str	r3, [r2, #0]
 80087da:	693b      	ldr	r3, [r7, #16]
 80087dc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80087de:	4613      	mov	r3, r2
 80087e0:	009b      	lsls	r3, r3, #2
 80087e2:	4413      	add	r3, r2
 80087e4:	009b      	lsls	r3, r3, #2
 80087e6:	4a13      	ldr	r2, [pc, #76]	@ (8008834 <xTaskRemoveFromEventList+0xb8>)
 80087e8:	441a      	add	r2, r3
 80087ea:	693b      	ldr	r3, [r7, #16]
 80087ec:	3304      	adds	r3, #4
 80087ee:	4619      	mov	r1, r3
 80087f0:	4610      	mov	r0, r2
 80087f2:	f7fe fdb0 	bl	8007356 <vListInsertEnd>
 80087f6:	e005      	b.n	8008804 <xTaskRemoveFromEventList+0x88>
 80087f8:	693b      	ldr	r3, [r7, #16]
 80087fa:	3318      	adds	r3, #24
 80087fc:	4619      	mov	r1, r3
 80087fe:	480e      	ldr	r0, [pc, #56]	@ (8008838 <xTaskRemoveFromEventList+0xbc>)
 8008800:	f7fe fda9 	bl	8007356 <vListInsertEnd>
 8008804:	693b      	ldr	r3, [r7, #16]
 8008806:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008808:	4b0c      	ldr	r3, [pc, #48]	@ (800883c <xTaskRemoveFromEventList+0xc0>)
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800880e:	429a      	cmp	r2, r3
 8008810:	d905      	bls.n	800881e <xTaskRemoveFromEventList+0xa2>
 8008812:	2301      	movs	r3, #1
 8008814:	617b      	str	r3, [r7, #20]
 8008816:	4b0a      	ldr	r3, [pc, #40]	@ (8008840 <xTaskRemoveFromEventList+0xc4>)
 8008818:	2201      	movs	r2, #1
 800881a:	601a      	str	r2, [r3, #0]
 800881c:	e001      	b.n	8008822 <xTaskRemoveFromEventList+0xa6>
 800881e:	2300      	movs	r3, #0
 8008820:	617b      	str	r3, [r7, #20]
 8008822:	697b      	ldr	r3, [r7, #20]
 8008824:	4618      	mov	r0, r3
 8008826:	3718      	adds	r7, #24
 8008828:	46bd      	mov	sp, r7
 800882a:	bd80      	pop	{r7, pc}
 800882c:	20001610 	.word	0x20001610
 8008830:	200015f0 	.word	0x200015f0
 8008834:	20001118 	.word	0x20001118
 8008838:	200015a8 	.word	0x200015a8
 800883c:	20001114 	.word	0x20001114
 8008840:	200015fc 	.word	0x200015fc

08008844 <vTaskInternalSetTimeOutState>:
 8008844:	b480      	push	{r7}
 8008846:	b083      	sub	sp, #12
 8008848:	af00      	add	r7, sp, #0
 800884a:	6078      	str	r0, [r7, #4]
 800884c:	4b06      	ldr	r3, [pc, #24]	@ (8008868 <vTaskInternalSetTimeOutState+0x24>)
 800884e:	681a      	ldr	r2, [r3, #0]
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	601a      	str	r2, [r3, #0]
 8008854:	4b05      	ldr	r3, [pc, #20]	@ (800886c <vTaskInternalSetTimeOutState+0x28>)
 8008856:	681a      	ldr	r2, [r3, #0]
 8008858:	687b      	ldr	r3, [r7, #4]
 800885a:	605a      	str	r2, [r3, #4]
 800885c:	bf00      	nop
 800885e:	370c      	adds	r7, #12
 8008860:	46bd      	mov	sp, r7
 8008862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008866:	4770      	bx	lr
 8008868:	20001600 	.word	0x20001600
 800886c:	200015ec 	.word	0x200015ec

08008870 <xTaskCheckForTimeOut>:
 8008870:	b580      	push	{r7, lr}
 8008872:	b088      	sub	sp, #32
 8008874:	af00      	add	r7, sp, #0
 8008876:	6078      	str	r0, [r7, #4]
 8008878:	6039      	str	r1, [r7, #0]
 800887a:	687b      	ldr	r3, [r7, #4]
 800887c:	2b00      	cmp	r3, #0
 800887e:	d10b      	bne.n	8008898 <xTaskCheckForTimeOut+0x28>
 8008880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	613b      	str	r3, [r7, #16]
 8008892:	bf00      	nop
 8008894:	bf00      	nop
 8008896:	e7fd      	b.n	8008894 <xTaskCheckForTimeOut+0x24>
 8008898:	683b      	ldr	r3, [r7, #0]
 800889a:	2b00      	cmp	r3, #0
 800889c:	d10b      	bne.n	80088b6 <xTaskCheckForTimeOut+0x46>
 800889e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088a2:	f383 8811 	msr	BASEPRI, r3
 80088a6:	f3bf 8f6f 	isb	sy
 80088aa:	f3bf 8f4f 	dsb	sy
 80088ae:	60fb      	str	r3, [r7, #12]
 80088b0:	bf00      	nop
 80088b2:	bf00      	nop
 80088b4:	e7fd      	b.n	80088b2 <xTaskCheckForTimeOut+0x42>
 80088b6:	f000 fe97 	bl	80095e8 <vPortEnterCritical>
 80088ba:	4b1d      	ldr	r3, [pc, #116]	@ (8008930 <xTaskCheckForTimeOut+0xc0>)
 80088bc:	681b      	ldr	r3, [r3, #0]
 80088be:	61bb      	str	r3, [r7, #24]
 80088c0:	687b      	ldr	r3, [r7, #4]
 80088c2:	685b      	ldr	r3, [r3, #4]
 80088c4:	69ba      	ldr	r2, [r7, #24]
 80088c6:	1ad3      	subs	r3, r2, r3
 80088c8:	617b      	str	r3, [r7, #20]
 80088ca:	683b      	ldr	r3, [r7, #0]
 80088cc:	681b      	ldr	r3, [r3, #0]
 80088ce:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80088d2:	d102      	bne.n	80088da <xTaskCheckForTimeOut+0x6a>
 80088d4:	2300      	movs	r3, #0
 80088d6:	61fb      	str	r3, [r7, #28]
 80088d8:	e023      	b.n	8008922 <xTaskCheckForTimeOut+0xb2>
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	681a      	ldr	r2, [r3, #0]
 80088de:	4b15      	ldr	r3, [pc, #84]	@ (8008934 <xTaskCheckForTimeOut+0xc4>)
 80088e0:	681b      	ldr	r3, [r3, #0]
 80088e2:	429a      	cmp	r2, r3
 80088e4:	d007      	beq.n	80088f6 <xTaskCheckForTimeOut+0x86>
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	685b      	ldr	r3, [r3, #4]
 80088ea:	69ba      	ldr	r2, [r7, #24]
 80088ec:	429a      	cmp	r2, r3
 80088ee:	d302      	bcc.n	80088f6 <xTaskCheckForTimeOut+0x86>
 80088f0:	2301      	movs	r3, #1
 80088f2:	61fb      	str	r3, [r7, #28]
 80088f4:	e015      	b.n	8008922 <xTaskCheckForTimeOut+0xb2>
 80088f6:	683b      	ldr	r3, [r7, #0]
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	697a      	ldr	r2, [r7, #20]
 80088fc:	429a      	cmp	r2, r3
 80088fe:	d20b      	bcs.n	8008918 <xTaskCheckForTimeOut+0xa8>
 8008900:	683b      	ldr	r3, [r7, #0]
 8008902:	681a      	ldr	r2, [r3, #0]
 8008904:	697b      	ldr	r3, [r7, #20]
 8008906:	1ad2      	subs	r2, r2, r3
 8008908:	683b      	ldr	r3, [r7, #0]
 800890a:	601a      	str	r2, [r3, #0]
 800890c:	6878      	ldr	r0, [r7, #4]
 800890e:	f7ff ff99 	bl	8008844 <vTaskInternalSetTimeOutState>
 8008912:	2300      	movs	r3, #0
 8008914:	61fb      	str	r3, [r7, #28]
 8008916:	e004      	b.n	8008922 <xTaskCheckForTimeOut+0xb2>
 8008918:	683b      	ldr	r3, [r7, #0]
 800891a:	2200      	movs	r2, #0
 800891c:	601a      	str	r2, [r3, #0]
 800891e:	2301      	movs	r3, #1
 8008920:	61fb      	str	r3, [r7, #28]
 8008922:	f000 fe93 	bl	800964c <vPortExitCritical>
 8008926:	69fb      	ldr	r3, [r7, #28]
 8008928:	4618      	mov	r0, r3
 800892a:	3720      	adds	r7, #32
 800892c:	46bd      	mov	sp, r7
 800892e:	bd80      	pop	{r7, pc}
 8008930:	200015ec 	.word	0x200015ec
 8008934:	20001600 	.word	0x20001600

08008938 <vTaskMissedYield>:
 8008938:	b480      	push	{r7}
 800893a:	af00      	add	r7, sp, #0
 800893c:	4b03      	ldr	r3, [pc, #12]	@ (800894c <vTaskMissedYield+0x14>)
 800893e:	2201      	movs	r2, #1
 8008940:	601a      	str	r2, [r3, #0]
 8008942:	bf00      	nop
 8008944:	46bd      	mov	sp, r7
 8008946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800894a:	4770      	bx	lr
 800894c:	200015fc 	.word	0x200015fc

08008950 <prvIdleTask>:
 8008950:	b580      	push	{r7, lr}
 8008952:	b082      	sub	sp, #8
 8008954:	af00      	add	r7, sp, #0
 8008956:	6078      	str	r0, [r7, #4]
 8008958:	f000 f852 	bl	8008a00 <prvCheckTasksWaitingTermination>
 800895c:	4b06      	ldr	r3, [pc, #24]	@ (8008978 <prvIdleTask+0x28>)
 800895e:	681b      	ldr	r3, [r3, #0]
 8008960:	2b01      	cmp	r3, #1
 8008962:	d9f9      	bls.n	8008958 <prvIdleTask+0x8>
 8008964:	4b05      	ldr	r3, [pc, #20]	@ (800897c <prvIdleTask+0x2c>)
 8008966:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800896a:	601a      	str	r2, [r3, #0]
 800896c:	f3bf 8f4f 	dsb	sy
 8008970:	f3bf 8f6f 	isb	sy
 8008974:	e7f0      	b.n	8008958 <prvIdleTask+0x8>
 8008976:	bf00      	nop
 8008978:	20001118 	.word	0x20001118
 800897c:	e000ed04 	.word	0xe000ed04

08008980 <prvInitialiseTaskLists>:
 8008980:	b580      	push	{r7, lr}
 8008982:	b082      	sub	sp, #8
 8008984:	af00      	add	r7, sp, #0
 8008986:	2300      	movs	r3, #0
 8008988:	607b      	str	r3, [r7, #4]
 800898a:	e00c      	b.n	80089a6 <prvInitialiseTaskLists+0x26>
 800898c:	687a      	ldr	r2, [r7, #4]
 800898e:	4613      	mov	r3, r2
 8008990:	009b      	lsls	r3, r3, #2
 8008992:	4413      	add	r3, r2
 8008994:	009b      	lsls	r3, r3, #2
 8008996:	4a12      	ldr	r2, [pc, #72]	@ (80089e0 <prvInitialiseTaskLists+0x60>)
 8008998:	4413      	add	r3, r2
 800899a:	4618      	mov	r0, r3
 800899c:	f7fe fcae 	bl	80072fc <vListInitialise>
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	3301      	adds	r3, #1
 80089a4:	607b      	str	r3, [r7, #4]
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	2b37      	cmp	r3, #55	@ 0x37
 80089aa:	d9ef      	bls.n	800898c <prvInitialiseTaskLists+0xc>
 80089ac:	480d      	ldr	r0, [pc, #52]	@ (80089e4 <prvInitialiseTaskLists+0x64>)
 80089ae:	f7fe fca5 	bl	80072fc <vListInitialise>
 80089b2:	480d      	ldr	r0, [pc, #52]	@ (80089e8 <prvInitialiseTaskLists+0x68>)
 80089b4:	f7fe fca2 	bl	80072fc <vListInitialise>
 80089b8:	480c      	ldr	r0, [pc, #48]	@ (80089ec <prvInitialiseTaskLists+0x6c>)
 80089ba:	f7fe fc9f 	bl	80072fc <vListInitialise>
 80089be:	480c      	ldr	r0, [pc, #48]	@ (80089f0 <prvInitialiseTaskLists+0x70>)
 80089c0:	f7fe fc9c 	bl	80072fc <vListInitialise>
 80089c4:	480b      	ldr	r0, [pc, #44]	@ (80089f4 <prvInitialiseTaskLists+0x74>)
 80089c6:	f7fe fc99 	bl	80072fc <vListInitialise>
 80089ca:	4b0b      	ldr	r3, [pc, #44]	@ (80089f8 <prvInitialiseTaskLists+0x78>)
 80089cc:	4a05      	ldr	r2, [pc, #20]	@ (80089e4 <prvInitialiseTaskLists+0x64>)
 80089ce:	601a      	str	r2, [r3, #0]
 80089d0:	4b0a      	ldr	r3, [pc, #40]	@ (80089fc <prvInitialiseTaskLists+0x7c>)
 80089d2:	4a05      	ldr	r2, [pc, #20]	@ (80089e8 <prvInitialiseTaskLists+0x68>)
 80089d4:	601a      	str	r2, [r3, #0]
 80089d6:	bf00      	nop
 80089d8:	3708      	adds	r7, #8
 80089da:	46bd      	mov	sp, r7
 80089dc:	bd80      	pop	{r7, pc}
 80089de:	bf00      	nop
 80089e0:	20001118 	.word	0x20001118
 80089e4:	20001578 	.word	0x20001578
 80089e8:	2000158c 	.word	0x2000158c
 80089ec:	200015a8 	.word	0x200015a8
 80089f0:	200015bc 	.word	0x200015bc
 80089f4:	200015d4 	.word	0x200015d4
 80089f8:	200015a0 	.word	0x200015a0
 80089fc:	200015a4 	.word	0x200015a4

08008a00 <prvCheckTasksWaitingTermination>:
 8008a00:	b580      	push	{r7, lr}
 8008a02:	b082      	sub	sp, #8
 8008a04:	af00      	add	r7, sp, #0
 8008a06:	e019      	b.n	8008a3c <prvCheckTasksWaitingTermination+0x3c>
 8008a08:	f000 fdee 	bl	80095e8 <vPortEnterCritical>
 8008a0c:	4b10      	ldr	r3, [pc, #64]	@ (8008a50 <prvCheckTasksWaitingTermination+0x50>)
 8008a0e:	68db      	ldr	r3, [r3, #12]
 8008a10:	68db      	ldr	r3, [r3, #12]
 8008a12:	607b      	str	r3, [r7, #4]
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	3304      	adds	r3, #4
 8008a18:	4618      	mov	r0, r3
 8008a1a:	f7fe fcf9 	bl	8007410 <uxListRemove>
 8008a1e:	4b0d      	ldr	r3, [pc, #52]	@ (8008a54 <prvCheckTasksWaitingTermination+0x54>)
 8008a20:	681b      	ldr	r3, [r3, #0]
 8008a22:	3b01      	subs	r3, #1
 8008a24:	4a0b      	ldr	r2, [pc, #44]	@ (8008a54 <prvCheckTasksWaitingTermination+0x54>)
 8008a26:	6013      	str	r3, [r2, #0]
 8008a28:	4b0b      	ldr	r3, [pc, #44]	@ (8008a58 <prvCheckTasksWaitingTermination+0x58>)
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	3b01      	subs	r3, #1
 8008a2e:	4a0a      	ldr	r2, [pc, #40]	@ (8008a58 <prvCheckTasksWaitingTermination+0x58>)
 8008a30:	6013      	str	r3, [r2, #0]
 8008a32:	f000 fe0b 	bl	800964c <vPortExitCritical>
 8008a36:	6878      	ldr	r0, [r7, #4]
 8008a38:	f000 f810 	bl	8008a5c <prvDeleteTCB>
 8008a3c:	4b06      	ldr	r3, [pc, #24]	@ (8008a58 <prvCheckTasksWaitingTermination+0x58>)
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	2b00      	cmp	r3, #0
 8008a42:	d1e1      	bne.n	8008a08 <prvCheckTasksWaitingTermination+0x8>
 8008a44:	bf00      	nop
 8008a46:	bf00      	nop
 8008a48:	3708      	adds	r7, #8
 8008a4a:	46bd      	mov	sp, r7
 8008a4c:	bd80      	pop	{r7, pc}
 8008a4e:	bf00      	nop
 8008a50:	200015bc 	.word	0x200015bc
 8008a54:	200015e8 	.word	0x200015e8
 8008a58:	200015d0 	.word	0x200015d0

08008a5c <prvDeleteTCB>:
 8008a5c:	b580      	push	{r7, lr}
 8008a5e:	b084      	sub	sp, #16
 8008a60:	af00      	add	r7, sp, #0
 8008a62:	6078      	str	r0, [r7, #4]
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	3354      	adds	r3, #84	@ 0x54
 8008a68:	4618      	mov	r0, r3
 8008a6a:	f001 f8d5 	bl	8009c18 <_reclaim_reent>
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8008a74:	2b00      	cmp	r3, #0
 8008a76:	d108      	bne.n	8008a8a <prvDeleteTCB+0x2e>
 8008a78:	687b      	ldr	r3, [r7, #4]
 8008a7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008a7c:	4618      	mov	r0, r3
 8008a7e:	f000 ffa3 	bl	80099c8 <vPortFree>
 8008a82:	6878      	ldr	r0, [r7, #4]
 8008a84:	f000 ffa0 	bl	80099c8 <vPortFree>
 8008a88:	e019      	b.n	8008abe <prvDeleteTCB+0x62>
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8008a90:	2b01      	cmp	r3, #1
 8008a92:	d103      	bne.n	8008a9c <prvDeleteTCB+0x40>
 8008a94:	6878      	ldr	r0, [r7, #4]
 8008a96:	f000 ff97 	bl	80099c8 <vPortFree>
 8008a9a:	e010      	b.n	8008abe <prvDeleteTCB+0x62>
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8008aa2:	2b02      	cmp	r3, #2
 8008aa4:	d00b      	beq.n	8008abe <prvDeleteTCB+0x62>
 8008aa6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aaa:	f383 8811 	msr	BASEPRI, r3
 8008aae:	f3bf 8f6f 	isb	sy
 8008ab2:	f3bf 8f4f 	dsb	sy
 8008ab6:	60fb      	str	r3, [r7, #12]
 8008ab8:	bf00      	nop
 8008aba:	bf00      	nop
 8008abc:	e7fd      	b.n	8008aba <prvDeleteTCB+0x5e>
 8008abe:	bf00      	nop
 8008ac0:	3710      	adds	r7, #16
 8008ac2:	46bd      	mov	sp, r7
 8008ac4:	bd80      	pop	{r7, pc}
	...

08008ac8 <prvResetNextTaskUnblockTime>:
 8008ac8:	b480      	push	{r7}
 8008aca:	b083      	sub	sp, #12
 8008acc:	af00      	add	r7, sp, #0
 8008ace:	4b0c      	ldr	r3, [pc, #48]	@ (8008b00 <prvResetNextTaskUnblockTime+0x38>)
 8008ad0:	681b      	ldr	r3, [r3, #0]
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	2b00      	cmp	r3, #0
 8008ad6:	d104      	bne.n	8008ae2 <prvResetNextTaskUnblockTime+0x1a>
 8008ad8:	4b0a      	ldr	r3, [pc, #40]	@ (8008b04 <prvResetNextTaskUnblockTime+0x3c>)
 8008ada:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8008ade:	601a      	str	r2, [r3, #0]
 8008ae0:	e008      	b.n	8008af4 <prvResetNextTaskUnblockTime+0x2c>
 8008ae2:	4b07      	ldr	r3, [pc, #28]	@ (8008b00 <prvResetNextTaskUnblockTime+0x38>)
 8008ae4:	681b      	ldr	r3, [r3, #0]
 8008ae6:	68db      	ldr	r3, [r3, #12]
 8008ae8:	68db      	ldr	r3, [r3, #12]
 8008aea:	607b      	str	r3, [r7, #4]
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	685b      	ldr	r3, [r3, #4]
 8008af0:	4a04      	ldr	r2, [pc, #16]	@ (8008b04 <prvResetNextTaskUnblockTime+0x3c>)
 8008af2:	6013      	str	r3, [r2, #0]
 8008af4:	bf00      	nop
 8008af6:	370c      	adds	r7, #12
 8008af8:	46bd      	mov	sp, r7
 8008afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008afe:	4770      	bx	lr
 8008b00:	200015a0 	.word	0x200015a0
 8008b04:	20001608 	.word	0x20001608

08008b08 <xTaskGetSchedulerState>:
 8008b08:	b480      	push	{r7}
 8008b0a:	b083      	sub	sp, #12
 8008b0c:	af00      	add	r7, sp, #0
 8008b0e:	4b0b      	ldr	r3, [pc, #44]	@ (8008b3c <xTaskGetSchedulerState+0x34>)
 8008b10:	681b      	ldr	r3, [r3, #0]
 8008b12:	2b00      	cmp	r3, #0
 8008b14:	d102      	bne.n	8008b1c <xTaskGetSchedulerState+0x14>
 8008b16:	2301      	movs	r3, #1
 8008b18:	607b      	str	r3, [r7, #4]
 8008b1a:	e008      	b.n	8008b2e <xTaskGetSchedulerState+0x26>
 8008b1c:	4b08      	ldr	r3, [pc, #32]	@ (8008b40 <xTaskGetSchedulerState+0x38>)
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	2b00      	cmp	r3, #0
 8008b22:	d102      	bne.n	8008b2a <xTaskGetSchedulerState+0x22>
 8008b24:	2302      	movs	r3, #2
 8008b26:	607b      	str	r3, [r7, #4]
 8008b28:	e001      	b.n	8008b2e <xTaskGetSchedulerState+0x26>
 8008b2a:	2300      	movs	r3, #0
 8008b2c:	607b      	str	r3, [r7, #4]
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	4618      	mov	r0, r3
 8008b32:	370c      	adds	r7, #12
 8008b34:	46bd      	mov	sp, r7
 8008b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b3a:	4770      	bx	lr
 8008b3c:	200015f4 	.word	0x200015f4
 8008b40:	20001610 	.word	0x20001610

08008b44 <xTaskPriorityDisinherit>:
 8008b44:	b580      	push	{r7, lr}
 8008b46:	b086      	sub	sp, #24
 8008b48:	af00      	add	r7, sp, #0
 8008b4a:	6078      	str	r0, [r7, #4]
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	613b      	str	r3, [r7, #16]
 8008b50:	2300      	movs	r3, #0
 8008b52:	617b      	str	r3, [r7, #20]
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	2b00      	cmp	r3, #0
 8008b58:	d058      	beq.n	8008c0c <xTaskPriorityDisinherit+0xc8>
 8008b5a:	4b2f      	ldr	r3, [pc, #188]	@ (8008c18 <xTaskPriorityDisinherit+0xd4>)
 8008b5c:	681b      	ldr	r3, [r3, #0]
 8008b5e:	693a      	ldr	r2, [r7, #16]
 8008b60:	429a      	cmp	r2, r3
 8008b62:	d00b      	beq.n	8008b7c <xTaskPriorityDisinherit+0x38>
 8008b64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b68:	f383 8811 	msr	BASEPRI, r3
 8008b6c:	f3bf 8f6f 	isb	sy
 8008b70:	f3bf 8f4f 	dsb	sy
 8008b74:	60fb      	str	r3, [r7, #12]
 8008b76:	bf00      	nop
 8008b78:	bf00      	nop
 8008b7a:	e7fd      	b.n	8008b78 <xTaskPriorityDisinherit+0x34>
 8008b7c:	693b      	ldr	r3, [r7, #16]
 8008b7e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008b80:	2b00      	cmp	r3, #0
 8008b82:	d10b      	bne.n	8008b9c <xTaskPriorityDisinherit+0x58>
 8008b84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b88:	f383 8811 	msr	BASEPRI, r3
 8008b8c:	f3bf 8f6f 	isb	sy
 8008b90:	f3bf 8f4f 	dsb	sy
 8008b94:	60bb      	str	r3, [r7, #8]
 8008b96:	bf00      	nop
 8008b98:	bf00      	nop
 8008b9a:	e7fd      	b.n	8008b98 <xTaskPriorityDisinherit+0x54>
 8008b9c:	693b      	ldr	r3, [r7, #16]
 8008b9e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008ba0:	1e5a      	subs	r2, r3, #1
 8008ba2:	693b      	ldr	r3, [r7, #16]
 8008ba4:	651a      	str	r2, [r3, #80]	@ 0x50
 8008ba6:	693b      	ldr	r3, [r7, #16]
 8008ba8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008baa:	693b      	ldr	r3, [r7, #16]
 8008bac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008bae:	429a      	cmp	r2, r3
 8008bb0:	d02c      	beq.n	8008c0c <xTaskPriorityDisinherit+0xc8>
 8008bb2:	693b      	ldr	r3, [r7, #16]
 8008bb4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008bb6:	2b00      	cmp	r3, #0
 8008bb8:	d128      	bne.n	8008c0c <xTaskPriorityDisinherit+0xc8>
 8008bba:	693b      	ldr	r3, [r7, #16]
 8008bbc:	3304      	adds	r3, #4
 8008bbe:	4618      	mov	r0, r3
 8008bc0:	f7fe fc26 	bl	8007410 <uxListRemove>
 8008bc4:	693b      	ldr	r3, [r7, #16]
 8008bc6:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8008bc8:	693b      	ldr	r3, [r7, #16]
 8008bca:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008bcc:	693b      	ldr	r3, [r7, #16]
 8008bce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008bd0:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8008bd4:	693b      	ldr	r3, [r7, #16]
 8008bd6:	619a      	str	r2, [r3, #24]
 8008bd8:	693b      	ldr	r3, [r7, #16]
 8008bda:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008bdc:	4b0f      	ldr	r3, [pc, #60]	@ (8008c1c <xTaskPriorityDisinherit+0xd8>)
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	429a      	cmp	r2, r3
 8008be2:	d903      	bls.n	8008bec <xTaskPriorityDisinherit+0xa8>
 8008be4:	693b      	ldr	r3, [r7, #16]
 8008be6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008be8:	4a0c      	ldr	r2, [pc, #48]	@ (8008c1c <xTaskPriorityDisinherit+0xd8>)
 8008bea:	6013      	str	r3, [r2, #0]
 8008bec:	693b      	ldr	r3, [r7, #16]
 8008bee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008bf0:	4613      	mov	r3, r2
 8008bf2:	009b      	lsls	r3, r3, #2
 8008bf4:	4413      	add	r3, r2
 8008bf6:	009b      	lsls	r3, r3, #2
 8008bf8:	4a09      	ldr	r2, [pc, #36]	@ (8008c20 <xTaskPriorityDisinherit+0xdc>)
 8008bfa:	441a      	add	r2, r3
 8008bfc:	693b      	ldr	r3, [r7, #16]
 8008bfe:	3304      	adds	r3, #4
 8008c00:	4619      	mov	r1, r3
 8008c02:	4610      	mov	r0, r2
 8008c04:	f7fe fba7 	bl	8007356 <vListInsertEnd>
 8008c08:	2301      	movs	r3, #1
 8008c0a:	617b      	str	r3, [r7, #20]
 8008c0c:	697b      	ldr	r3, [r7, #20]
 8008c0e:	4618      	mov	r0, r3
 8008c10:	3718      	adds	r7, #24
 8008c12:	46bd      	mov	sp, r7
 8008c14:	bd80      	pop	{r7, pc}
 8008c16:	bf00      	nop
 8008c18:	20001114 	.word	0x20001114
 8008c1c:	200015f0 	.word	0x200015f0
 8008c20:	20001118 	.word	0x20001118

08008c24 <prvAddCurrentTaskToDelayedList>:
 8008c24:	b580      	push	{r7, lr}
 8008c26:	b084      	sub	sp, #16
 8008c28:	af00      	add	r7, sp, #0
 8008c2a:	6078      	str	r0, [r7, #4]
 8008c2c:	6039      	str	r1, [r7, #0]
 8008c2e:	4b21      	ldr	r3, [pc, #132]	@ (8008cb4 <prvAddCurrentTaskToDelayedList+0x90>)
 8008c30:	681b      	ldr	r3, [r3, #0]
 8008c32:	60fb      	str	r3, [r7, #12]
 8008c34:	4b20      	ldr	r3, [pc, #128]	@ (8008cb8 <prvAddCurrentTaskToDelayedList+0x94>)
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	3304      	adds	r3, #4
 8008c3a:	4618      	mov	r0, r3
 8008c3c:	f7fe fbe8 	bl	8007410 <uxListRemove>
 8008c40:	687b      	ldr	r3, [r7, #4]
 8008c42:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008c46:	d10a      	bne.n	8008c5e <prvAddCurrentTaskToDelayedList+0x3a>
 8008c48:	683b      	ldr	r3, [r7, #0]
 8008c4a:	2b00      	cmp	r3, #0
 8008c4c:	d007      	beq.n	8008c5e <prvAddCurrentTaskToDelayedList+0x3a>
 8008c4e:	4b1a      	ldr	r3, [pc, #104]	@ (8008cb8 <prvAddCurrentTaskToDelayedList+0x94>)
 8008c50:	681b      	ldr	r3, [r3, #0]
 8008c52:	3304      	adds	r3, #4
 8008c54:	4619      	mov	r1, r3
 8008c56:	4819      	ldr	r0, [pc, #100]	@ (8008cbc <prvAddCurrentTaskToDelayedList+0x98>)
 8008c58:	f7fe fb7d 	bl	8007356 <vListInsertEnd>
 8008c5c:	e026      	b.n	8008cac <prvAddCurrentTaskToDelayedList+0x88>
 8008c5e:	68fa      	ldr	r2, [r7, #12]
 8008c60:	687b      	ldr	r3, [r7, #4]
 8008c62:	4413      	add	r3, r2
 8008c64:	60bb      	str	r3, [r7, #8]
 8008c66:	4b14      	ldr	r3, [pc, #80]	@ (8008cb8 <prvAddCurrentTaskToDelayedList+0x94>)
 8008c68:	681b      	ldr	r3, [r3, #0]
 8008c6a:	68ba      	ldr	r2, [r7, #8]
 8008c6c:	605a      	str	r2, [r3, #4]
 8008c6e:	68ba      	ldr	r2, [r7, #8]
 8008c70:	68fb      	ldr	r3, [r7, #12]
 8008c72:	429a      	cmp	r2, r3
 8008c74:	d209      	bcs.n	8008c8a <prvAddCurrentTaskToDelayedList+0x66>
 8008c76:	4b12      	ldr	r3, [pc, #72]	@ (8008cc0 <prvAddCurrentTaskToDelayedList+0x9c>)
 8008c78:	681a      	ldr	r2, [r3, #0]
 8008c7a:	4b0f      	ldr	r3, [pc, #60]	@ (8008cb8 <prvAddCurrentTaskToDelayedList+0x94>)
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	3304      	adds	r3, #4
 8008c80:	4619      	mov	r1, r3
 8008c82:	4610      	mov	r0, r2
 8008c84:	f7fe fb8b 	bl	800739e <vListInsert>
 8008c88:	e010      	b.n	8008cac <prvAddCurrentTaskToDelayedList+0x88>
 8008c8a:	4b0e      	ldr	r3, [pc, #56]	@ (8008cc4 <prvAddCurrentTaskToDelayedList+0xa0>)
 8008c8c:	681a      	ldr	r2, [r3, #0]
 8008c8e:	4b0a      	ldr	r3, [pc, #40]	@ (8008cb8 <prvAddCurrentTaskToDelayedList+0x94>)
 8008c90:	681b      	ldr	r3, [r3, #0]
 8008c92:	3304      	adds	r3, #4
 8008c94:	4619      	mov	r1, r3
 8008c96:	4610      	mov	r0, r2
 8008c98:	f7fe fb81 	bl	800739e <vListInsert>
 8008c9c:	4b0a      	ldr	r3, [pc, #40]	@ (8008cc8 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	68ba      	ldr	r2, [r7, #8]
 8008ca2:	429a      	cmp	r2, r3
 8008ca4:	d202      	bcs.n	8008cac <prvAddCurrentTaskToDelayedList+0x88>
 8008ca6:	4a08      	ldr	r2, [pc, #32]	@ (8008cc8 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008ca8:	68bb      	ldr	r3, [r7, #8]
 8008caa:	6013      	str	r3, [r2, #0]
 8008cac:	bf00      	nop
 8008cae:	3710      	adds	r7, #16
 8008cb0:	46bd      	mov	sp, r7
 8008cb2:	bd80      	pop	{r7, pc}
 8008cb4:	200015ec 	.word	0x200015ec
 8008cb8:	20001114 	.word	0x20001114
 8008cbc:	200015d4 	.word	0x200015d4
 8008cc0:	200015a4 	.word	0x200015a4
 8008cc4:	200015a0 	.word	0x200015a0
 8008cc8:	20001608 	.word	0x20001608

08008ccc <xTimerCreateTimerTask>:
 8008ccc:	b580      	push	{r7, lr}
 8008cce:	b08a      	sub	sp, #40	@ 0x28
 8008cd0:	af04      	add	r7, sp, #16
 8008cd2:	2300      	movs	r3, #0
 8008cd4:	617b      	str	r3, [r7, #20]
 8008cd6:	f000 fb13 	bl	8009300 <prvCheckForValidListAndQueue>
 8008cda:	4b1d      	ldr	r3, [pc, #116]	@ (8008d50 <xTimerCreateTimerTask+0x84>)
 8008cdc:	681b      	ldr	r3, [r3, #0]
 8008cde:	2b00      	cmp	r3, #0
 8008ce0:	d021      	beq.n	8008d26 <xTimerCreateTimerTask+0x5a>
 8008ce2:	2300      	movs	r3, #0
 8008ce4:	60fb      	str	r3, [r7, #12]
 8008ce6:	2300      	movs	r3, #0
 8008ce8:	60bb      	str	r3, [r7, #8]
 8008cea:	1d3a      	adds	r2, r7, #4
 8008cec:	f107 0108 	add.w	r1, r7, #8
 8008cf0:	f107 030c 	add.w	r3, r7, #12
 8008cf4:	4618      	mov	r0, r3
 8008cf6:	f7fe fae7 	bl	80072c8 <vApplicationGetTimerTaskMemory>
 8008cfa:	6879      	ldr	r1, [r7, #4]
 8008cfc:	68bb      	ldr	r3, [r7, #8]
 8008cfe:	68fa      	ldr	r2, [r7, #12]
 8008d00:	9202      	str	r2, [sp, #8]
 8008d02:	9301      	str	r3, [sp, #4]
 8008d04:	2302      	movs	r3, #2
 8008d06:	9300      	str	r3, [sp, #0]
 8008d08:	2300      	movs	r3, #0
 8008d0a:	460a      	mov	r2, r1
 8008d0c:	4911      	ldr	r1, [pc, #68]	@ (8008d54 <xTimerCreateTimerTask+0x88>)
 8008d0e:	4812      	ldr	r0, [pc, #72]	@ (8008d58 <xTimerCreateTimerTask+0x8c>)
 8008d10:	f7ff f8a2 	bl	8007e58 <xTaskCreateStatic>
 8008d14:	4603      	mov	r3, r0
 8008d16:	4a11      	ldr	r2, [pc, #68]	@ (8008d5c <xTimerCreateTimerTask+0x90>)
 8008d18:	6013      	str	r3, [r2, #0]
 8008d1a:	4b10      	ldr	r3, [pc, #64]	@ (8008d5c <xTimerCreateTimerTask+0x90>)
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	2b00      	cmp	r3, #0
 8008d20:	d001      	beq.n	8008d26 <xTimerCreateTimerTask+0x5a>
 8008d22:	2301      	movs	r3, #1
 8008d24:	617b      	str	r3, [r7, #20]
 8008d26:	697b      	ldr	r3, [r7, #20]
 8008d28:	2b00      	cmp	r3, #0
 8008d2a:	d10b      	bne.n	8008d44 <xTimerCreateTimerTask+0x78>
 8008d2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d30:	f383 8811 	msr	BASEPRI, r3
 8008d34:	f3bf 8f6f 	isb	sy
 8008d38:	f3bf 8f4f 	dsb	sy
 8008d3c:	613b      	str	r3, [r7, #16]
 8008d3e:	bf00      	nop
 8008d40:	bf00      	nop
 8008d42:	e7fd      	b.n	8008d40 <xTimerCreateTimerTask+0x74>
 8008d44:	697b      	ldr	r3, [r7, #20]
 8008d46:	4618      	mov	r0, r3
 8008d48:	3718      	adds	r7, #24
 8008d4a:	46bd      	mov	sp, r7
 8008d4c:	bd80      	pop	{r7, pc}
 8008d4e:	bf00      	nop
 8008d50:	20001644 	.word	0x20001644
 8008d54:	08009e2c 	.word	0x08009e2c
 8008d58:	08008e99 	.word	0x08008e99
 8008d5c:	20001648 	.word	0x20001648

08008d60 <xTimerGenericCommand>:
 8008d60:	b580      	push	{r7, lr}
 8008d62:	b08a      	sub	sp, #40	@ 0x28
 8008d64:	af00      	add	r7, sp, #0
 8008d66:	60f8      	str	r0, [r7, #12]
 8008d68:	60b9      	str	r1, [r7, #8]
 8008d6a:	607a      	str	r2, [r7, #4]
 8008d6c:	603b      	str	r3, [r7, #0]
 8008d6e:	2300      	movs	r3, #0
 8008d70:	627b      	str	r3, [r7, #36]	@ 0x24
 8008d72:	68fb      	ldr	r3, [r7, #12]
 8008d74:	2b00      	cmp	r3, #0
 8008d76:	d10b      	bne.n	8008d90 <xTimerGenericCommand+0x30>
 8008d78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d7c:	f383 8811 	msr	BASEPRI, r3
 8008d80:	f3bf 8f6f 	isb	sy
 8008d84:	f3bf 8f4f 	dsb	sy
 8008d88:	623b      	str	r3, [r7, #32]
 8008d8a:	bf00      	nop
 8008d8c:	bf00      	nop
 8008d8e:	e7fd      	b.n	8008d8c <xTimerGenericCommand+0x2c>
 8008d90:	4b19      	ldr	r3, [pc, #100]	@ (8008df8 <xTimerGenericCommand+0x98>)
 8008d92:	681b      	ldr	r3, [r3, #0]
 8008d94:	2b00      	cmp	r3, #0
 8008d96:	d02a      	beq.n	8008dee <xTimerGenericCommand+0x8e>
 8008d98:	68bb      	ldr	r3, [r7, #8]
 8008d9a:	613b      	str	r3, [r7, #16]
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	617b      	str	r3, [r7, #20]
 8008da0:	68fb      	ldr	r3, [r7, #12]
 8008da2:	61bb      	str	r3, [r7, #24]
 8008da4:	68bb      	ldr	r3, [r7, #8]
 8008da6:	2b05      	cmp	r3, #5
 8008da8:	dc18      	bgt.n	8008ddc <xTimerGenericCommand+0x7c>
 8008daa:	f7ff fead 	bl	8008b08 <xTaskGetSchedulerState>
 8008dae:	4603      	mov	r3, r0
 8008db0:	2b02      	cmp	r3, #2
 8008db2:	d109      	bne.n	8008dc8 <xTimerGenericCommand+0x68>
 8008db4:	4b10      	ldr	r3, [pc, #64]	@ (8008df8 <xTimerGenericCommand+0x98>)
 8008db6:	6818      	ldr	r0, [r3, #0]
 8008db8:	f107 0110 	add.w	r1, r7, #16
 8008dbc:	2300      	movs	r3, #0
 8008dbe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008dc0:	f7fe fc5a 	bl	8007678 <xQueueGenericSend>
 8008dc4:	6278      	str	r0, [r7, #36]	@ 0x24
 8008dc6:	e012      	b.n	8008dee <xTimerGenericCommand+0x8e>
 8008dc8:	4b0b      	ldr	r3, [pc, #44]	@ (8008df8 <xTimerGenericCommand+0x98>)
 8008dca:	6818      	ldr	r0, [r3, #0]
 8008dcc:	f107 0110 	add.w	r1, r7, #16
 8008dd0:	2300      	movs	r3, #0
 8008dd2:	2200      	movs	r2, #0
 8008dd4:	f7fe fc50 	bl	8007678 <xQueueGenericSend>
 8008dd8:	6278      	str	r0, [r7, #36]	@ 0x24
 8008dda:	e008      	b.n	8008dee <xTimerGenericCommand+0x8e>
 8008ddc:	4b06      	ldr	r3, [pc, #24]	@ (8008df8 <xTimerGenericCommand+0x98>)
 8008dde:	6818      	ldr	r0, [r3, #0]
 8008de0:	f107 0110 	add.w	r1, r7, #16
 8008de4:	2300      	movs	r3, #0
 8008de6:	683a      	ldr	r2, [r7, #0]
 8008de8:	f7fe fd48 	bl	800787c <xQueueGenericSendFromISR>
 8008dec:	6278      	str	r0, [r7, #36]	@ 0x24
 8008dee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008df0:	4618      	mov	r0, r3
 8008df2:	3728      	adds	r7, #40	@ 0x28
 8008df4:	46bd      	mov	sp, r7
 8008df6:	bd80      	pop	{r7, pc}
 8008df8:	20001644 	.word	0x20001644

08008dfc <prvProcessExpiredTimer>:
 8008dfc:	b580      	push	{r7, lr}
 8008dfe:	b088      	sub	sp, #32
 8008e00:	af02      	add	r7, sp, #8
 8008e02:	6078      	str	r0, [r7, #4]
 8008e04:	6039      	str	r1, [r7, #0]
 8008e06:	4b23      	ldr	r3, [pc, #140]	@ (8008e94 <prvProcessExpiredTimer+0x98>)
 8008e08:	681b      	ldr	r3, [r3, #0]
 8008e0a:	68db      	ldr	r3, [r3, #12]
 8008e0c:	68db      	ldr	r3, [r3, #12]
 8008e0e:	617b      	str	r3, [r7, #20]
 8008e10:	697b      	ldr	r3, [r7, #20]
 8008e12:	3304      	adds	r3, #4
 8008e14:	4618      	mov	r0, r3
 8008e16:	f7fe fafb 	bl	8007410 <uxListRemove>
 8008e1a:	697b      	ldr	r3, [r7, #20]
 8008e1c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8008e20:	f003 0304 	and.w	r3, r3, #4
 8008e24:	2b00      	cmp	r3, #0
 8008e26:	d023      	beq.n	8008e70 <prvProcessExpiredTimer+0x74>
 8008e28:	697b      	ldr	r3, [r7, #20]
 8008e2a:	699a      	ldr	r2, [r3, #24]
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	18d1      	adds	r1, r2, r3
 8008e30:	687b      	ldr	r3, [r7, #4]
 8008e32:	683a      	ldr	r2, [r7, #0]
 8008e34:	6978      	ldr	r0, [r7, #20]
 8008e36:	f000 f8d5 	bl	8008fe4 <prvInsertTimerInActiveList>
 8008e3a:	4603      	mov	r3, r0
 8008e3c:	2b00      	cmp	r3, #0
 8008e3e:	d020      	beq.n	8008e82 <prvProcessExpiredTimer+0x86>
 8008e40:	2300      	movs	r3, #0
 8008e42:	9300      	str	r3, [sp, #0]
 8008e44:	2300      	movs	r3, #0
 8008e46:	687a      	ldr	r2, [r7, #4]
 8008e48:	2100      	movs	r1, #0
 8008e4a:	6978      	ldr	r0, [r7, #20]
 8008e4c:	f7ff ff88 	bl	8008d60 <xTimerGenericCommand>
 8008e50:	6138      	str	r0, [r7, #16]
 8008e52:	693b      	ldr	r3, [r7, #16]
 8008e54:	2b00      	cmp	r3, #0
 8008e56:	d114      	bne.n	8008e82 <prvProcessExpiredTimer+0x86>
 8008e58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e5c:	f383 8811 	msr	BASEPRI, r3
 8008e60:	f3bf 8f6f 	isb	sy
 8008e64:	f3bf 8f4f 	dsb	sy
 8008e68:	60fb      	str	r3, [r7, #12]
 8008e6a:	bf00      	nop
 8008e6c:	bf00      	nop
 8008e6e:	e7fd      	b.n	8008e6c <prvProcessExpiredTimer+0x70>
 8008e70:	697b      	ldr	r3, [r7, #20]
 8008e72:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8008e76:	f023 0301 	bic.w	r3, r3, #1
 8008e7a:	b2da      	uxtb	r2, r3
 8008e7c:	697b      	ldr	r3, [r7, #20]
 8008e7e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8008e82:	697b      	ldr	r3, [r7, #20]
 8008e84:	6a1b      	ldr	r3, [r3, #32]
 8008e86:	6978      	ldr	r0, [r7, #20]
 8008e88:	4798      	blx	r3
 8008e8a:	bf00      	nop
 8008e8c:	3718      	adds	r7, #24
 8008e8e:	46bd      	mov	sp, r7
 8008e90:	bd80      	pop	{r7, pc}
 8008e92:	bf00      	nop
 8008e94:	2000163c 	.word	0x2000163c

08008e98 <prvTimerTask>:
 8008e98:	b580      	push	{r7, lr}
 8008e9a:	b084      	sub	sp, #16
 8008e9c:	af00      	add	r7, sp, #0
 8008e9e:	6078      	str	r0, [r7, #4]
 8008ea0:	f107 0308 	add.w	r3, r7, #8
 8008ea4:	4618      	mov	r0, r3
 8008ea6:	f000 f859 	bl	8008f5c <prvGetNextExpireTime>
 8008eaa:	60f8      	str	r0, [r7, #12]
 8008eac:	68bb      	ldr	r3, [r7, #8]
 8008eae:	4619      	mov	r1, r3
 8008eb0:	68f8      	ldr	r0, [r7, #12]
 8008eb2:	f000 f805 	bl	8008ec0 <prvProcessTimerOrBlockTask>
 8008eb6:	f000 f8d7 	bl	8009068 <prvProcessReceivedCommands>
 8008eba:	bf00      	nop
 8008ebc:	e7f0      	b.n	8008ea0 <prvTimerTask+0x8>
	...

08008ec0 <prvProcessTimerOrBlockTask>:
 8008ec0:	b580      	push	{r7, lr}
 8008ec2:	b084      	sub	sp, #16
 8008ec4:	af00      	add	r7, sp, #0
 8008ec6:	6078      	str	r0, [r7, #4]
 8008ec8:	6039      	str	r1, [r7, #0]
 8008eca:	f7ff fa29 	bl	8008320 <vTaskSuspendAll>
 8008ece:	f107 0308 	add.w	r3, r7, #8
 8008ed2:	4618      	mov	r0, r3
 8008ed4:	f000 f866 	bl	8008fa4 <prvSampleTimeNow>
 8008ed8:	60f8      	str	r0, [r7, #12]
 8008eda:	68bb      	ldr	r3, [r7, #8]
 8008edc:	2b00      	cmp	r3, #0
 8008ede:	d130      	bne.n	8008f42 <prvProcessTimerOrBlockTask+0x82>
 8008ee0:	683b      	ldr	r3, [r7, #0]
 8008ee2:	2b00      	cmp	r3, #0
 8008ee4:	d10a      	bne.n	8008efc <prvProcessTimerOrBlockTask+0x3c>
 8008ee6:	687a      	ldr	r2, [r7, #4]
 8008ee8:	68fb      	ldr	r3, [r7, #12]
 8008eea:	429a      	cmp	r2, r3
 8008eec:	d806      	bhi.n	8008efc <prvProcessTimerOrBlockTask+0x3c>
 8008eee:	f7ff fa25 	bl	800833c <xTaskResumeAll>
 8008ef2:	68f9      	ldr	r1, [r7, #12]
 8008ef4:	6878      	ldr	r0, [r7, #4]
 8008ef6:	f7ff ff81 	bl	8008dfc <prvProcessExpiredTimer>
 8008efa:	e024      	b.n	8008f46 <prvProcessTimerOrBlockTask+0x86>
 8008efc:	683b      	ldr	r3, [r7, #0]
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	d008      	beq.n	8008f14 <prvProcessTimerOrBlockTask+0x54>
 8008f02:	4b13      	ldr	r3, [pc, #76]	@ (8008f50 <prvProcessTimerOrBlockTask+0x90>)
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	681b      	ldr	r3, [r3, #0]
 8008f08:	2b00      	cmp	r3, #0
 8008f0a:	d101      	bne.n	8008f10 <prvProcessTimerOrBlockTask+0x50>
 8008f0c:	2301      	movs	r3, #1
 8008f0e:	e000      	b.n	8008f12 <prvProcessTimerOrBlockTask+0x52>
 8008f10:	2300      	movs	r3, #0
 8008f12:	603b      	str	r3, [r7, #0]
 8008f14:	4b0f      	ldr	r3, [pc, #60]	@ (8008f54 <prvProcessTimerOrBlockTask+0x94>)
 8008f16:	6818      	ldr	r0, [r3, #0]
 8008f18:	687a      	ldr	r2, [r7, #4]
 8008f1a:	68fb      	ldr	r3, [r7, #12]
 8008f1c:	1ad3      	subs	r3, r2, r3
 8008f1e:	683a      	ldr	r2, [r7, #0]
 8008f20:	4619      	mov	r1, r3
 8008f22:	f7fe ff65 	bl	8007df0 <vQueueWaitForMessageRestricted>
 8008f26:	f7ff fa09 	bl	800833c <xTaskResumeAll>
 8008f2a:	4603      	mov	r3, r0
 8008f2c:	2b00      	cmp	r3, #0
 8008f2e:	d10a      	bne.n	8008f46 <prvProcessTimerOrBlockTask+0x86>
 8008f30:	4b09      	ldr	r3, [pc, #36]	@ (8008f58 <prvProcessTimerOrBlockTask+0x98>)
 8008f32:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f36:	601a      	str	r2, [r3, #0]
 8008f38:	f3bf 8f4f 	dsb	sy
 8008f3c:	f3bf 8f6f 	isb	sy
 8008f40:	e001      	b.n	8008f46 <prvProcessTimerOrBlockTask+0x86>
 8008f42:	f7ff f9fb 	bl	800833c <xTaskResumeAll>
 8008f46:	bf00      	nop
 8008f48:	3710      	adds	r7, #16
 8008f4a:	46bd      	mov	sp, r7
 8008f4c:	bd80      	pop	{r7, pc}
 8008f4e:	bf00      	nop
 8008f50:	20001640 	.word	0x20001640
 8008f54:	20001644 	.word	0x20001644
 8008f58:	e000ed04 	.word	0xe000ed04

08008f5c <prvGetNextExpireTime>:
 8008f5c:	b480      	push	{r7}
 8008f5e:	b085      	sub	sp, #20
 8008f60:	af00      	add	r7, sp, #0
 8008f62:	6078      	str	r0, [r7, #4]
 8008f64:	4b0e      	ldr	r3, [pc, #56]	@ (8008fa0 <prvGetNextExpireTime+0x44>)
 8008f66:	681b      	ldr	r3, [r3, #0]
 8008f68:	681b      	ldr	r3, [r3, #0]
 8008f6a:	2b00      	cmp	r3, #0
 8008f6c:	d101      	bne.n	8008f72 <prvGetNextExpireTime+0x16>
 8008f6e:	2201      	movs	r2, #1
 8008f70:	e000      	b.n	8008f74 <prvGetNextExpireTime+0x18>
 8008f72:	2200      	movs	r2, #0
 8008f74:	687b      	ldr	r3, [r7, #4]
 8008f76:	601a      	str	r2, [r3, #0]
 8008f78:	687b      	ldr	r3, [r7, #4]
 8008f7a:	681b      	ldr	r3, [r3, #0]
 8008f7c:	2b00      	cmp	r3, #0
 8008f7e:	d105      	bne.n	8008f8c <prvGetNextExpireTime+0x30>
 8008f80:	4b07      	ldr	r3, [pc, #28]	@ (8008fa0 <prvGetNextExpireTime+0x44>)
 8008f82:	681b      	ldr	r3, [r3, #0]
 8008f84:	68db      	ldr	r3, [r3, #12]
 8008f86:	681b      	ldr	r3, [r3, #0]
 8008f88:	60fb      	str	r3, [r7, #12]
 8008f8a:	e001      	b.n	8008f90 <prvGetNextExpireTime+0x34>
 8008f8c:	2300      	movs	r3, #0
 8008f8e:	60fb      	str	r3, [r7, #12]
 8008f90:	68fb      	ldr	r3, [r7, #12]
 8008f92:	4618      	mov	r0, r3
 8008f94:	3714      	adds	r7, #20
 8008f96:	46bd      	mov	sp, r7
 8008f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f9c:	4770      	bx	lr
 8008f9e:	bf00      	nop
 8008fa0:	2000163c 	.word	0x2000163c

08008fa4 <prvSampleTimeNow>:
 8008fa4:	b580      	push	{r7, lr}
 8008fa6:	b084      	sub	sp, #16
 8008fa8:	af00      	add	r7, sp, #0
 8008faa:	6078      	str	r0, [r7, #4]
 8008fac:	f7ff fa64 	bl	8008478 <xTaskGetTickCount>
 8008fb0:	60f8      	str	r0, [r7, #12]
 8008fb2:	4b0b      	ldr	r3, [pc, #44]	@ (8008fe0 <prvSampleTimeNow+0x3c>)
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	68fa      	ldr	r2, [r7, #12]
 8008fb8:	429a      	cmp	r2, r3
 8008fba:	d205      	bcs.n	8008fc8 <prvSampleTimeNow+0x24>
 8008fbc:	f000 f93a 	bl	8009234 <prvSwitchTimerLists>
 8008fc0:	687b      	ldr	r3, [r7, #4]
 8008fc2:	2201      	movs	r2, #1
 8008fc4:	601a      	str	r2, [r3, #0]
 8008fc6:	e002      	b.n	8008fce <prvSampleTimeNow+0x2a>
 8008fc8:	687b      	ldr	r3, [r7, #4]
 8008fca:	2200      	movs	r2, #0
 8008fcc:	601a      	str	r2, [r3, #0]
 8008fce:	4a04      	ldr	r2, [pc, #16]	@ (8008fe0 <prvSampleTimeNow+0x3c>)
 8008fd0:	68fb      	ldr	r3, [r7, #12]
 8008fd2:	6013      	str	r3, [r2, #0]
 8008fd4:	68fb      	ldr	r3, [r7, #12]
 8008fd6:	4618      	mov	r0, r3
 8008fd8:	3710      	adds	r7, #16
 8008fda:	46bd      	mov	sp, r7
 8008fdc:	bd80      	pop	{r7, pc}
 8008fde:	bf00      	nop
 8008fe0:	2000164c 	.word	0x2000164c

08008fe4 <prvInsertTimerInActiveList>:
 8008fe4:	b580      	push	{r7, lr}
 8008fe6:	b086      	sub	sp, #24
 8008fe8:	af00      	add	r7, sp, #0
 8008fea:	60f8      	str	r0, [r7, #12]
 8008fec:	60b9      	str	r1, [r7, #8]
 8008fee:	607a      	str	r2, [r7, #4]
 8008ff0:	603b      	str	r3, [r7, #0]
 8008ff2:	2300      	movs	r3, #0
 8008ff4:	617b      	str	r3, [r7, #20]
 8008ff6:	68fb      	ldr	r3, [r7, #12]
 8008ff8:	68ba      	ldr	r2, [r7, #8]
 8008ffa:	605a      	str	r2, [r3, #4]
 8008ffc:	68fb      	ldr	r3, [r7, #12]
 8008ffe:	68fa      	ldr	r2, [r7, #12]
 8009000:	611a      	str	r2, [r3, #16]
 8009002:	68ba      	ldr	r2, [r7, #8]
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	429a      	cmp	r2, r3
 8009008:	d812      	bhi.n	8009030 <prvInsertTimerInActiveList+0x4c>
 800900a:	687a      	ldr	r2, [r7, #4]
 800900c:	683b      	ldr	r3, [r7, #0]
 800900e:	1ad2      	subs	r2, r2, r3
 8009010:	68fb      	ldr	r3, [r7, #12]
 8009012:	699b      	ldr	r3, [r3, #24]
 8009014:	429a      	cmp	r2, r3
 8009016:	d302      	bcc.n	800901e <prvInsertTimerInActiveList+0x3a>
 8009018:	2301      	movs	r3, #1
 800901a:	617b      	str	r3, [r7, #20]
 800901c:	e01b      	b.n	8009056 <prvInsertTimerInActiveList+0x72>
 800901e:	4b10      	ldr	r3, [pc, #64]	@ (8009060 <prvInsertTimerInActiveList+0x7c>)
 8009020:	681a      	ldr	r2, [r3, #0]
 8009022:	68fb      	ldr	r3, [r7, #12]
 8009024:	3304      	adds	r3, #4
 8009026:	4619      	mov	r1, r3
 8009028:	4610      	mov	r0, r2
 800902a:	f7fe f9b8 	bl	800739e <vListInsert>
 800902e:	e012      	b.n	8009056 <prvInsertTimerInActiveList+0x72>
 8009030:	687a      	ldr	r2, [r7, #4]
 8009032:	683b      	ldr	r3, [r7, #0]
 8009034:	429a      	cmp	r2, r3
 8009036:	d206      	bcs.n	8009046 <prvInsertTimerInActiveList+0x62>
 8009038:	68ba      	ldr	r2, [r7, #8]
 800903a:	683b      	ldr	r3, [r7, #0]
 800903c:	429a      	cmp	r2, r3
 800903e:	d302      	bcc.n	8009046 <prvInsertTimerInActiveList+0x62>
 8009040:	2301      	movs	r3, #1
 8009042:	617b      	str	r3, [r7, #20]
 8009044:	e007      	b.n	8009056 <prvInsertTimerInActiveList+0x72>
 8009046:	4b07      	ldr	r3, [pc, #28]	@ (8009064 <prvInsertTimerInActiveList+0x80>)
 8009048:	681a      	ldr	r2, [r3, #0]
 800904a:	68fb      	ldr	r3, [r7, #12]
 800904c:	3304      	adds	r3, #4
 800904e:	4619      	mov	r1, r3
 8009050:	4610      	mov	r0, r2
 8009052:	f7fe f9a4 	bl	800739e <vListInsert>
 8009056:	697b      	ldr	r3, [r7, #20]
 8009058:	4618      	mov	r0, r3
 800905a:	3718      	adds	r7, #24
 800905c:	46bd      	mov	sp, r7
 800905e:	bd80      	pop	{r7, pc}
 8009060:	20001640 	.word	0x20001640
 8009064:	2000163c 	.word	0x2000163c

08009068 <prvProcessReceivedCommands>:
 8009068:	b580      	push	{r7, lr}
 800906a:	b08e      	sub	sp, #56	@ 0x38
 800906c:	af02      	add	r7, sp, #8
 800906e:	e0ce      	b.n	800920e <prvProcessReceivedCommands+0x1a6>
 8009070:	687b      	ldr	r3, [r7, #4]
 8009072:	2b00      	cmp	r3, #0
 8009074:	da19      	bge.n	80090aa <prvProcessReceivedCommands+0x42>
 8009076:	1d3b      	adds	r3, r7, #4
 8009078:	3304      	adds	r3, #4
 800907a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800907c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800907e:	2b00      	cmp	r3, #0
 8009080:	d10b      	bne.n	800909a <prvProcessReceivedCommands+0x32>
 8009082:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009086:	f383 8811 	msr	BASEPRI, r3
 800908a:	f3bf 8f6f 	isb	sy
 800908e:	f3bf 8f4f 	dsb	sy
 8009092:	61fb      	str	r3, [r7, #28]
 8009094:	bf00      	nop
 8009096:	bf00      	nop
 8009098:	e7fd      	b.n	8009096 <prvProcessReceivedCommands+0x2e>
 800909a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800909c:	681b      	ldr	r3, [r3, #0]
 800909e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80090a0:	6850      	ldr	r0, [r2, #4]
 80090a2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80090a4:	6892      	ldr	r2, [r2, #8]
 80090a6:	4611      	mov	r1, r2
 80090a8:	4798      	blx	r3
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	2b00      	cmp	r3, #0
 80090ae:	f2c0 80ae 	blt.w	800920e <prvProcessReceivedCommands+0x1a6>
 80090b2:	68fb      	ldr	r3, [r7, #12]
 80090b4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80090b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80090b8:	695b      	ldr	r3, [r3, #20]
 80090ba:	2b00      	cmp	r3, #0
 80090bc:	d004      	beq.n	80090c8 <prvProcessReceivedCommands+0x60>
 80090be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80090c0:	3304      	adds	r3, #4
 80090c2:	4618      	mov	r0, r3
 80090c4:	f7fe f9a4 	bl	8007410 <uxListRemove>
 80090c8:	463b      	mov	r3, r7
 80090ca:	4618      	mov	r0, r3
 80090cc:	f7ff ff6a 	bl	8008fa4 <prvSampleTimeNow>
 80090d0:	6278      	str	r0, [r7, #36]	@ 0x24
 80090d2:	687b      	ldr	r3, [r7, #4]
 80090d4:	2b09      	cmp	r3, #9
 80090d6:	f200 8097 	bhi.w	8009208 <prvProcessReceivedCommands+0x1a0>
 80090da:	a201      	add	r2, pc, #4	@ (adr r2, 80090e0 <prvProcessReceivedCommands+0x78>)
 80090dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80090e0:	08009109 	.word	0x08009109
 80090e4:	08009109 	.word	0x08009109
 80090e8:	08009109 	.word	0x08009109
 80090ec:	0800917f 	.word	0x0800917f
 80090f0:	08009193 	.word	0x08009193
 80090f4:	080091df 	.word	0x080091df
 80090f8:	08009109 	.word	0x08009109
 80090fc:	08009109 	.word	0x08009109
 8009100:	0800917f 	.word	0x0800917f
 8009104:	08009193 	.word	0x08009193
 8009108:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800910a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800910e:	f043 0301 	orr.w	r3, r3, #1
 8009112:	b2da      	uxtb	r2, r3
 8009114:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009116:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800911a:	68ba      	ldr	r2, [r7, #8]
 800911c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800911e:	699b      	ldr	r3, [r3, #24]
 8009120:	18d1      	adds	r1, r2, r3
 8009122:	68bb      	ldr	r3, [r7, #8]
 8009124:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009126:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8009128:	f7ff ff5c 	bl	8008fe4 <prvInsertTimerInActiveList>
 800912c:	4603      	mov	r3, r0
 800912e:	2b00      	cmp	r3, #0
 8009130:	d06c      	beq.n	800920c <prvProcessReceivedCommands+0x1a4>
 8009132:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009134:	6a1b      	ldr	r3, [r3, #32]
 8009136:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8009138:	4798      	blx	r3
 800913a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800913c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009140:	f003 0304 	and.w	r3, r3, #4
 8009144:	2b00      	cmp	r3, #0
 8009146:	d061      	beq.n	800920c <prvProcessReceivedCommands+0x1a4>
 8009148:	68ba      	ldr	r2, [r7, #8]
 800914a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800914c:	699b      	ldr	r3, [r3, #24]
 800914e:	441a      	add	r2, r3
 8009150:	2300      	movs	r3, #0
 8009152:	9300      	str	r3, [sp, #0]
 8009154:	2300      	movs	r3, #0
 8009156:	2100      	movs	r1, #0
 8009158:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800915a:	f7ff fe01 	bl	8008d60 <xTimerGenericCommand>
 800915e:	6238      	str	r0, [r7, #32]
 8009160:	6a3b      	ldr	r3, [r7, #32]
 8009162:	2b00      	cmp	r3, #0
 8009164:	d152      	bne.n	800920c <prvProcessReceivedCommands+0x1a4>
 8009166:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800916a:	f383 8811 	msr	BASEPRI, r3
 800916e:	f3bf 8f6f 	isb	sy
 8009172:	f3bf 8f4f 	dsb	sy
 8009176:	61bb      	str	r3, [r7, #24]
 8009178:	bf00      	nop
 800917a:	bf00      	nop
 800917c:	e7fd      	b.n	800917a <prvProcessReceivedCommands+0x112>
 800917e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009180:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009184:	f023 0301 	bic.w	r3, r3, #1
 8009188:	b2da      	uxtb	r2, r3
 800918a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800918c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8009190:	e03d      	b.n	800920e <prvProcessReceivedCommands+0x1a6>
 8009192:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009194:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009198:	f043 0301 	orr.w	r3, r3, #1
 800919c:	b2da      	uxtb	r2, r3
 800919e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091a0:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80091a4:	68ba      	ldr	r2, [r7, #8]
 80091a6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091a8:	619a      	str	r2, [r3, #24]
 80091aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091ac:	699b      	ldr	r3, [r3, #24]
 80091ae:	2b00      	cmp	r3, #0
 80091b0:	d10b      	bne.n	80091ca <prvProcessReceivedCommands+0x162>
 80091b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091b6:	f383 8811 	msr	BASEPRI, r3
 80091ba:	f3bf 8f6f 	isb	sy
 80091be:	f3bf 8f4f 	dsb	sy
 80091c2:	617b      	str	r3, [r7, #20]
 80091c4:	bf00      	nop
 80091c6:	bf00      	nop
 80091c8:	e7fd      	b.n	80091c6 <prvProcessReceivedCommands+0x15e>
 80091ca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091cc:	699a      	ldr	r2, [r3, #24]
 80091ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091d0:	18d1      	adds	r1, r2, r3
 80091d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091d4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80091d6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80091d8:	f7ff ff04 	bl	8008fe4 <prvInsertTimerInActiveList>
 80091dc:	e017      	b.n	800920e <prvProcessReceivedCommands+0x1a6>
 80091de:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091e0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80091e4:	f003 0302 	and.w	r3, r3, #2
 80091e8:	2b00      	cmp	r3, #0
 80091ea:	d103      	bne.n	80091f4 <prvProcessReceivedCommands+0x18c>
 80091ec:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80091ee:	f000 fbeb 	bl	80099c8 <vPortFree>
 80091f2:	e00c      	b.n	800920e <prvProcessReceivedCommands+0x1a6>
 80091f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091f6:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80091fa:	f023 0301 	bic.w	r3, r3, #1
 80091fe:	b2da      	uxtb	r2, r3
 8009200:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009202:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8009206:	e002      	b.n	800920e <prvProcessReceivedCommands+0x1a6>
 8009208:	bf00      	nop
 800920a:	e000      	b.n	800920e <prvProcessReceivedCommands+0x1a6>
 800920c:	bf00      	nop
 800920e:	4b08      	ldr	r3, [pc, #32]	@ (8009230 <prvProcessReceivedCommands+0x1c8>)
 8009210:	681b      	ldr	r3, [r3, #0]
 8009212:	1d39      	adds	r1, r7, #4
 8009214:	2200      	movs	r2, #0
 8009216:	4618      	mov	r0, r3
 8009218:	f7fe fbce 	bl	80079b8 <xQueueReceive>
 800921c:	4603      	mov	r3, r0
 800921e:	2b00      	cmp	r3, #0
 8009220:	f47f af26 	bne.w	8009070 <prvProcessReceivedCommands+0x8>
 8009224:	bf00      	nop
 8009226:	bf00      	nop
 8009228:	3730      	adds	r7, #48	@ 0x30
 800922a:	46bd      	mov	sp, r7
 800922c:	bd80      	pop	{r7, pc}
 800922e:	bf00      	nop
 8009230:	20001644 	.word	0x20001644

08009234 <prvSwitchTimerLists>:
 8009234:	b580      	push	{r7, lr}
 8009236:	b088      	sub	sp, #32
 8009238:	af02      	add	r7, sp, #8
 800923a:	e049      	b.n	80092d0 <prvSwitchTimerLists+0x9c>
 800923c:	4b2e      	ldr	r3, [pc, #184]	@ (80092f8 <prvSwitchTimerLists+0xc4>)
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	68db      	ldr	r3, [r3, #12]
 8009242:	681b      	ldr	r3, [r3, #0]
 8009244:	613b      	str	r3, [r7, #16]
 8009246:	4b2c      	ldr	r3, [pc, #176]	@ (80092f8 <prvSwitchTimerLists+0xc4>)
 8009248:	681b      	ldr	r3, [r3, #0]
 800924a:	68db      	ldr	r3, [r3, #12]
 800924c:	68db      	ldr	r3, [r3, #12]
 800924e:	60fb      	str	r3, [r7, #12]
 8009250:	68fb      	ldr	r3, [r7, #12]
 8009252:	3304      	adds	r3, #4
 8009254:	4618      	mov	r0, r3
 8009256:	f7fe f8db 	bl	8007410 <uxListRemove>
 800925a:	68fb      	ldr	r3, [r7, #12]
 800925c:	6a1b      	ldr	r3, [r3, #32]
 800925e:	68f8      	ldr	r0, [r7, #12]
 8009260:	4798      	blx	r3
 8009262:	68fb      	ldr	r3, [r7, #12]
 8009264:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009268:	f003 0304 	and.w	r3, r3, #4
 800926c:	2b00      	cmp	r3, #0
 800926e:	d02f      	beq.n	80092d0 <prvSwitchTimerLists+0x9c>
 8009270:	68fb      	ldr	r3, [r7, #12]
 8009272:	699b      	ldr	r3, [r3, #24]
 8009274:	693a      	ldr	r2, [r7, #16]
 8009276:	4413      	add	r3, r2
 8009278:	60bb      	str	r3, [r7, #8]
 800927a:	68ba      	ldr	r2, [r7, #8]
 800927c:	693b      	ldr	r3, [r7, #16]
 800927e:	429a      	cmp	r2, r3
 8009280:	d90e      	bls.n	80092a0 <prvSwitchTimerLists+0x6c>
 8009282:	68fb      	ldr	r3, [r7, #12]
 8009284:	68ba      	ldr	r2, [r7, #8]
 8009286:	605a      	str	r2, [r3, #4]
 8009288:	68fb      	ldr	r3, [r7, #12]
 800928a:	68fa      	ldr	r2, [r7, #12]
 800928c:	611a      	str	r2, [r3, #16]
 800928e:	4b1a      	ldr	r3, [pc, #104]	@ (80092f8 <prvSwitchTimerLists+0xc4>)
 8009290:	681a      	ldr	r2, [r3, #0]
 8009292:	68fb      	ldr	r3, [r7, #12]
 8009294:	3304      	adds	r3, #4
 8009296:	4619      	mov	r1, r3
 8009298:	4610      	mov	r0, r2
 800929a:	f7fe f880 	bl	800739e <vListInsert>
 800929e:	e017      	b.n	80092d0 <prvSwitchTimerLists+0x9c>
 80092a0:	2300      	movs	r3, #0
 80092a2:	9300      	str	r3, [sp, #0]
 80092a4:	2300      	movs	r3, #0
 80092a6:	693a      	ldr	r2, [r7, #16]
 80092a8:	2100      	movs	r1, #0
 80092aa:	68f8      	ldr	r0, [r7, #12]
 80092ac:	f7ff fd58 	bl	8008d60 <xTimerGenericCommand>
 80092b0:	6078      	str	r0, [r7, #4]
 80092b2:	687b      	ldr	r3, [r7, #4]
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	d10b      	bne.n	80092d0 <prvSwitchTimerLists+0x9c>
 80092b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092bc:	f383 8811 	msr	BASEPRI, r3
 80092c0:	f3bf 8f6f 	isb	sy
 80092c4:	f3bf 8f4f 	dsb	sy
 80092c8:	603b      	str	r3, [r7, #0]
 80092ca:	bf00      	nop
 80092cc:	bf00      	nop
 80092ce:	e7fd      	b.n	80092cc <prvSwitchTimerLists+0x98>
 80092d0:	4b09      	ldr	r3, [pc, #36]	@ (80092f8 <prvSwitchTimerLists+0xc4>)
 80092d2:	681b      	ldr	r3, [r3, #0]
 80092d4:	681b      	ldr	r3, [r3, #0]
 80092d6:	2b00      	cmp	r3, #0
 80092d8:	d1b0      	bne.n	800923c <prvSwitchTimerLists+0x8>
 80092da:	4b07      	ldr	r3, [pc, #28]	@ (80092f8 <prvSwitchTimerLists+0xc4>)
 80092dc:	681b      	ldr	r3, [r3, #0]
 80092de:	617b      	str	r3, [r7, #20]
 80092e0:	4b06      	ldr	r3, [pc, #24]	@ (80092fc <prvSwitchTimerLists+0xc8>)
 80092e2:	681b      	ldr	r3, [r3, #0]
 80092e4:	4a04      	ldr	r2, [pc, #16]	@ (80092f8 <prvSwitchTimerLists+0xc4>)
 80092e6:	6013      	str	r3, [r2, #0]
 80092e8:	4a04      	ldr	r2, [pc, #16]	@ (80092fc <prvSwitchTimerLists+0xc8>)
 80092ea:	697b      	ldr	r3, [r7, #20]
 80092ec:	6013      	str	r3, [r2, #0]
 80092ee:	bf00      	nop
 80092f0:	3718      	adds	r7, #24
 80092f2:	46bd      	mov	sp, r7
 80092f4:	bd80      	pop	{r7, pc}
 80092f6:	bf00      	nop
 80092f8:	2000163c 	.word	0x2000163c
 80092fc:	20001640 	.word	0x20001640

08009300 <prvCheckForValidListAndQueue>:
 8009300:	b580      	push	{r7, lr}
 8009302:	b082      	sub	sp, #8
 8009304:	af02      	add	r7, sp, #8
 8009306:	f000 f96f 	bl	80095e8 <vPortEnterCritical>
 800930a:	4b15      	ldr	r3, [pc, #84]	@ (8009360 <prvCheckForValidListAndQueue+0x60>)
 800930c:	681b      	ldr	r3, [r3, #0]
 800930e:	2b00      	cmp	r3, #0
 8009310:	d120      	bne.n	8009354 <prvCheckForValidListAndQueue+0x54>
 8009312:	4814      	ldr	r0, [pc, #80]	@ (8009364 <prvCheckForValidListAndQueue+0x64>)
 8009314:	f7fd fff2 	bl	80072fc <vListInitialise>
 8009318:	4813      	ldr	r0, [pc, #76]	@ (8009368 <prvCheckForValidListAndQueue+0x68>)
 800931a:	f7fd ffef 	bl	80072fc <vListInitialise>
 800931e:	4b13      	ldr	r3, [pc, #76]	@ (800936c <prvCheckForValidListAndQueue+0x6c>)
 8009320:	4a10      	ldr	r2, [pc, #64]	@ (8009364 <prvCheckForValidListAndQueue+0x64>)
 8009322:	601a      	str	r2, [r3, #0]
 8009324:	4b12      	ldr	r3, [pc, #72]	@ (8009370 <prvCheckForValidListAndQueue+0x70>)
 8009326:	4a10      	ldr	r2, [pc, #64]	@ (8009368 <prvCheckForValidListAndQueue+0x68>)
 8009328:	601a      	str	r2, [r3, #0]
 800932a:	2300      	movs	r3, #0
 800932c:	9300      	str	r3, [sp, #0]
 800932e:	4b11      	ldr	r3, [pc, #68]	@ (8009374 <prvCheckForValidListAndQueue+0x74>)
 8009330:	4a11      	ldr	r2, [pc, #68]	@ (8009378 <prvCheckForValidListAndQueue+0x78>)
 8009332:	2110      	movs	r1, #16
 8009334:	200a      	movs	r0, #10
 8009336:	f7fe f8ff 	bl	8007538 <xQueueGenericCreateStatic>
 800933a:	4603      	mov	r3, r0
 800933c:	4a08      	ldr	r2, [pc, #32]	@ (8009360 <prvCheckForValidListAndQueue+0x60>)
 800933e:	6013      	str	r3, [r2, #0]
 8009340:	4b07      	ldr	r3, [pc, #28]	@ (8009360 <prvCheckForValidListAndQueue+0x60>)
 8009342:	681b      	ldr	r3, [r3, #0]
 8009344:	2b00      	cmp	r3, #0
 8009346:	d005      	beq.n	8009354 <prvCheckForValidListAndQueue+0x54>
 8009348:	4b05      	ldr	r3, [pc, #20]	@ (8009360 <prvCheckForValidListAndQueue+0x60>)
 800934a:	681b      	ldr	r3, [r3, #0]
 800934c:	490b      	ldr	r1, [pc, #44]	@ (800937c <prvCheckForValidListAndQueue+0x7c>)
 800934e:	4618      	mov	r0, r3
 8009350:	f7fe fd24 	bl	8007d9c <vQueueAddToRegistry>
 8009354:	f000 f97a 	bl	800964c <vPortExitCritical>
 8009358:	bf00      	nop
 800935a:	46bd      	mov	sp, r7
 800935c:	bd80      	pop	{r7, pc}
 800935e:	bf00      	nop
 8009360:	20001644 	.word	0x20001644
 8009364:	20001614 	.word	0x20001614
 8009368:	20001628 	.word	0x20001628
 800936c:	2000163c 	.word	0x2000163c
 8009370:	20001640 	.word	0x20001640
 8009374:	200016f0 	.word	0x200016f0
 8009378:	20001650 	.word	0x20001650
 800937c:	08009e34 	.word	0x08009e34

08009380 <pxPortInitialiseStack>:
 8009380:	b480      	push	{r7}
 8009382:	b085      	sub	sp, #20
 8009384:	af00      	add	r7, sp, #0
 8009386:	60f8      	str	r0, [r7, #12]
 8009388:	60b9      	str	r1, [r7, #8]
 800938a:	607a      	str	r2, [r7, #4]
 800938c:	68fb      	ldr	r3, [r7, #12]
 800938e:	3b04      	subs	r3, #4
 8009390:	60fb      	str	r3, [r7, #12]
 8009392:	68fb      	ldr	r3, [r7, #12]
 8009394:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8009398:	601a      	str	r2, [r3, #0]
 800939a:	68fb      	ldr	r3, [r7, #12]
 800939c:	3b04      	subs	r3, #4
 800939e:	60fb      	str	r3, [r7, #12]
 80093a0:	68bb      	ldr	r3, [r7, #8]
 80093a2:	f023 0201 	bic.w	r2, r3, #1
 80093a6:	68fb      	ldr	r3, [r7, #12]
 80093a8:	601a      	str	r2, [r3, #0]
 80093aa:	68fb      	ldr	r3, [r7, #12]
 80093ac:	3b04      	subs	r3, #4
 80093ae:	60fb      	str	r3, [r7, #12]
 80093b0:	4a0c      	ldr	r2, [pc, #48]	@ (80093e4 <pxPortInitialiseStack+0x64>)
 80093b2:	68fb      	ldr	r3, [r7, #12]
 80093b4:	601a      	str	r2, [r3, #0]
 80093b6:	68fb      	ldr	r3, [r7, #12]
 80093b8:	3b14      	subs	r3, #20
 80093ba:	60fb      	str	r3, [r7, #12]
 80093bc:	687a      	ldr	r2, [r7, #4]
 80093be:	68fb      	ldr	r3, [r7, #12]
 80093c0:	601a      	str	r2, [r3, #0]
 80093c2:	68fb      	ldr	r3, [r7, #12]
 80093c4:	3b04      	subs	r3, #4
 80093c6:	60fb      	str	r3, [r7, #12]
 80093c8:	68fb      	ldr	r3, [r7, #12]
 80093ca:	f06f 0202 	mvn.w	r2, #2
 80093ce:	601a      	str	r2, [r3, #0]
 80093d0:	68fb      	ldr	r3, [r7, #12]
 80093d2:	3b20      	subs	r3, #32
 80093d4:	60fb      	str	r3, [r7, #12]
 80093d6:	68fb      	ldr	r3, [r7, #12]
 80093d8:	4618      	mov	r0, r3
 80093da:	3714      	adds	r7, #20
 80093dc:	46bd      	mov	sp, r7
 80093de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093e2:	4770      	bx	lr
 80093e4:	080093e9 	.word	0x080093e9

080093e8 <prvTaskExitError>:
 80093e8:	b480      	push	{r7}
 80093ea:	b085      	sub	sp, #20
 80093ec:	af00      	add	r7, sp, #0
 80093ee:	2300      	movs	r3, #0
 80093f0:	607b      	str	r3, [r7, #4]
 80093f2:	4b13      	ldr	r3, [pc, #76]	@ (8009440 <prvTaskExitError+0x58>)
 80093f4:	681b      	ldr	r3, [r3, #0]
 80093f6:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80093fa:	d00b      	beq.n	8009414 <prvTaskExitError+0x2c>
 80093fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009400:	f383 8811 	msr	BASEPRI, r3
 8009404:	f3bf 8f6f 	isb	sy
 8009408:	f3bf 8f4f 	dsb	sy
 800940c:	60fb      	str	r3, [r7, #12]
 800940e:	bf00      	nop
 8009410:	bf00      	nop
 8009412:	e7fd      	b.n	8009410 <prvTaskExitError+0x28>
 8009414:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009418:	f383 8811 	msr	BASEPRI, r3
 800941c:	f3bf 8f6f 	isb	sy
 8009420:	f3bf 8f4f 	dsb	sy
 8009424:	60bb      	str	r3, [r7, #8]
 8009426:	bf00      	nop
 8009428:	bf00      	nop
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d0fc      	beq.n	800942a <prvTaskExitError+0x42>
 8009430:	bf00      	nop
 8009432:	bf00      	nop
 8009434:	3714      	adds	r7, #20
 8009436:	46bd      	mov	sp, r7
 8009438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800943c:	4770      	bx	lr
 800943e:	bf00      	nop
 8009440:	2000000c 	.word	0x2000000c
	...

08009450 <SVC_Handler>:
 8009450:	4b07      	ldr	r3, [pc, #28]	@ (8009470 <pxCurrentTCBConst2>)
 8009452:	6819      	ldr	r1, [r3, #0]
 8009454:	6808      	ldr	r0, [r1, #0]
 8009456:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800945a:	f380 8809 	msr	PSP, r0
 800945e:	f3bf 8f6f 	isb	sy
 8009462:	f04f 0000 	mov.w	r0, #0
 8009466:	f380 8811 	msr	BASEPRI, r0
 800946a:	4770      	bx	lr
 800946c:	f3af 8000 	nop.w

08009470 <pxCurrentTCBConst2>:
 8009470:	20001114 	.word	0x20001114
 8009474:	bf00      	nop
 8009476:	bf00      	nop

08009478 <prvPortStartFirstTask>:
 8009478:	4808      	ldr	r0, [pc, #32]	@ (800949c <prvPortStartFirstTask+0x24>)
 800947a:	6800      	ldr	r0, [r0, #0]
 800947c:	6800      	ldr	r0, [r0, #0]
 800947e:	f380 8808 	msr	MSP, r0
 8009482:	f04f 0000 	mov.w	r0, #0
 8009486:	f380 8814 	msr	CONTROL, r0
 800948a:	b662      	cpsie	i
 800948c:	b661      	cpsie	f
 800948e:	f3bf 8f4f 	dsb	sy
 8009492:	f3bf 8f6f 	isb	sy
 8009496:	df00      	svc	0
 8009498:	bf00      	nop
 800949a:	bf00      	nop
 800949c:	e000ed08 	.word	0xe000ed08

080094a0 <xPortStartScheduler>:
 80094a0:	b580      	push	{r7, lr}
 80094a2:	b086      	sub	sp, #24
 80094a4:	af00      	add	r7, sp, #0
 80094a6:	4b47      	ldr	r3, [pc, #284]	@ (80095c4 <xPortStartScheduler+0x124>)
 80094a8:	681b      	ldr	r3, [r3, #0]
 80094aa:	4a47      	ldr	r2, [pc, #284]	@ (80095c8 <xPortStartScheduler+0x128>)
 80094ac:	4293      	cmp	r3, r2
 80094ae:	d10b      	bne.n	80094c8 <xPortStartScheduler+0x28>
 80094b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094b4:	f383 8811 	msr	BASEPRI, r3
 80094b8:	f3bf 8f6f 	isb	sy
 80094bc:	f3bf 8f4f 	dsb	sy
 80094c0:	613b      	str	r3, [r7, #16]
 80094c2:	bf00      	nop
 80094c4:	bf00      	nop
 80094c6:	e7fd      	b.n	80094c4 <xPortStartScheduler+0x24>
 80094c8:	4b3e      	ldr	r3, [pc, #248]	@ (80095c4 <xPortStartScheduler+0x124>)
 80094ca:	681b      	ldr	r3, [r3, #0]
 80094cc:	4a3f      	ldr	r2, [pc, #252]	@ (80095cc <xPortStartScheduler+0x12c>)
 80094ce:	4293      	cmp	r3, r2
 80094d0:	d10b      	bne.n	80094ea <xPortStartScheduler+0x4a>
 80094d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094d6:	f383 8811 	msr	BASEPRI, r3
 80094da:	f3bf 8f6f 	isb	sy
 80094de:	f3bf 8f4f 	dsb	sy
 80094e2:	60fb      	str	r3, [r7, #12]
 80094e4:	bf00      	nop
 80094e6:	bf00      	nop
 80094e8:	e7fd      	b.n	80094e6 <xPortStartScheduler+0x46>
 80094ea:	4b39      	ldr	r3, [pc, #228]	@ (80095d0 <xPortStartScheduler+0x130>)
 80094ec:	617b      	str	r3, [r7, #20]
 80094ee:	697b      	ldr	r3, [r7, #20]
 80094f0:	781b      	ldrb	r3, [r3, #0]
 80094f2:	b2db      	uxtb	r3, r3
 80094f4:	607b      	str	r3, [r7, #4]
 80094f6:	697b      	ldr	r3, [r7, #20]
 80094f8:	22ff      	movs	r2, #255	@ 0xff
 80094fa:	701a      	strb	r2, [r3, #0]
 80094fc:	697b      	ldr	r3, [r7, #20]
 80094fe:	781b      	ldrb	r3, [r3, #0]
 8009500:	b2db      	uxtb	r3, r3
 8009502:	70fb      	strb	r3, [r7, #3]
 8009504:	78fb      	ldrb	r3, [r7, #3]
 8009506:	b2db      	uxtb	r3, r3
 8009508:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800950c:	b2da      	uxtb	r2, r3
 800950e:	4b31      	ldr	r3, [pc, #196]	@ (80095d4 <xPortStartScheduler+0x134>)
 8009510:	701a      	strb	r2, [r3, #0]
 8009512:	4b31      	ldr	r3, [pc, #196]	@ (80095d8 <xPortStartScheduler+0x138>)
 8009514:	2207      	movs	r2, #7
 8009516:	601a      	str	r2, [r3, #0]
 8009518:	e009      	b.n	800952e <xPortStartScheduler+0x8e>
 800951a:	4b2f      	ldr	r3, [pc, #188]	@ (80095d8 <xPortStartScheduler+0x138>)
 800951c:	681b      	ldr	r3, [r3, #0]
 800951e:	3b01      	subs	r3, #1
 8009520:	4a2d      	ldr	r2, [pc, #180]	@ (80095d8 <xPortStartScheduler+0x138>)
 8009522:	6013      	str	r3, [r2, #0]
 8009524:	78fb      	ldrb	r3, [r7, #3]
 8009526:	b2db      	uxtb	r3, r3
 8009528:	005b      	lsls	r3, r3, #1
 800952a:	b2db      	uxtb	r3, r3
 800952c:	70fb      	strb	r3, [r7, #3]
 800952e:	78fb      	ldrb	r3, [r7, #3]
 8009530:	b2db      	uxtb	r3, r3
 8009532:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009536:	2b80      	cmp	r3, #128	@ 0x80
 8009538:	d0ef      	beq.n	800951a <xPortStartScheduler+0x7a>
 800953a:	4b27      	ldr	r3, [pc, #156]	@ (80095d8 <xPortStartScheduler+0x138>)
 800953c:	681b      	ldr	r3, [r3, #0]
 800953e:	f1c3 0307 	rsb	r3, r3, #7
 8009542:	2b04      	cmp	r3, #4
 8009544:	d00b      	beq.n	800955e <xPortStartScheduler+0xbe>
 8009546:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800954a:	f383 8811 	msr	BASEPRI, r3
 800954e:	f3bf 8f6f 	isb	sy
 8009552:	f3bf 8f4f 	dsb	sy
 8009556:	60bb      	str	r3, [r7, #8]
 8009558:	bf00      	nop
 800955a:	bf00      	nop
 800955c:	e7fd      	b.n	800955a <xPortStartScheduler+0xba>
 800955e:	4b1e      	ldr	r3, [pc, #120]	@ (80095d8 <xPortStartScheduler+0x138>)
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	021b      	lsls	r3, r3, #8
 8009564:	4a1c      	ldr	r2, [pc, #112]	@ (80095d8 <xPortStartScheduler+0x138>)
 8009566:	6013      	str	r3, [r2, #0]
 8009568:	4b1b      	ldr	r3, [pc, #108]	@ (80095d8 <xPortStartScheduler+0x138>)
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8009570:	4a19      	ldr	r2, [pc, #100]	@ (80095d8 <xPortStartScheduler+0x138>)
 8009572:	6013      	str	r3, [r2, #0]
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	b2da      	uxtb	r2, r3
 8009578:	697b      	ldr	r3, [r7, #20]
 800957a:	701a      	strb	r2, [r3, #0]
 800957c:	4b17      	ldr	r3, [pc, #92]	@ (80095dc <xPortStartScheduler+0x13c>)
 800957e:	681b      	ldr	r3, [r3, #0]
 8009580:	4a16      	ldr	r2, [pc, #88]	@ (80095dc <xPortStartScheduler+0x13c>)
 8009582:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8009586:	6013      	str	r3, [r2, #0]
 8009588:	4b14      	ldr	r3, [pc, #80]	@ (80095dc <xPortStartScheduler+0x13c>)
 800958a:	681b      	ldr	r3, [r3, #0]
 800958c:	4a13      	ldr	r2, [pc, #76]	@ (80095dc <xPortStartScheduler+0x13c>)
 800958e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8009592:	6013      	str	r3, [r2, #0]
 8009594:	f000 f8da 	bl	800974c <vPortSetupTimerInterrupt>
 8009598:	4b11      	ldr	r3, [pc, #68]	@ (80095e0 <xPortStartScheduler+0x140>)
 800959a:	2200      	movs	r2, #0
 800959c:	601a      	str	r2, [r3, #0]
 800959e:	f000 f8f9 	bl	8009794 <vPortEnableVFP>
 80095a2:	4b10      	ldr	r3, [pc, #64]	@ (80095e4 <xPortStartScheduler+0x144>)
 80095a4:	681b      	ldr	r3, [r3, #0]
 80095a6:	4a0f      	ldr	r2, [pc, #60]	@ (80095e4 <xPortStartScheduler+0x144>)
 80095a8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80095ac:	6013      	str	r3, [r2, #0]
 80095ae:	f7ff ff63 	bl	8009478 <prvPortStartFirstTask>
 80095b2:	f7ff f82b 	bl	800860c <vTaskSwitchContext>
 80095b6:	f7ff ff17 	bl	80093e8 <prvTaskExitError>
 80095ba:	2300      	movs	r3, #0
 80095bc:	4618      	mov	r0, r3
 80095be:	3718      	adds	r7, #24
 80095c0:	46bd      	mov	sp, r7
 80095c2:	bd80      	pop	{r7, pc}
 80095c4:	e000ed00 	.word	0xe000ed00
 80095c8:	410fc271 	.word	0x410fc271
 80095cc:	410fc270 	.word	0x410fc270
 80095d0:	e000e400 	.word	0xe000e400
 80095d4:	20001740 	.word	0x20001740
 80095d8:	20001744 	.word	0x20001744
 80095dc:	e000ed20 	.word	0xe000ed20
 80095e0:	2000000c 	.word	0x2000000c
 80095e4:	e000ef34 	.word	0xe000ef34

080095e8 <vPortEnterCritical>:
 80095e8:	b480      	push	{r7}
 80095ea:	b083      	sub	sp, #12
 80095ec:	af00      	add	r7, sp, #0
 80095ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095f2:	f383 8811 	msr	BASEPRI, r3
 80095f6:	f3bf 8f6f 	isb	sy
 80095fa:	f3bf 8f4f 	dsb	sy
 80095fe:	607b      	str	r3, [r7, #4]
 8009600:	bf00      	nop
 8009602:	4b10      	ldr	r3, [pc, #64]	@ (8009644 <vPortEnterCritical+0x5c>)
 8009604:	681b      	ldr	r3, [r3, #0]
 8009606:	3301      	adds	r3, #1
 8009608:	4a0e      	ldr	r2, [pc, #56]	@ (8009644 <vPortEnterCritical+0x5c>)
 800960a:	6013      	str	r3, [r2, #0]
 800960c:	4b0d      	ldr	r3, [pc, #52]	@ (8009644 <vPortEnterCritical+0x5c>)
 800960e:	681b      	ldr	r3, [r3, #0]
 8009610:	2b01      	cmp	r3, #1
 8009612:	d110      	bne.n	8009636 <vPortEnterCritical+0x4e>
 8009614:	4b0c      	ldr	r3, [pc, #48]	@ (8009648 <vPortEnterCritical+0x60>)
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	b2db      	uxtb	r3, r3
 800961a:	2b00      	cmp	r3, #0
 800961c:	d00b      	beq.n	8009636 <vPortEnterCritical+0x4e>
 800961e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009622:	f383 8811 	msr	BASEPRI, r3
 8009626:	f3bf 8f6f 	isb	sy
 800962a:	f3bf 8f4f 	dsb	sy
 800962e:	603b      	str	r3, [r7, #0]
 8009630:	bf00      	nop
 8009632:	bf00      	nop
 8009634:	e7fd      	b.n	8009632 <vPortEnterCritical+0x4a>
 8009636:	bf00      	nop
 8009638:	370c      	adds	r7, #12
 800963a:	46bd      	mov	sp, r7
 800963c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009640:	4770      	bx	lr
 8009642:	bf00      	nop
 8009644:	2000000c 	.word	0x2000000c
 8009648:	e000ed04 	.word	0xe000ed04

0800964c <vPortExitCritical>:
 800964c:	b480      	push	{r7}
 800964e:	b083      	sub	sp, #12
 8009650:	af00      	add	r7, sp, #0
 8009652:	4b12      	ldr	r3, [pc, #72]	@ (800969c <vPortExitCritical+0x50>)
 8009654:	681b      	ldr	r3, [r3, #0]
 8009656:	2b00      	cmp	r3, #0
 8009658:	d10b      	bne.n	8009672 <vPortExitCritical+0x26>
 800965a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800965e:	f383 8811 	msr	BASEPRI, r3
 8009662:	f3bf 8f6f 	isb	sy
 8009666:	f3bf 8f4f 	dsb	sy
 800966a:	607b      	str	r3, [r7, #4]
 800966c:	bf00      	nop
 800966e:	bf00      	nop
 8009670:	e7fd      	b.n	800966e <vPortExitCritical+0x22>
 8009672:	4b0a      	ldr	r3, [pc, #40]	@ (800969c <vPortExitCritical+0x50>)
 8009674:	681b      	ldr	r3, [r3, #0]
 8009676:	3b01      	subs	r3, #1
 8009678:	4a08      	ldr	r2, [pc, #32]	@ (800969c <vPortExitCritical+0x50>)
 800967a:	6013      	str	r3, [r2, #0]
 800967c:	4b07      	ldr	r3, [pc, #28]	@ (800969c <vPortExitCritical+0x50>)
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	2b00      	cmp	r3, #0
 8009682:	d105      	bne.n	8009690 <vPortExitCritical+0x44>
 8009684:	2300      	movs	r3, #0
 8009686:	603b      	str	r3, [r7, #0]
 8009688:	683b      	ldr	r3, [r7, #0]
 800968a:	f383 8811 	msr	BASEPRI, r3
 800968e:	bf00      	nop
 8009690:	bf00      	nop
 8009692:	370c      	adds	r7, #12
 8009694:	46bd      	mov	sp, r7
 8009696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800969a:	4770      	bx	lr
 800969c:	2000000c 	.word	0x2000000c

080096a0 <PendSV_Handler>:
 80096a0:	f3ef 8009 	mrs	r0, PSP
 80096a4:	f3bf 8f6f 	isb	sy
 80096a8:	4b15      	ldr	r3, [pc, #84]	@ (8009700 <pxCurrentTCBConst>)
 80096aa:	681a      	ldr	r2, [r3, #0]
 80096ac:	f01e 0f10 	tst.w	lr, #16
 80096b0:	bf08      	it	eq
 80096b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80096b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096ba:	6010      	str	r0, [r2, #0]
 80096bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80096c0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80096c4:	f380 8811 	msr	BASEPRI, r0
 80096c8:	f3bf 8f4f 	dsb	sy
 80096cc:	f3bf 8f6f 	isb	sy
 80096d0:	f7fe ff9c 	bl	800860c <vTaskSwitchContext>
 80096d4:	f04f 0000 	mov.w	r0, #0
 80096d8:	f380 8811 	msr	BASEPRI, r0
 80096dc:	bc09      	pop	{r0, r3}
 80096de:	6819      	ldr	r1, [r3, #0]
 80096e0:	6808      	ldr	r0, [r1, #0]
 80096e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096e6:	f01e 0f10 	tst.w	lr, #16
 80096ea:	bf08      	it	eq
 80096ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80096f0:	f380 8809 	msr	PSP, r0
 80096f4:	f3bf 8f6f 	isb	sy
 80096f8:	4770      	bx	lr
 80096fa:	bf00      	nop
 80096fc:	f3af 8000 	nop.w

08009700 <pxCurrentTCBConst>:
 8009700:	20001114 	.word	0x20001114
 8009704:	bf00      	nop
 8009706:	bf00      	nop

08009708 <xPortSysTickHandler>:
 8009708:	b580      	push	{r7, lr}
 800970a:	b082      	sub	sp, #8
 800970c:	af00      	add	r7, sp, #0
 800970e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009712:	f383 8811 	msr	BASEPRI, r3
 8009716:	f3bf 8f6f 	isb	sy
 800971a:	f3bf 8f4f 	dsb	sy
 800971e:	607b      	str	r3, [r7, #4]
 8009720:	bf00      	nop
 8009722:	f7fe feb9 	bl	8008498 <xTaskIncrementTick>
 8009726:	4603      	mov	r3, r0
 8009728:	2b00      	cmp	r3, #0
 800972a:	d003      	beq.n	8009734 <xPortSysTickHandler+0x2c>
 800972c:	4b06      	ldr	r3, [pc, #24]	@ (8009748 <xPortSysTickHandler+0x40>)
 800972e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009732:	601a      	str	r2, [r3, #0]
 8009734:	2300      	movs	r3, #0
 8009736:	603b      	str	r3, [r7, #0]
 8009738:	683b      	ldr	r3, [r7, #0]
 800973a:	f383 8811 	msr	BASEPRI, r3
 800973e:	bf00      	nop
 8009740:	bf00      	nop
 8009742:	3708      	adds	r7, #8
 8009744:	46bd      	mov	sp, r7
 8009746:	bd80      	pop	{r7, pc}
 8009748:	e000ed04 	.word	0xe000ed04

0800974c <vPortSetupTimerInterrupt>:
 800974c:	b480      	push	{r7}
 800974e:	af00      	add	r7, sp, #0
 8009750:	4b0b      	ldr	r3, [pc, #44]	@ (8009780 <vPortSetupTimerInterrupt+0x34>)
 8009752:	2200      	movs	r2, #0
 8009754:	601a      	str	r2, [r3, #0]
 8009756:	4b0b      	ldr	r3, [pc, #44]	@ (8009784 <vPortSetupTimerInterrupt+0x38>)
 8009758:	2200      	movs	r2, #0
 800975a:	601a      	str	r2, [r3, #0]
 800975c:	4b0a      	ldr	r3, [pc, #40]	@ (8009788 <vPortSetupTimerInterrupt+0x3c>)
 800975e:	681b      	ldr	r3, [r3, #0]
 8009760:	4a0a      	ldr	r2, [pc, #40]	@ (800978c <vPortSetupTimerInterrupt+0x40>)
 8009762:	fba2 2303 	umull	r2, r3, r2, r3
 8009766:	099b      	lsrs	r3, r3, #6
 8009768:	4a09      	ldr	r2, [pc, #36]	@ (8009790 <vPortSetupTimerInterrupt+0x44>)
 800976a:	3b01      	subs	r3, #1
 800976c:	6013      	str	r3, [r2, #0]
 800976e:	4b04      	ldr	r3, [pc, #16]	@ (8009780 <vPortSetupTimerInterrupt+0x34>)
 8009770:	2207      	movs	r2, #7
 8009772:	601a      	str	r2, [r3, #0]
 8009774:	bf00      	nop
 8009776:	46bd      	mov	sp, r7
 8009778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800977c:	4770      	bx	lr
 800977e:	bf00      	nop
 8009780:	e000e010 	.word	0xe000e010
 8009784:	e000e018 	.word	0xe000e018
 8009788:	20000000 	.word	0x20000000
 800978c:	10624dd3 	.word	0x10624dd3
 8009790:	e000e014 	.word	0xe000e014

08009794 <vPortEnableVFP>:
 8009794:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80097a4 <vPortEnableVFP+0x10>
 8009798:	6801      	ldr	r1, [r0, #0]
 800979a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800979e:	6001      	str	r1, [r0, #0]
 80097a0:	4770      	bx	lr
 80097a2:	bf00      	nop
 80097a4:	e000ed88 	.word	0xe000ed88

080097a8 <vPortValidateInterruptPriority>:
 80097a8:	b480      	push	{r7}
 80097aa:	b085      	sub	sp, #20
 80097ac:	af00      	add	r7, sp, #0
 80097ae:	f3ef 8305 	mrs	r3, IPSR
 80097b2:	60fb      	str	r3, [r7, #12]
 80097b4:	68fb      	ldr	r3, [r7, #12]
 80097b6:	2b0f      	cmp	r3, #15
 80097b8:	d915      	bls.n	80097e6 <vPortValidateInterruptPriority+0x3e>
 80097ba:	4a18      	ldr	r2, [pc, #96]	@ (800981c <vPortValidateInterruptPriority+0x74>)
 80097bc:	68fb      	ldr	r3, [r7, #12]
 80097be:	4413      	add	r3, r2
 80097c0:	781b      	ldrb	r3, [r3, #0]
 80097c2:	72fb      	strb	r3, [r7, #11]
 80097c4:	4b16      	ldr	r3, [pc, #88]	@ (8009820 <vPortValidateInterruptPriority+0x78>)
 80097c6:	781b      	ldrb	r3, [r3, #0]
 80097c8:	7afa      	ldrb	r2, [r7, #11]
 80097ca:	429a      	cmp	r2, r3
 80097cc:	d20b      	bcs.n	80097e6 <vPortValidateInterruptPriority+0x3e>
 80097ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097d2:	f383 8811 	msr	BASEPRI, r3
 80097d6:	f3bf 8f6f 	isb	sy
 80097da:	f3bf 8f4f 	dsb	sy
 80097de:	607b      	str	r3, [r7, #4]
 80097e0:	bf00      	nop
 80097e2:	bf00      	nop
 80097e4:	e7fd      	b.n	80097e2 <vPortValidateInterruptPriority+0x3a>
 80097e6:	4b0f      	ldr	r3, [pc, #60]	@ (8009824 <vPortValidateInterruptPriority+0x7c>)
 80097e8:	681b      	ldr	r3, [r3, #0]
 80097ea:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 80097ee:	4b0e      	ldr	r3, [pc, #56]	@ (8009828 <vPortValidateInterruptPriority+0x80>)
 80097f0:	681b      	ldr	r3, [r3, #0]
 80097f2:	429a      	cmp	r2, r3
 80097f4:	d90b      	bls.n	800980e <vPortValidateInterruptPriority+0x66>
 80097f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097fa:	f383 8811 	msr	BASEPRI, r3
 80097fe:	f3bf 8f6f 	isb	sy
 8009802:	f3bf 8f4f 	dsb	sy
 8009806:	603b      	str	r3, [r7, #0]
 8009808:	bf00      	nop
 800980a:	bf00      	nop
 800980c:	e7fd      	b.n	800980a <vPortValidateInterruptPriority+0x62>
 800980e:	bf00      	nop
 8009810:	3714      	adds	r7, #20
 8009812:	46bd      	mov	sp, r7
 8009814:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009818:	4770      	bx	lr
 800981a:	bf00      	nop
 800981c:	e000e3f0 	.word	0xe000e3f0
 8009820:	20001740 	.word	0x20001740
 8009824:	e000ed0c 	.word	0xe000ed0c
 8009828:	20001744 	.word	0x20001744

0800982c <pvPortMalloc>:
 800982c:	b580      	push	{r7, lr}
 800982e:	b08a      	sub	sp, #40	@ 0x28
 8009830:	af00      	add	r7, sp, #0
 8009832:	6078      	str	r0, [r7, #4]
 8009834:	2300      	movs	r3, #0
 8009836:	61fb      	str	r3, [r7, #28]
 8009838:	f7fe fd72 	bl	8008320 <vTaskSuspendAll>
 800983c:	4b5c      	ldr	r3, [pc, #368]	@ (80099b0 <pvPortMalloc+0x184>)
 800983e:	681b      	ldr	r3, [r3, #0]
 8009840:	2b00      	cmp	r3, #0
 8009842:	d101      	bne.n	8009848 <pvPortMalloc+0x1c>
 8009844:	f000 f924 	bl	8009a90 <prvHeapInit>
 8009848:	4b5a      	ldr	r3, [pc, #360]	@ (80099b4 <pvPortMalloc+0x188>)
 800984a:	681a      	ldr	r2, [r3, #0]
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	4013      	ands	r3, r2
 8009850:	2b00      	cmp	r3, #0
 8009852:	f040 8095 	bne.w	8009980 <pvPortMalloc+0x154>
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	2b00      	cmp	r3, #0
 800985a:	d01e      	beq.n	800989a <pvPortMalloc+0x6e>
 800985c:	2208      	movs	r2, #8
 800985e:	687b      	ldr	r3, [r7, #4]
 8009860:	4413      	add	r3, r2
 8009862:	607b      	str	r3, [r7, #4]
 8009864:	687b      	ldr	r3, [r7, #4]
 8009866:	f003 0307 	and.w	r3, r3, #7
 800986a:	2b00      	cmp	r3, #0
 800986c:	d015      	beq.n	800989a <pvPortMalloc+0x6e>
 800986e:	687b      	ldr	r3, [r7, #4]
 8009870:	f023 0307 	bic.w	r3, r3, #7
 8009874:	3308      	adds	r3, #8
 8009876:	607b      	str	r3, [r7, #4]
 8009878:	687b      	ldr	r3, [r7, #4]
 800987a:	f003 0307 	and.w	r3, r3, #7
 800987e:	2b00      	cmp	r3, #0
 8009880:	d00b      	beq.n	800989a <pvPortMalloc+0x6e>
 8009882:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009886:	f383 8811 	msr	BASEPRI, r3
 800988a:	f3bf 8f6f 	isb	sy
 800988e:	f3bf 8f4f 	dsb	sy
 8009892:	617b      	str	r3, [r7, #20]
 8009894:	bf00      	nop
 8009896:	bf00      	nop
 8009898:	e7fd      	b.n	8009896 <pvPortMalloc+0x6a>
 800989a:	687b      	ldr	r3, [r7, #4]
 800989c:	2b00      	cmp	r3, #0
 800989e:	d06f      	beq.n	8009980 <pvPortMalloc+0x154>
 80098a0:	4b45      	ldr	r3, [pc, #276]	@ (80099b8 <pvPortMalloc+0x18c>)
 80098a2:	681b      	ldr	r3, [r3, #0]
 80098a4:	687a      	ldr	r2, [r7, #4]
 80098a6:	429a      	cmp	r2, r3
 80098a8:	d86a      	bhi.n	8009980 <pvPortMalloc+0x154>
 80098aa:	4b44      	ldr	r3, [pc, #272]	@ (80099bc <pvPortMalloc+0x190>)
 80098ac:	623b      	str	r3, [r7, #32]
 80098ae:	4b43      	ldr	r3, [pc, #268]	@ (80099bc <pvPortMalloc+0x190>)
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80098b4:	e004      	b.n	80098c0 <pvPortMalloc+0x94>
 80098b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80098b8:	623b      	str	r3, [r7, #32]
 80098ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80098bc:	681b      	ldr	r3, [r3, #0]
 80098be:	627b      	str	r3, [r7, #36]	@ 0x24
 80098c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80098c2:	685b      	ldr	r3, [r3, #4]
 80098c4:	687a      	ldr	r2, [r7, #4]
 80098c6:	429a      	cmp	r2, r3
 80098c8:	d903      	bls.n	80098d2 <pvPortMalloc+0xa6>
 80098ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80098cc:	681b      	ldr	r3, [r3, #0]
 80098ce:	2b00      	cmp	r3, #0
 80098d0:	d1f1      	bne.n	80098b6 <pvPortMalloc+0x8a>
 80098d2:	4b37      	ldr	r3, [pc, #220]	@ (80099b0 <pvPortMalloc+0x184>)
 80098d4:	681b      	ldr	r3, [r3, #0]
 80098d6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80098d8:	429a      	cmp	r2, r3
 80098da:	d051      	beq.n	8009980 <pvPortMalloc+0x154>
 80098dc:	6a3b      	ldr	r3, [r7, #32]
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	2208      	movs	r2, #8
 80098e2:	4413      	add	r3, r2
 80098e4:	61fb      	str	r3, [r7, #28]
 80098e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80098e8:	681a      	ldr	r2, [r3, #0]
 80098ea:	6a3b      	ldr	r3, [r7, #32]
 80098ec:	601a      	str	r2, [r3, #0]
 80098ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80098f0:	685a      	ldr	r2, [r3, #4]
 80098f2:	687b      	ldr	r3, [r7, #4]
 80098f4:	1ad2      	subs	r2, r2, r3
 80098f6:	2308      	movs	r3, #8
 80098f8:	005b      	lsls	r3, r3, #1
 80098fa:	429a      	cmp	r2, r3
 80098fc:	d920      	bls.n	8009940 <pvPortMalloc+0x114>
 80098fe:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	4413      	add	r3, r2
 8009904:	61bb      	str	r3, [r7, #24]
 8009906:	69bb      	ldr	r3, [r7, #24]
 8009908:	f003 0307 	and.w	r3, r3, #7
 800990c:	2b00      	cmp	r3, #0
 800990e:	d00b      	beq.n	8009928 <pvPortMalloc+0xfc>
 8009910:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009914:	f383 8811 	msr	BASEPRI, r3
 8009918:	f3bf 8f6f 	isb	sy
 800991c:	f3bf 8f4f 	dsb	sy
 8009920:	613b      	str	r3, [r7, #16]
 8009922:	bf00      	nop
 8009924:	bf00      	nop
 8009926:	e7fd      	b.n	8009924 <pvPortMalloc+0xf8>
 8009928:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800992a:	685a      	ldr	r2, [r3, #4]
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	1ad2      	subs	r2, r2, r3
 8009930:	69bb      	ldr	r3, [r7, #24]
 8009932:	605a      	str	r2, [r3, #4]
 8009934:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009936:	687a      	ldr	r2, [r7, #4]
 8009938:	605a      	str	r2, [r3, #4]
 800993a:	69b8      	ldr	r0, [r7, #24]
 800993c:	f000 f90a 	bl	8009b54 <prvInsertBlockIntoFreeList>
 8009940:	4b1d      	ldr	r3, [pc, #116]	@ (80099b8 <pvPortMalloc+0x18c>)
 8009942:	681a      	ldr	r2, [r3, #0]
 8009944:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009946:	685b      	ldr	r3, [r3, #4]
 8009948:	1ad3      	subs	r3, r2, r3
 800994a:	4a1b      	ldr	r2, [pc, #108]	@ (80099b8 <pvPortMalloc+0x18c>)
 800994c:	6013      	str	r3, [r2, #0]
 800994e:	4b1a      	ldr	r3, [pc, #104]	@ (80099b8 <pvPortMalloc+0x18c>)
 8009950:	681a      	ldr	r2, [r3, #0]
 8009952:	4b1b      	ldr	r3, [pc, #108]	@ (80099c0 <pvPortMalloc+0x194>)
 8009954:	681b      	ldr	r3, [r3, #0]
 8009956:	429a      	cmp	r2, r3
 8009958:	d203      	bcs.n	8009962 <pvPortMalloc+0x136>
 800995a:	4b17      	ldr	r3, [pc, #92]	@ (80099b8 <pvPortMalloc+0x18c>)
 800995c:	681b      	ldr	r3, [r3, #0]
 800995e:	4a18      	ldr	r2, [pc, #96]	@ (80099c0 <pvPortMalloc+0x194>)
 8009960:	6013      	str	r3, [r2, #0]
 8009962:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009964:	685a      	ldr	r2, [r3, #4]
 8009966:	4b13      	ldr	r3, [pc, #76]	@ (80099b4 <pvPortMalloc+0x188>)
 8009968:	681b      	ldr	r3, [r3, #0]
 800996a:	431a      	orrs	r2, r3
 800996c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800996e:	605a      	str	r2, [r3, #4]
 8009970:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009972:	2200      	movs	r2, #0
 8009974:	601a      	str	r2, [r3, #0]
 8009976:	4b13      	ldr	r3, [pc, #76]	@ (80099c4 <pvPortMalloc+0x198>)
 8009978:	681b      	ldr	r3, [r3, #0]
 800997a:	3301      	adds	r3, #1
 800997c:	4a11      	ldr	r2, [pc, #68]	@ (80099c4 <pvPortMalloc+0x198>)
 800997e:	6013      	str	r3, [r2, #0]
 8009980:	f7fe fcdc 	bl	800833c <xTaskResumeAll>
 8009984:	69fb      	ldr	r3, [r7, #28]
 8009986:	f003 0307 	and.w	r3, r3, #7
 800998a:	2b00      	cmp	r3, #0
 800998c:	d00b      	beq.n	80099a6 <pvPortMalloc+0x17a>
 800998e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009992:	f383 8811 	msr	BASEPRI, r3
 8009996:	f3bf 8f6f 	isb	sy
 800999a:	f3bf 8f4f 	dsb	sy
 800999e:	60fb      	str	r3, [r7, #12]
 80099a0:	bf00      	nop
 80099a2:	bf00      	nop
 80099a4:	e7fd      	b.n	80099a2 <pvPortMalloc+0x176>
 80099a6:	69fb      	ldr	r3, [r7, #28]
 80099a8:	4618      	mov	r0, r3
 80099aa:	3728      	adds	r7, #40	@ 0x28
 80099ac:	46bd      	mov	sp, r7
 80099ae:	bd80      	pop	{r7, pc}
 80099b0:	20005350 	.word	0x20005350
 80099b4:	20005364 	.word	0x20005364
 80099b8:	20005354 	.word	0x20005354
 80099bc:	20005348 	.word	0x20005348
 80099c0:	20005358 	.word	0x20005358
 80099c4:	2000535c 	.word	0x2000535c

080099c8 <vPortFree>:
 80099c8:	b580      	push	{r7, lr}
 80099ca:	b086      	sub	sp, #24
 80099cc:	af00      	add	r7, sp, #0
 80099ce:	6078      	str	r0, [r7, #4]
 80099d0:	687b      	ldr	r3, [r7, #4]
 80099d2:	617b      	str	r3, [r7, #20]
 80099d4:	687b      	ldr	r3, [r7, #4]
 80099d6:	2b00      	cmp	r3, #0
 80099d8:	d04f      	beq.n	8009a7a <vPortFree+0xb2>
 80099da:	2308      	movs	r3, #8
 80099dc:	425b      	negs	r3, r3
 80099de:	697a      	ldr	r2, [r7, #20]
 80099e0:	4413      	add	r3, r2
 80099e2:	617b      	str	r3, [r7, #20]
 80099e4:	697b      	ldr	r3, [r7, #20]
 80099e6:	613b      	str	r3, [r7, #16]
 80099e8:	693b      	ldr	r3, [r7, #16]
 80099ea:	685a      	ldr	r2, [r3, #4]
 80099ec:	4b25      	ldr	r3, [pc, #148]	@ (8009a84 <vPortFree+0xbc>)
 80099ee:	681b      	ldr	r3, [r3, #0]
 80099f0:	4013      	ands	r3, r2
 80099f2:	2b00      	cmp	r3, #0
 80099f4:	d10b      	bne.n	8009a0e <vPortFree+0x46>
 80099f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80099fa:	f383 8811 	msr	BASEPRI, r3
 80099fe:	f3bf 8f6f 	isb	sy
 8009a02:	f3bf 8f4f 	dsb	sy
 8009a06:	60fb      	str	r3, [r7, #12]
 8009a08:	bf00      	nop
 8009a0a:	bf00      	nop
 8009a0c:	e7fd      	b.n	8009a0a <vPortFree+0x42>
 8009a0e:	693b      	ldr	r3, [r7, #16]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	2b00      	cmp	r3, #0
 8009a14:	d00b      	beq.n	8009a2e <vPortFree+0x66>
 8009a16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a1a:	f383 8811 	msr	BASEPRI, r3
 8009a1e:	f3bf 8f6f 	isb	sy
 8009a22:	f3bf 8f4f 	dsb	sy
 8009a26:	60bb      	str	r3, [r7, #8]
 8009a28:	bf00      	nop
 8009a2a:	bf00      	nop
 8009a2c:	e7fd      	b.n	8009a2a <vPortFree+0x62>
 8009a2e:	693b      	ldr	r3, [r7, #16]
 8009a30:	685a      	ldr	r2, [r3, #4]
 8009a32:	4b14      	ldr	r3, [pc, #80]	@ (8009a84 <vPortFree+0xbc>)
 8009a34:	681b      	ldr	r3, [r3, #0]
 8009a36:	4013      	ands	r3, r2
 8009a38:	2b00      	cmp	r3, #0
 8009a3a:	d01e      	beq.n	8009a7a <vPortFree+0xb2>
 8009a3c:	693b      	ldr	r3, [r7, #16]
 8009a3e:	681b      	ldr	r3, [r3, #0]
 8009a40:	2b00      	cmp	r3, #0
 8009a42:	d11a      	bne.n	8009a7a <vPortFree+0xb2>
 8009a44:	693b      	ldr	r3, [r7, #16]
 8009a46:	685a      	ldr	r2, [r3, #4]
 8009a48:	4b0e      	ldr	r3, [pc, #56]	@ (8009a84 <vPortFree+0xbc>)
 8009a4a:	681b      	ldr	r3, [r3, #0]
 8009a4c:	43db      	mvns	r3, r3
 8009a4e:	401a      	ands	r2, r3
 8009a50:	693b      	ldr	r3, [r7, #16]
 8009a52:	605a      	str	r2, [r3, #4]
 8009a54:	f7fe fc64 	bl	8008320 <vTaskSuspendAll>
 8009a58:	693b      	ldr	r3, [r7, #16]
 8009a5a:	685a      	ldr	r2, [r3, #4]
 8009a5c:	4b0a      	ldr	r3, [pc, #40]	@ (8009a88 <vPortFree+0xc0>)
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	4413      	add	r3, r2
 8009a62:	4a09      	ldr	r2, [pc, #36]	@ (8009a88 <vPortFree+0xc0>)
 8009a64:	6013      	str	r3, [r2, #0]
 8009a66:	6938      	ldr	r0, [r7, #16]
 8009a68:	f000 f874 	bl	8009b54 <prvInsertBlockIntoFreeList>
 8009a6c:	4b07      	ldr	r3, [pc, #28]	@ (8009a8c <vPortFree+0xc4>)
 8009a6e:	681b      	ldr	r3, [r3, #0]
 8009a70:	3301      	adds	r3, #1
 8009a72:	4a06      	ldr	r2, [pc, #24]	@ (8009a8c <vPortFree+0xc4>)
 8009a74:	6013      	str	r3, [r2, #0]
 8009a76:	f7fe fc61 	bl	800833c <xTaskResumeAll>
 8009a7a:	bf00      	nop
 8009a7c:	3718      	adds	r7, #24
 8009a7e:	46bd      	mov	sp, r7
 8009a80:	bd80      	pop	{r7, pc}
 8009a82:	bf00      	nop
 8009a84:	20005364 	.word	0x20005364
 8009a88:	20005354 	.word	0x20005354
 8009a8c:	20005360 	.word	0x20005360

08009a90 <prvHeapInit>:
 8009a90:	b480      	push	{r7}
 8009a92:	b085      	sub	sp, #20
 8009a94:	af00      	add	r7, sp, #0
 8009a96:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 8009a9a:	60bb      	str	r3, [r7, #8]
 8009a9c:	4b27      	ldr	r3, [pc, #156]	@ (8009b3c <prvHeapInit+0xac>)
 8009a9e:	60fb      	str	r3, [r7, #12]
 8009aa0:	68fb      	ldr	r3, [r7, #12]
 8009aa2:	f003 0307 	and.w	r3, r3, #7
 8009aa6:	2b00      	cmp	r3, #0
 8009aa8:	d00c      	beq.n	8009ac4 <prvHeapInit+0x34>
 8009aaa:	68fb      	ldr	r3, [r7, #12]
 8009aac:	3307      	adds	r3, #7
 8009aae:	60fb      	str	r3, [r7, #12]
 8009ab0:	68fb      	ldr	r3, [r7, #12]
 8009ab2:	f023 0307 	bic.w	r3, r3, #7
 8009ab6:	60fb      	str	r3, [r7, #12]
 8009ab8:	68ba      	ldr	r2, [r7, #8]
 8009aba:	68fb      	ldr	r3, [r7, #12]
 8009abc:	1ad3      	subs	r3, r2, r3
 8009abe:	4a1f      	ldr	r2, [pc, #124]	@ (8009b3c <prvHeapInit+0xac>)
 8009ac0:	4413      	add	r3, r2
 8009ac2:	60bb      	str	r3, [r7, #8]
 8009ac4:	68fb      	ldr	r3, [r7, #12]
 8009ac6:	607b      	str	r3, [r7, #4]
 8009ac8:	4a1d      	ldr	r2, [pc, #116]	@ (8009b40 <prvHeapInit+0xb0>)
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	6013      	str	r3, [r2, #0]
 8009ace:	4b1c      	ldr	r3, [pc, #112]	@ (8009b40 <prvHeapInit+0xb0>)
 8009ad0:	2200      	movs	r2, #0
 8009ad2:	605a      	str	r2, [r3, #4]
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	68ba      	ldr	r2, [r7, #8]
 8009ad8:	4413      	add	r3, r2
 8009ada:	60fb      	str	r3, [r7, #12]
 8009adc:	2208      	movs	r2, #8
 8009ade:	68fb      	ldr	r3, [r7, #12]
 8009ae0:	1a9b      	subs	r3, r3, r2
 8009ae2:	60fb      	str	r3, [r7, #12]
 8009ae4:	68fb      	ldr	r3, [r7, #12]
 8009ae6:	f023 0307 	bic.w	r3, r3, #7
 8009aea:	60fb      	str	r3, [r7, #12]
 8009aec:	68fb      	ldr	r3, [r7, #12]
 8009aee:	4a15      	ldr	r2, [pc, #84]	@ (8009b44 <prvHeapInit+0xb4>)
 8009af0:	6013      	str	r3, [r2, #0]
 8009af2:	4b14      	ldr	r3, [pc, #80]	@ (8009b44 <prvHeapInit+0xb4>)
 8009af4:	681b      	ldr	r3, [r3, #0]
 8009af6:	2200      	movs	r2, #0
 8009af8:	605a      	str	r2, [r3, #4]
 8009afa:	4b12      	ldr	r3, [pc, #72]	@ (8009b44 <prvHeapInit+0xb4>)
 8009afc:	681b      	ldr	r3, [r3, #0]
 8009afe:	2200      	movs	r2, #0
 8009b00:	601a      	str	r2, [r3, #0]
 8009b02:	687b      	ldr	r3, [r7, #4]
 8009b04:	603b      	str	r3, [r7, #0]
 8009b06:	683b      	ldr	r3, [r7, #0]
 8009b08:	68fa      	ldr	r2, [r7, #12]
 8009b0a:	1ad2      	subs	r2, r2, r3
 8009b0c:	683b      	ldr	r3, [r7, #0]
 8009b0e:	605a      	str	r2, [r3, #4]
 8009b10:	4b0c      	ldr	r3, [pc, #48]	@ (8009b44 <prvHeapInit+0xb4>)
 8009b12:	681a      	ldr	r2, [r3, #0]
 8009b14:	683b      	ldr	r3, [r7, #0]
 8009b16:	601a      	str	r2, [r3, #0]
 8009b18:	683b      	ldr	r3, [r7, #0]
 8009b1a:	685b      	ldr	r3, [r3, #4]
 8009b1c:	4a0a      	ldr	r2, [pc, #40]	@ (8009b48 <prvHeapInit+0xb8>)
 8009b1e:	6013      	str	r3, [r2, #0]
 8009b20:	683b      	ldr	r3, [r7, #0]
 8009b22:	685b      	ldr	r3, [r3, #4]
 8009b24:	4a09      	ldr	r2, [pc, #36]	@ (8009b4c <prvHeapInit+0xbc>)
 8009b26:	6013      	str	r3, [r2, #0]
 8009b28:	4b09      	ldr	r3, [pc, #36]	@ (8009b50 <prvHeapInit+0xc0>)
 8009b2a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8009b2e:	601a      	str	r2, [r3, #0]
 8009b30:	bf00      	nop
 8009b32:	3714      	adds	r7, #20
 8009b34:	46bd      	mov	sp, r7
 8009b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b3a:	4770      	bx	lr
 8009b3c:	20001748 	.word	0x20001748
 8009b40:	20005348 	.word	0x20005348
 8009b44:	20005350 	.word	0x20005350
 8009b48:	20005358 	.word	0x20005358
 8009b4c:	20005354 	.word	0x20005354
 8009b50:	20005364 	.word	0x20005364

08009b54 <prvInsertBlockIntoFreeList>:
 8009b54:	b480      	push	{r7}
 8009b56:	b085      	sub	sp, #20
 8009b58:	af00      	add	r7, sp, #0
 8009b5a:	6078      	str	r0, [r7, #4]
 8009b5c:	4b28      	ldr	r3, [pc, #160]	@ (8009c00 <prvInsertBlockIntoFreeList+0xac>)
 8009b5e:	60fb      	str	r3, [r7, #12]
 8009b60:	e002      	b.n	8009b68 <prvInsertBlockIntoFreeList+0x14>
 8009b62:	68fb      	ldr	r3, [r7, #12]
 8009b64:	681b      	ldr	r3, [r3, #0]
 8009b66:	60fb      	str	r3, [r7, #12]
 8009b68:	68fb      	ldr	r3, [r7, #12]
 8009b6a:	681b      	ldr	r3, [r3, #0]
 8009b6c:	687a      	ldr	r2, [r7, #4]
 8009b6e:	429a      	cmp	r2, r3
 8009b70:	d8f7      	bhi.n	8009b62 <prvInsertBlockIntoFreeList+0xe>
 8009b72:	68fb      	ldr	r3, [r7, #12]
 8009b74:	60bb      	str	r3, [r7, #8]
 8009b76:	68fb      	ldr	r3, [r7, #12]
 8009b78:	685b      	ldr	r3, [r3, #4]
 8009b7a:	68ba      	ldr	r2, [r7, #8]
 8009b7c:	4413      	add	r3, r2
 8009b7e:	687a      	ldr	r2, [r7, #4]
 8009b80:	429a      	cmp	r2, r3
 8009b82:	d108      	bne.n	8009b96 <prvInsertBlockIntoFreeList+0x42>
 8009b84:	68fb      	ldr	r3, [r7, #12]
 8009b86:	685a      	ldr	r2, [r3, #4]
 8009b88:	687b      	ldr	r3, [r7, #4]
 8009b8a:	685b      	ldr	r3, [r3, #4]
 8009b8c:	441a      	add	r2, r3
 8009b8e:	68fb      	ldr	r3, [r7, #12]
 8009b90:	605a      	str	r2, [r3, #4]
 8009b92:	68fb      	ldr	r3, [r7, #12]
 8009b94:	607b      	str	r3, [r7, #4]
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	60bb      	str	r3, [r7, #8]
 8009b9a:	687b      	ldr	r3, [r7, #4]
 8009b9c:	685b      	ldr	r3, [r3, #4]
 8009b9e:	68ba      	ldr	r2, [r7, #8]
 8009ba0:	441a      	add	r2, r3
 8009ba2:	68fb      	ldr	r3, [r7, #12]
 8009ba4:	681b      	ldr	r3, [r3, #0]
 8009ba6:	429a      	cmp	r2, r3
 8009ba8:	d118      	bne.n	8009bdc <prvInsertBlockIntoFreeList+0x88>
 8009baa:	68fb      	ldr	r3, [r7, #12]
 8009bac:	681a      	ldr	r2, [r3, #0]
 8009bae:	4b15      	ldr	r3, [pc, #84]	@ (8009c04 <prvInsertBlockIntoFreeList+0xb0>)
 8009bb0:	681b      	ldr	r3, [r3, #0]
 8009bb2:	429a      	cmp	r2, r3
 8009bb4:	d00d      	beq.n	8009bd2 <prvInsertBlockIntoFreeList+0x7e>
 8009bb6:	687b      	ldr	r3, [r7, #4]
 8009bb8:	685a      	ldr	r2, [r3, #4]
 8009bba:	68fb      	ldr	r3, [r7, #12]
 8009bbc:	681b      	ldr	r3, [r3, #0]
 8009bbe:	685b      	ldr	r3, [r3, #4]
 8009bc0:	441a      	add	r2, r3
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	605a      	str	r2, [r3, #4]
 8009bc6:	68fb      	ldr	r3, [r7, #12]
 8009bc8:	681b      	ldr	r3, [r3, #0]
 8009bca:	681a      	ldr	r2, [r3, #0]
 8009bcc:	687b      	ldr	r3, [r7, #4]
 8009bce:	601a      	str	r2, [r3, #0]
 8009bd0:	e008      	b.n	8009be4 <prvInsertBlockIntoFreeList+0x90>
 8009bd2:	4b0c      	ldr	r3, [pc, #48]	@ (8009c04 <prvInsertBlockIntoFreeList+0xb0>)
 8009bd4:	681a      	ldr	r2, [r3, #0]
 8009bd6:	687b      	ldr	r3, [r7, #4]
 8009bd8:	601a      	str	r2, [r3, #0]
 8009bda:	e003      	b.n	8009be4 <prvInsertBlockIntoFreeList+0x90>
 8009bdc:	68fb      	ldr	r3, [r7, #12]
 8009bde:	681a      	ldr	r2, [r3, #0]
 8009be0:	687b      	ldr	r3, [r7, #4]
 8009be2:	601a      	str	r2, [r3, #0]
 8009be4:	68fa      	ldr	r2, [r7, #12]
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	429a      	cmp	r2, r3
 8009bea:	d002      	beq.n	8009bf2 <prvInsertBlockIntoFreeList+0x9e>
 8009bec:	68fb      	ldr	r3, [r7, #12]
 8009bee:	687a      	ldr	r2, [r7, #4]
 8009bf0:	601a      	str	r2, [r3, #0]
 8009bf2:	bf00      	nop
 8009bf4:	3714      	adds	r7, #20
 8009bf6:	46bd      	mov	sp, r7
 8009bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bfc:	4770      	bx	lr
 8009bfe:	bf00      	nop
 8009c00:	20005348 	.word	0x20005348
 8009c04:	20005350 	.word	0x20005350

08009c08 <memset>:
 8009c08:	4402      	add	r2, r0
 8009c0a:	4603      	mov	r3, r0
 8009c0c:	4293      	cmp	r3, r2
 8009c0e:	d100      	bne.n	8009c12 <memset+0xa>
 8009c10:	4770      	bx	lr
 8009c12:	f803 1b01 	strb.w	r1, [r3], #1
 8009c16:	e7f9      	b.n	8009c0c <memset+0x4>

08009c18 <_reclaim_reent>:
 8009c18:	4b29      	ldr	r3, [pc, #164]	@ (8009cc0 <_reclaim_reent+0xa8>)
 8009c1a:	681b      	ldr	r3, [r3, #0]
 8009c1c:	4283      	cmp	r3, r0
 8009c1e:	b570      	push	{r4, r5, r6, lr}
 8009c20:	4604      	mov	r4, r0
 8009c22:	d04b      	beq.n	8009cbc <_reclaim_reent+0xa4>
 8009c24:	69c3      	ldr	r3, [r0, #28]
 8009c26:	b1ab      	cbz	r3, 8009c54 <_reclaim_reent+0x3c>
 8009c28:	68db      	ldr	r3, [r3, #12]
 8009c2a:	b16b      	cbz	r3, 8009c48 <_reclaim_reent+0x30>
 8009c2c:	2500      	movs	r5, #0
 8009c2e:	69e3      	ldr	r3, [r4, #28]
 8009c30:	68db      	ldr	r3, [r3, #12]
 8009c32:	5959      	ldr	r1, [r3, r5]
 8009c34:	2900      	cmp	r1, #0
 8009c36:	d13b      	bne.n	8009cb0 <_reclaim_reent+0x98>
 8009c38:	3504      	adds	r5, #4
 8009c3a:	2d80      	cmp	r5, #128	@ 0x80
 8009c3c:	d1f7      	bne.n	8009c2e <_reclaim_reent+0x16>
 8009c3e:	69e3      	ldr	r3, [r4, #28]
 8009c40:	4620      	mov	r0, r4
 8009c42:	68d9      	ldr	r1, [r3, #12]
 8009c44:	f000 f872 	bl	8009d2c <_free_r>
 8009c48:	69e3      	ldr	r3, [r4, #28]
 8009c4a:	6819      	ldr	r1, [r3, #0]
 8009c4c:	b111      	cbz	r1, 8009c54 <_reclaim_reent+0x3c>
 8009c4e:	4620      	mov	r0, r4
 8009c50:	f000 f86c 	bl	8009d2c <_free_r>
 8009c54:	6961      	ldr	r1, [r4, #20]
 8009c56:	b111      	cbz	r1, 8009c5e <_reclaim_reent+0x46>
 8009c58:	4620      	mov	r0, r4
 8009c5a:	f000 f867 	bl	8009d2c <_free_r>
 8009c5e:	69e1      	ldr	r1, [r4, #28]
 8009c60:	b111      	cbz	r1, 8009c68 <_reclaim_reent+0x50>
 8009c62:	4620      	mov	r0, r4
 8009c64:	f000 f862 	bl	8009d2c <_free_r>
 8009c68:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8009c6a:	b111      	cbz	r1, 8009c72 <_reclaim_reent+0x5a>
 8009c6c:	4620      	mov	r0, r4
 8009c6e:	f000 f85d 	bl	8009d2c <_free_r>
 8009c72:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009c74:	b111      	cbz	r1, 8009c7c <_reclaim_reent+0x64>
 8009c76:	4620      	mov	r0, r4
 8009c78:	f000 f858 	bl	8009d2c <_free_r>
 8009c7c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009c7e:	b111      	cbz	r1, 8009c86 <_reclaim_reent+0x6e>
 8009c80:	4620      	mov	r0, r4
 8009c82:	f000 f853 	bl	8009d2c <_free_r>
 8009c86:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8009c88:	b111      	cbz	r1, 8009c90 <_reclaim_reent+0x78>
 8009c8a:	4620      	mov	r0, r4
 8009c8c:	f000 f84e 	bl	8009d2c <_free_r>
 8009c90:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8009c92:	b111      	cbz	r1, 8009c9a <_reclaim_reent+0x82>
 8009c94:	4620      	mov	r0, r4
 8009c96:	f000 f849 	bl	8009d2c <_free_r>
 8009c9a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009c9c:	b111      	cbz	r1, 8009ca4 <_reclaim_reent+0x8c>
 8009c9e:	4620      	mov	r0, r4
 8009ca0:	f000 f844 	bl	8009d2c <_free_r>
 8009ca4:	6a23      	ldr	r3, [r4, #32]
 8009ca6:	b14b      	cbz	r3, 8009cbc <_reclaim_reent+0xa4>
 8009ca8:	4620      	mov	r0, r4
 8009caa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cae:	4718      	bx	r3
 8009cb0:	680e      	ldr	r6, [r1, #0]
 8009cb2:	4620      	mov	r0, r4
 8009cb4:	f000 f83a 	bl	8009d2c <_free_r>
 8009cb8:	4631      	mov	r1, r6
 8009cba:	e7bb      	b.n	8009c34 <_reclaim_reent+0x1c>
 8009cbc:	bd70      	pop	{r4, r5, r6, pc}
 8009cbe:	bf00      	nop
 8009cc0:	20000010 	.word	0x20000010

08009cc4 <__libc_init_array>:
 8009cc4:	b570      	push	{r4, r5, r6, lr}
 8009cc6:	4d0d      	ldr	r5, [pc, #52]	@ (8009cfc <__libc_init_array+0x38>)
 8009cc8:	4c0d      	ldr	r4, [pc, #52]	@ (8009d00 <__libc_init_array+0x3c>)
 8009cca:	1b64      	subs	r4, r4, r5
 8009ccc:	10a4      	asrs	r4, r4, #2
 8009cce:	2600      	movs	r6, #0
 8009cd0:	42a6      	cmp	r6, r4
 8009cd2:	d109      	bne.n	8009ce8 <__libc_init_array+0x24>
 8009cd4:	4d0b      	ldr	r5, [pc, #44]	@ (8009d04 <__libc_init_array+0x40>)
 8009cd6:	4c0c      	ldr	r4, [pc, #48]	@ (8009d08 <__libc_init_array+0x44>)
 8009cd8:	f000 f87e 	bl	8009dd8 <_init>
 8009cdc:	1b64      	subs	r4, r4, r5
 8009cde:	10a4      	asrs	r4, r4, #2
 8009ce0:	2600      	movs	r6, #0
 8009ce2:	42a6      	cmp	r6, r4
 8009ce4:	d105      	bne.n	8009cf2 <__libc_init_array+0x2e>
 8009ce6:	bd70      	pop	{r4, r5, r6, pc}
 8009ce8:	f855 3b04 	ldr.w	r3, [r5], #4
 8009cec:	4798      	blx	r3
 8009cee:	3601      	adds	r6, #1
 8009cf0:	e7ee      	b.n	8009cd0 <__libc_init_array+0xc>
 8009cf2:	f855 3b04 	ldr.w	r3, [r5], #4
 8009cf6:	4798      	blx	r3
 8009cf8:	3601      	adds	r6, #1
 8009cfa:	e7f2      	b.n	8009ce2 <__libc_init_array+0x1e>
 8009cfc:	08009ef4 	.word	0x08009ef4
 8009d00:	08009ef4 	.word	0x08009ef4
 8009d04:	08009ef4 	.word	0x08009ef4
 8009d08:	08009ef8 	.word	0x08009ef8

08009d0c <__retarget_lock_acquire_recursive>:
 8009d0c:	4770      	bx	lr

08009d0e <__retarget_lock_release_recursive>:
 8009d0e:	4770      	bx	lr

08009d10 <memcpy>:
 8009d10:	440a      	add	r2, r1
 8009d12:	4291      	cmp	r1, r2
 8009d14:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8009d18:	d100      	bne.n	8009d1c <memcpy+0xc>
 8009d1a:	4770      	bx	lr
 8009d1c:	b510      	push	{r4, lr}
 8009d1e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009d22:	f803 4f01 	strb.w	r4, [r3, #1]!
 8009d26:	4291      	cmp	r1, r2
 8009d28:	d1f9      	bne.n	8009d1e <memcpy+0xe>
 8009d2a:	bd10      	pop	{r4, pc}

08009d2c <_free_r>:
 8009d2c:	b538      	push	{r3, r4, r5, lr}
 8009d2e:	4605      	mov	r5, r0
 8009d30:	2900      	cmp	r1, #0
 8009d32:	d041      	beq.n	8009db8 <_free_r+0x8c>
 8009d34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009d38:	1f0c      	subs	r4, r1, #4
 8009d3a:	2b00      	cmp	r3, #0
 8009d3c:	bfb8      	it	lt
 8009d3e:	18e4      	addlt	r4, r4, r3
 8009d40:	f000 f83e 	bl	8009dc0 <__malloc_lock>
 8009d44:	4a1d      	ldr	r2, [pc, #116]	@ (8009dbc <_free_r+0x90>)
 8009d46:	6813      	ldr	r3, [r2, #0]
 8009d48:	b933      	cbnz	r3, 8009d58 <_free_r+0x2c>
 8009d4a:	6063      	str	r3, [r4, #4]
 8009d4c:	6014      	str	r4, [r2, #0]
 8009d4e:	4628      	mov	r0, r5
 8009d50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009d54:	f000 b83a 	b.w	8009dcc <__malloc_unlock>
 8009d58:	42a3      	cmp	r3, r4
 8009d5a:	d908      	bls.n	8009d6e <_free_r+0x42>
 8009d5c:	6820      	ldr	r0, [r4, #0]
 8009d5e:	1821      	adds	r1, r4, r0
 8009d60:	428b      	cmp	r3, r1
 8009d62:	bf01      	itttt	eq
 8009d64:	6819      	ldreq	r1, [r3, #0]
 8009d66:	685b      	ldreq	r3, [r3, #4]
 8009d68:	1809      	addeq	r1, r1, r0
 8009d6a:	6021      	streq	r1, [r4, #0]
 8009d6c:	e7ed      	b.n	8009d4a <_free_r+0x1e>
 8009d6e:	461a      	mov	r2, r3
 8009d70:	685b      	ldr	r3, [r3, #4]
 8009d72:	b10b      	cbz	r3, 8009d78 <_free_r+0x4c>
 8009d74:	42a3      	cmp	r3, r4
 8009d76:	d9fa      	bls.n	8009d6e <_free_r+0x42>
 8009d78:	6811      	ldr	r1, [r2, #0]
 8009d7a:	1850      	adds	r0, r2, r1
 8009d7c:	42a0      	cmp	r0, r4
 8009d7e:	d10b      	bne.n	8009d98 <_free_r+0x6c>
 8009d80:	6820      	ldr	r0, [r4, #0]
 8009d82:	4401      	add	r1, r0
 8009d84:	1850      	adds	r0, r2, r1
 8009d86:	4283      	cmp	r3, r0
 8009d88:	6011      	str	r1, [r2, #0]
 8009d8a:	d1e0      	bne.n	8009d4e <_free_r+0x22>
 8009d8c:	6818      	ldr	r0, [r3, #0]
 8009d8e:	685b      	ldr	r3, [r3, #4]
 8009d90:	6053      	str	r3, [r2, #4]
 8009d92:	4408      	add	r0, r1
 8009d94:	6010      	str	r0, [r2, #0]
 8009d96:	e7da      	b.n	8009d4e <_free_r+0x22>
 8009d98:	d902      	bls.n	8009da0 <_free_r+0x74>
 8009d9a:	230c      	movs	r3, #12
 8009d9c:	602b      	str	r3, [r5, #0]
 8009d9e:	e7d6      	b.n	8009d4e <_free_r+0x22>
 8009da0:	6820      	ldr	r0, [r4, #0]
 8009da2:	1821      	adds	r1, r4, r0
 8009da4:	428b      	cmp	r3, r1
 8009da6:	bf04      	itt	eq
 8009da8:	6819      	ldreq	r1, [r3, #0]
 8009daa:	685b      	ldreq	r3, [r3, #4]
 8009dac:	6063      	str	r3, [r4, #4]
 8009dae:	bf04      	itt	eq
 8009db0:	1809      	addeq	r1, r1, r0
 8009db2:	6021      	streq	r1, [r4, #0]
 8009db4:	6054      	str	r4, [r2, #4]
 8009db6:	e7ca      	b.n	8009d4e <_free_r+0x22>
 8009db8:	bd38      	pop	{r3, r4, r5, pc}
 8009dba:	bf00      	nop
 8009dbc:	200054a4 	.word	0x200054a4

08009dc0 <__malloc_lock>:
 8009dc0:	4801      	ldr	r0, [pc, #4]	@ (8009dc8 <__malloc_lock+0x8>)
 8009dc2:	f7ff bfa3 	b.w	8009d0c <__retarget_lock_acquire_recursive>
 8009dc6:	bf00      	nop
 8009dc8:	200054a0 	.word	0x200054a0

08009dcc <__malloc_unlock>:
 8009dcc:	4801      	ldr	r0, [pc, #4]	@ (8009dd4 <__malloc_unlock+0x8>)
 8009dce:	f7ff bf9e 	b.w	8009d0e <__retarget_lock_release_recursive>
 8009dd2:	bf00      	nop
 8009dd4:	200054a0 	.word	0x200054a0

08009dd8 <_init>:
 8009dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009dda:	bf00      	nop
 8009ddc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009dde:	bc08      	pop	{r3}
 8009de0:	469e      	mov	lr, r3
 8009de2:	4770      	bx	lr

08009de4 <_fini>:
 8009de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009de6:	bf00      	nop
 8009de8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009dea:	bc08      	pop	{r3}
 8009dec:	469e      	mov	lr, r3
 8009dee:	4770      	bx	lr
